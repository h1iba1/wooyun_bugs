{"id": 45080, "wybug_id": "wooyun-2015-092234", "wybug_title": "phpyun某处SQL注入漏洞含POC", "wybug_corp": "php云人才系统", "wybug_author": "Noxxx", "wybug_date": "2015-01-16 16:49", "wybug_open_date": "2015-04-02 10:23", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "漏洞已经通知厂商但是厂商忽略漏洞", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-01-16：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-01-21：\t厂商主动忽略漏洞，细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2015-03-17：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-03-27：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-04-06：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-04-02：\t细节向公众公开  简要描述： 20141231 详细说明：  phpyun使用了360和一个自身的防护脚本我们来看看过滤情况\n\n这都是我们常用查询语句。出现这些语句就会结束，以及替换。不过这里有个安全隐患就是\n\nsy_safekey安装默认为7854**222ffdss 这样会导致POST无过滤。好了我们继续。===============================================\\wap\\member\\model\\index.class.php：200：addresume_action函数\n\n带入POST 表的一部分我们可控，这样我们能用0x来绕过防护脚本。继续看mysql数据操作\\model\\class\\action.class.php：521：update_once函数\n\n先把表的列查出，没法进入流程，难道要放弃。幸好底下可以进入insert_into\\model\\class\\action.class.php：492：insert_into函数\n\n我们可以看到即使表没有查出，我们还是能进入插入操作。这样一来 我们就能插入resume_所有表的数据 我们使用0x更新来绕过防护脚本，造成2次注射。==============================================\\member\\user\\model\\likejob.class.php：12：index_action函数\n\n我们看到多表连接 resume_expect和resume 其中resume_expect的job_classid刚好我们可控，底下继续带入查询。由于job_classid限制100字符且,且逗号分割所以只能盲住了。由于语句真假所有必须phpyun_company_job 有数据随便发一条即可。附上测试脚本   漏洞证明：  \n\n\n\nSELECT id,name,three_cityid,edu,sex,marriage,report,exp,salary FROM `phpyun_company_job` WHERE `sdate`<'1421377343' and `edate`>'1421377343' and `state`='1' and (`job_post`='')||(SELECT SUBSTR(PASSWORD FROM 1 FOR 1)FROM phpyun_admin_user LIMIT 1)='2'#')mysql日志\n\n   修复方案：  过滤。   版权声明：转载请注明来源 Noxxx@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：无影响厂商忽略 忽略时间：2015-04-02 10:23 厂商回复：  最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}