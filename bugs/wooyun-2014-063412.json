{"id": 54765, "wybug_id": "wooyun-2014-063412", "wybug_title": "新太BS客服系统insert注入导致任意密码重置&amp;&amp;任意文件下载", "wybug_corp": "新太科技股份有限公司", "wybug_author": "路人甲", "wybug_date": "2014-06-04 12:43", "wybug_open_date": "2014-09-02 12:44", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "10", "wybug_status": "已交由第三方合作机构(cncert国家互联网应急中心)处理", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["第三方不可信程序", "白盒测试"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-06-04：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-06-08：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-06-11：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2014-08-02：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-08-12：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-08-22：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-09-02：\t细节向公众公开  简要描述： 新太BS客服系统insert注入导致任意密码重置&&任意文件下载。系统多用于运营商行业。 详细说明：  注入文件：PasswordPost.jsp\n<%!  public String setAgentPwd(String strAgentID, String strPwd) {    AgentFrameLog.logger.info(\"INVK setAgentPwd('\" + strAgentID + \"','***','***')\");    Connection conn = null;    Statement st = null;    try {      conn = AppHandle.getHandle(\"agent\").getConnection();      st = conn.createStatement();      String sql = \"UPDATE users SET u_password = '\" + strPwd + \"' WHERE u_name = '\" + strAgentID + \"'\";      st.addBatch(sql);      sql = \"update base_user set user_pwd='\" + strPwd + \"' where user_code='\" + strAgentID + \"'\";      st.addBatch(sql);      st.executeBatch();      AgentFrameLog.logger.info(\"Password update succeeded.\");      return \"T\";   }   catch(Exception ex) {     AgentFrameLog.logger.error(ex, ex);     return \"F\";   }   finally {     try {st.close(); conn.close();} catch (Exception e) {}     AgentFrameLog.logger.info(\"Connection and PreparedStatement closed.\");    }  }%><%      String AgentId = (String)request.getParameter(\"AgentId\");      String NewPwd = (String)request.getParameter(\"newuserpwd1\");      String ret_str = setAgentPwd(AgentId, NewPwd);\t  if(ret_str.equals(\"T\")) {\t  \tout.println(\"<script>alert('密码修改成功!'); parent.close();</script>\");\t  }\t  else {\t  \tout.println(\"<script>alert('密码修改失败!'); </script>\");\t  }%>\n对用户输入未进行任何过滤，直接带入数据库。先试下有没有这个工号\n\n然后按照代码提交参数重置密码\n\n然后直接登陆，没装插件显示不全。。\n\n   漏洞证明：  还有一鸡肋文件下载漏洞存在示例标签库\n<%\tString target= request.getParameter(\"target\");\tif (target == null) {\t\tout.println(\"没有取到target参数\");\t\treturn;\t}\tif (!target.startsWith(\"/\")) {\t\ttarget = \"/\" + target;\t}\tInputStream input = pageContext.getServletContext()    \t\t\t.getResourceAsStream(target);                  \tif (input == null) {\t\tout.println(\"文件没有找到\");\t\treturn;\t}\tbyte[] buff = new byte[1024];\tint len = -1;\tout.println(\"<html><head><title>自定义标签库样例源代码参考</title></head><body><textarea style='width:100%;height:99%'>\");\twhile ((len = input.read(buff, 0, buff.length)) > 0) {\t\tout.println(new String(buff, 0, len));\t}\tout.println(\"</textarea></body></html>\");%>\nhttp://dns.suntektech.com//eaptag2/pages/examples/demo/source.jsp?target=WEB-INF/web.xml \n\n   修复方案：     版权声明：转载请注明来源 路人甲@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：17  确认时间：2014-06-08 21:54 厂商回复： CNVD确认并在两个实例上确认通用性，已经由CNVD通过公开联系渠道向软件生产厂商通报，-9（转接，常工），将通报发送至 邮箱中处置。 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2015-03-26 16:15 |    \t\tsin \t\t\t( 实习白帽子  |\t\t\t        Rank:38 漏洞数:2        | 寻找最优雅的解决方案)\t\t \n  明明是UPDATE 啊.....    \n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 17, "Ranks": null}