{"id": 1591, "wybug_id": "wooyun-2014-063832", "wybug_title": "利用万户OA系统任意文件下载任意getshell", "wybug_corp": "万户oa系统", "wybug_author": "路人甲", "wybug_date": "2014-06-07 09:33", "wybug_open_date": "2014-09-05 09:34", "wybug_type": "任意文件遍历/下载", "wybug_level": "高", "wybug_rank_0": "10", "wybug_status": "已交由第三方合作机构(cncert国家互联网应急中心)处理", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["任意文件读取利用", "源码审核"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-06-07：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-06-11：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-06-14：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2014-08-05：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-08-15：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-08-25：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-09-05：\t细节向公众公开  简要描述： 利用万户OA系统任意文件下载任意getshell 详细说明：  开始download.jsp是有身份认证的\n<%if(session.getAttribute(\"userName\")==null){%><script language=\"javascript\">    //window.close();</script><%}else{%><%String local = session.getAttribute(\"org.apache.struts.action.LOCALE\")!=null?session.getAttribute(\"org.apache.struts.action.LOCALE\").toString():\"zh_cn\";request.setCharacterEncoding(\"UTF-8\");%>\n但是发现其中重定向到另一个文件download_old.jsp\nif(FileName.endsWith(\".xls\")) {    //click --;  response.sendRedirect(\"download_old.jsp?path=\" + request.getParameter(\"path\") + \"&name=\" + java.net.URLEncoder.encode(name,\"UTF-8\") + \"&FileName=\" + FileName);  return;}\n而这个download_old.jsp就没身份认证了，可以随意访问同时存在任意文件下载。\n<%request.setCharacterEncoding(\"UTF-8\");try{  // 得到文件名字和路径  String filepath=\"\";  HttpServletRequest HSR=(HttpServletRequest)pageContext.getRequest();  String path=request.getParameter(\"path\");  filepath=HSR.getRealPath(\"/upload/\")+\"/\"+path+\"/\";  String filename = request.getParameter(\"FileName\");  String name = request.getParameter(\"name\");  //name=new String(name.getBytes(\"GBK\"),\"iso-8859-1\");  UploadFile upFile = new UploadFile();  String encrypt = upFile.getFileEncrypt(filename);  //--------------------UTF-8编码----编码过的长度不能超过150位，否则文件名称乱码-----start  String fileNameTemp = java.net.URLEncoder.encode(name,\"UTF-8\");  if(fileNameTemp.length()>112){    \tint dotIndex = name.lastIndexOf(\".\");//文件后缀名的.位置    \tint endIndex = 12;//截断的长度    \tif(dotIndex<=endIndex){        \tendIndex = dotIndex-1;    \t}    \t//name = name.substring(0,endIndex)+name.substring(dotIndex);    \t//fileNameTemp = java.net.URLEncoder.encode(name,\"UTF-8\");    }\tfileNameTemp=java.net.URLEncoder.encode(name,\"GBK\");\tfileNameTemp=java.net.URLDecoder.decode(fileNameTemp, \"ISO8859_1\");     //--------------------UTF-8编码----编码过的长度不能超过150位，否则文件名称乱码-----end  String datePath = filename.substring(0,6);  java.io.File newfile = new java.io.File(filepath +datePath+\"/\"+ filename);  java.io.File file = new java.io.File(filepath + filename);  if(file.exists()||newfile.exists()){\t  // 设置响应头和下载保存的文件名\t  response.setContentType(\"application/x-msdownload\");\t  response.setHeader(\"Content-Disposition\",\t  \"attachment; filename=\\\"\" + fileNameTemp + \"\\\"\");\t  // 打开指定文件的流信息\t  //java.io.FileInputStream fileInputStream = new java.io.FileInputStream(filepath + filename);      //    out.clearBuffer();\t  // 写出流信息\t  //int i;\t  //while ((i=fileInputStream.read()) != -1) {\t   //out.write(i);\t  //}\t  //fileInputStream.close();\t  //out.close();\tString pathTemp = \"\";\tif(newfile.exists()){            pathTemp = datePath+\"/\";        }    out.clearBuffer();    if(\"1\".equals(encrypt)){                upFile.decryptFile(filepath +pathTemp+filename, response.getOutputStream(), true);    }else{        java.io.FileInputStream fileInputStream = new java.io.FileInputStream(filepath +pathTemp+filename);    \t//out.clearBuffer();\t    java.io.BufferedInputStream bis = new java.io.BufferedInputStream(fileInputStream);\t    byte[] buffer = new byte[1024];    \tjava.io.OutputStream os =  response.getOutputStream();    \twhile (bis.read(buffer)>0) {        \tos.write(buffer);        }  \t    fileInputStream.close();    \tos.close();    }  \tout.close();\n直接构造参数就可以下载任意文件\n\n   漏洞证明：  同时万户oa还使用ewebedit编辑器，编辑器的密码写在代码中，文件路径为\ndefaultroot\\public\\edit\\jsp\\config.jsp\n构造参数直接下载查看编辑器用户密码即可进入编辑器getshell。\n\n\n\n密码大多数都为admin和qwertyuiop123\n\n\n\n\n\n   修复方案：     版权声明：转载请注明来源 路人甲@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：11  确认时间：2014-06-11 16:42 厂商回复：  最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 11, "Ranks": null}