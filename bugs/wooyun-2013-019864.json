{"id": 14075, "wybug_id": "wooyun-2013-019864", "wybug_title": "手机应用挖财的网站cookie加密算法较弱可进行伪造", "wybug_corp": "杭州财米科技有限公司", "wybug_author": "huiguixian", "wybug_date": "2013-03-11 17:38", "wybug_open_date": "2013-03-11 17:51", "wybug_type": "非授权访问/权限绕过", "wybug_level": "高", "wybug_rank_0": "15", "wybug_status": "漏洞已经通知厂商但是厂商忽略漏洞", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2013-03-11：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2013-03-11：\t厂商已经主动忽略漏洞，细节向公众公开  简要描述： 装了挖财，因为想同步数据，所以先测试了一番，却在cookie上发现了这个问题。通过一定手段可以伪造其他人的cookie进行登录，可以访问财务信息，登录论坛等，如果伪造管理员的，搞掉服务器应该也不是很忙难事吧（只YY，不深入）。具体细节看下面详细内容吧 ：） 详细说明：  挖财的cookie的加密强度还不够，而且只认证了用户名，具体的加密算法想了半天没想出来（数学都忘差不多了 - -），不过能够感觉出并不复杂。cookie中的user字段应该保存的是用户注册邮箱。抓包搞到的cookie一看就是base64编码，解码之后是乱码，但用十六进制表示可以看到位数和注册邮箱位数是一致的。通过分析发现，虽然每个字符在不同位置上加密后的值是不一样的，但在同一位置却是保持不变的，所以就想到下面的方法来伪造一个合法的cookie。   漏洞证明：  具体的测试过程：自己先注册了一个帐号 t0x6@x.com ，填了一些消费记录，作为攻击目标 \n\n因为我们已经知道在相同位置上的字符加密之后的值是一样的，所以，我们需要注册两个帐号来拼接一下这个目标用户。两个用户之间需要有一个字符的差别，所以我注册以下两个帐号：x0x6@x.comtu0s@x.com我们只需要将第二个用户cookie base64解码后的第一个字符替换第一个用户base64解码后的第一个字符，然后进行base64加密，就完成了伪造目标用户cookie的过程记录第二个用户的cookie base64解密后的第一个字符\n\n可以看到是11然后对第一个用户的cookie进行修改\n\n将1d修改为11然后再次进行base64加密，生成目标cookie\n\n然后就可以利用cookie登录网站了 ：D修改cookie\n\n刷新就显示已经登录了\n\n财务状态一览无余\n\n当然也可以登录论坛\n\n   修复方案：  修改加密算法，要复杂一些   版权声明：转载请注明来源 huiguixian@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：无影响厂商忽略 忽略时间：2013-03-11 17:51 厂商回复： 已经和提交人确认是他的误报，请看评论。 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2013-03-11 15:22 |    \t\thuiguixian \t\t\t( 实习白帽子  |\t\t\t        Rank:31 漏洞数:4        | 回归线，终点亦起点)\t\t \n  经过和厂家技术人员沟通了解到，其实cookie里面是有密码因素在里面的，只不过我测试的时候三个帐号密码都一样，所以造成可以伪造，非常抱歉！    \n     2013-03-11 18:19 |    \t\txsser  \t\t\t( 普通白帽子  |\t\t\t        Rank:254 漏洞数:18        | 当我又回首一切,这个世界会好吗?)\t\t \n  @huiguixian 囧啊 囧啊 囧啊    \n     2013-03-11 18:20 |    \t\txsser  \t\t\t( 普通白帽子  |\t\t\t        Rank:254 漏洞数:18        | 当我又回首一切,这个世界会好吗?)\t\t \n  @huiguixian 不过蛮有意思    \n     2013-03-11 18:43 |    \t\thuiguixian \t\t\t( 实习白帽子  |\t\t\t        Rank:31 漏洞数:4        | 回归线，终点亦起点)\t\t \n  @xsser 确实挺尴尬的，不过没准真有类似的场景会出现问题  ：）    \n     2015-02-04 09:28 |    \t\tD＆G \t\t\t( 普通白帽子  |\t\t\t        Rank:523 漏洞数:103        | going)\t\t \n  思路很好啊，学习了    \n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}