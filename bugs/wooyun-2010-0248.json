{"id": 24326, "wybug_id": "wooyun-2010-0248", "wybug_title": "ecshop SQL注射漏洞", "wybug_corp": "ecshop", "wybug_author": "xsser", "wybug_date": "2010-08-21 17:55", "wybug_open_date": "2010-08-21 17:56", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "未联系到厂商或者厂商积极忽略", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["安全意识不足"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2010-08-21：\t积极联系厂商并且等待厂商认领中，细节不对外公开\t\t\t\t\t\t\t\t\t2010-08-21：\t厂商已经主动忽略漏洞，细节向公众公开  简要描述： 在Ecshop中缺乏对参数的有效过滤，导致一个SQL注射漏洞，成功利用该漏洞的攻击者可以获得数据库及站点的完全权限。 详细说明：  在include_libcommon.php中存在如下函数\nfunction get_package_info($id){    global $ecs, $db,$_CFG;    $now = gmtime();    $sql = \"SELECT act_id AS id,  act_name AS package_name, goods_id , goods_name, start_time, end_time, act_desc, ext_info\".           \" FROM \" . $GLOBALS['ecs']->table('goods_activity') .           \" WHERE act_id='$id' AND act_type = \" . GAT_PACKAGE;    $package = $db->GetRow($sql);    /* 将时间转成可阅读格式 */    if ($package['start_time'] <= $now && $package['end_time'] >= $now)    {        $package['is_on_sale'] = \"1\";    }    else    {        $package['is_on_sale'] = \"0\";    }    $package['start_time'] = local_date('Y-m-d H:i', $package['start_time']);    $package['end_time']   = local_date('Y-m-d H:i', $package['end_time']);    $row = unserialize($package['ext_info']);    unset($package['ext_info']);    if ($row)    {        foreach ($row as $key=>$val)        {            $package[$key] = $val;        }    }    $sql = \"SELECT pg.package_id, pg.goods_id, pg.goods_number, pg.admin_id, \".           \" g.goods_sn, g.goods_name, g.market_price, g.goods_thumb, g.is_real, \".           \" IFNULL(mp.user_price, g.shop_price * '$_SESSION[discount]') AS rank_price \" .           \" FROM \" . $GLOBALS['ecs']->table('package_goods') . \" AS pg \".           \"   LEFT JOIN \". $GLOBALS['ecs']->table('goods') . \" AS g \".           \"   ON g.goods_id = pg.goods_id \".           \" LEFT JOIN \" . $GLOBALS['ecs']->table('member_price') . \" AS mp \".                \"ON mp.goods_id = g.goods_id AND mp.user_rank = '$_SESSION[user_rank]' \".           \" WHERE pg.package_id = \" . $id. \" \".           \" ORDER BY pg.package_id, pg.goods_id\";    $goods_res = $GLOBALS['db']->getAll($sql);    $market_price        = 0;\n其中$id没有经过严格过滤就直接进入了SQL查询，导致一个SQL注射漏洞。   漏洞证明：  在系统的lib_order.php中存在一个该函数的调用\nfunction add_package_to_cart($package_id, $num = 1){    $GLOBALS['err']->clean();    /* 取得礼包信息 */    $package = get_package_info($package_id);    if (empty($package))    {        $GLOBALS['err']->add($GLOBALS['_LANG']['goods_not_exists'], ERR_NOT_EXISTS);        return false;    }\n在flow.php中存在可控的输入源\n$package = $json->decode($_POST['package_info']);    /* 如果是一步购物，先清空购物车 */    if ($_CFG['one_step_buy'] == '1')    {        clear_cart();    }    /* 商品数量是否合法 */    if (!is_numeric($package->number) || intval($package->number) <= 0)    {        $result['error']   = 1;        $result['message'] = $_LANG['invalid_number'];    }    else    {        /* 添加到购物车 */        if (add_package_to_cart($package->package_id, $package->number))        {            if ($_CFG['cart_confirm'] > 2)\n$package->package_id来源于输入   修复方案：  你猜啊~~~~   版权声明：转载请注明来源 xsser@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 未能联系到厂商或者厂商积极拒绝 漏洞Rank：12 (WooYun评价)  ", "replys": "漏洞评价：\n评论\n     2014-09-24 11:05 |    \t\tpandas \t\t\t( 普通白帽子  |\t\t\t        Rank:585 漏洞数:58        | 国家一级保护动物)\t\t \n  ceo也挖过ecshop阿    \n  \n\n\n", "wybug_level_fromcorp": "未能联系到厂商或者厂商积极拒绝", "wybug_rank_fromcorp": 12, "Ranks": null}