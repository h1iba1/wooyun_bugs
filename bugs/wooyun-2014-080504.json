{"id": 49668, "wybug_id": "wooyun-2014-080504", "wybug_title": "TinyRise 邮件欺诈可重置任何人密码和后台sql注射", "wybug_corp": "tinyrise.com", "wybug_author": "menmen519", "wybug_date": "2014-10-27 14:20", "wybug_open_date": "2014-10-28 08:09", "wybug_type": "设计缺陷/逻辑错误", "wybug_level": "高", "wybug_rank_0": "10", "wybug_status": "漏洞已经通知厂商但是厂商忽略漏洞", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["逻辑错误", "认证设计不合理"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-10-27：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-10-28：\t厂商已经主动忽略漏洞，细节向公众公开  简要描述： TinyRise 邮件欺诈可重置任何人密码和后台sql注射 详细说明：  simple.php:\npublic function forget_act(){        $email =  Filter::sql(Req::args('email'));        $model = $this->model->table('user');        $obj = $model->where(\"email = '\".$email.\"'\")->find();        if(!empty($obj)){            $model = $this->model->table('reset_password');            $obj = $model->where(\"email = '\".$email.\"'\")->find();            $safecode = md5(md5($email).md5(CHash::random(32)));            if(!empty($obj)){                $obj['safecode'] = $safecode;                $model->data($obj)->update();            }            else{                $model->data(array('email'=>$email,'safecode'=>$safecode))->add();            }                        $url = Url::getHost().Url::urlFormat(\"/simple/reset_password/safecode/$safecode\");            $html = '';            $html .='<p>亲爱的用户:</p>';            $html .='<p>感谢您注册'.$this->site_name.',请点击以下链接重置您的密码。<br/><br/>';            $html .=\"<a href='{$url}' target='_blank'>{$url}</a><br/><br/>\";            $html .='愿您在'.$this->site_name.'度过愉快的时光。<br/><br/>';            $html .=\"<a href='\".Url::getHost().Url::urlFormat('/').\"'>\".$this->site_name.\"</a></p>\";            echo $html;            exit;            $mail = new Mail();            $flag = $mail->send_email($email,'找回密码--'.$this->site_name,$html);            if($flag){                $this->assign('status','success');            }\n这里我退出exit，打印出来了要用户确认邮件的内容现在这里的host是否可以伪造呢跟进getHost()：\npublic static function getHost($http='http')    {        if(self::$_host!==null) return self::$_host;        if(isset($_SERVER['HTTP_HOST']))            self::$_host = $http.'://'.$_SERVER['HTTP_HOST'];        else            self::$_host = $http.'://'.$_SERVER['SERVER_NAME'];        return  self::$_host;    }\n这里是来自于$_SERVER的内容 那么这样一来我们就能控制邮件所要发送的地方\n\n这样一来 用户的邮箱将要收到一封确认函，当他点击的时候这个里面的index.php?con=simple&act=reset_password&safecode=1904683da46f62cae0cf5aa271ddfa57这个东西将会发送到passwordreset.net 的这个站点那么下来我们重置只需要把host换回来，就行了下来我们看后台sql注入地方：content.php:\npublic function article_del()\t{\t\t$id = Req::args('id');\t\tif(is_array($id)){\t\t\t$ids = implode(',', $id);\t\t}\t\telse $ids = $id;\t\t$model = new Model(\"article\");\t\t$articles = $model->where(\"id in ($ids)\")->findAll();\t\t$str = '';\t\texit;\t\tforeach ($articles as $article) {\t\t\t$str .= $article['title'].'、';\t\t}\t\t$str = trim($str,'、');\t\t$model->where(\"id in ($ids)\")->delete();\t\tif($articles){\t\t\tLog::op($this->manager['id'],\"删除文章\",\"管理员[\".$this->manager['name'].\"]:删除了文章 \".$str);\t\t\t$msg = array('success',\"成功删除文章 \".$str);\t\t\t$this->redirect(\"article_list\",false,array('msg'=> $msg));\t\t}else{\t\t\t$this->redirect(\"article_list\");\t\t}\t\t\t}\n这里获取到的$id = Req::args('id'); 没有做任何处理直接进入到了$articles = $model->where(\"id in ($ids)\")->findAll();这样的例子太多了 而且这个是一个select的sql，root会写shell的 ok...........................   漏洞证明：     修复方案：     版权声明：转载请注明来源 menmen519@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：无影响厂商忽略 忽略时间：2014-10-28 08:09 厂商回复： 漏洞虚假或者漏洞过时。 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2014-10-28 09:39 |    \t\tmenmen519 \t\t\t( 普通白帽子  |\t\t\t        Rank:762 漏洞数:146        | http://menmen519.blog.sohu.com/)\t\t \n  @tinyrise.com 真服了 你这些厂商了 忽略 就忽略 比在这里说什么虚假 或者过时     \n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}