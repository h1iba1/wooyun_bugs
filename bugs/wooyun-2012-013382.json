{"id": 16037, "wybug_id": "wooyun-2012-013382", "wybug_title": "贵州省交通警察总队车辆管理所存在注入漏洞 导致车主信息数据泄露", "wybug_corp": "贵州省交通警察总队车辆管理所", "wybug_author": "Fate", "wybug_date": "2012-10-16 12:04", "wybug_open_date": "2012-11-30 12:05", "wybug_type": "敏感信息泄露", "wybug_level": "中", "wybug_rank_0": "10", "wybug_status": "已交由第三方合作机构(cncert国家互联网应急中心)处理", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2012-10-16：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2012-10-20：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2012-10-30：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2012-11-09：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2012-11-19：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2012-11-30：\t细节向公众公开  简要描述： 贵州省交通警察总队车辆管理所存在注入漏洞 导致车主信息数据泄露 详细说明：  注入点 \nhttp://58.42.245.133:9080/vehicleweb/businessSite_QryAct.do?action=newQuery&dwdm=52010000\n  通过注入可以获得车辆管理所存储在服务器上的车主数据。   漏洞证明：  \n\n   修复方案：  \n1.（简单又有效的方法）PreparedStatement 采用预编译语句集，它内置了处理SQL注入的能力，只要使用它的setXXX方法传值即可。 使用好处：(1).代码的可读性和可维护性.(2).PreparedStatement尽最大可能提高性能.(3).最重要的一点是极大地提高了安全性. 原理：sql注入只对sql语句的准备(编译)过程有破坏作用而PreparedStatement已经准备好了,执行阶段只是把输入串作为数据处理,而不再对sql语句进行解析,准备,因此也就避免了sql注入问题.============================================= 2.使用正则表达式过滤传入的参数 要引入的包：import java.util.regex.*; 正则表达式：private String CHECKSQL = “^(.+)\\\\sand\\\\s(.+)|(.+)\\\\sor(.+)\\\\s$”; 判断是否匹配：Pattern.matches(CHECKSQL,targerStr); 下面是具体的正则表达式：检测SQL meta-characters的正则表达式 ：/(\\%27)|(\\’)|(\\-\\-)|(\\%23)|(#)/ix修正检测SQL meta-characters的正则表达式 ：/((\\%3D)|(=))[^\\n]*((\\%27)|(\\’)|(\\-\\-)|(\\%3B)|(:))/i典型的SQL 注入攻击的正则表达式 ：/\\w*((\\%27)|(\\’))((\\%6F)|o|(\\%4F))((\\%72)|r|(\\%52))/ix检测SQL注入，UNION查询关键字的正则表达式 ：/((\\%27)|(\\’))union/ix(\\%27)|(\\’)检测MS SQL Server SQL注入攻击的正则表达式：/exec(\\s|\\+)+(s|x)p\\w+/ix等等…..========================================== 3.字符串过滤 比较通用的一个方法：（||之间的参数可以根据自己程序的需要添加）======================================= public static boolean sql_inj(String str) {    String inj_str = \"'|and|exec|insert|select|delete|update|count|*|%|chr|mid|master|truncate|char|declare|;|or|-|+|,\";    String inj_stra[] = split(inj_str,\"|\");    for (int i=0 ; i &lt; inj_stra.length ; i++ )    {        if (str.indexOf(inj_stra[i])&gt;=0)        {            return true;        }    }    return false; } ==========================================4.jsp中调用该函数检查是否包函非法字符======================================= 防止SQL从URL注入： sql_inj.java代码：======================================= package sql_inj; import java.net.*;import java.io.*;import java.sql.*;import java.text.*;import java.lang.String; public class sql_inj{public static boolean sql_inj(String str){    String inj_str = \"'|and|exec|insert|select|delete|update|count|*|%|chr|mid|master|truncate|char|declare|;|or|-|+|,\";//这里的东西还可以自己添加String[] inj_stra=inj_str.split(\"\\\\|\");    for (int i=0 ; i &lt; inj_stra.length ; i++ )    {        if (str.indexOf(inj_stra[i])&gt;=0)        {            return true;        }    }    return false;}} ======================================5.JSP页面判断代码：=================================== 使用javascript在客户端进行不安全字符屏蔽 功能介绍：检查是否含有”‘”,”\\\\”,”/”参数说明：要检查的字符串返回值：0：是1：不是函数名是function check(a){return 1;fibdn = new Array (”‘” ,”\\\\”,”/”);i=fibdn.length;j=a.length;for (ii=0; ii＜i; ii++){ for (jj=0; jj＜j; jj++){ temp1=a.charAt(jj);temp2=fibdn[ii];if (tem’; p1==temp2){ return 0; }}}return 1; }=================================== 总的说来，防范一般的SQL注入只要在代码规范上下点功夫就可以了。\n   版权声明：转载请注明来源 Fate@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：12  确认时间：2012-10-20 18:45 厂商回复： CNVD确认并复现所述情况，转由CNCERT贵州分中心协调涉事单位处置。按完全影响机密性（未涉及权限提升）进行评分，rank=7.79*1.0*1.5=11.685。信息泄露非小事。 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2012-10-16 15:24 |    \t\tNight \t\t\t( 实习白帽子  |\t\t\t        Rank:57 漏洞数:16        )\t\t \n  搞黑产的会恨死你的    \n     2012-10-17 09:12 |    \t\t顺子 \t\t\t( 普通白帽子  |\t\t\t        Rank:236 漏洞数:36        | 0-0努力像正常青年靠近，再也不当上错图的2...)\t\t \n  LZ断了很多人的财路，小心被人半夜找上门。不过还是赞一个。    \n     2012-10-21 21:32 |    \t\tSem \t\t\t( 路人 |\t\t\t        Rank:0 漏洞数:2        | 　)\t\t \n  已知3个搞黑产的有这个权限。。。    \n     2012-10-23 12:50 |    \t\t虫子 \t\t\t( 路人 |\t\t\t        Rank:5 漏洞数:1        | 小弟也是大学生)\t\t \n   又断了人家财路     \n     2012-11-30 14:27 |    \t\tlion(lp) \t\t\t( 普通白帽子  |\t\t\t        Rank:115 漏洞数:14        | 本人菜。。。千年实习白帽子)\t\t \n  我是来看修复方案的    \n     2012-11-30 14:43 |    \t\tPasser_by \t\t\t( 实习白帽子  |\t\t\t        Rank:97 漏洞数:21        | 问题真实存在但是影响不大（腾讯微博Passer...)\t\t \n  我是来看修复方案的    \n     2013-04-10 16:27 |    \t\tw5r2 \t\t\t( 普通白帽子  |\t\t\t        Rank:226 漏洞数:52        )\t\t \n  @Night 在一个站,发现你的木马.    \n     2013-04-11 17:30 |    \t\tNight \t\t\t( 实习白帽子  |\t\t\t        Rank:57 漏洞数:16        )\t\t \n  @w5r2 神马站啊    \n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 12, "Ranks": null}