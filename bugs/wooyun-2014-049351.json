{"id": 58854, "wybug_id": "wooyun-2014-049351", "wybug_title": "通达OA存在SQL注入风险", "wybug_corp": "通达信科", "wybug_author": "clzzy", "wybug_date": "2014-01-20 14:48", "wybug_open_date": "2014-04-17 14:49", "wybug_type": "SQL注射漏洞", "wybug_level": "中", "wybug_rank_0": "10", "wybug_status": "漏洞已经通知厂商但是厂商忽略漏洞", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["字符类型注射"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-01-20：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-01-22：\t厂商主动忽略漏洞，细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2014-03-18：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-03-28：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-04-07：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-04-17：\t细节向公众公开  简要描述： 通达OA存在SQL注入风险 详细说明：  吐槽一句：上次提交了一个通达最新版本存在存储型XSS的问题，厂商居然以【用户以实名制登录】为理由而基本忽视了这个问题，我想问：用户账户就不会被盗？登录账户的一定是其本人？这次涉及版本包括其官方网站能下到的所有版本的试用版。1、通过OA的知道系统提交一个问题，在问题的的“标签”里加个单引号，没有过滤写到数据库：\n\n\n\n2、访问这个问题，系统会从该问题的“标签”中去除内容，做LIKE查询，以找到相关联的内容，系统对POST、GET、COOKIES等方式的过滤非常完美，但是从自身数据库取出的数据并未过滤：\n\n   漏洞证明：  \n\n   修复方案：  要引起重视啊~~   版权声明：转载请注明来源 clzzy@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：无影响厂商忽略 忽略时间：2014-04-17 14:49 厂商回复： 系统已自带防注入过滤函数，界面显示错误的SQL语句只是为了我们方便查找和定位程序BUG，实际无法真正形成SQL注入。 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2014-01-22 17:54 |    \t\txsser  \t\t\t( 普通白帽子  |\t\t\t        Rank:254 漏洞数:18        | 当我又回首一切,这个世界会好吗?)\t\t \n  洞主信木 哈哈    \n     2014-01-24 15:59 |    \t\twefgod \t\t\t( 普通白帽子  |\t\t\t        Rank:1807 漏洞数:179        | 力不从心)\t\t \n  洞主暴出数据没有？    \n     2014-01-24 22:56 |    \t\tYinkan \t\t\t( 路人 |\t\t\t        Rank:2 漏洞数:1        | 码农)\t\t \n  界面显示错误的SQL语句只是为了我们方便查找和定位程序BUG。卧槽，这回答碉堡了呀，以后我都把 stack trace 输出给用户，反正就是为了修 bug。    \n     2014-02-22 00:08 |    \t\t寂寞的瘦子 \t\t\t( 普通白帽子  |\t\t\t        Rank:242 漏洞数:53        | 一切语言转汇编理论)\t\t \n  这厂商哎呀我去，当时我就傻逼了，以后只要使display_error=on就再也不用担心sql注入了    \n     2014-03-07 13:41 |    \t\tluwikes \t\t\t( 普通白帽子  |\t\t\t        Rank:512 漏洞数:77        | 潜心学习~~~)\t\t \n  其实这个是演示站。。噗。。O(∩_∩)O哈哈~    \n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}