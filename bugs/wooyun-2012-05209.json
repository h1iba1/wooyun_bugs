{"id": 20580, "wybug_id": "wooyun-2012-05209", "wybug_title": "支付宝登陆认证重放攻击漏洞", "wybug_corp": "支付宝", "wybug_author": "青蛙君", "wybug_date": "2012-03-12 17:57", "wybug_open_date": "2012-04-26 17:57", "wybug_type": "设计缺陷/逻辑错误", "wybug_level": "高", "wybug_rank_0": "10", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2012-03-12：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2012-03-14：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2012-03-24：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2012-04-03：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2012-04-13：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2012-04-26：\t细节向公众公开  简要描述： 支付宝登陆认证的安全性主要依赖HTTPS的保密通信，其本身的登陆认证设计存在安全漏洞——使用固定的口令加密密钥，口令密文永远不变。 详细说明：  支付宝登陆认证的安全性主要依赖HTTPS的保密通信，其本身的登陆认证设计存在安全漏洞——使用固定的口令加密密钥，口令密文永远不变。一旦HTTPS被截获解密，用户名和口令或者口令密文就泄漏了，这将被用于恶意重放攻击。然而遗憾的是HTTPS中的数据是很容易被截获的。通过设置浏览器HTTPS代理的方法获取HTTPS中的明文数据。工具Burp proxy.淘宝非控件登陆数据：\n\n可以看到淘宝非安全控件登陆是口令123qwe是明文传输的.支付宝控件登陆数据：\n\n可以看到用户名是明文，口令密文。据分析口令密文十六进制形式，长度是16的整数倍字节。如果输入密码1234567812345678，得到的密文是32字节，且前后16字节相等。很显然这是个8 byte的分组密码加密算法，符合3des加密算法的推测。既然是加密，肯定要有密钥。但是可以看到登陆前没密钥协商或密钥分配的过程，那么密钥要么在登陆数据中，要么就是固定密钥。经过不同时间不同多次发现口令密文永远不变，那么支付宝安全控件登陆将无法避免重放攻击。   漏洞证明：  不用去研究复杂的加密算法，不用去寻找解密密钥。只要把password参数的值替换成成功登陆时的口令密文，就能骗过认证服务器正确登陆了。攻击方法使用Burp proxy的intercept功能，收到浏览器登陆请求包后修改相应字段数据，然后再forward给服务器。注意，如果数据长度发送了变化，请相应修改HTTP content-length。不用长传图片上证明了，只要按照上面的方法，必然能重现漏洞。   修复方案：  任何信息安全相关的东西，不能依靠实现方法(算法)的保密性来保证安全，而是需要在实现方法和算法都公开的情况还依然能够保证其安全。对登陆认证实现的建议：1)\t一次一密的公钥对每次登陆都由服务器生成一公钥对(private_key, public_key), 浏览器从服务器获取public_key, 用它加密口令。这样口令密文每次都在变，只有拥有私钥的服务器才能解密口令。韩国某知名游戏的网页登陆采用过这种登陆方法。2)\tRSA公钥加密学习SSL，由客户端生成随机密钥Key，此key用服务器的公钥加密后发送到服务器，服务器用私钥解密得到密钥key。服务器和浏览器通过这个随机密钥key来保护登陆口令。3)\t动态协商密钥据说RSA受专利保护, 使用要交专利费。为了绕开RSA专利，可以使用Diffie-Hellman协商一个加密密钥key，服务器和浏览器通过这个key来保护登陆口令。   版权声明：转载请注明来源 青蛙君@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：低 漏洞Rank：3  确认时间：2012-03-14 17:30 厂商回复：  最新状态： 2012-03-16：支付宝登录时密码被加密后使用HTTPS传输，保障在传输过程中不被窃取，在安全性足够保障用户账户安全。对于其中加密设计的部分细节，新版本做了进一步加强更新至最新版本即可。感谢青蛙君对支付宝安全的关注。  ", "replys": "漏洞评价：\n评论\n     2012-03-12 17:57 |    \t\txsser  \t\t\t( 普通白帽子  |\t\t\t        Rank:254 漏洞数:18        | 当我又回首一切,这个世界会好吗?)\t\t \n  https的保密信道没什么问题吧？    \n     2012-03-12 18:06 |    \t\t梦想肥羊 \t\t\t( 实习白帽子  |\t\t\t        Rank:89 漏洞数:18        | 博客：dnswalk.blog.163.com)\t\t \n  https保密协议好像没听说有啥毛病啊……→_→    \n     2012-03-12 18:10 |    \t\tzeracker  \t\t\t( 核心白帽子 |\t\t\t        Rank:1068 漏洞数:137        | 多乌云、多机会!微信公众号: id:a301zls   ...)\t\t \n  黑帽大会：HTTPS和SSL协议存在安全漏洞。。有神牛来了。    \n     2012-03-12 18:15 |    \t\thorseluke \t\t\t( 普通白帽子  |\t\t\t        Rank:116 漏洞数:18        | Realize the dream in earnest.)\t\t \n  单凭描述，似乎意思是可以实施基于统计频率的攻击？    \n     2012-03-12 19:32 |    \t\ttpu01yzx \t\t\t( 实习白帽子  |\t\t\t        Rank:58 漏洞数:8        | test)\t\t \n  客户端也使用证书的话估计就无法重放了吧。    \n     2012-03-12 21:26 |    \t\t一刀终情 \t\t\t( 普通白帽子  |\t\t\t        Rank:156 漏洞数:28        | ‮‮PKAV技术宅社区-安全爱好者)\t\t \n  @zeracker 有点印象，似乎是的，等公开    \n     2012-03-13 11:39 |    \t\t黑龙 \t\t\t( 路人 |\t\t\t        Rank:5 漏洞数:4        | http://bit.ly/zCr8h5)\t\t \n  等细节，谢谢分享！    \n     2012-04-26 19:22 |    \t\thorseluke \t\t\t( 普通白帽子  |\t\t\t        Rank:116 漏洞数:18        | Realize the dream in earnest.)\t\t \n  原来不是统计频率，就是直接截包重放...不过提出的解决方案都是随机密钥，不知道会不会有点拖垮服务器    \n     2012-04-27 15:14 |    \t\ttpu01yzx \t\t\t( 实习白帽子  |\t\t\t        Rank:58 漏洞数:8        | test)\t\t \n  CBC工作模式吗？固定密钥？逆向一下登陆控件也许能找到。    \n     2014-09-09 16:36 |    \t\tredcar \t\t\t( 路人 |\t\t\t        Rank:0 漏洞数:1        | 找到组织了！)\t\t \n  @青蛙君 我来挖个坟。修复方案给的相当专业了，但是我有个疑问，HTTPS本身有抗重放机制。那么洞主描述的这个漏洞除非是实时拦截掉数据，否则重放数据没有意义呀。    \n  \n\n\n", "wybug_level_fromcorp": "低", "wybug_rank_fromcorp": 3, "Ranks": null}