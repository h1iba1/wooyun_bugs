{"id": 8272, "wybug_id": "wooyun-2013-038423", "wybug_title": "cmseasy存储型xss漏洞（代码分析）", "wybug_corp": "cmseasy", "wybug_author": "Aring", "wybug_date": "2013-09-28 15:35", "wybug_open_date": "2013-11-12 15:36", "wybug_type": "xss跨站脚本攻击", "wybug_level": "低", "wybug_rank_0": "1", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["持久型", "存储型"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2013-09-28：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2013-09-28：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2013-10-08：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2013-10-18：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2013-10-28：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2013-11-12：\t细节向公众公开  简要描述： cmseay存储型xss 下载的版本为CmsEasy_5.5_UTF-8_20130910 详细说明：  bbs/add-archive.php\n<?php  require_once 'bbs_public.php';  //验证用户登陆相关操作,所以测试前需要注册一个用户  $admin = new action_admin();  $admin->check_login(); //验证用户登录......省略........ if(isset($_POST['submit'])){  \t  if(strtolower(trim($_POST['verify'])) != strtolower($_SESSION['verify'])){ //确认验证码          action_public::turnPage('index.php','验证码输入错误！');  \t  }      $archive = db_bbs_archive::getInstance();      unset($_POST['submit']);      unset($_POST['verify']);      $_POST['username'] = $_COOKIE['login_username']; //验证用户登录      $_POST['userid'] = $admin->userid;      $_POST['ip'] = $_SERVER['REMOTE_ADDR'];      $_POST['addtime'] = mktime();      if($id = $archive->inserData($_POST)){ //问题在这里，title没有未过滤          action_public::turnPage('archive-display.php?aid='.$id,'文章添加成功');      }else{      \t  action_public::turnPage('index.php','添加失败，请联系我们！');      }  }\n跟进路径inserData()->insert()->getInsertString()函数\npublic function inserData($data){       $r = $this->odb->insert($this->tblName,$data); //       if($r)           return $this->odb->getInsertId();       else           return false;\t}跟进insertpublic function insert($table, $data)\t{\t\t$sql = $this->getInsertString($table, $data);\t\treturn $this->execSql($sql);}跟进getInsertStringpublic function getInsertString($table, $data)\t{\t\t$n_str = '';\t\t$v_str = '';\t\t$table = $this->filterString($table);\t\tforeach ($data as $k => $v)\t\t{\t\t\t$n_str .= $this->filterString($k).','; //此处进行过滤\t\t\t$v_str .= \"'\".$this->filterString($v).\"',\";\t\t}\t\t$n_str = preg_replace( \"/,$/\", \"\", $n_str );\t\t$v_str = preg_replace( \"/,$/\", \"\", $v_str );\t\t$str = 'INSERT INTO '.$table.' ('.$n_str.') VALUES('.$v_str.')';\t\treturn $str;\t}\n分析filterString()函数\npublic function filterString($str)\t{\t\tif ($this->magic_quotes)\t\t{\t\t\t$str = stripslashes($str);\t\t}\t\tif ( is_numeric($str) ) {\t\t\treturn $str;\t\t} else {\t\t\t$ret = @mysqli_real_escape_string($this->con, $str);\t\t\tif ( strlen($str) && !isset($ret) ) {\t\t\t\t$r = $this->checkConnection();\t\t\t\tif ($r !== true) {\t\t\t\t\t$this->closeDB();\t\t\t\t\t$ret = $str;\t\t\t\t}\t\t\t}\t\t\treturn $ret;\t\t}\n应用mysqli_real_escape_string过滤'\"进行了过滤,不完整发表文章查看数据：\n\n\n\n分析再看一下bbs/index.php输出\n<?php foreach ($category_data as $v) {         $archive_arr = $archive->getDataLimit('aid,cid,lid,title,username,replynum,click,addtime',\"cid='{$v['cid']}' AND isstop='0' order by aid desc limit 10 \");?>跟进getDataLimitpublic function getDataLimit($field = '*',$where = '1'){\t\t$sql = \"SELECT {$field} FROM {$this->tblName} WHERE {$where}\";//构成sql语句        $data = $this->odb->getRows($sql);//跟进瞧了一眼没有过滤        return $data;//输出数据\t}\n   漏洞证明：  \n\n   修复方案：  对title输入进行过滤；   版权声明：转载请注明来源 Aring@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：10  确认时间：2013-09-28 15:43 厂商回复： 感谢，尽快修复 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2013-09-28 17:29 |    \t\tAs0n \t\t\t( 路人 |\t\t\t        Rank:4 漏洞数:3        | 我是技术宅，求交流，求基友)\t\t \n  不会还是bbs的那个吧    \n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 10, "Ranks": null}