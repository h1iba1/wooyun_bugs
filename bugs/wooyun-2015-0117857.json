{"id": 16212, "wybug_id": "wooyun-2015-0117857", "wybug_title": "7天连锁酒店某地重要敏感信息泄露导致进入众多管理后台", "wybug_corp": "7天连锁酒店", "wybug_author": "Q1NG", "wybug_date": "2015-06-03 07:49", "wybug_open_date": "2015-07-18 09:08", "wybug_type": "重要敏感信息泄露", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["敏感信息泄露", "内部敏感信息泄漏"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-06-03：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-06-03：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2015-06-13：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-06-23：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-07-03：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-07-18：\t细节向公众公开  简要描述： 7天连锁酒店某地重要敏感信息泄露导致进入众多管理后台 详细说明：  在一个月黑风高的夜晚,于是乎洞主第一次入住了传说中的7天连锁酒店,正当无聊之际,就想到了来看看酒店的无线安全,挖洞一番,但并没什么发现,于是乎就有了安全检测官网,就有了接下来的....好吧 ,说正事,发现一个后台 http://ko.7daysinn.cn:7711\n\n然而又发现一敏感信息泄露处http://ko.7daysinn.cn:7711/web.txt里面信息如下:\n<?xml version=\"1.0\"?><!--     注意: 除了手动编辑此文件以外，您还可以使用     Web 管理工具来配置应用程序的设置。可以使用 Visual Studio 中的     “网站”->“Asp.Net 配置”选项。    设置和注释的完整列表在     machine.config.comments 中，该文件通常位于     \\Windows\\Microsoft.Net\\Framework\\v2.x\\Config 中--><configuration>  <appSettings>    <add key=\"ConfigCenter\" value=\"http://192.168.74.103:7703/Service.asmx\"/>    <add key=\"ConfigSysLoginUserName\" value=\"WebFrontOffice\"/>    <add key=\"ConfigSysLoginPassword\" value=\"123456\"/>    <!--单点登录Cookie-->    <add key=\"UserCookieDoMain\" value=\".7daysinn.cn\"/>    <!--产生验证码类型:默认为0(数字类型),1为字母类型,2为数字字母混合类型-->    <add key=\"RandomChkCodeType\" value=\"0\"/>    <!--发送短信及会员服务账号及密码-->    <add key=\"SMSUserName\" value=\"CustomerService\"/>    <add key=\"SMSPassword\" value=\"123456\"/>    <add key=\"SMSAppID\" value=\"18\"/>    <add key=\"SMSSystemID\" value=\"11\"/>    <!--发送邮件账号及密码-->    <add key=\"EmailUserName\" value=\"SSO\"/>    <add key=\"EmailPassword\" value=\"mmxlhcx)*@#\"/>    <add key=\"EmailAppID\" value=\"18\"/>    <add key=\"EmailSystemID\" value=\"18\"/>    <!--发送邮件类型-->    <add key=\"MailType\" value=\"7\"/>    <!--v4密码管理程序站点的.7daysinn.cn的地址-->    <add key=\"sRootUrl\" value=\"http://ko.7daysinn.cn:7711\"/>    <add key=\"SU27Svc.UserManageCenterService\" value=\"http://192.168.12.121:7700/UserManageCenterService.asmx\"/>    <add key=\"KeyCardSystemID\" value=\"69\"/>    <add key=\"KeyCardAppID\" value=\"118\"/>    <add key=\"KeyCardSvc.service\" value=\"http://192.168.12.131:9110/service.asmx\"/>  </appSettings>  <connectionStrings/>  <system.web>    <!--             设置 compilation debug=\"true\" 将调试符号插入            已编译的页面中。但由于这会             影响性能，因此只在开发过程中将此值             设置为 true。        -->    <compilation debug=\"false\"/>    <!--            通过 <authentication> 节可以配置 ASP.NET 使用的             安全身份验证模式，            以标识传入的用户。         -->    <authentication mode=\"Windows\"/>    <!--            如果在执行请求的过程中出现未处理的错误，            则通过 <customErrors> 节可以配置相应的处理步骤。具体说来，            开发人员通过该节可以配置            要显示的 html 错误页            以代替错误堆栈跟踪。       -->    <customErrors mode=\"RemoteOnly\" defaultRedirect=\"~/Common/Message/Errpage.html\">    </customErrors>    <!--�设置Session时间 -->    <sessionState mode=\"InProc\" cookieless=\"false\" timeout=\"360\"/>    <httpHandlers>      <add verb=\"*\" path=\"img.ashx\" type=\"IdentifyingCode.AuthCodeHttpHander\"/>    </httpHandlers>  </system.web></configuration>\n本是用来存储数据的XML文档 不料泄露了敏感信息,\n\n经过对这些信息的分析 得到如下 账号 密码CustomerService   123456WebFrontOffice  123456 SSO    mmxlhcx)*@#事实证明 这些账号密码 对多个后台通用找到这个比较重要的内部管理后台http://mt.7daysinn.cn/LoginPage.aspx账号密码   WebFrontOffice  123456          |  SSO    mmxlhcx)*@#\n\n\n\n\n\n\n\n漏洞二一个内部员工娱乐极工作交流管理平台:   http://legend.7daysinn.cn/Login.aspx  密码账号 也是这三个 SSO    mmxlhcx)*@#      WebFrontOffice  123456      CustomerService   123456\n\n\n\n这些信息一旦疏忽后果不堪设想 ,望厂商重视!   漏洞证明：  同上......   修复方案：  网站目录中不要以文档及其他不安全形式存放敏感信息,不然可能会造成更多信息泄露!    版权声明：转载请注明来源 Q1NG@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：15  确认时间：2015-06-03 09:07 厂商回复： 兄弟您提交的3个其实是一个漏洞，只是获取到的密码是统一认证的帐号，可以登录多个系统，均为员工系统，不过包括了客服用某个系统，有做权限控制，泄露的数据只是小部分，因涉及到多个系统所以评级为高，另外2个评级为低，非常感谢您的用心。酒店行业必须重视信息安全，我们也在不断地努力，如果方便的话可以私信联系方式。 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2015-06-03 09:00 |    \t\tbjca_axtx \t\t\t( 路人 |\t\t\t        Rank:15 漏洞数:1        | 孜孜不倦的一枚)\t\t \n  难道...？    \n     2015-06-03 09:22 |    \t\tQ1NG \t\t\t( 实习白帽子  |\t\t\t        Rank:93 漏洞数:16        | 临 兵 斗 者 皆 阵 列 前 行 !)\t\t \n  谢谢 厂商重视............    \n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 15, "Ranks": null}