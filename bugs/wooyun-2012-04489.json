{"id": 21346, "wybug_id": "wooyun-2012-04489", "wybug_title": "mysql注入sleep语句引发的拒绝服务", "wybug_corp": "mysql", "wybug_author": "小雨", "wybug_date": "2012-02-14 11:36", "wybug_open_date": "2012-02-14 11:36", "wybug_type": "拒绝服务", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "未联系到厂商或者厂商积极忽略", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["拒绝服务"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2012-02-14：\t积极联系厂商并且等待厂商认领中，细节不对外公开\t\t\t\t\t\t\t\t\t2012-02-14：\t厂商已经主动忽略漏洞，细节向公众公开  简要描述： mysql注入sleep语句引发的拒绝服务 详细说明：  mysql存在注入，并且注入的sleep语句如果传入一个足够大的参数，比如：sleep(9999999999).如果数据库用的是myisam引擎，且注入点是某个会锁表的语句（insert,replace,update,delete），那么整个数据表的访问都会被阻塞。使用该表的所有应用的读库请求都会被阻塞。如果数据库使用的是主从分离的架构，那么Master和Slave的同步会被sleep语句阻塞，导致从库无法从主库正常同步数据。一些依赖于主从同步的应用也会无法正常工作。就算仅仅是读操作，经过有限次的请求，也会很快的达到数据库的max_connections限制，而导致数据库拒绝服务。   漏洞证明：  注入语句update test_inj set xx=1 and sleep(9999999999);mysql> select * from test_inj;请求会被阻塞。直到手动杀死那个锁表的语句。线上实验后果会比较严重，就不贴真实的例子了。测试者请用自己搭建的数据库。不要害人。   修复方案：  禁用mysql的sleep函数。或者修改它的sleep上限，拒绝不合理的超长sleep。现实中很少用到这个sleep功能，就算遇到需要sleep的场景，也可以通过外部应用来实现sleep。   版权声明：转载请注明来源 小雨@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 未能联系到厂商或者厂商积极拒绝  ", "replys": "漏洞评价：\n评论\n     2012-02-14 12:05 |    \t\txsser  \t\t\t( 普通白帽子  |\t\t\t        Rank:254 漏洞数:18        | 当我又回首一切,这个世界会好吗?)\t\t \n  即使是sleep语句，在实际实现中也会对mysql的连接数有着要求，可以很快的打满连接上线    \n     2012-02-14 12:53 |    \t\tshine  \t\t\t( 普通白帽子  |\t\t\t        Rank:831 漏洞数:77        | coder)\t\t \n  不错！不错！喜欢这样类型的！    \n     2012-02-14 13:20 |    \t\txsser  \t\t\t( 普通白帽子  |\t\t\t        Rank:254 漏洞数:18        | 当我又回首一切,这个世界会好吗?)\t\t \n  @shine 嗯 评论里也可以多讨论技术的说    \n     2012-02-14 14:11 |    \t\ticefish \t\t\t( 普通白帽子  |\t\t\t        Rank:104 漏洞数:8        | 欢迎大家和我用邮件进行交流~)\t\t \n  sleep这个函数有时候盲注也会用到，实际线上系统最好还是禁掉这个函数吧。    \n     2012-02-14 14:19 |    \t\txsser  \t\t\t( 普通白帽子  |\t\t\t        Rank:254 漏洞数:18        | 当我又回首一切,这个世界会好吗?)\t\t \n  借这个话题问下 infor_mation那个系统表 能够有办法从系统里禁掉么    \n     2012-02-14 15:24 |    \t\t小雨 \t\t\t( 普通白帽子  |\t\t\t        Rank:105 漏洞数:19        | phper)\t\t \n  @xsser mysql4.0没有那个information_schema    \n     2012-02-14 16:23 |    \t\tpopok \t\t\t( 普通白帽子  |\t\t\t        Rank:117 漏洞数:24        | nothing)\t\t \n  这个其实应该算是正常函数功能的变态应用吧，个人觉得不算漏洞    \n     2012-02-14 16:30 |    \t\tshine  \t\t\t( 普通白帽子  |\t\t\t        Rank:831 漏洞数:77        | coder)\t\t \n  @popok 我不这么认为，设计这个函数时，设计者是否考虑到DoS了？如果，是位懂得DoS的设计者，那这个函数限制的会做得更完美！最主要的是，作者的测试表明确实能打出DoS效果！    \n     2012-02-14 16:51 |    \t\tshine  \t\t\t( 普通白帽子  |\t\t\t        Rank:831 漏洞数:77        | coder)\t\t \n  刚找到这个casehttp://hi.baidu.com/aullik5/blog/item/c41ffefbd96a3bceb48f3132.html两者的手法好象很类似，都是hold连接（占着茅坑不及时大便）！    \n     2012-02-14 18:13 |    \t\t小雨 \t\t\t( 普通白帽子  |\t\t\t        Rank:105 漏洞数:19        | phper)\t\t \n  @shine 好bt。还是从小教育人心向善吧。避免让那些本来能促进人类进步的精力都内耗掉了。    \n     2012-02-15 11:39 |    \t\tshine  \t\t\t( 普通白帽子  |\t\t\t        Rank:831 漏洞数:77        | coder)\t\t \n  @小雨 厂商应该写Oracle，乌云需要这样有影响力的，web底层产品提供商的加盟！    \n     2012-02-15 11:48 |    \t\t小雨 \t\t\t( 普通白帽子  |\t\t\t        Rank:105 漏洞数:19        | phper)\t\t \n  @shine 额，是我搞错了，可是没法修改啊。。。    \n     2014-04-21 13:54 |    \t\t小贱人 \t\t\t( 路人 |\t\t\t        Rank:4 漏洞数:3        | 资深菜鸟，)\t\t \n  mark    \n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}