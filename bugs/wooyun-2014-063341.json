{"id": 1659, "wybug_id": "wooyun-2014-063341", "wybug_title": "74cms逻辑漏洞导致二次SQL注入变为普通SQL注入", "wybug_corp": "74c,s.com", "wybug_author": "menmen519", "wybug_date": "2014-06-03 17:55", "wybug_open_date": "2014-09-01 17:56", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["安全意识不足", "注射漏洞利用技巧", "源码分析", "白盒测试"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-06-03：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-06-07：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-06-10：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2014-08-01：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-08-11：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-08-21：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-09-01：\t细节向公众公开  简要描述： 74cms V3.4.20140530 逻辑漏洞导致二次sql注入变为普通sql注入 详细说明：  进行用户注册，然后抓取数据并且分析此文件：http://localhost/74cms_utf8/upload/plus/ajax_user.php发送post数据包为：username=m'&password=111111&member_type=2&email=m%40163.com&time=1401769527951&act=do_reg如图所示：\n\n分析代码下：ajax_user.php(lines:90-96)\n$register=user_register($username,$password,$member_type,$email); \t\tif ($register>0)\t{\t\t\t$login_js=user_login($username,$password);\t\t$mailconfig=get_cache('mailconfig');\t\t\t\tif ($mailconfig['set_reg']==\"1\")\n跟踪查看函数user_login 的文件fun_uer.php(lines:97-99)\nif ($usinfo['password']==$pwd)\t\t{\t\t\t\tupdate_user_info($usinfo['uid'],true,true,$expire);\t\t$login['qs_login']=get_member_url($usinfo['utype']);\t\t$success=true;\n跟踪查看update_user_info函数的文件fun_user.php(lines:130-139)\n$user = get_user_inid($uid);\tif (empty($user))\t{\treturn false;\t}\telse\t{ \t$_SESSION['uid'] = intval($user['uid']); \t$_SESSION['username'] = $user['username'];\t$_SESSION['utype']=intval($user['utype']);\t}\n发现此处被写入session的正是我们刚才写入数据库的那个username，此处根据uid从数据库取出来直接写入session，那么二次注入就出来了在这个文件的(lines:185-190)\n$setsqlarr['msgtoname']=$_SESSION['username'];\t\t$setsqlarr['message']=$row['message'];\t\t$setsqlarr['dateline']=$timestamp;\t\t$setsqlarr['replytime']=$timestamp;\t\t$setsqlarr['new']=1;\t\tinserttable(table('pms'),$setsqlarr);\t\t$log['loguid']=$_SESSION['uid'];\t\t$log['pmid']=$row['spmid'];\t\tinserttable(table('pms_sys_log'),$log);\n可以看出来username实际上是用的session的值，故而当调用inserttable时就会导致sql注入，整个过程虽然复杂，但是其实转化为了一个最为普通的sql注入，危害还是比较大   漏洞证明：  \n\n   修复方案：     版权声明：转载请注明来源 menmen519@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：15  确认时间：2014-06-07 16:40 厂商回复： 感谢反馈 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 15, "Ranks": null}