{"id": 42158, "wybug_id": "wooyun-2014-086614", "wybug_title": "Iwebsns最新版SQL注入第二枚", "wybug_corp": "Jooyea", "wybug_author": "路人甲", "wybug_date": "2014-12-10 17:40", "wybug_open_date": "2015-03-10 17:42", "wybug_type": "SQL注射漏洞", "wybug_level": "中", "wybug_rank_0": "10", "wybug_status": "未联系到厂商或者厂商积极忽略", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["数字类型注射", "源码审核"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-12-10：\t积极联系厂商并且等待厂商认领中，细节不对外公开\t\t\t\t\t\t\t\t\t2015-03-10：\t厂商已经主动忽略漏洞，细节向公众公开  简要描述： Iwebsns最新版SQL注入第二枚 详细说明：  在wooyun上看到雨牛提了5个iwebsns的漏洞了（ WooYun: Iwebsns sql 第五枚。 ），我来捡捡漏儿吧，已对比，不重复，下载Iwebsns最新的1.1.0来看看。为了使审核的大大们容易确认是否有重复，我先把存在漏洞的文件和注入参数分别写在这里：/action/album/photo_upl.action.php  album_name下面看看漏洞是怎么产生的/action/album/album_upl.action.php\n无关代码$album_id=short_check(get_argp('album_name'));\t$album_name=short_check(get_argp('album_ufor'));\t$user_id=get_sess_userid();\t$user_name=get_sess_username();\t$uico_url=get_sess_userico();//用户头像\tset_session('S_fs',array());\t$photos_array=array();//上传图片地址数组\t//变量定义区\t$t_photo = $tablePreStr.\"photo\";\t$t_album = $tablePreStr.\"album\";\t$dbo = new dbex;\t//读写分离定义函数\tdbtarget('w',$dbServs);\t//第二步，执行文件上传    $limcount=5;//限制每次上传附件数量    $up_load_num=count($_FILES['attach']['name']);    if($up_load_num > $limcount){\t\tglobal $a_langpackage;       action_return(0,$a_langpackage->a_upload_maximum.$limcount.$a_langpackage->a_attachments,\"-1\");    }    //检测上传相片是否都为空    $is_true=0;    for($i=0;$i<count($_FILES['attach']['name']);$i++){    \tif(!empty($_FILES['attach']['name'][$i]))    \t\t$is_true++;    }\tif($is_true==0){\t\taction_return(0,$a_langpackage->a_no_pht,\"-1\");\t}\t\t$base_root=\"uploadfiles/album/\";//图片存放目录    $up = new upload();    $up->set_dir($base_root,'{y}/{m}/{d}');//目录设置    $up->set_thumb(180,180); //缩略图设置    $fs = $up->execute();\t\t$i=0;    foreach($fs as $index=>$realtxt){\t\t\tif($realtxt['flag']==1){\t\t    $fileSrcStr=str_replace(dirname(__FILE__),\"\",$realtxt['dir']).$realtxt['name'];\t\t    $thumb_src=str_replace(dirname(__FILE__),\"\",$realtxt['dir']).$realtxt['thumb'];\t\t    $sql = \"insert into $t_photo(`user_id`,`add_time`,`photo_src`,`photo_thumb_src`,`album_id`,`user_name`,`privacy`)\t\t\t\t\t                     values($user_id,'\".constant('NOWTIME').\"','$fileSrcStr','$thumb_src',$album_id,'$user_name','');\";\t\t    if($dbo -> exeUpdate($sql)){\t\t      $photo_id=mysql_insert_id();\t\t      $fs[$index]['photo_id']=$photo_id;\t\t   \t  $sql = \"update $t_album set photo_num=photo_num+1,update_time='\".constant('NOWTIME').\"' where album_id=$album_id\";\t\t   \t  if($dbo -> exeUpdate($sql)){\t\t\t\t  \tincrease_integral($dbo,$int_photo,$user_id);\t\t   \t  }\t\t   \t  $photos_array[$i]['id']=$photo_id;\t\t   \t  $photos_array[$i]['file']=$thumb_src;\t\t \t  }\t\t \t  $i++;\t\t\t}else if($realtxt['flag']==-1){\t\t\t\taction_return(0,$a_langpackage->a_no_jpg,\"-1\");\t\t\t}else if($realtxt['flag']==-2){\t\t\t\taction_return(0,$a_langpackage->a_big,\"-1\");\t\t\t}    }无关代码\nalbum_name经过short_check赋值$album_id，来看看short_check，/foundation/freq_filter.php\nfunction short_check($str){   $MaxSlen=500;//限制短输入项最多300个字符   if (!get_magic_quotes_gpc())    // 判断magic_quotes_gpc是否打开   {      $str = addslashes($str);    // 进行过滤   }\t\t$str = LenLimit($str,$MaxSlen);\t\t$str = str_replace(array(\"\\'\",\"\\\\\",\"#\"),\"\",$str);\t\tif($str!=''){\t\t\t$str= htmlspecialchars($str);\t\t}\t\treturn preg_replace(\"/　+/\",\"\",trim($str));}\n先进行addslashes,再htmlspecialchars,但是这里是数字，上面编码无任何作用。Iwebsns没有错误回显，这里用time-based blind进行注入测试。猜测管理员用户名的第一个字母时，若错误，延迟2s左右，如下图\n\n若正确，延迟5s左右，如下图\n\n按上面的方法依次做下去（burp intruder或者自己写个脚本跑），可测试管理员用户名为：admin，密码为： 21232f297a57a5a743894a0e4a801fc3   漏洞证明：  见 详细说明   修复方案：  intval   版权声明：转载请注明来源 路人甲@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 未能联系到厂商或者厂商积极拒绝  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}