{"id": 39444, "wybug_id": "wooyun-2015-094013", "wybug_title": "oecms 存储型 xss", "wybug_corp": "phpcoo.com", "wybug_author": "izy", "wybug_date": "2015-03-02 10:01", "wybug_open_date": "2015-05-31 10:46", "wybug_type": "xss跨站脚本攻击", "wybug_level": "低", "wybug_rank_0": "5", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["存储型"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-03-02：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-03-02：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2015-03-05：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2015-04-26：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-05-06：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-05-16：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-05-31：\t细节向公众公开  简要描述： 没有对文件的访问做验证，并且其中有一个参数在最后转义了，看了一下用oecms的网站挺多的；此xss用起来也比较方便，直接post数据，前台直接触发，后端也没做csrf处理，这也增大了xss的威力。 详细说明：  造成xss的的两个原因：（1）对admincp下的文件访问验证有问题（2）有一个参数开始过滤了，最后又用stripslashes还原了问题出现在admincp/frendlink.php文件的action_saveadd()函数args从_validAdd()函数传入 \npublic function action_saveadd() {        $args = $this->_validAdd();                $model = parent::model('friendlink', 'am');        $result = $model->doAdd($args);        unset($model);         if (true === $result) {            $this->log('friendlink_add', '', 1);            XHandle::halt(\"添加成功\", $this->cpfile.'?c=friendlink', 0);        }        else {            $this->log('friendlink_add', '', 0);            XHandle::halt('添加失败', '', 1);        }        }\n跟踪_validAdd()函数，传入的参数  'name', 'orders', 'flag', ‘remark’,’catid’在getGpc函数都做了过滤，而url传入了getArgs()函数getArgs如果isfliter是false的话就会执行XFilter::stripArray()，此函数把转义的都还原了 ，造成了xss漏洞\npublic static function getArgs($value, $default=NULL, $isfliter = true) {                if (!empty($value)) {                        if (isset($_GET[$value])) $temp = trim($_GET[$value]);                        if (isset($_POST[$value])) $temp = trim($_POST[$value]);                        if ($isfliter == true) {                                $temp = XFilter::filterStr($temp);                        }                        else {                                $temp = XFilter::stripArray($temp);                        }                        if (empty($temp) && !empty($default)) {                                $temp = $default;                        }                        return trim($temp);                }                else {                        return '';                }        }\n\npublic static function stripArray(&$_data){                if (is_array($_data)){                        foreach ($_data as $_key => $_value){                                $_data[$_key] = trim(self::stripArray($_value));                        }                        return $_data;                }else{                        return stripslashes(trim($_data));                }        }\n   漏洞证明：  直接向此文件post数据添加frendlink，前台存储xss。\n\n   修复方案：  后端文件都做好访问限制， 对url参数过滤,在函数之前加入$this->checkAuth(') 函数   版权声明：转载请注明来源 izy@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：中 漏洞Rank：8  确认时间：2015-03-02 10:45 厂商回复： 感谢您的对OECMS的关注。此漏洞，我们相关负责同事在跟进处理中。 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "中", "wybug_rank_fromcorp": 8, "Ranks": null}