{"id": 88562, "wybug_id": "wooyun-2016-0191674", "wybug_title": "集时通讯程序挖掘之SQL注射打包                                      ", "wybug_corp": "深圳市集时通讯股份有限公司", "wybug_author": "Bear baby", "wybug_date": "2016-04-07 19:20", "wybug_open_date": "2016-07-10 16:00", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "已交由第三方合作机构(cncert国家互联网应急中心)处理", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2016-04-07：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2016-04-11：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2016-04-14：\t细节向第三方安全合作伙伴开放（绿盟科技、唐朝安全巡航、无声信息）\t\t\t\t\t\t\t\t\t2016-06-05：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2016-06-15：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2016-06-25：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2016-07-10：\t细节向公众公开  简要描述： 好好学习才能天天向上。 详细说明：  厂家地址:http://**.**.**.**,有多家分公司. 案例有些可以看这:http://**.**.**.**/bugs/wooyun-2010-0134587 \n\n 厂家案例众多，各大企业，政府。。。。1.漏洞位置:userweb/php/index/user.class.php此套程序默认环境开了GPC，所以我们把重点放在了不受单引号保护的位置.\npublic function showselectExten( )    {        $db = $this->loadDB( );        $pid = empty( $_REQUEST['depart_id'] ) ? \"\" : $_REQUEST['depart_id'];        $exten_list = $this->getUsersByDeparts( $pid );        $this->Tmpl['exten_list'] = $exten_list;        $this->display( );}\n关注点在$pid参数，然后我们跟进getUsersByDeparts函数看看此函数位置在基类:\npublic function getUsersByDeparts( $pdepart_id )    {        $db = $this->loadDB( );        $pdepart_ids = $this->getCdepart_id( $pdepart_id );        $pdepart_ids = substr( $pdepart_ids, 0, -1 );        if ( empty( $pdepart_id ) )        {            $sql = \"SELECT * FROM org_user\";        }        else        {            $sql = \"SELECT * FROM org_user WHERE dept_id in (\".$pdepart_ids.\") \";        }        $rs = $db->Execute( $sql );        $users = array( );        while ( !$rs->EOF )        {            $users[] = $rs->fields;            $rs->MoveNext( );        }        return $users;    }\n $pdepart_ids = $this->getCdepart_id( $pdepart_id );看到此处参数$pdepart带进函数gerCdepart_id我们继续跟进函数getCdepart_id:\npublic function getCdepart_id( $pdepart_id )    {        $db = $this->loadDB( );        global $pdepart_id_str;        $sql = \"SELECT dept_id FROM org_department WHERE dept_parent='\".$pdepart_id.\"'\";        $rs = $db->Execute( $sql );        while ( $rs && !$rs->EOF )        {            $this->getCdepart_id( $rs->fields['dept_id'] );            $rs->MoveNext( );        }        $pdepart_id_str .= $pdepart_id.\",\";        return $pdepart_id_str;    }\n对我们没啥影响，只是在$pdepart_id后面加了个逗号而已。现在我们回到函数getUsersByDeparts():漏洞位置出现在: \n$sql = \"SELECT * FROM org_user WHERE dept_id in (\".$pdepart_ids.\") \";\n大部门函数都调用了$this->publicCheckLogin( );验证权限，然后此处没写这函数，所以可以无需登陆直接访问。构造url如下:/userweb/index.php?module=user&action=selectExten&depart_id=1\n\n此套系统默认配置的为dba权限，我们丢入sqlmap\n\n\n\n2.漏洞文件位置:Userweb/php/outbound/ajax.class.php\npublic function showGetQuestion( )    {        $qnid = $_REQUEST['qnid'];        $array = array( );        $array = $this->getQuestionList( $qnid );        echo json_encode( $array );        exit( );}$qnid可控，看getQuestionList函数:\tprotected function getQuestionList($qnid) {\t\t$db = $this->loadDB();\t\t$sql = \"select * from stdout_question where is_deleted=0 and qnid=$qnid order by orderid asc\";\t\t$rs = $db->Execute($sql);\t\t$list = array();\t\twhile (!$rs->EOF) {\t\t\t$list[$rs->fields['id']] = $rs->fields;\t\t\t$rs->MoveNext();\t\t}\t\treturn $list;\t}\n直接带入了sql语句，且不受单引号保护，无视GPC，构造URL：userweb/outbound.php?module=ajax&action=GetQuestion&qnid=1\n\n\n\n3.漏洞文件位置:Userweb/php/outbound/ajax.class.php\npublic function showGetQuestionOptions( )    {        $qid = $_REQUEST['qid'];        $array = array( );        $array = $this->getQuestionOptionList( $qid );        echo json_encode( $array );        exit( );}\n查看getQuestionOptionList函数\nprotected function getQuestionOptionList($qid) {\t\t$db = $this->loadDB();\t\t$sql = \"select * from stdout_question_options where qid=$qid order by id asc\";\t\t$rs = $db->Execute($sql);\t\t$list = array();\t\twhile (!$rs->EOF) {\t\t\t$list[] = $rs->fields;\t\t\t$rs->MoveNext();\t\t}\t\treturn $list;\t}\n跟上面类似,构造URL：userweb/outbound.php?module=ajax&action=GetQuestionOptions&qid=1\n\n\n\n4.漏洞文件位置：Userweb/php/outbound/ajax.class.php\npublic function showGetObjectList( )    {        $db = $this->loadDB( );        $object_id = $_REQUEST['object_id'];        $type = $_REQUEST['type'];        if ( empty( $object_id ) )        {            echo \"0\";            exit( );        }        $list = $this->getObjectList( $object_id, $type );        echo json_encode( $list );        exit( );}\n查看getObjectList函数\nprotected function getObjectList($pid, $type = '') {\t\t$db = $this->loadDB();\t\t$where = \" WHERE o.pid={$pid} AND o.is_hide=0\";\t\tif ('import' == $type) {  \t\t\t$where .= \" AND o.run_status<>'run' \";\t\t} else if ('preview' == $type) {  \t\t\t$where .= \" AND (o.type1='preview' OR o.run_status<>'run') \";\t\t} else if ('myPreview' == $type) {  \t\t\t$where .= \" AND o.type1='preview' AND o.run_status<>'pause' \";\t\t} else if ('forecast' == $type) {  \t\t\t$where .= \" AND o.type1='forecast' \";\t\t} else if ('ivr' == $type) {  \t\t\t$where .= \" AND o.type1='ivr' \";\t\t} else if ('quality' == $type) { \t\t\t$where .= \" AND o.qpid>0 \";\t\t} else if ('question' == $type) { \t\t\t$where .= \" AND o.qnid>0 \";\t\t}\t\tif ($_SESSION['userinfo']['power'] != 1) {\t\t\t$user = $this->getLocalUser();\t\t\t$where .= \" AND (FIND_IN_SET('\" . $user['dept_id'] . \"', o.visit_dept) OR o.visit_dept='')\";  \t\t}\t\tif ('myPreview' === $type) {\t\t\t$extension = $_SESSION['userinfo']['extension'];\t\t\t$sql = \"SELECT object_id FROM stdout_agent_object WHERE extension='{$extension}' AND parent_status!='pause'\";\t\t\t$sql = \"SELECT o.id, o.name, o.type1 FROM stdout_object o INNER JOIN ({$sql}) ao ON o.id=ao.object_id {$where} ORDER BY o.id DESC\";\t\t} else {\t\t\t$sql = \"SELECT o.id, o.name, o.type1 FROM stdout_object o {$where} ORDER BY o.id DESC\";\t\t}\t\tif (!$rs = $db->Execute($sql)) {\t\t\techo $sql . \"<br/>\";\t\t\techo $db->ErrorMsg();\t\t\texit();\t\t}\t\t$list = array();\t\twhile (!$rs->EOF) {\t\t\t$list[$rs->fields['id']] = $rs->fields;\t\t\t$rs->MoveNext();\t\t}\t\treturn $list;\t}\n一样的问题，构造URL如下:userweb/outbound.php?module=ajax&action=GetObjectList&object_id=1\n\n\n\n5.漏洞文件位置：Userweb/php/outbound/ajax.class.php\npublic function showGetProductClass( )    {        $db = $this->loadDB( );        $parentid = $_REQUEST['parentid'];        if ( empty( $parentid ) )        {            echo \"0\";            exit( );        }        $list = $this->getProductClass( $parentid );        echo json_encode( $list );        exit( );    }\n跟进getProductClass()函数\nprotected function getProductClass($parentid = 0) {\t\t$db = $this->loadDB();\t\t$sql = \"SELECT classid, classname FROM stdout_product_class WHERE parentid={$parentid} ORDER BY orderid ASC, classid DESC\";\t\t$rs = $db->Execute($sql);\t\t$list = array();\t\twhile (!$rs->EOF) {\t\t\t$list[$rs->fields['classid']] = $rs->fields;\t\t\t$rs->MoveNext();\t\t}\t\treturn $list;\t}\n一样的问题，很明显,构造URL如下:userweb/outbound.php?module=ajax&action=GetProductClass&parentid=1\n\n\n\n1.漏洞文件位置：Userweb/php/outbound/ajax.class.php   \npublic function showGetCanAdjustExten( )    {        $db = $this->loadDB( );        $dept_id = $_REQUEST['dept_id'];        $sql = \"SELECT * FROM org_department\";        $dept = $db->GetAll( $sql );        $list_depart = $this->getNodeChild( $dept, $dept_id, \"dept\" );        $list_depart .= \"{$dept_id}\";        $arrFilterExtensions = array( );        $filter_extensions = $_REQUEST['filter_extensions'];        if ( !empty( $filter_extensions ) )        {            $arrFilterExtensions = explode( \",\", $filter_extensions );        }        $arrFilterExtensions = array_unique( $arrFilterExtensions );        $filter_extensions = implode( \",\", $arrFilterExtensions );        $filter_extensions = numbertostring4sql( $filter_extensions );        $sql = \"SELECT extension, user_name FROM org_user WHERE dept_id in (\".$list_depart.\") AND extension!='' AND extension IS NOT NULL\";        if ( !empty( $filter_extensions ) )        {            $sql .= \" AND extension NOT IN (\".$filter_extensions.\")\";        }        $list = $db->GetAll( $sql );        echo json_encode( $list );        exit( );}\n构造URL：userweb/outbound.php?module=ajax&action=GetCanAdjustExten&dept_id=1\n\n\n\n2.漏洞文件位置:Userweb/php/index/index.class.php\npublic function showAjaxGetExtensByDept( )    {        $db = $this->loadDB( );        $dept_id = $_REQUEST['dept_id'];        $sql = \"SELECT * FROM org_department\";        $dept = $db->GetAll( $sql );        $list_depart = $this->getNodeChild( $dept, $dept_id, \"dept\" );        $list_depart .= \"{$dept_id}\";        $sql = \"SELECT * FROM org_user WHERE dept_id in (\".$list_depart.\")\";        $rs = $db->Execute( $sql );......................................................\n构造URL如下:userweb/index.php?module=index&action=AjaxGetExtensByDept&dept_id=1\n\n\n\n3.漏洞文件位置:Userweb/php/index/index.class.php\npublic function showGetExtensionComboByDept( )    {        $db = $this->loadDB( );        $dept_id = $_REQUEST['dept_id'];        $sql = \"SELECT * FROM org_department\";        $dept = $db->GetAll( $sql );        $list_depart = $this->getNodeChild( $dept, $dept_id, \"dept\" );        $list_depart .= \"{$dept_id}\";        $sql = \"SELECT extension, user_name FROM org_user WHERE dept_id in (\".$list_depart.\")\";        $rs = $db->Execute( $sql );   \t\t ..................................................................\n构造URL如下:userweb/index.php?module=index&action=GetExtensionComboByDept&dept_id=1\n\n\n\n4.漏洞文件位置:Userweb/php/index/log.class.php\npublic function showExportword( )    {        $userinfo = $_SESSION['userinfo'];        $author_id = $userinfo['extension'];        $sql = \"select a.log_id,a.date,log_type,log_title,log_content from crm_oa_worklog a left join crm_oa_log_attachments b on a.log_id=b.log_id\";        $start_time = strtotime( $_POST['start_date'] );        $end_time = strtotime( $_POST['end_date'] );.....................................省略无关代码if ( $_POST['log_type'] != 0 )        {            $log_type = \"`log_type` = \".$_POST['log_type'];        }....................................省略无关代码$sql .= \" group by a.log_id order by a.date desc \";$db = $this->loadDB( );...............................................\nPOST型注入,且不受单引号保护，无视GPC。。构造URL如下:\n\n抓包丢入sqlmap跑\n\n\n\n\n\n5.漏洞文件位置:Userweb/php/index/log.class.php\npublic function showExport_com_word( )    {        $filename = \"������־\".date( \"Y-m-d\", time( ) ).\".doc\";        header( \"Content-type:application/vnd.ms-word\" );        header( \"Content-Disposition:filename=\".$filename );        $sql = \"select a.log_id,a.date,log_type,log_title,log_content from crm_oa_worklog a left join crm_oa_log_attachments b on a.log_id=b.log_id\";        $start_time = strtotime( $_POST['start_date'] );        $end_time = strtotime( $_POST['end_date'] );.......................................................................省略无关代码 if ( $_POST['log_type'] != 0 )        {            $log_type = \"`log_type` = \".$_POST['log_type'];        }.......................................................................\n\n\n抓包丢入sqlmap跑\n\n\n\n6.漏洞文件位置:Userweb/php/index/Outbound.class.php\npublic function showAjaxOptions( )    {        varfilter( $_REQUEST );        extract( $_REQUEST );        if ( isset( $_REQUEST['topic_id'], $_REQUEST['topic_id'] ) )        {            echo 0;            exit( );        }        $db = $this->loadDB( );        $sql = \"SELECT * FROM out_question_topic WHERE id=\".$topic_id;        $row = $db->GetRow( $sql );...................................................\nPHP在linux下是区分大小写的，varfilter函数程序员写成了小写，原本是varFilter的，所以。。。。构造url如下:userweb/index.php?module=Outbound&action=AjaxOptions&topic_id=1\n\n\n\n1.漏洞文件位置:Userweb/php/outbound/agent.class.php\nfunction showNo()\t{\t\t$db = $this->loadDB();\t\t$object_id = varFilter($_REQUEST['object_id']);\t\t$sql = \"select content from stdout_object where id=$object_id\";\t\t$content = $db->GetOne($sql);\t\t$this->Tmpl['content'] = varResume($content);\t\t$this->display();\t}\n这里看到$_REQUEST[‘object_id’]经过了函数varFilter，我们跟进看看:\nfunction varFilter( $fArray ){    if ( is_array( $fArray ) )    {        foreach ( $fArray as $_arrykey => $_arryval )        {            if ( is_string( $_arryval ) )            {                $fArray[$_arrykey] = trim( nl2br( $fArray[$_arrykey] ) );                $fArray[$_arrykey] = htmlspecialchars( $fArray[$_arrykey] );                $fArray[$_arrykey] = !get_magic_quotes_gpc( ) ? addslashes( $fArray[$_arrykey] ) : $fArray[$_arrykey];                $fArray[$_arrykey] = strip_tags( $fArray[$_arrykey], \"<br>\" );            }            else if ( is_array( $_arryval ) )            {                $fArray[$_arrykey] = varfilter( $_arryval );            }        }        return $fArray;    }    $fArray = trim( nl2br( $fArray ) );    $fArray = htmlspecialchars( $fArray );    $fArray = !get_magic_quotes_gpc( ) ? addslashes( $fArray ) : $fArray;    $fArray = strip_tags( $fArray, \"<br>\" );    return $fArray;}\n主要就是一个GPC,然后看我们的漏洞语句：\n$sql = \"select content from stdout_object where id=$object_id\";\n不受单引号保护，因此逃避了GPC，大多函数都调用了$this->publicCheckLogin();函数检测是否登陆，然后有些估计是漏写了，造成我们可以无需登陆直接访问。此处是盲注，因为htmlspecialchars过滤了< >等，我们在丢进sqlmap跑的时候需要加上--tamper=between --time-sec=5这样   不然只能跑出证明，跑不出数据。构造url如下:userweb/outbound.php?module=agent&action=No&object_id=1\n\n\n\n2.漏洞文件位置:Userweb/php/outbound/agent.class.php\npublic function showEditTask()\t{\t\t$db = $this->loadDB();\t\t$_REQUEST = varFilter($_REQUEST);\t\textract($_REQUEST);\t\t//无关紧要代码省略...............\t\t$sql = \"SELECT SQL_NO_CACHE customer_id, call_status FROM {$table} WHERE id={$task_id}\";\t\t$rowTask = $db->GetRow($sql);\t\tif (!$rowTask) exit('error.');      ...................................\n这里利用变量覆盖:\n$_REQUEST = varFilter($_REQUEST);extract($_REQUEST);\n原因在这,我们可以直接通过GET请求table=stdout_task&task_id=2,将$table玉$task_id覆盖掉.同样的盲注，这里不受单引号保护:\n$sql = \"SELECT SQL_NO_CACHE customer_id, call_status FROM {$table} WHERE id={$task_id}\";\n要注意的就是$table必须是个存在customer_id, call_status字段的表，不然也是出不来数据.这里我的构造URL如下：userweb/outbound.php?module=agent&action=EditTask&table=stdout_task&task_id=1\n\n\n\n3.漏洞文件位置:Userweb/php/outbound/agent.class.php\npublic function showQuestion()\t{\t\t$db = $this->loadDB();\t\t$_REQUEST = varFilter($_REQUEST);     extract($_REQUEST);\t\tif (empty($qnid)) {\t\t\tgoBack(c('²Ù×÷Ê§°Ü£º´«²Îqnid´íÎó.'), 'exit');\t\t}\t\t$row_qn = $this->getQn($qnid);      ............................................\n进入基类查看getQn函数/php/outbound/public.class.php\nfunction getQn($qnid)\t{\t\t$db = $this->loadDB();\t\t$sql = \"select * from stdout_qn where id=$qnid\";\t\t$row = $db->GetRow($sql);\t\treturn $row;\t}\n一样$qnid不受单引号保护，且我们可以通过extract($_REQUEST);覆盖$qnid。构造URL如下:地址userweb/outbound.php?module=agent&action=Question&qnid=12\n\n\n\n4.漏洞文件位置:Userweb/php/outbound/agent.class.php\nfunction showAjaxCheckNextQuestion()\t{\t\t$db = $this->loadDB();\t\t$qid = varFilter($_REQUEST['qid']);\t\t$qnid = varFilter($_REQUEST['qnid']);\t\t$answer = varFilter($_REQUEST['answer']);\t\t$row_question = $this->getQuestion($qid);\t\techo $this->isExistNextQuestion($row_question, true, $answer) ? 'true' : 'false';\t}\n直接看getQuestion函数:\nprotected function getQuestion($qid)\t{\t\t$db = $this->loadDB();\t\t$sql = \"select * from stdout_question where id=$qid and is_deleted=0\";\t\t$row = $db->GetRow($sql);\t\treturn $row;\t}\n依然构造URL：地址：userweb/outbound.php?module=agent&action=AjaxCheckNextQuestion&qid=1\n\n\n\n1.漏洞文件位置:Userweb/php/outbound/object.class.php\nfunction showObjectPause() {\t\t$exten_object_id = varFilter($_REQUEST['id']);  \t\t$db = $this->loadDB();\t\t$sql = \"select object_id, run_status from stdout_exten_object where id={$exten_object_id}\";.........................................//省略\nvarFilter函数：\nfunction varFilter( $fArray ){    if ( is_array( $fArray ) )    {        foreach ( $fArray as $_arrykey => $_arryval )        {            if ( is_string( $_arryval ) )            {                $fArray[$_arrykey] = trim( nl2br( $fArray[$_arrykey] ) );                $fArray[$_arrykey] = htmlspecialchars( $fArray[$_arrykey] );                $fArray[$_arrykey] = !get_magic_quotes_gpc( ) ? addslashes( $fArray[$_arrykey] ) : $fArray[$_arrykey];                $fArray[$_arrykey] = strip_tags( $fArray[$_arrykey], \"<br>\" );            }            else if ( is_array( $_arryval ) )            {                $fArray[$_arrykey] = varfilter( $_arryval );            }        }        return $fArray;    }    $fArray = trim( nl2br( $fArray ) );    $fArray = htmlspecialchars( $fArray );    $fArray = !get_magic_quotes_gpc( ) ? addslashes( $fArray ) : $fArray;    $fArray = strip_tags( $fArray, \"<br>\" );    return $fArray;}\n限制是htmlspecialchars和GPC，此处没单引号保护，无视GPC。Sqlmap跑的时候记得加上--tamper=between，不然跑不出数据.构造URL如下:userweb/outbound.php?module=object&action=ObjectPause&id=1\n\n\n\n2.漏洞文件位置:Userweb/php/outbound/object.class.php\nfunction showObjectStop() {\t\t$exten_object_id = varFilter($_REQUEST['id']);\t\t$db = $this->loadDB();\t\t$sql = \"select object_id, run_status from stdout_exten_object where id={$exten_object_id}\";........................................//省略\n跟上面一样的问题:构造url如下:userweb/outbound.php?module=object&action=ObjectStop&id=1\n\n\n\n3.漏洞文件位置:Userweb/php/outbound/report.class.php\nfunction showAjaxGetIvrTotal()\t{\t\t$db = $this->loadDB();\t\t$_REQUEST = varFilter($_REQUEST);\t\t$object_id\t= $_REQUEST['object'];\t\t$ivr_id\t\t= $_REQUEST['ivr_id'];\t\t$fromdate\t= $_REQUEST['fromdate'];\t\t$todate\t\t= $_REQUEST['todate'];..................................../省略无关代码$sql = \"SELECT * FROM ss_ivr_dests WHERE ivr_id={$ivr_id} ORDER BY selection ASC\";$rs = $db->GetArray($sql);\n构造URL：userweb/outbound.php?module=report&action=AjaxGetIvrTotal&ivr_id=1\n\n\n\n4.漏洞文件位置:Userweb/php/index/crmManager.class.php\npublic function showAjaxGetTransferLogDetail( )    {        $db = $this->loadDB( );        $sql = \"SELECT content FROM log_customer_transfer WHERE id=\".$_REQUEST['id'];        $content = $db->GetOne( $sql );        $content = str_replace( \"\\r\\n\", \"<br/>\", $content );        echo $content;        exit( );}\n构造URL如下：userweb/index.php?module=crmManager&action=AjaxGetTransferLogDetail&id=1\n\n\n\n5.漏洞文件位置:Userweb/php/index/fieldConfig.class.php\nfunction showeditField(){\t\t\tif( isset($_GET['id']) && !empty( $_GET['id'] ) ){\t\t\t\t$id = $_GET['id'];\t\t\t}else{\t\t\t\tgoBack(\"来路不明\",\"close\");\t\t\t}\t\t\t$db = $this->loadDB();\t\t\t$sql = \"SELECT * FROM crm_fields_options WHERE id=\".$id;\t\t\t$field = $db->GetRow( $sql );\t\t\t$this->Tmpl['field'] = $field;\t\t\t$this->display();\t\t}\n构造URL如下:userweb/index.php?module=fieldConfig&action=editField&id=1\n\n\n\nUserweb/php/index/log.class.php\npublic function showDelete( )    {        $str = $_GET['delete_str'];        $mark = $_GET['mark'];        $str = substr_replace( $str, \"\", -1, 1 );        $array = explode( \",\", $str );        $j = count( $array );        $db = $this->loadDB( );        $i = 0;        for ( ; $i < $j; ++$i )        {            $sqll = \"select filename,date from crm_oa_log_attachments where log_id='\".$array[$i].\"'\";            $result = mysql_query( $sqll );            while ( $row = mysql_fetch_array( $result ) )            {                $row['date'] = date( \"Ym\", $row['date'] );                $filename = \"data/diary/\".$row['date'].\"/\".$row['filename'];                @unlink( $filename );            }        }        $sql = \"DELETE FROM `crm_oa_worklog`  WHERE `log_id` in (\".$str.\")\";        $sq = \"DELETE FROM `crm_oa_log_attachments`  WHERE `log_id` in (\".$str.\")\";        $s = \"delete from `crm_oa_log_comments` where `log_id` in (\".$str.\")\";        if ( $db->Execute( $sql ) && $db->Execute( $sq ) && $db->Execute( $s ) )        {            goback( c( \"ɾ���ɹ���\" ), \"index.php?module=log&action=\".$mark );        }        else        {            goback( c( \"ɾ��ʧ��!\" ) );        }}\n参数delete_str，因为不适合在本地搭建，就在案例上跑的，提前看了，表都是空的。不然这delete注入跑起来会完蛋的.构造url如下:userweb/index.php?module=log&action=Delete&delete_str=1\n\n\n\n2.漏洞文件位置:Userweb/php/index/mobileApi.class.php\npublic function showGetSessionsByImUser( )    {        $loginId = trim( $_REQUEST['loginId'] );        $db_mobile = $this->loadDBMobile( );        $db_mobile->Execute( \"SET NAMES UTF8\" );        $sql = \"call proc_im_getsessions(\".$loginId.\");\";        $res = $db_mobile->Execute( $sql );....................................................\n构造url如下：userweb/index.php?module=mobileApi&action=GetSessionsByImUser&loginId=1\n\n\n\n3.漏洞文件位置:Userweb/php/index/Outbound.class.php\npublic function showAjaxTopic( )    {        varfilter( $_REQUEST );        extract( $_REQUEST );        $db = $this->loadDB( );        if ( isset( $_REQUEST['ques_id'], $_REQUEST['ques_id'] ) )        {            echo 0;            exit( );        }        if ( isset( $_REQUEST['topic_id'], $_REQUEST['topic_id'], $_REQUEST['parent_topic_id'], $_REQUEST['parent_topic_id'] ) )        {            echo 0;            exit( );        }        $sql = \"SELECT id FROM out_question_answer WHERE task_id=\".$task_id.\" AND ques_id={$id} AND custom_contact='{$number}'\";        $quAnsId = $db->GetOne( $sql );        $sql = \"SELECT * FROM out_question_answer_context\\r\\n\\t\\t\\t\\tWHERE task_id=\".$task_id.\" AND ques_id={$id} AND topic_id={$topic_id} AND ques_ans_id={$quAnsId}\";        $answerRow = $db->GetRow( $sql );        if ( isset( $_REQUEST['parent_topic_id'], $_REQUEST['parent_topic_id'] ) )        {            $sql = \"SELECT * FROM out_question_topic\\r\\n                    WHERE ques_id=\".$ques_id.\" AND parent_topic_id={$parent_topic_id} AND parent_option='{$parent_option}'\";            $row = $db->GetRow( $sql );            if ( !empty( $row ) )            {                $row['m'] = $method;                $row['parent_id'] = 1;                $row['answer'] = $answerRow['option_context'];                $row['other_answer'] = $answerRow['other_answer'];                echo json_encode( $row );                exit( );            }        }        $sql = \"SELECT * FROM out_question_topic WHERE id=\".$topic_id.\" AND ques_id={$ques_id}\";        $row = $db->GetRow( $sql );        $row['m'] = $method;        $row['parent_id'] = 0;        $row['answer'] = $answerRow['option_context'];        $row['other_answer'] = $answerRow['other_answer'];        echo json_encode( $row );        exit( );}\nextract( $_REQUEST );此函数造成变量覆盖。构造url如下:userweb/index.php?module=Outbound&action=AjaxTopic&ques_id=1&topic_id=1&parent_topic_id=1&task_id=1\n\n\n\n同样的还有参数,id,topic_id,parent_topic_id,ques_id四处..4.漏洞文件位置:Userweb/php/index/seatMonitor.class.php\nfunction showDaPingNotify()\t{\t\t$db = $this->loadDB();\t\t$id_array = array();\t\t$id = $_REQUEST['id'];\t\t$id_array = explode(\",\",$id);\t\t//»ñÈ¡ÄÚÈÝ¹«¸æ\t\t$sql = \"SELECT * FROM crm_notify where nid in (\".$id.\")\";\t\t$tmp_result = $db->GetAll( $sql );........................................................\n构造url如下:userweb/index.php?module=seatMonitor&action=DaPingNotify&id=1\n\n\n\n   漏洞证明：  \n\n\n\n   修复方案：  补上登陆验证函数，加强参数过滤，注意单引号保护.   版权声明：转载请注明来源 Bear baby@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：14  确认时间：2016-04-11 15:54 厂商回复： CNVD确认并复现所述情况，已由CNVD通过软件生产厂商公开联系渠道向其邮件通报，由其后续提供解决方案并协调相关用户单位处置。 最新状态： 暂无  ", "replys": "漏洞评价：\n评价\n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 14, "Ranks": null}