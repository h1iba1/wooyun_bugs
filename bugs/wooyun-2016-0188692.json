{"id": 86286, "wybug_id": "wooyun-2016-0188692", "wybug_title": "IBOS协同办公平台一处sql注入", "wybug_corp": "深圳市博思协创网络科技有限公司", "wybug_author": "路人甲", "wybug_date": "2016-03-25 15:25", "wybug_open_date": "2016-05-09 15:25", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "10", "wybug_status": "未联系到厂商或者厂商积极忽略", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["注入"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2016-03-25：\t积极联系厂商并且等待厂商认领中，细节不对外公开\t\t\t\t\t\t\t\t\t2016-05-09：\t厂商已经主动忽略漏洞，细节向公众公开  简要描述： IBOS协同办公平台存在一处sql注入漏洞 详细说明：  IBOS协同办公平台最新版存在一处sql注入漏洞。漏洞存在于个人办公->工作计划模块repids参数。\npublic function actionDel() {        if (IBOS::app()->request->isAjaxRequest) {            $repids = Env::getRequest('repids');            $uid = IBOS::app()->user->uid;            if (empty($repids)) {                $this->error(IBOS::lang('Parameters error', 'error'),                        $this->createUrl('default/index'));            }            $pk = '';            if (strpos($repids, ',')) {                $repids = trim($repids, ',');                $pk = explode(',', $repids);            } else {                $pk = array($repids);            }            $reports = Report::model()->fetchAllByPk($pk);            foreach ($reports as $report) {                // 权限判断                if ($report['uid'] != $uid) {                    $this->ajaxReturn(array('isSuccess' => false, 'msg' => IBOS::lang('You do not have permission to delete the report')));                }            }            //删除附件            $aids = Report::model()->fetchAllAidByRepids($pk);            if ($aids) {                Attach::delAttach($aids);            }            //若已安装日程，删除关联表数据和有提醒时间的日程            $isInstallCalendar = Module::getIsEnabled('calendar');            if ($isInstallCalendar) {                Calendars::model()->deleteALL(\"`calendarid` IN(select `cid` from {{calendar_rep_record}} where FIND_IN_SET(`repid`, '{$repids}')) \");                CalendarRepRecord::model()->deleteAll(\"repid IN ({$repids})\");\n获取rapids参数但对rapids参数没有过滤，自己写的查询条件，但是未作过滤处理。造成sql注入。   漏洞证明：  官网demo测试。1.利用updatexml报错获取数据库版本。\n\n2.数据库用户\n\n3，数据库名\n\n   修复方案：  过滤！   版权声明：转载请注明来源 路人甲@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 未能联系到厂商或者厂商积极拒绝 漏洞Rank：15 (WooYun评价)  ", "replys": "漏洞评价：\n评价\n  \n\n\n", "wybug_level_fromcorp": "未能联系到厂商或者厂商积极拒绝", "wybug_rank_fromcorp": 15, "Ranks": null}