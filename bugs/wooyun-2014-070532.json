{"id": 52659, "wybug_id": "wooyun-2014-070532", "wybug_title": "Fengcms SQL注入漏洞", "wybug_corp": "fengcms.com", "wybug_author": "story", "wybug_date": "2014-08-01 11:39", "wybug_open_date": "2014-10-27 11:40", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "漏洞已经通知厂商但是厂商忽略漏洞", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["源码审核", "白盒测试"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-08-01：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-08-06：\t厂商主动忽略漏洞，细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2014-09-30：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-10-10：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-10-20：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-10-27：\t细节向公众公开  简要描述： 官方给的测试站似乎被getshell了，吓坏了呀~不是我干的~ 详细说明：  app/controller/messageController.php\nclass messageController extends Controller{\tprivate $model\t\t=\t\"message\";\tpublic function index(){\t\treturn $this->display(\"message.html\");//,M($this->model)->page());\t}\tpublic function add(){\t\treturn $this->display(\"message_add.html\");//,M($this->model)->page());\t}\tpublic function save(){\t\techo json_encode(M($this->model)->save(lib_replace_end_tag_array($_POST)));\t}}\nsave方法，将$_POST过滤以后传入save变量。看到这个过滤函数lib_replace_end_tag_array：\nfunction lib_replace_end_tag_array($array){\t\tif(!is_array($array)) return false;\t\tforeach($array as $k => $v){\t\t\t$arr[$k]= lib_replace_end_tag($v);\t\t}\t\treturn $arr;\t}\n可见只过滤了value没有过滤key。我们再看save函数：\npublic function save($array){\t\tif($_SESSION['authnum']!=$array['vcode']||$_SESSION['authnum']==\"\"){ return array('status' => 'c');}\t\tunset($array['vcode']);\t\t$re=D($this->d_name)->insert($array);\t\tif($re){\t\t\t$_SESSION['authnum']=\"\";\t\t\treturn array('status' => 'y','id' => $re);\t\t}else{\t\t\treturn array('status' => 'n','id' => $re);\t\t}\t}\n将$_POST传入insert函数，跟进：\npublic function insert($row){         if (!is_array($row)) {             return false;         }         foreach ($row as $key => $value) {             $cols[] = $key;             $vals[] = $this->db->escape($value);         }         $col = join('`,`', $cols);         $val = join(',', $vals);\t\t$this->db->query('insert into `'.$this->name.'` (`'.$col.'`) values ('.$val.')');\t\treturn $this->lastinsertid();\t\t    }\n没有过滤。所以造成了注入。   漏洞证明：  \n\n增加一条留言：\n\n查看即可看到注入获得的数据：\n\n   修复方案：  不要将POST直接插入数据库   版权声明：转载请注明来源 story@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：无影响厂商忽略 忽略时间：2014-10-27 11:40 厂商回复：  最新状态： 2014-08-11：@story @疯狗 不好意思，前端时间去出差，导致没有及时关注乌云，希望可以帮忙一下，我们重新审核这个BUG。非常感谢！  ", "replys": "漏洞评价：\n评论\n     2014-08-12 15:45 |    \t\tstory \t\t\t( 实习白帽子  |\t\t\t        Rank:59 漏洞数:20        | 看到的感受到的永远都不会消失永远都不会忘...)\t\t \n  @疯狗求帮加。。。厂商还是挺负责的呀~    \n     2014-08-19 14:11 |    \t\tFengCMS(乌云厂商)\t\t \n  最新版已经修复了该漏洞，但是由于未能确认感到非常抱歉。我会在近期给两位白帽子送去礼物，再一次感谢，希望大家持续关注FengCMS！    \n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}