{"id": 59683, "wybug_id": "wooyun-2013-046469", "wybug_title": "Thinksaas SQL注入#2", "wybug_corp": "thinksaas.cn", "wybug_author": "xfkxfk", "wybug_date": "2013-12-19 16:38", "wybug_open_date": "2014-03-19 16:39", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["第三方不可信程序", "源码审核", "注射漏洞利用技巧", "源码分析", "白盒测试"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2013-12-19：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2013-12-20：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2013-12-23：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2014-02-13：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-02-23：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-03-05：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-03-19：\t细节向公众公开  简要描述： Thinksaas SQL注入#2 详细说明：  Thinksaas 最新版在小组发表帖子时，帖子内容中可以@其他用户，这里在处理@的用户时，只在前台过滤，未在后台过滤，而且没有通过sql安全检查，直接拼接到sql语句中，导致sql注入。还有一处是在编辑补贴内容处，title和content都么过滤来看看发帖的地方，参数的传递：\n// 执行发布帖子\tcase \"do\" :\t\t\t\tif ($_POST ['token'] != $_SESSION ['token']) {\t\t\ttsNotice ( '非法操作！' );\t\t}\t\t\t\t$authcode = strtolower ( $_POST ['authcode'] );\t\t\t\tif ($TS_SITE ['base'] ['isauthcode']) {\t\t\tif ($authcode != $_SESSION ['verify']) {\t\t\t\ttsNotice ( \"验证码输入有误，请重新输入！\" );\t\t\t}\t\t}\t\t\t\t$groupid = intval ( $_POST ['groupid'] );\t\t$title = tsClean ( $_POST ['title'] );\t\t$content = tsClean ( $_POST ['content'] );\t\t$typeid = intval ( $_POST ['typeid'] );\t\t$tag = tsClean ( $_POST ['tag'] );\n跟进tdClean函数：\nfunction cleanJs($text) {\t$text = trim ( $text );\t$text = stripslashes ( $text );\t// 完全过滤注释\t$text = preg_replace ( '/<!--?.*-->/', '', $text );\t// 完全过滤动态代码\t$text = preg_replace ( '/<\\?|\\?>/', '', $text );\t// 完全过滤js\t$text = preg_replace ( '/<script?.*\\/script>/', '', $text );\t// 过滤多余html\t$text = preg_replace ( '/<\\/?(html|head|meta|link|base|body|title|style|script|form|iframe|frame|frameset)[^><]*>/i', '', $text );\t// 过滤on事件lang js\twhile ( preg_match ( '/(<[^><]+)(lang|onfinish|onmouse|onexit|onerror|onclick|onkey|onload|onchange|onfocus|onblur)[^><]+/i', $text, $mat ) ) {\t\t$text = str_replace ( $mat [0], $mat [1], $text );\t}\twhile ( preg_match ( '/(<[^><]+)(window\\.|javascript:|js:|about:|file:|document\\.|vbs:|cookie)([^><]*)/i', $text, $mat ) ) {\t\t$text = str_replace ( $mat [0], $mat [1] . $mat [3], $text );\t}\treturn $text;}/** * 输入安全过滤 * @param unknown $text * @return mixed */function tsClean($text) {\t$text = cleanJs ( $text );\treturn $text;}\n只是将content内容对js相关内容进行了过滤。再来看看处理@用户时的操作：\n// 处理@用户名\t\tif (preg_match_all ( '/@/', $content, $at )) {\t\t\tpreg_match_all ( \"/@(.+?)([\\s|:]|$)/is\", $content, $matches );\t\t\t\t\t\t$unames = $matches [1];\t\t\t\t\t\t$ns = \"'\" . implode ( \"','\", $unames ) . \"'\";\t\t\t\t\t\t$csql = \"username IN($ns)\";\t\t\t\t\t\tif ($unames) {\t\t\t\t\t\t\t\t$query = $db->fetch_all_assoc ( \"select userid,username from \" . dbprefix . \"user_info where $csql\" );//注入点在这里\t\t\t\t\t\t\t\tforeach ( $query as $v ) {\t\t\t\t\t$content = str_replace ( '@' . $v ['username'] . '', '[@' . $v ['username'] . ':' . $v ['userid'] . ']', $content );\t\t\t\t\t$msg_content = '我在帖子中提到了你<br />去看看：' . tsUrl ( 'group', 'topic', array (\t\t\t\t\t\t\t'id' => $topicid \t\t\t\t\t) );\t\t\t\t\taac ( 'message' )->sendmsg ( $userid, $v ['userid'], $msg_content );\t\t\t\t}\t\t\t\t$new ['group']->update ( 'group_topic', array (\t\t\t\t\t\t'topicid' => $topicid \t\t\t\t), array (\t\t\t\t\t\t'content' => $content \t\t\t\t) );\t\t\t}\n匹配到@用户时的内容后，通过空格:冒号进行匹配，然后用都好分割，去第二个，放到sql语句中，最后带入查询，造成sql注入。   漏洞证明：  我们发表帖子，然后抓包：\n\n\n\n这里的content内容在前台进行了过滤，但是我们抓包含可以进行修改，如上图修改。我们的sql语句会被执行，延迟10秒，帖子发表成功。看看数据库的执行日志，以及此语句的执行结果：\n\n   修复方案：  过滤   版权声明：转载请注明来源 xfkxfk@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：15  确认时间：2013-12-20 22:07 厂商回复： 非常感谢反馈。已经再积极处理中。 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2015-03-12 15:26 |    \t\t胡小树 \t\t\t( 实习白帽子  |\t\t\t        Rank:60 漏洞数:11        | 我是一颗小小树)\t\t \n  @xfkxfk  大牛，我想问下，这个版本的系统我测试了下，你说：title和content都么过滤。我测试content可以注入，但是title进数据库的时候 单引号被转义了那。    \n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 15, "Ranks": null}