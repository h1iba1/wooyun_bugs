{"id": 45873, "wybug_id": "wooyun-2014-086742", "wybug_title": "ThinkPHP架构设计不合理极易导致SQL注入", "wybug_corp": "ThinkPHP", "wybug_author": "phith0n", "wybug_date": "2014-12-11 09:01", "wybug_open_date": "2015-03-11 09:02", "wybug_type": "设计错误/逻辑缺陷", "wybug_level": "高", "wybug_rank_0": "15", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["源码审计"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-12-11：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-12-11：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-12-14：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2015-02-04：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-02-14：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-02-24：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-03-11：\t细节向公众公开  简要描述： 没有上一个问题严重，但也是thinkphp设计上的隐患，提出来希望能修改，不过忽略了也没办法。实际上这两个洞的意义不仅于此，这是框架流行的时代，注入的一个新思路。 详细说明：  这个问题其实应该从前段时间Th1nk发的mongodb注入说起，http://drops.wooyun.org/tips/3939，其中提到了mongodb一种注入方式：\n\n然后parsec团队里前段时间也在讨论这个问题，究竟这个漏洞是php的特性，还是mongodb的特性。后来jin发了一个精华：http://wooyun.org/bugs/wooyun-2010-086474，也从侧面印证了一个问题，这个特性（获得的GP可以是字符串也可以是数组）不仅仅是PHP存在，只要框架支持，那么就可以存在。当然我这个洞是PHP的洞，但实际上问题出在thinkphp框架上。问题还是在“表达式查询”这里：http://document.thinkphp.cn/manual_3_2.html#express_query在文档里看到，我们居然可以控制查询表达式的符号：\n\n这个设计和mongodb的就很类似，很可能造成安全问题，比如万能密码。写个例子证明：\npublic function test()\t{\t\tif (IS_POST) {\t\t\t$uname = I('post.uname', '', 'trim');\t\t\t$upass = I('post.upass', '', 'trim');\t\t\t$remember = I('post.remember');\t\t\tif (empty($uname) || empty($upass)) {\t\t\t\t$this->error('用户名或密码不能为空');\t\t\t}\t\t\t$row = M('user')->where(array(\t\t\t\t'uname' => $uname,\t\t\t\t'passwd' => $upass\t\t\t))->find();\t\t\tif (empty($row)) {\t\t\t\techo 0;\t\t\t}else{\t\t\t\techo 1;\t\t\t}\t\t}\t}\n这是控制器里的一个登录函数，如果账号/密码输入正确则输出1，否则输出0.很普通的一个逻辑，也是经常出现在各种应用中前/后台登录的方式。正常情况下，随便输入一个账号/密码是肯定错误的，输出0：\n\n我们将uname[0]设置为neq，也就是“不等于”，upass[0]也设置为neq，1随意：\n\n果然已经注入成功了，我们看看数据库语句究竟是什么：\n\n实际上我们控制了操作符，所以让uname<>aaaa，upass<>bbbb，那么这句话肯定成立，就此造成了一个万能密码，成功登录。具体实例可能需要慢慢找，因为一般password会进行md5，导致我们传入数组是不行的。但这个思路可以引申到所有使用where语句的地方。   漏洞证明：  见详细说明。   修复方案：  强制转换为字符串，再放入where语句。   版权声明：转载请注明来源 phith0n@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：中 漏洞Rank：8  确认时间：2014-12-11 17:04 厂商回复： 该漏洞在系统没有对用户数据做严谨判断，并且在可能的业务逻辑的情况下会导致SQL注入的产生。目前的github版本TP和OT均已修正~ 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2014-12-11 09:12 |    \t\t玉林嘎 \t\t\t( 普通白帽子  |\t\t\t        Rank:758 漏洞数:96        )\t\t \n  mark    \n     2014-12-11 09:40 |    \t\txfkxfk  \t\t\t( 核心白帽子 |\t\t\t        Rank:2179 漏洞数:338        | 呵呵！)\t\t \n  来看ph牛的注入新思路    \n     2014-12-11 10:03 |    \t\t泳少 \t\t\t( 普通白帽子  |\t\t\t        Rank:231 漏洞数:79        | ★           梦想这条路踏上了，跪着也要...)\t\t \n  手握众多0day的ph牛    \n     2014-12-11 11:26 |    \t\t牛肉包子 \t\t\t( 普通白帽子  |\t\t\t        Rank:254 漏洞数:64        )\t\t \n  师傅好屌！    \n     2014-12-11 17:15 |    \t\t袋鼠妈妈 \t\t\t( 普通白帽子  |\t\t\t        Rank:449 漏洞数:61        | 故乡的原风景.MP3)\t\t \n  卧槽    \n     2014-12-11 17:19 |    \t\txsser  \t\t\t( 普通白帽子  |\t\t\t        Rank:254 漏洞数:18        | 当我又回首一切,这个世界会好吗?)\t\t \n  这个@thinkphp 不考虑带个乌云的感谢？    \n     2014-12-11 20:01 |    \t\tphith0n  \t\t\t( 核心白帽子 |\t\t\t        Rank:656 漏洞数:107        | 一个想当文人的黑客~)\t\t \n  @xsser 咦，我这两个洞为啥没算在通用里？乌云榜上一个算在PC，一个算在web？ @疯狗 @Finger     \n     2014-12-11 20:02 |    \t\txsser  \t\t\t( 普通白帽子  |\t\t\t        Rank:254 漏洞数:18        | 当我又回首一切,这个世界会好吗?)\t\t \n  @phith0n 搞错了吧     \n     2014-12-11 20:20 |    \t\tphith0n  \t\t\t( 核心白帽子 |\t\t\t        Rank:656 漏洞数:107        | 一个想当文人的黑客~)\t\t \n  @xsser 帮我改改吧，我提交的时候好像都选的通用~    \n     2014-12-11 22:05 |    \t\tgoubuli \t\t\t( 普通白帽子  |\t\t\t        Rank:324 漏洞数:61        )\t\t \n  通用牛人    \n     2014-12-12 09:00 |    \t\t小森森 \t\t\t( 路人 |\t\t\t        Rank:11 漏洞数:2        | 不中二 枉少年)\t\t \n  看了github的commit log，表示好想法    \n     2014-12-12 10:56 |    \t\txsser  \t\t\t( 普通白帽子  |\t\t\t        Rank:254 漏洞数:18        | 当我又回首一切,这个世界会好吗?)\t\t \n  @phith0n 已撸    \n     2014-12-12 12:23 |    \t\t0c0c0f \t\t\t( 实习白帽子  |\t\t\t        Rank:48 漏洞数:15        | My H34rt c4n 3xploit 4ny h0les!)\t\t \n   }elseif(is_array($val) && isset($_REQUEST[$key]) && is_array($_REQUEST[$key])){\t\t\t\t\t\t$options['where'][$key]\t=\t(string)$val;\t\t\t\t\t}    \n     2014-12-15 14:00 |    \t\tabaddon \t\t\t( 实习白帽子  |\t\t\t        Rank:37 漏洞数:10        | 我叫什么名字)\t\t \n  值得研究 基于架构的三个美刀符号的闪电是什么东西等公开    \n     2015-03-11 09:30 |    \t\t穿山甲 \t\t\t( 路人 |\t\t\t        Rank:4 漏洞数:1        | 处于学习阶段，跟老师傅学习中。。。)\t\t \n  思路新颖，赞一个~~~    \n  \n\n\n", "wybug_level_fromcorp": "中", "wybug_rank_fromcorp": 8, "Ranks": null}