{"id": 12880, "wybug_id": "wooyun-2013-020790", "wybug_title": "开放平台单点登录SSO方案设计缺陷导致钓鱼风险", "wybug_corp": "腾讯", "wybug_author": "我真的不是V", "wybug_date": "2013-03-27 23:56", "wybug_open_date": "2013-05-11 23:57", "wybug_type": "账户体系控制不严", "wybug_level": "高", "wybug_rank_0": "15", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["认证缺陷", "认证设计不合理", "用户认证信息泄漏", "实现漏洞", "实现缺陷"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2013-03-27：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2013-04-01：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2013-04-11：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2013-04-21：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2013-05-01：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2013-05-11：\t细节向公众公开  简要描述： 一般来说，开放平台的oauth协议设计会使得B网站（app）不能够伪造成A网站（app）来引导用户进行授权，并进一步得到用户对A网站（app）授权的access_token。这个机制会通过redirect_uri/refer等来进行控制。流行开放平台都设计了手机app的SSO机制，使得用户在手机端已安装指定app（如Qzone）的前提下，再使用第三方app，通过腾讯互联开放平台登录时，不需要重复登录。其实现原理是Qzone app获得第三方app的appid，并替代完成授权操作。然而此机制设计考虑不完善，导致B app可伪造为A app向用户要求授权，并拿到access_token。 详细说明：  一般来说，开放平台的oauth协议设计会使得B网站（app）不能够伪造成A网站（app）来引导用户进行授权，并进一步得到用户对A网站（app）授权的access_token。这个机制会通过redirect_uri/refer等来进行控制。流行开放平台都设计了手机app的SSO机制，使得用户在手机端已安装指定app（如Qzone）的前提下，再使用第三方app，通过腾讯互联开放平台登录时，不需要重复登录。其实现原理是Qzone app获得第三方app的appid，并替代完成授权操作。然而此机制设计考虑不完善，导致B app可伪造为A app向用户要求授权，并拿到access_token。详情：腾讯的Android SSO demo（http://wiki.opensns.qq.com/wiki/%E3%80%90QQ%E7%99%BB%E5%BD%95%E3%80%91SDK%E4%B8%8B%E8%BD%BD），仅凭一个appid参数即可初始化SSO机制的调用：\nmTencent = Tencent.createInstance(appid, ctxContext);省略部分代码    private void onClickLogin() {        if (!mTencent.isSessionValid()) {            IUiListener listener = new BaseUiListener() {                @Override                protected void doComplete(JSONObject values) {                    updateLoginButton();                }            };            mTencent.login(this, SCOPE, listener);        } else {            mTencent.logout(this);            updateLoginButton();        }    }\n而在开放平台体系中，各app的appid实际是公开的，所以非常容易拿到其他app的appid。我们可以自己写一个恶意app，在其中假冒某高权限app的appid引导用户授权，此时，SSO组件会引导用户对appid所属的应用进行授权确认， 此时用户一般不太会关注其授权的应用名字，而完成授权后，即拿到该用户的access_token，进而可以调用开放平台的各接口。    漏洞证明：  不可多言（实际是懒得找高权限app）   修复方案：  参考facebook的方案，要求开发者导出签名并配置到开放平台。   版权声明：转载请注明来源 我真的不是V@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：15  确认时间：2013-04-01 11:32 厂商回复： 感谢反馈，已在处理中。 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2013-05-13 11:09 |    \t\t凤凰 \t\t\t( 路人 |\t\t\t        Rank:15 漏洞数:6        | 涅磐)\t\t \n  类似的问题貌似有人在blog中提过，移动端不便于查看授权页面的url    \n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 15, "Ranks": null}