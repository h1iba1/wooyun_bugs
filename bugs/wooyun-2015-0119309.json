{"id": 45516, "wybug_id": "wooyun-2015-0119309", "wybug_title": "美团网APP存在远程命令执行漏洞", "wybug_corp": "美团网", "wybug_author": "ali", "wybug_date": "2015-06-10 10:23", "wybug_open_date": "2015-09-08 17:42", "wybug_type": "远程代码执行", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-06-10：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-06-10：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2015-06-13：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2015-08-04：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-08-14：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-08-24：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-09-08：\t细节向公众公开  简要描述： 美团网2个远程命令执行漏洞，通过浏览恶意网站就会受到远程命令执行漏洞攻击 详细说明：  一，com.meituan.android.base.hybrid.HybridWebViewActivity对外导出：\n<activity\t\t\tandroid:name=\"com.meituan.android.base.hybrid.HybridWebViewActivity\"\t\t\tandroid:launchMode=\"0\"\t\t\tandroid:screenOrientation=\"1\"\t\t\tandroid:configChanges=\"0x000000A0\"\t\t\t>\t\t\t<intent-filter\t\t\t\t>\t\t\t\t<action\t\t\t\t\tandroid:name=\"android.intent.action.VIEW\"\t\t\t\t\t>\t\t\t\t</action>\t\t\t\t<category\t\t\t\t\tandroid:name=\"android.intent.category.DEFAULT\"\t\t\t\t\t>\t\t\t\t</category>\t\t\t\t<category\t\t\t\t\tandroid:name=\"android.intent.category.BROWSABLE\"\t\t\t\t\t>\t\t\t\t</category>\t\t\t\t<data\t\t\t\t\tandroid:scheme=\"imeituan\"\t\t\t\t\tandroid:host=\"www.meituan.com\"\t\t\t\t\tandroid:path=\"/hybrid/web\"\t\t\t\t\t>\t\t\t\t</data>\t\t\t</intent-filter></activity>\n导出MeituanHotelWebviewBridge这个js接口：\nprotected void onCreate(Bundle arg6) {        super.onCreate(arg6);        this.webView.addJavascriptInterface(new com.meituan.android.base.hybrid.h(this), \"MeituanHotelWebviewBridge\");        this.webView.getSettings().setUserAgentString(this.webView.getSettings().getUserAgentString()                 + String.format(\" %s/%s\", \"iHotel\", BaseConfig.versionName));}\n 进入super.onCreate查看之前的操作：\npublic void onCreate(Bundle arg3) {        super.onCreate(arg3);        if(this.getIntent().getData() != null) {            String v0 = this.buildQueryUrl(this.getIntent().getData());            if(!TextUtils.isEmpty(((CharSequence)v0))) {                this.url = v0;            }        }        if(TextUtils.isEmpty(this.url)) {            this.finish();        }        else {            if(!TextUtils.isEmpty(this.title)) {                this.getSupportActionBar().setTitle(this.title);            }            if(this.getIntent().hasExtra(\"share\")) {                this.topic = this.getIntent().getSerializableExtra(\"share\");            }            this.loadUrl(this.url);            this.bus.a(this);        }}\n获取数据并构造相应的url进行加载，进入buildQueryUrl函数查看细节：private String buildQueryUrl(Uri arg4) {        String v0_1;        if(arg4 == null || (TextUtils.isEmpty(arg4.getQueryParameter(\"url\")))) {            v0_1 = \"\";        }        else {            Uri$Builder v0 = Uri.parse(arg4.getQueryParameter(\"url\")).buildUpon();            if(!TextUtils.isEmpty(arg4.getQueryParameter(\"ieic\"))) {                v0.appendQueryParameter(\"ieic\", arg4.getQueryParameter(\"ieic\"));            }            if(!TextUtils.isEmpty(arg4.getQueryParameter(\"ct_poi\"))) {                v0.appendQueryParameter(\"ct_poi\", arg4.getQueryParameter(\"ct_poi\"));            }            if(!TextUtils.isEmpty(arg4.getQueryParameter(\"msid\"))) {                v0.appendQueryParameter(\"msid\", arg4.getQueryParameter(\"msid\"));            }            v0_1 = v0.toString();        }        return v0_1;}获取url参数，并再根据url中的参数构造url，因此我们构造下面的html即可进行远程代码执行漏洞攻击：\n\n由于HybridWebViewActivity在menifest定义了android.intent.category.BROWSABLE属性，因此可以通过浏览器唤起HybridWebViewActivity组件，达到远程命令执行漏洞攻击。浏览恶意网页即可受到远程命令执行漏洞攻击：\n\n二，com.meituan.android.base.ui.CommonWebViewActivity对外导出：\n<activity\t\t\tandroid:name=\"com.meituan.android.base.ui.CommonWebViewActivity\"\t\t\tandroid:launchMode=\"0\"\t\t\tandroid:screenOrientation=\"1\"\t\t\tandroid:configChanges=\"0x000000A0\"\t\t\t>\t\t\t<intent-filter\t\t\t\t>\t\t\t\t<action\t\t\t\t\tandroid:name=\"android.intent.action.VIEW\"\t\t\t\t\t>\t\t\t\t</action>\t\t\t\t<category\t\t\t\t\tandroid:name=\"android.intent.category.DEFAULT\"\t\t\t\t\t>\t\t\t\t</category>\t\t\t\t<category\t\t\t\t\tandroid:name=\"android.intent.category.BROWSABLE\"\t\t\t\t\t>\t\t\t\t</category>\t\t\t\t<data\t\t\t\t\tandroid:scheme=\"imeituan\"\t\t\t\t\tandroid:host=\"www.meituan.com\"\t\t\t\t\tandroid:path=\"/web/\"\t\t\t\t\t>\t\t\t\t</data>\t\t\t\t<data\t\t\t\t\tandroid:scheme=\"imeituan\"\t\t\t\t\tandroid:host=\"www.meituan.com\"\t\t\t\t\tandroid:path=\"/web\"\t\t\t\t\t>\t\t\t\t</data>\t\t\t\t<data\t\t\t\t\tandroid:scheme=\"iMeituan\"\t\t\t\t\tandroid:host=\"www.meituan.com\"\t\t\t\t\tandroid:path=\"/web/\"\t\t\t\t\t>\t\t\t\t</data>\t\t\t\t<data\t\t\t\t\tandroid:scheme=\"iMeituan\"\t\t\t\t\tandroid:host=\"www.meituan.com\"\t\t\t\t\tandroid:path=\"/web\"\t\t\t\t\t>\t\t\t\t</data>\t\t\t</intent-filter></activity>\n导出Android这个js接口：\nthis.webView.addJavascriptInterface(new BaseWebViewActivity$MyJavaScriptInterface(this), \"Android\");\n进入onCreate查看之前的操作：\npublic void onCreate(Bundle arg3) {        super.onCreate(arg3);        if(this.getIntent().getData() != null) {            String v0 = this.buildQueryUrl(this.getIntent().getData());            if(!TextUtils.isEmpty(((CharSequence)v0))) {                this.url = v0;            }        }        if(TextUtils.isEmpty(this.url)) {            this.finish();        }        else {            if(!TextUtils.isEmpty(this.title)) {                this.getSupportActionBar().setTitle(this.title);            }            if(this.getIntent().hasExtra(\"share\")) {                this.topic = this.getIntent().getSerializableExtra(\"share\");            }            this.loadUrl(this.url);            this.bus.a(this);        }}\n获取数据并构造相应的url进行加载，进入buildQueryUrl函数查看细节：\nprivate String buildQueryUrl(Uri arg4) {        String v0_1;        if(arg4 == null || (TextUtils.isEmpty(arg4.getQueryParameter(\"url\")))) {            v0_1 = \"\";        }        else {            Uri$Builder v0 = Uri.parse(arg4.getQueryParameter(\"url\")).buildUpon();            if(!TextUtils.isEmpty(arg4.getQueryParameter(\"ieic\"))) {                v0.appendQueryParameter(\"ieic\", arg4.getQueryParameter(\"ieic\"));            }            if(!TextUtils.isEmpty(arg4.getQueryParameter(\"ct_poi\"))) {                v0.appendQueryParameter(\"ct_poi\", arg4.getQueryParameter(\"ct_poi\"));            }            if(!TextUtils.isEmpty(arg4.getQueryParameter(\"msid\"))) {                v0.appendQueryParameter(\"msid\", arg4.getQueryParameter(\"msid\"));            }            v0_1 = v0.toString();        }        return v0_1;}\n获取url参数，并再根据url中的参数构造url，因此我们构造下面的html即可进行远程代码执行漏洞攻击：\n\n由于CommonWebViewActivity在menifest定义了android.intent.category.BROWSABLE属性，因此可以通过浏览器唤起CommonWebViewActivity组件，达到远程命令执行漏洞攻击。浏览恶意网页即可受到远程命令执行漏洞攻击：\n\n   漏洞证明：  如上   修复方案：  1，\taddJavascriptInterface存在高危远程代码执行漏洞，应尽量避免使用，API 17中用@JavascriptInterface 代替addjavascriptInterface;移除系统webkit内置的危险接口searchBoxJavaBridge_,accessibility,accessibilityTraversal\"2，\t不要将com.meituan.android.base.ui.CommonWebViewActivity和com.meituan.android.base.hybrid.HybridWebViewActivity导出   版权声明：转载请注明来源 ali@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：中 漏洞Rank：5  确认时间：2015-06-10 17:41 厂商回复： 感谢白帽子的报告，我们会在最新的下个版本中修复该漏洞。稍后会和洞主联系，邮寄礼物。 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2015-06-10 18:28 |    \t\tali \t\t\t( 实习白帽子  |\t\t\t        Rank:65 漏洞数:9        | 移动安全)\t\t \n  远程命令执行才中，浏览网页就能中，不是很理解，厂商确定理解漏洞？    \n     2015-06-13 19:05 |    \t\tNicky \t\t\t( 普通白帽子  |\t\t\t        Rank:477 漏洞数:68        | http://www.droidsec.cn 安卓安全中文站)\t\t \n  webview系统自带接口问题么？    \n     2015-06-14 09:19 |    \t\tali \t\t\t( 实习白帽子  |\t\t\t        Rank:65 漏洞数:9        | 移动安全)\t\t \n  @Nicky 不是    \n     2015-09-09 17:25 |    \t\t小懒虫 \t\t\t( 普通白帽子  |\t\t\t        Rank:176 漏洞数:36        )\t\t \n  这不是漏洞。。。。这是安卓漏洞。。。。4.2以上不会出现    \n  \n\n\n", "wybug_level_fromcorp": "中", "wybug_rank_fromcorp": 5, "Ranks": null}