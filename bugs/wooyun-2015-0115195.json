{"id": 20911, "wybug_id": "wooyun-2015-0115195", "wybug_title": "网站安全狗SQL注入拦截bypass", "wybug_corp": "安全狗", "wybug_author": "RedFree", "wybug_date": "2015-05-20 17:52", "wybug_open_date": "2015-07-05 18:08", "wybug_type": "设计缺陷/逻辑错误", "wybug_level": "中", "wybug_rank_0": "5", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["设计不当", "设计缺陷"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-05-20：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-05-21：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2015-05-31：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-06-10：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-06-20：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-07-05：\t细节向公众公开  简要描述： 网站安全狗注入防护存在缺陷，可被绕过。 详细说明：  针对asp+access,首先来挖掘一下数据库的特性。1、可以代替空格的字符有：%09、%0A、%0C、%0D，如图：\n\n2、可以截断后面语句的注释符有：%00、%16、%22、%27\n\n%22(\")、%27（')为什么会截断后面的语句呢，后来详测了一下这两个字符是在特殊条件下才能起到注释的效果。\n\n\n\n但实测%00和%16不受条件限制。\n\n开启安全狗的防护功能再测试执行SQL语句：\n\n可以看到执行的语句被拦截。    实际测试得知安全狗拦截select + from，但不会拦截select + xfrom或select + fromx(当然x为一些特殊字符的时候依然会被拦截)。\n\n    安全狗匹配的是正常的sql语句，错误的语句并不会触发规则。但是语句是错误的，如何去得到理想的结果呢？    即然安全狗拦截的是select + from，那么正则匹配的长度是不是无限大呢？有没有可能构造出一段非常长的语句刚好达到匹配的极限，使from和后面的语句不能被匹配呢？带着这个疑问做如下测试：（已知道sql语句中一个分割符和多个分割符的执行效果是一样的）\nsql=select（一次次递增的%09、%0A、%0C或%0D）* from manager\n    果然，当%09、%0A、%0C或%0D超过一定长度后，安全狗的防御便失效了！\n\n实际测试，from前字符串长度为49151（3*2^14-1）。而当使用空格时，这个长度会更乱短！\n\nfrom前仅仅527个字符，便让防御失效了（171个空格）！看来安全狗对170和49152这两个数字特别敏感哦！   漏洞证明：  测试语句：\nsql=selecta%20from%20manager\n170个空格：\n\n171个空格：\n\n突破拦截后，后面再跟上一些带有关键字的语句：\n\n\n\n   修复方案：  不能指哪修哪哦，同一个问题在不同功能上的体现！   版权声明：转载请注明来源 RedFree@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：中 漏洞Rank：9  确认时间：2015-05-21 18:07 厂商回复： 感谢RedFree对安全狗的关注, 研发部门已经开始着手修复. 此漏洞目前通杀市面上大部分的WAF产品. 请将你的地址发送给我们. 我们将会给你发送礼品. 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2015-05-20 18:06 |    \t\tgreg.wu \t\t\t( 普通白帽子  |\t\t\t        Rank:815 漏洞数:99        | 打酱油的~)\t\t \n  让自己无路可走。。。    \n     2015-05-20 18:27 |    \t\tMayIKissYou \t\t\t( 普通白帽子  |\t\t\t        Rank:195 漏洞数:33        | 勿忘初心)\t\t \n  苦海无边 啊    \n     2015-05-20 19:24 |    \t\t90Snake \t\t\t( 普通白帽子  |\t\t\t        Rank:109 漏洞数:42        | 最大的漏洞就是人)\t\t \n  让自己无路可走。。。    \n     2015-05-20 19:43 |    \t\tdark5moon \t\t\t( 路人 |\t\t\t        Rank:4 漏洞数:1        | 123456)\t\t \n  让自己无路可走。。。     \n     2015-05-21 01:56 |    \t\taptvxo \t\t\t( 实习白帽子  |\t\t\t        Rank:35 漏洞数:3        | 请输入个人的简要介绍)\t\t \n  让自己无路可走。。    \n     2015-05-21 08:50 |    \t\tRicter \t\t\t( 实习白帽子  |\t\t\t        Rank:59 漏洞数:15        | 渣渣一个)\t\t \n  傻逼，真是无话可说    \n     2015-05-21 14:00 |    \t\t平底斜 \t\t\t( 路人 |\t\t\t        Rank:12 漏洞数:2        | 性骄奢，好声色，为文有汉魏风)\t\t \n  让自己无路可走。。。    \n     2015-05-21 18:58 |    \t\tjeary \t\t\t( 普通白帽子  |\t\t\t        Rank:296 漏洞数:106        | (:‮.kcaH eb nac gnihtynA))\t\t \n  让自己无路可走。。。     \n     2015-05-21 23:16 |    \t\t不知道2017 \t\t\t( 路人 |\t\t\t        Rank:26 漏洞数:6        | 专注信息安全领域)\t\t \n  让自己无路可走。。。    \n     2015-07-05 19:57 |    \t\tkav \t\t\t( 路人 |\t\t\t        Rank:0 漏洞数:3        )\t\t \n  让自己无路可走。。。    \n     2015-07-05 20:45 |    \t\t金馆长 \t\t\t( 路人 |\t\t\t        Rank:0 漏洞数:1        | Up)\t\t \n  让自己无路可走。。    \n     2015-07-05 22:33 |    \t\tKeen \t\t\t( 路人 |\t\t\t        Rank:2 漏洞数:1        | ...)\t\t \n  为了这么点rank,值得么？    \n     2015-07-06 08:55 |    \t\t陆由乙 \t\t\t( 普通白帽子  |\t\t\t        Rank:119 漏洞数:38        | 呵呵！)\t\t \n  此漏洞目前通杀市面上大部分的WAF产品........    \n     2015-07-15 14:29 |    \t\tAngelic47 \t\t\t( 路人 |\t\t\t        Rank:1 漏洞数:1        )\t\t \n  此漏洞目前通杀市面上大部分的WAF产品........    \n  \n\n\n", "wybug_level_fromcorp": "中", "wybug_rank_fromcorp": 9, "Ranks": null}