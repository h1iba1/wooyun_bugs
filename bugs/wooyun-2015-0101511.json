{"id": 44266, "wybug_id": "wooyun-2015-0101511", "wybug_title": "TerraMaster NAS网络存储服务器多处任意命命执行漏洞", "wybug_corp": "www.terra-master.com/", "wybug_author": "路人甲", "wybug_date": "2015-03-15 17:13", "wybug_open_date": "2015-04-29 17:14", "wybug_type": "设计缺陷/逻辑错误", "wybug_level": "高", "wybug_rank_0": "15", "wybug_status": "已交由第三方合作机构(cncert国家互联网应急中心)处理", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["设计错误"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-03-15：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-03-18：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2015-03-28：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-04-07：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-04-17：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-04-29：\t细节向公众公开  简要描述： TerraMaster NAS网络存储服务器存在多处任意命令执行漏洞。 详细说明：  受YY-2012 WooYun-2015-95059的启发，对TerraMaster的NAS进行了一番研究，发现存在不少问题，在此一并列出，纯属学习研究性质，不妥之处敬请指正。首先到TerraMaster的官方网站上下载一个大小为50M左右的固件升级文件update-2.374.bz2，对应型号是F4-NAS。\n\n解压后发现网页部分位于/usr/www目录，但是php源码被加密，文件头部显示一个特殊的字符串\\tspartacus\\t，后面为随机乱码。\n\n经查看发现该设备的php主程序位于/usr/sbin/php-cgi，对该程序进行反汇编后发现存在上述字符串，\n\n根据周边的字符串信息，我们基本可以确认该设备采用php-screw对源码进行加密，到SourceForge上下载php-screw源代码，然后手动修改一下源代码即可将加密部分变成解密程序，编译后可用于php加密代码的解密。有了明文源代码，就可以进行正常的代码审计工作了，在/usr/www/include/ajax/ajaxdata.php文件中，发现存在多处任意命令执行的隐患。程序先将$_POST全局变量赋给局部变量$data，再逐一判断执行各个功能分支，流程部分如下\n\n在scanwlan分支中else if(isset($data['scanwlan'])){\tif($data['scanwlan'] == 0){        ……\t}else if($data['scanwlan'] == 1){\t\tif($data['linkstat'] == 0){                ……\t\t}else if($data['linkstat'] == 1){\t\t\t$cmd = \"$_func_common && noontec_wirelssapdisconnect \".$data['wlanName'].\"\";\t\t\t$return = $root[wifi][linking].\" \".$data['ssid'].\" \".$root[wifi][wifiSign];\t\t\tshell_exec($cmd);\t\t}\t\t\t\techo $return;\t}}在scanwlan=1且linkstat=1时，$cmd变量在装配时带入了$data['wlanName']，此处变量由$_POST而来，用户可控且无过滤，可轻易引发下面shell_exec执行时的命令注入。再如在SNMP分支中else if(isset($data['SNMP']))//--------snmp stop---------{\tif($data['SNMP'] == 0){        ……\t}else if($data['SNMP'] == 1){\t\tshell_exec(\"$_A00snmpd stop\");\t\t$command = \"snmpdset 1 \\\"\".$data['SNMPdata'].\"\\\"\";\t\tshell_exec($command);和上面一样的原理，$data['SNMPdata']因用户可控且无过滤，轻易引发命令注入。如上情况在整个ajaxdata.php中多处存在，这里就不一一列举，道理都是一样。   漏洞证明：  POST时带入恶意数据即可。如scanwlan=1;linkstat=1;wlanNmae=xxx%3byyyyyy为要执行的具体命令。   修复方案：  不要直接将用户输入带入命令中执行。   版权声明：转载请注明来源 路人甲@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：10  确认时间：2015-03-18 13:36 厂商回复： CNVD确认并复现所述情况，已经由CNVD通过网站公开联系方式（或以往建立的处置渠道）向网站管理单位（软件生产厂商）通报。 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 10, "Ranks": null}