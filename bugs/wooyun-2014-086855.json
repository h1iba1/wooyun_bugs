{"id": 42068, "wybug_id": "wooyun-2014-086855", "wybug_title": "Iwebmall 最新版SQL注入第六枚（漏洞打包）", "wybug_corp": "Jooyea", "wybug_author": "路人甲", "wybug_date": "2014-12-12 16:38", "wybug_open_date": "2015-03-12 16:40", "wybug_type": "SQL注射漏洞", "wybug_level": "中", "wybug_rank_0": "10", "wybug_status": "未联系到厂商或者厂商积极忽略", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["数字类型注射", "源码审核", "源码分析"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-12-12：\t积极联系厂商并且等待厂商认领中，细节不对外公开\t\t\t\t\t\t\t\t\t2015-03-12：\t厂商已经主动忽略漏洞，细节向公众公开  简要描述： Iwebmall 最新版SQL注入第六枚 详细说明：  看到wooyun上有人提了几个iweb的漏洞（ WooYun: iwebmall商城程序sql注入 ， WooYun: Iwebsns sql 第五枚。 ），我来捡捡漏儿吧，希望不要重复。先把注入点拿出来：www.xxx.com/do.php?/do.php?act=add_transport_template ，POST的内容中有两个参数（transport_name和description）存在注入。action/goods/add_transport_template.php\n无关代码$shop_id = intval(get_args('shop_id'));\t$post = $_POST;\tif (!isset($post['transport_type'])) {\t\taction_return(0,$m_langpackage->m_search_type.\"!\",\"modules.php?app=goods_list\");\t\texit;\t}\t\t\t$arr = array();\t$info['transport_name']=$post['transport_name'];\t\t$info['description'] = $post['description'];\t\t\tforeach ($post['transport_type'] as $k=>$v){\t\t\t\t$arr[$v]=array();\t}\t//查询开启的配送方式\t$sql = \"select * from $t_transport where ifopen=1\";\t$tran_list=$dbo->getRs($sql);\t\t//循环获得前台传来的值，通过tranid字段作为数组下标\tforeach ($tran_list as $val){\t\t$arr[$val['tranid']]['frist']=$post['frist'.$val['tranid']];\t\t$arr[$val['tranid']]['second']=$post['second'.$val['tranid']];\t\tif(isset($post['ord_item_dest'.$val['tranid']])){\t\t\tforeach ($post['ord_item_dest'.$val['tranid']] as $k=>$v){\t\t\t\t$v = substr($v,0,-1);\t\t\t\t$areaarr = explode(\",\",$v);\t\t\t\tforeach ($areaarr as $key=>$value){\t\t\t\t\t$arr[$val['tranid']][$value]=array(\"frist\"=>$post['ord_area_frist'.$val['tranid']][$k],\"second\"=>$post['ord_area_second'.$val['tranid']][$k]);\t\t\t\t}\t\t\t}\t\t}\t}\t$info['shop_id']= get_sess_shop_id();\t$info['content'] = serialize($arr);\tif ($dbo->createbyarr($info,$t_transport_template)) {\t\taction_return(1,$m_langpackage->m_add_success.\"！\",\"modules.php?app=goods_list\");\t}else{\t\techo \"no\";\t}无关代码\n当通过POST方法提交transport_name和description时，由于没有对其进行过滤，因此这里可以注入。Iweb没有错误回显，这里用time-based blind进行注入测试。测试时：登陆后访问如上的请求，抓包，按上面的payload进行修改即可。因为是time-based blind 注入，猜测管理员用户名的第三个字母时，若错误，延迟2s左右，如下图\n\n若正确，延迟5s左右，如下图\n\n按上面的方法依次做下去（burp intruder或者自己写个脚本跑），可测试管理员用户名为：admin，密码为： 21232f297a57a5a743894a0e4a801fc3   漏洞证明：  见 详细说明   修复方案：  过滤   版权声明：转载请注明来源 路人甲@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 未能联系到厂商或者厂商积极拒绝  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}