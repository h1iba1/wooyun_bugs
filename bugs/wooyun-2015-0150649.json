{"id": 82578, "wybug_id": "wooyun-2015-0150649", "wybug_title": "ThinkPHP框架特性引发的SQL注入漏洞", "wybug_corp": "ThinkPHP", "wybug_author": "xiao.k", "wybug_date": "2015-11-04 11:14", "wybug_open_date": "2015-12-17 14:48", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["源码审核", "源码分析"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-11-04：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-11-04：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2015-11-07：\t细节向第三方安全合作伙伴开放（绿盟科技、唐朝安全巡航）\t\t\t\t\t\t\t\t\t2015-12-29：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2016-01-08：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2016-01-18：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-12-17：\t细节向公众公开  简要描述： ThinkPHP框架本身缺陷导致SQL注入漏洞，基本影响所有使用ThinkPHP开发的应用，包括thinksns、onethink等 详细说明：  关键代码在`\\ThinkPHP\\Library\\Think\\Db\\Driver.class.php`，683行。\n/**     * order分析     * @access protected     * @param mixed $order     * @return string     */    protected function parseOrder($order) {        if(is_array($order)) {            $array   =  array();            foreach ($order as $key=>$val){                if(is_numeric($key)) {                    $array[] =  $this->parseKey($val);                }else{                    $array[] =  $this->parseKey($key).' '.$val;                }            }            $order   =  implode(',',$array);        }        return !empty($order)?  ' ORDER BY '.$order:'';    }\n当我们提交的$order不为数组时，那么直接返回 `' ORDER BY '.$order:'`。当我们提交的$order为数组，程序也仅仅是对$key进行了处理。没有处理$val。此漏洞与phith0n提交的漏洞有相似性。http://**.**.**.**/bugs/wooyun-2010-086737在此附上一个常见的demo\n<?php\tnamespace Home\\Controller;\tuse Think\\Controller;\tclass IndexController extends Controller {\t    public function index(){\t        $data = array();\t\t\t$data['username'] = array('eq','admin');\t\t\t$order = I('get.order'); \t\t\t$m = M('user')->where($data)->order($order)->find();\t\t\techo M('user')->getLastSql();\t    }\t}\n通过I函数获取内容以后，直接进入SQL。\n**.**.**.**/official/thinkphp_3.2.3_full/?order=updatexml%281,concat%280x3a,%28select%20username%20from%20user%20limit%201%29%29,1%29\n\n\n之前看了一下ThinkPHP的审核情况，某些问题被官方认为是开发不规范导致的。我个人看法是在安全性的前提下，尽量提高程序的灵活性。毕竟大家使用ThinkPHP框架的目的是为了敏捷开发，同时还能减少安全性等问题带来的顾虑。之前听前辈们说过一句话，“一切输入都是有害的”。以此为标准，那么即使向框架内的基础函数输入恶意数据，程序也应该保证能进行识别和过滤。很多框架实际上也是这么做的。   漏洞证明：  \n\n   修复方案：  这里是CI的order_by函数，这里面做了比较强的限制。稍微牺牲了一些灵活性，但是极大的提高了安全性。可以作为一个参考。\n// --------------------------------------------------------------------\t/**\t * ORDER BY\t *\t * @param\tstring\t$orderby\t * @param\tstring\t$direction\tASC, DESC or RANDOM\t * @param\tbool\t$escape\t * @return\tCI_DB_query_builder\t */\tpublic function order_by($orderby, $direction = '', $escape = NULL)\t{\t\t$direction = strtoupper(trim($direction));\t\tif ($direction === 'RANDOM')\t\t{\t\t\t$direction = '';\t\t\t// Do we have a seed value?\t\t\t$orderby = ctype_digit((string) $orderby)\t\t\t\t? sprintf($this->_random_keyword[1], $orderby)\t\t\t\t: $this->_random_keyword[0];\t\t}\t\telseif (empty($orderby))\t\t{\t\t\treturn $this;\t\t}\t\telseif ($direction !== '')\t\t{\t\t\t$direction = in_array($direction, array('ASC', 'DESC'), TRUE) ? ' '.$direction : '';\t\t}\t\tis_bool($escape) OR $escape = $this->_protect_identifiers;\t\tif ($escape === FALSE)\t\t{\t\t\t$qb_orderby[] = array('field' => $orderby, 'direction' => $direction, 'escape' => FALSE);\t\t}\t\telse\t\t{\t\t\t$qb_orderby = array();\t\t\tforeach (explode(',', $orderby) as $field)\t\t\t{\t\t\t\t$qb_orderby[] = ($direction === '' && preg_match('/\\s+(ASC|DESC)$/i', rtrim($field), $match, PREG_OFFSET_CAPTURE))\t\t\t\t\t? array('field' => ltrim(substr($field, 0, $match[0][1])), 'direction' => ' '.$match[1][0], 'escape' => TRUE)\t\t\t\t\t: array('field' => trim($field), 'direction' => $direction, 'escape' => TRUE);\t\t\t}\t\t}\t\t$this->qb_orderby = array_merge($this->qb_orderby, $qb_orderby);\t\tif ($this->qb_caching === TRUE)\t\t{\t\t\t$this->qb_cache_orderby = array_merge($this->qb_cache_orderby, $qb_orderby);\t\t\t$this->qb_cache_exists[] = 'orderby';\t\t}\t\treturn $this;\t}\n   版权声明：转载请注明来源 xiao.k@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：中 漏洞Rank：10  确认时间：2015-11-04 18:26 厂商回复： 感谢反馈~该处确实存在隐患问题 最新状态： 暂无  ", "replys": "漏洞评价：\n评价\n     2015-11-04 11:20 |    \t\txiao.k \t\t\t( 普通白帽子  |\t\t\t        Rank:157 漏洞数:16        | 纳威网络安全导航 navisec.it)\t\t \n  前排找工作，求各路大牛收留 @蘑菇街    \n     2015-11-04 11:27 |    \t\txsser_w \t\t\t( 普通白帽子  |\t\t\t        Rank:116 漏洞数:34        | 哎)\t\t \n  @xiao.k wocao 你4天多时间放大招了阿。。 原来是为了入职蘑菇街。。我擦      \n     2015-11-04 11:29 |    \t\tXser \t\t\t( 普通白帽子  |\t\t\t        Rank:365 漏洞数:83        | JDSec)\t\t \n  @xiao.k wocao 你4天多时间放大招了阿。。 原来是为了入职蘑菇街。。我擦    \n     2015-11-04 11:36 |    \t\twhynot \t\t\t( 普通白帽子  |\t\t\t        Rank:573 漏洞数:100        | 为你解冻冰河 为你放弃世界有何不可)\t\t \n  这个可以有 嘿嘿    \n     2015-11-04 11:58 |    \t\t顺丰优选(乌云厂商)\t\t \n  @xiao.k 来我们公司吧！我们招人……    \n     2015-11-04 12:27 |    \t\talou \t\t\t( 路人 |\t\t\t        Rank:0 漏洞数:3        | PHP屌丝一枚)\t\t \n  前排围观    \n     2015-11-04 12:31 |    \t\th3hz \t\t\t( 实习白帽子  |\t\t\t        Rank:42 漏洞数:5        )\t\t \n  厉害的不行， 坐等公开    \n     2015-11-04 15:11 |    \t\t蘑菇街(乌云厂商)\t\t \n   @xiao.k 简历发来吧，anquan@mogujie.com，不过你这样艾特我看不到啊 - -!    \n     2015-11-04 15:12 |    \t\they_man \t\t\t( 路人 |\t\t\t        Rank:8 漏洞数:2        | A man)\t\t \n  @xiao.k 已帮洞主意思转达给 @蘑菇街    \n     2015-11-04 21:01 |    \t\t李旭敏 \t\t\t( 普通白帽子  |\t\t\t        Rank:672 漏洞数:77        | ฏ๎๎๎๎๎๎๎๎๎๎๎๎๎๎๎๎๎๎๎...)\t\t \n  @顺丰优选 @蘑菇街 买一送一，把我打包收走把    \n     2015-11-04 22:35 |    \t\tS4b0r \t\t\t( 路人 |\t\t\t        Rank:18 漏洞数:2        | 一句话介绍下我自己。)\t\t \n  mark    \n     2015-11-04 22:56 |    \t\t小川  \t\t\t( 核心白帽子 |\t\t\t        Rank:1561 漏洞数:222        | 一个致力要将乌云变成搞笑论坛的男人)\t\t \n  有要翻起腥风血雨了    \n     2015-11-05 09:56 |    \t\tThinkPHP(乌云厂商)\t\t \n  @小川 不要担心 这种漏洞的前提场景很少见~    \n  \n\n\n", "wybug_level_fromcorp": "中", "wybug_rank_fromcorp": 10, "Ranks": null}