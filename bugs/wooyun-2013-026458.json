{"id": 9575, "wybug_id": "wooyun-2013-026458", "wybug_title": "ecshop最新版本前台二次注入系列(2)", "wybug_corp": "ShopEx", "wybug_author": "blue", "wybug_date": "2013-06-21 07:55", "wybug_open_date": "2013-09-19 07:56", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["注射漏洞利用技巧", "二次注入"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2013-06-21：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2013-06-21：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2013-06-24：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2013-08-15：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2013-08-25：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2013-09-04：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2013-09-19：\t细节向公众公开  简要描述： 二次注入第二枚，这个点的注入内容至少进出数据库6次才最终到达了注入结果页面，当然全程可控。 详细说明：  先上注入结果图：\n\nSQL注入流程：1.插入注入代码(goods_attr)至订单商品(/wholesale.php可以插入,即商品批发页面，这里的goods_attr和 WooYun: ecshop最新版本前台二次注入系列(1) 里goods_attr_id是不同的，之前的漏洞即正常在商品页面加入购物车是不能控制goods_attr的，当时goods_attr从数据库商品属性表读取)。\n\n2.将1生成的订单在用户中心订单查看页执行“放回购物车”操作。\n\n3.查看购物车页面，注入代码执行\n\n代码分析：1./includes/lib_order.php get_cart_goods()方法(读取购物车的商品)，1626行起\n/* 查询规格 */        if (trim($row['goods_attr']) != '')        {            $sql = \"SELECT attr_value FROM \" . $GLOBALS['ecs']->table('goods_attr') . \" WHERE goods_attr_id \" .            db_create_in($row['goods_attr']); //goods_attr是购物车商品的属性，所以只要能控制注入代码进入购物车商品就ok了，这是二次注入的原因            $attr_list = $GLOBALS['db']->getCol($sql);            foreach ($attr_list AS $attr)            {                $row['goods_name'] .= ' [' . $attr . '] '; //union select方式可以将数据库内容查询出来显示到页面上            }        }\n2. /wholesale.php 160行起(将商品提交到购物车，实际上是提交到了$_SESSION)\n/*------------------------------------------------------ *///-- 加入购物车/*------------------------------------------------------ */elseif ($_REQUEST['act'] == 'add_to_cart'){    /* 取得参数 */    $act_id         = intval($_POST['act_id']);    $goods_number   = $_POST['goods_number'][$act_id];    $attr_id        = isset($_POST['attr_id']) ? $_POST['attr_id'] : array();    if(isset($attr_id[$act_id]))    {        $goods_attr     = $attr_id[$act_id];  //可控，可以参考我在截图里构造的提交数据    }…\n3./wholesale.php 380行起(act=='submit_order'), 将$_SESSION里的数据写入订单\n/* 插入订单商品 */    foreach ($_SESSION['wholesale_goods'] as $goods)    {        //如果存在货品        $product_id = 0;        if (!empty($goods['goods_attr_id']))        {            $goods_attr_id = array();            foreach ($goods['goods_attr_id'] as $value)            {                $goods_attr_id[$value['attr_id']] = $value['attr_val_id'];            }            ksort($goods_attr_id);            $goods_attr = implode('|', $goods_attr_id);            $sql = \"SELECT product_id FROM \" . $ecs->table('products') . \" WHERE goods_attr = '$goods_attr' AND goods_id = '\" . $goods['goods_id'] . \"'\";            $product_id = $db->getOne($sql);        }        $sql = \"INSERT INTO \" . $ecs->table('order_goods') . \"( \" .                    \"order_id, goods_id, goods_name, goods_sn, product_id, goods_number, market_price, \".                    \"goods_price, goods_attr, is_real, extension_code, parent_id, is_gift) \".                \" SELECT '$new_order_id', goods_id, goods_name, goods_sn, '$product_id','$goods[goods_number]', market_price, \".                    \"'$goods[goods_price]', '$goods[goods_attr]', is_real, extension_code, 0, 0 \".                \" FROM \" .$ecs->table('goods') .                \" WHERE goods_id = '$goods[goods_id]'\";        $db->query($sql);\n4.到3为止，已经可以将注入代码写到订单商品表(order_goods)里了，接下来就是进入购物车数据表，在用户中心查看订单时有个\"放回购物车\"操作，可以将订单商品放到购物车数据表(cart)里，然后在查看购物车页面/flow.php即能看到注入结果了(见1的代码分析)/includes/lib_transaction.php return_to_cart方法 854行起\n...        // 要返回购物车的商品  //约923行        $return_goods = array(            'goods_id'      => $row['goods_id'],            'goods_sn'      => addslashes($goods['goods_sn']),            'goods_name'    => addslashes($goods['goods_name']),            'market_price'  => $goods['market_price'],            'goods_price'   => $goods['goods_price'],            'goods_number'  => $row['goods_number'],            'goods_attr'    => empty($row['goods_attr']) ? '' : addslashes($row['goods_attr']),  //看过来，重点在这，$row是订单商品，虽然addslashes了，但这是二次注入，最终会从数据库里再出来进入查询（见1的代码分析）            'goods_attr_id'    => empty($row['goods_attr_id']) ? '' : $row['goods_attr_id'],            'is_real'       => $goods['is_real'],            'extension_code'=> addslashes($goods['extension_code']),            'parent_id'     => '0',            'is_gift'       => '0',            'rec_type'      => CART_GENERAL_GOODS        );...\n   漏洞证明：  \n\n\n\n   修复方案：  /includes/lib_order.php get_cart_goods()方法对goods_attr过滤   版权声明：转载请注明来源 blue@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：15  确认时间：2013-06-21 11:00 厂商回复： 非常感谢您为shopex信息安全做的贡献我们将尽快修复非常感谢 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2013-06-21 08:24 |    \t\t啦绯哥 \t\t\t( 普通白帽子  |\t\t\t        Rank:107 漏洞数:20        )\t\t \n  强势注入    \n     2013-06-21 08:43 |    \t\tKuuki \t\t\t( 普通白帽子  |\t\t\t        Rank:158 漏洞数:23        | :P)\t\t \n  犀利。。。    \n     2013-06-21 08:44 |    \t\t齐迹 \t\t\t( 核心白帽子 |\t\t\t        Rank:784 漏洞数:100        | 一名普通的phper开发者，关注web安全。)\t\t \n  每次不是半夜就是大清早    \n     2013-06-21 08:50 |    \t\tblue  \t\t\t( 普通白帽子  |\t\t\t        Rank:779 漏洞数:70        | 我心中有猛虎，细嗅蔷薇。)\t\t \n  @齐迹 早上感觉好～    \n     2013-06-21 09:05 |    \t\t1ee \t\t\t( 普通白帽子  |\t\t\t        Rank:105 漏洞数:14        | 看书中....)\t\t \n  mark 早知就搞其他的，不搞织梦和dz    \n     2013-06-21 09:51 |    \t\tYwiSax \t\t\t( 实习白帽子  |\t\t\t        Rank:62 漏洞数:4        | 淡定。)\t\t \n  这次还有1w拿吗？    \n     2013-06-21 09:55 |    \t\tppt \t\t\t( 路人 |\t\t\t        Rank:11 漏洞数:2        | ) | ( 我猜出了用户名，可我没猜出密码。)\t\t \n  6次，牛    \n     2013-06-21 10:31 |    \t\tMeek \t\t\t( 路人 |\t\t\t        Rank:12 漏洞数:3        | 关注寡妇动态20年 ~)\t\t \n    坑爹了。    \n     2013-06-21 12:34 |    \t\t小痞子 \t\t\t( 普通白帽子  |\t\t\t        Rank:106 漏洞数:21        | <xss>alert(\"a\")</xss>￥&@&……dssKhwjcw...)\t\t \n  去年买了个表  学习大大们    \n     2013-06-24 00:22 |    \t\tby:安全者 \t\t\t( 路人 |\t\t\t        Rank:0 漏洞数:1        | 只做安全者，不做入侵者！)\t\t \n  小痞子大牛最近在干嘛？好久不见　前台二次注入太牛了　    \n     2013-07-27 21:02 |    \t\tJ′aron \t\t\t( 路人 |\t\t\t        Rank:17 漏洞数:5        | 问题真实存在但是影响不大.)\t\t \n  6....次。。。    \n     2013-07-28 02:41 |    \t\t冰锋刺客 \t\t\t( 普通白帽子  |\t\t\t        Rank:113 漏洞数:14        | 请在监护人陪同下与本人交流)\t\t \n  哟西     \n     2013-07-31 14:36 |    \t\t小痞子 \t\t\t( 普通白帽子  |\t\t\t        Rank:106 漏洞数:21        | <xss>alert(\"a\")</xss>￥&@&……dssKhwjcw...)\t\t \n  没闹明白~~咋利用啊....？？    \n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 15, "Ranks": null}