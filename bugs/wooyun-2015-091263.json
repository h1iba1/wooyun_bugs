{"id": 40586, "wybug_id": "wooyun-2015-091263", "wybug_title": "万户ezOffice协同办公管理平台一处通用型SQL注入漏洞", "wybug_corp": "万户ezOffice", "wybug_author": "路人甲", "wybug_date": "2015-01-12 10:46", "wybug_open_date": "2015-04-13 16:58", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "已交由第三方合作机构(cncert国家互联网应急中心)处理", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["注射漏洞利用技巧", "白盒测试"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-01-12：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-01-16：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2015-01-19：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2015-03-12：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-03-22：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-04-01：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-04-13：\t细节向公众公开  简要描述： SQL注入漏洞 详细说明：  \\defaultroot\\voiture_manager\\Voituregetsource.jsp\n<%   response.setHeader(\"Cache-Control\",\"no-store\");   response.setHeader(\"Pragma\",\"no-cache\");   response.setDateHeader (\"Expires\", 0);String voitureid = request.getParameter(\"voitureid\");String startdate = request.getParameter(\"startdate\");String enddate = request.getParameter(\"enddate\");//System.out.println(\"startdate=\"+startdate);//System.out.println(\"enddate=\"+enddate);long startD = Long.parseLong(startdate);long endD = Long.parseLong(enddate);   String returnStr = \"1\";   String[][] res11 = null;   DbOpt dbopt = null;\t  try {\t\t\tdbopt = new DbOpt();\t    String  sql = \"select t.startdate,t.starttime,t.enddate,t.endtime from oa_voitureapply t where t.status=2 and voitureid=\"+voitureid;//voitureid未过滤导致注入\t                //System.out.println(\"sql=\"+sql);\t\t\tres11 = dbopt.executeQueryToStrArr2(sql,4);\t\t\tif(res11 != null){\t\t\t\tfor(int i=0;i<res11.length;i++){\t\t\t\t   String startdate0 = res11[i][0].substring(0,10).replaceAll(\"-\",\"\");\t\t\t\t   String starttime0 = res11[i][1].replaceAll(\":\",\"\");\t\t\t\t   String enddate0   = res11[i][2].substring(0,10).replaceAll(\"-\",\"\");\t\t\t\t   String endtime0   = res11[i][3].replaceAll(\":\",\"\");\t\t\t\t   long startD0    = Long.parseLong(startdate0+starttime0);\t\t\t\t   long endD0      = Long.parseLong(enddate0+endtime0);\t\t\t\t   //System.out.println(\"startD0=\"+startD0);//System.out.println(\"endD0=\"+endD0);          if( ((startD >= startD0) && (startD <= endD0)) ||\t\t\t\t      ((endD >= startD0) && (endD <= endD0)) ||\t\t\t\t      ((startD <= startD0) && (endD >= endD0)) ){\t\t\t\t       returnStr = \"0\";\t\t\t\t       break;\t\t\t\t    }\t\t\t\t}\t\t\t}\t\t\tdbopt.close();\t  } catch (Exception e) {\t\t    //System.out.println(\"error in Voituregetsource.jsp::::::\"+e);\t  } finally {\t\t    try {\t\t        dbopt.close();\t\t    } catch (SQLException ex) {\t\t    }\t  }   out.print(returnStr);%>\n   漏洞证明：  案例1.http://www.ahjinzhai.gov.cn:7001/defaultroot/voiture_manager/Voituregetsource.jsp?voitureid=696360&type=chgMotorMan直接看影响数据，有近100W的邮箱账户\n\n案例2.http://125.95.19.222:7001/defaultroot/voiture_manager/Voituregetsource.jsp?voitureid=696360&type=chgMotorMan\n\noa数据库中有920个表...\n\n案例3.http://61.136.203.132:7001/defaultroot/voiture_manager/Voituregetsource.jsp?voitureid=696360&type=chgMotorMan\n\n案例4.http://oa.orionww.com:7001/defaultroot/voiture_manager/Voituregetsource.jsp?voitureid=696360&type=chgMotorMan\n\n案例5.http://218.78.217.95:7001/defaultroot/voiture_manager/Voituregetsource.jsp?voitureid=696360&type=chgMotorMan\n\n案例6.http://58.221.210.116:7001/defaultroot/voiture_manager/Voituregetsource.jsp?voitureid=696360&type=chgMotorMan\n\n案例7.http://oa.yundagroup.com:7001/defaultroot/voiture_manager/Voituregetsource.jsp?voitureid=696360&type=chgMotorMan\n\n案例8.http://221.181.235.137:7001/defaultroot/voiture_manager/Voituregetsource.jsp?voitureid=696360&type=chgMotorMan\n\n   修复方案：  整型转换一下   版权声明：转载请注明来源 路人甲@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：16  确认时间：2015-01-16 11:37 厂商回复： CNVD确认所述情况，已经由CNVD通过以往建立的处置渠道软件生产厂商通报。 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 16, "Ranks": null}