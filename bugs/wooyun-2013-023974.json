{"id": 11729, "wybug_id": "wooyun-2013-023974", "wybug_title": "大街网存储型XSS（XSS黑盒分析技巧）", "wybug_corp": "大杰世纪科技发展（北京）有限公司", "wybug_author": "Demon", "wybug_date": "2013-05-20 12:21", "wybug_open_date": "2013-07-04 12:21", "wybug_type": "xss跨站脚本攻击", "wybug_level": "中", "wybug_rank_0": "10", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["持久型", "存储型", "利用技巧", "黑盒测试技巧"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2013-05-20：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2013-05-20：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2013-05-30：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2013-06-09：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2013-06-19：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2013-07-04：\t细节向公众公开  简要描述： 大街网存在一处持久型xss，可执行外部js 详细说明：  在分享状态处，过滤不严格，导致存储型xss的产生，我们先添加一张图片，然后点击发表新鲜事，抓包可以发现存在image参数，且参数可控。习惯性的在参数后加一句\"><img src=1> 提交服务器后，发现原来的src属性变空了，说明有经过过滤的，然后经过多次测试，发现&也被转义，经过猜想，我觉得有可能是服务器判断image参数结尾是否为jpg等图片格式后缀了，测试后发现的确是这样的，并不是双引号导致被过滤，那这样就好办了，参数改为如图：\n\n重新提交给服务器，结果弹窗成功。\n\n危害可执行任意外部js  导致广告蠕虫什么的。    漏洞证明：  \n\n   修复方案：  你们更专业   版权声明：转载请注明来源 Demon@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：中 漏洞Rank：10  确认时间：2013-05-20 15:02 厂商回复： 感谢您对大街网的支持，我们会尽快核实并修复漏洞。 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2013-06-09 18:09 |    \t\tpx1624 \t\t\t( 普通白帽子  |\t\t\t        Rank:1036 漏洞数:175        | px1624)\t\t \n  洞主用的是charles额。。    \n     2013-06-09 19:16 |    \t\tDemon \t\t\t( 普通白帽子  |\t\t\t        Rank:121 漏洞数:14        | You are my dream)\t\t \n  @px1624 是的XP哥^_^    \n  \n\n\n", "wybug_level_fromcorp": "中", "wybug_rank_fromcorp": 10, "Ranks": null}