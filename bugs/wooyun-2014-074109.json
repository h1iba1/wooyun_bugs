{"id": 51553, "wybug_id": "wooyun-2014-074109", "wybug_title": "bageCMS存储型XSS可打后台", "wybug_corp": "bagecms.com", "wybug_author": "疯狂的dabing", "wybug_date": "2014-08-28 10:39", "wybug_open_date": "2014-09-02 10:40", "wybug_type": "xss跨站脚本攻击", "wybug_level": "高", "wybug_rank_0": "10", "wybug_status": "漏洞已经通知厂商但是厂商忽略漏洞", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["存储型"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-08-28：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-09-02：\t厂商已经主动忽略漏洞，细节向公众公开  简要描述： 基于yii写的，数据库操作都使用了AR和参数绑定，所以安全性还不错。后台的存储型XSS，由于bagecms后台不设防，拿shell太容易了，所以危害还是很大的。 详细说明：  这是两个小问题组合产生的问题。1、前台图片文件上传。在bagecms中，所有的controller都继承自Controller，而这个Controller有一个actionUpload，负责文件上传，由于是所有controller的基类，所以在前台controller也可以直接上传文件。虽然上传限制了文件类型，但是，重点不在这。\n\n2、上传文件的原始名称未过滤入库。上传文件的原始文件名作为real_name存入数据库，并在后台附件管理部分显示出来。只要在修改原始文件名为payload就可以了。原来想的是改文件名，其实是看了 @Evi1m0 在kcon的PPT，这PPT给了我很大启发：https://github.com/knownsec/KCon/blob/master/KCon%20V3/%E5%8E%BB%E5%B9%B4%E8%B7%A8%E8%BF%87%E7%9A%84%E5%AE%A2%E6%88%B7%E7%AB%AF.pptx确实很猥琐，也很有效。但其实没有那么复杂，因为是http协议，与ppt中的场景不一样，这里很简单直接截包修改即可。\n\n表单的action是post/upload，其实任意前台controller/upload都可以上传成功。同时由于这个位置长度有255，可以随意发挥。后台浏览附件列表时候即触发XSS。\n\n附官网演示：\n\n   漏洞证明：  1、前台图片文件上传\n\n2、real_name未处理直接入库，后台查看附件直接输出，造成存储型XSS。\n\n   修复方案：  1、在基类中定义上传action不太科学。2、一切输入都是有害的。   版权声明：转载请注明来源 疯狂的dabing@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：无影响厂商忽略 忽略时间：2014-09-02 10:40 厂商回复：  最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2014-09-02 14:24 |    \t\t疯狂的dabing \t\t\t( 实习白帽子  |\t\t\t        Rank:33 漏洞数:9        | Hehe is golden.)\t\t \n  @bagecms.com  后来有个编辑版本，直接XSS getshell的，但是貌似乌云没审核通过我的修改。你可以认为是低威，但是直接忽略是几个意思？    \n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}