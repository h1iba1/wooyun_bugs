{"id": 2095, "wybug_id": "wooyun-2014-061080", "wybug_title": "用友协作办公平台再次通杀SQL注入", "wybug_corp": "用友软件", "wybug_author": "路人甲", "wybug_date": "2014-05-17 21:50", "wybug_open_date": "2014-08-15 21:52", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "15", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["注入"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-05-17：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-05-22：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-05-25：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2014-07-16：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-07-26：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-08-05：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-08-15：\t细节向公众公开  简要描述： 用友协作办公平台再次通杀SQL注入由于绝大部分系统采用的是MSSQL,权限非常大，返回的shell 不是system 就是administrator 详细说明：  #1 漏洞文件/witapprovemanage/appraupNew.jsp漏洞代码如下\n<%Dao dao = (Dao)ResourceManage.getContext(\"dao\");String master_key = \"\";FieldSet fswm = null;String tablenameStr = \"\";if(request.getParameter(\"flowid\")!=null){\tmaster_key = request.getParameter(\"flowid\");//接收flowid参数\tfswm= dao.getFieldSetByFilter(dao.getTableName(\"WF_MODEL\"),\" WM00= '\" + master_key + \"'\");\ttablenameStr = fswm.getString(\"WM04\");}String resid = \"\";if(request.getParameter(\"resid\")!=null){\tresid = request.getParameter(\"resid\");}//根据resid来查询出资源的信息.FieldSet resourceSet = null;String resType = \"\";resourceSet= dao.getFieldSetByFilter(dao.getTableName(\"APPRV_RESOURCE\"),\" ID= '\" + resid + \"'\");resType = resourceSet.getString(\"TYPE\");String restype = \"\";if(request.getParameter(\"restype\")!=null){\trestype = request.getParameter(\"restype\");}String nodeid = \"\";if(request.getParameter(\"nodeid\")!=null){\tnodeid = request.getParameter(\"nodeid\");}WitCollocate wit = (WitCollocate)ResourceManage.getContext(\"witCollocate\");//FieldSet fs = wit.getApprvFlowById(\"1\");FieldSet fs = null;String id = \"\";DataTable fstable = null;//当为节点配置if(restype.equals(\"2\")){fstable = dao.getDataTable(\"select * from \"+dao.getTableName(\"apprv_flow\") + \" where flowid=\" + master_key  + \" and resid=\" + resid,1,Integer.MAX_VALUE);//这里带入了SQL查询\n由此可见，flowid参数未经过任何过滤，进入SQL语句而导致SQL注入漏洞   漏洞证明：  #2 采用sqlmap进行测试由于网上有大量的实例，同样任意选取两个案例进行测试验证..案例一：\nhttp://oa.xhlbdc.com//witapprovemanage/appraupNew.jsp?flowid=1&resid=2&restype=3&nodeid=4\n\n\n效果如图所示\n\n案例二：\nhttp://218.205.208.22:9090//witapprovemanage/appraupNew.jsp?flowid=1&resid=2&restype=3&nodeid=4\n\n\n效果如下图所示\n\n#3 权限测试权限都很高，可以直接添加管理账号\nwin-fo48a1najvj\\administrator\n\n\n   修复方案：  赶紧修复吧   版权声明：转载请注明来源 路人甲@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：15  确认时间：2014-05-22 11:47 厂商回复： 该漏洞与之前的发现的SQL注入漏洞一致，目前已经统一修复。谢谢! 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 15, "Ranks": null}