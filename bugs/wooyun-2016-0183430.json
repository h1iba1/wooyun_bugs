{"id": 87677, "wybug_id": "wooyun-2016-0183430", "wybug_title": "PageAdmin CMS最新版二次注入                                      ", "wybug_corp": "pageadmin.net", "wybug_author": "JutaZ", "wybug_date": "2016-03-14 10:44", "wybug_open_date": "2016-06-12 14:30", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2016-03-14：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2016-03-14：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2016-03-17：\t细节向第三方安全合作伙伴开放（绿盟科技、唐朝安全巡航、无声信息）\t\t\t\t\t\t\t\t\t2016-05-08：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2016-05-18：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2016-05-28：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2016-06-12：\t细节向公众公开  简要描述： 发现PageAdmin官网更新了版本，就去复查了一下，然后发现厂商的修复手段等于没修复！http://www.pageadmin.net/soft/ 选择本地下载最新版，PageAdmin  V3.0.20151204(最后更新时间:2016-03-11)Demo站换了后台地址，这次仅在本地复现。 详细说明：  #0 之前的漏洞是这个 http://**.**.**.**/bugs/wooyun-2016-0177673#1 依旧是/e/master/build_static.aspx 这个页面原来的代码是这样的：\nif(IsNum(Ids)){ sql=\"select id,site_dir,static_dir,static_file,lanmu_id,sublanmu_id from \"+Table+\" where html=2 and id=\"+Ids;}else{sql=\"select id,site_dir,static_dir,static_file,lanmu_id,sublanmu_id from \"+Table+\" where html=2 and id in(\"+Ids+\")\";}\n而在最新的版本中被修复为了：\nif(IsNum(Ids))        {         sql=\"select id,site_dir,static_dir,static_file,lanmu_id,sublanmu_id from \"+Sql_Format(Table)+\" where html=2 and id=\"+Ids;        }       else        {         sql=\"select id,site_dir,static_dir,static_file,lanmu_id,sublanmu_id from \"+Sql_Format(Table)+\" where html=2 and id in(\"+Ids+\")\";        }\n#2 审计Sql_Format()函数\nprivate string Sql_Format(string str) {  if(str==\"\" || str==null)   {    return \"\";   }   str=str.Replace(\"'\",\"''\");   str=str.Replace(\"\\\"\",\"\\\"\");    return str; }\n发现仅仅将'替换为了'' 而\"还是替换成立\"然而我上个漏洞中的POC中的注入代码中一个单引号都没有，而且页面的越权也没有被修复。本地复现成功\n\n   漏洞证明：  #0 之前的漏洞是这个 http://**.**.**.**/bugs/wooyun-2016-0177673#1 依旧是/e/master/build_static.aspx 这个页面原来的代码是这样的：\nif(IsNum(Ids)){ sql=\"select id,site_dir,static_dir,static_file,lanmu_id,sublanmu_id from \"+Table+\" where html=2 and id=\"+Ids;}else{sql=\"select id,site_dir,static_dir,static_file,lanmu_id,sublanmu_id from \"+Table+\" where html=2 and id in(\"+Ids+\")\";}\n而在最新的版本中被修复为了：\nif(IsNum(Ids))        {         sql=\"select id,site_dir,static_dir,static_file,lanmu_id,sublanmu_id from \"+Sql_Format(Table)+\" where html=2 and id=\"+Ids;        }       else        {         sql=\"select id,site_dir,static_dir,static_file,lanmu_id,sublanmu_id from \"+Sql_Format(Table)+\" where html=2 and id in(\"+Ids+\")\";        }\n#2 审计Sql_Format()函数\nprivate string Sql_Format(string str) {  if(str==\"\" || str==null)   {    return \"\";   }   str=str.Replace(\"'\",\"''\");   str=str.Replace(\"\\\"\",\"\\\"\");    return str; }\n发现仅仅将'替换为了'' 而\"还是替换成立\"然而我上个漏洞中的POC中的注入代码中一个单引号都没有，而且页面的越权也没有被修复。本地复现成功\n\n   修复方案：  #1 重写Sql_Format()函数#2 加上权限控制，用ISSTR()判定Table参数是否合法   版权声明：转载请注明来源 JutaZ@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：15  确认时间：2016-03-14 14:23 厂商回复： 技术人员的失职，已经增加了权限验证，谢谢！ 最新状态： 暂无  ", "replys": "漏洞评价：\n评价\n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 15, "Ranks": null}