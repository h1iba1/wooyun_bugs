{"id": 1689, "wybug_id": "wooyun-2014-063219", "wybug_title": "74cms 最新版 注入4-7", "wybug_corp": "74c,s.com", "wybug_author": "′雨。", "wybug_date": "2014-06-02 16:46", "wybug_open_date": "2014-08-31 16:50", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-06-02：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-06-03：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-06-06：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2014-07-28：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-08-07：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-08-17：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-08-31：\t细节向公众公开  简要描述： Check it over. 详细说明：  74cms 为了防止宽字节注入 设置了二进制读取但是却没有在一些转换编码的地方做好安全 并且过滤也不完善。\nfunction remove_xss($string) {     $string = preg_replace('/[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F]+/S', '', $string);    $parm1 = Array('javascript', 'vbscript', 'expression', 'applet', 'union', 'xml', 'blink', 'link', 'script', 'embed', 'object', 'iframe', 'frame', 'frameset', 'ilayer', 'layer', 'bgsound', 'title', 'base');    $parm2 = Array('onabort', 'onactivate', 'onafterprint', 'onafterupdate', 'onbeforeactivate', 'onbeforecopy', 'onbeforecut', 'onbeforedeactivate', 'onbeforeeditfocus', 'onbeforepaste', 'onbeforeprint', 'onbeforeunload', 'onbeforeupdate', 'onblur', 'onbounce', 'oncellchange', 'onchange', 'onclick', 'oncontextmenu', 'oncontrolselect', 'oncopy', 'oncut', 'ondataavailable', 'ondatasetchanged', 'ondatasetcomplete', 'ondblclick', 'ondeactivate', 'ondrag', 'ondragend', 'ondragenter', 'ondragleave', 'ondragover', 'ondragstart', 'ondrop', 'onerror', 'onerrorupdate', 'onfilterchange', 'onfinish', 'onfocus', 'onfocusin', 'onfocusout', 'onhelp', 'onkeydown', 'onkeypress', 'onkeyup', 'onlayoutcomplete', 'onload', 'onlosecapture', 'onmousedown', 'onmouseenter', 'onmouseleave', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'onmousewheel', 'onmove', 'onmoveend', 'onmovestart', 'onpaste', 'onpropertychange', 'onreadystatechange', 'onreset', 'onresize', 'onresizeend', 'onresizestart', 'onrowenter', 'onrowexit', 'onrowsdelete', 'onrowsinserted', 'onscroll', 'onselect', 'onselectionchange', 'onselectstart', 'onstart', 'onstop', 'onsubmit', 'onunload');    $parm = array_merge($parm1, $parm2); \tfor ($i = 0; $i < sizeof($parm); $i++) { \t\t$pattern = '/'; \t\tfor ($j = 0; $j < strlen($parm[$i]); $j++) { \t\t\tif ($j > 0) { \t\t\t\t$pattern .= '('; \t\t\t\t$pattern .= '(&#[x|X]0([9][a][b]);?)?'; \t\t\t\t$pattern .= '|(&#0([9][10][13]);?)?'; \t\t\t\t$pattern .= ')?'; \t\t\t}\t\t\t$pattern .= $parm[$i][$j]; \t\t}\t\t$pattern .= '/i';\t\t$string = preg_replace($pattern, '', $string); \t}\treturn $string;}\n开启了/i修正符 不能大小写绕过 但是这里是清空  所以ununionion绕过。____________________________________________________________________________錦  从utf-8转换成gbk 为 %e5%5c 单引号被转义后\\'    \\->%5C%e5%5c%5c%27\\\\ 闭合第一处在plus/ajax_user.php中注册的时候\nelseif ($act=='do_reg'){\t$captcha=get_cache('captcha');\tif ($captcha['verify_userreg']==\"1\")\t{\t\t$postcaptcha=$_POST['postcaptcha'];\t\tif ($captcha['captcha_lang']==\"cn\" && strcasecmp(QISHI_DBCHARSET,\"utf8\")!=0)\t\t{\t\t$postcaptcha=iconv(\"utf-8\",QISHI_DBCHARSET,$postcaptcha);\t\t}\t\tif (empty($postcaptcha) || empty($_SESSION['imageCaptcha_content']) || strcasecmp($_SESSION['imageCaptcha_content'],$postcaptcha)!=0)\t\t{\t\texit(\"err\");\t\t}\t}\trequire_once(QISHI_ROOT_PATH.'include/fun_user.php');\t$username = isset($_POST['username'])?trim($_POST['username']):exit(\"err\");\t$password = isset($_POST['password'])?trim($_POST['password']):exit(\"err\");\t$member_type = isset($_POST['member_type'])?intval($_POST['member_type']):exit(\"err\");\t$email = isset($_POST['email'])?trim($_POST['email']):exit(\"err\");\tif (strcasecmp(QISHI_DBCHARSET,\"utf8\")!=0)\t{\t$username=iconv(\"utf-8\",QISHI_DBCHARSET,$username);//转编码\t$password=iconv(\"utf-8\",QISHI_DBCHARSET,$password);\t} \t$register=user_register($username,$password,$member_type,$email);\n\nfunction user_register($username,$password,$member_type=0,$email,$uc_reg=true){\tglobal $db,$timestamp,$_CFG,$online_ip,$QS_pwdhash;\t$member_type=intval($member_type);\t$ck_username=get_user_inusername($username);\t$ck_email=get_user_inemail($email);\n\nfunction get_user_inusername($username){\tglobal $db;\t$sql = \"select * from \".table('members').\" where username = '{$username}' LIMIT 1\";\treturn $db->getone($sql);}\n带入到了查询当中 造成了注入。\n\n第二处依旧这文件 plus/ajax_user.php\nelseif($act =='check_usname'){\trequire_once(QISHI_ROOT_PATH.'include/fun_user.php');\t$usname=trim($_POST['usname']);\tif (strcasecmp(QISHI_DBCHARSET,\"utf8\")!=0)\t{\t$usname=iconv(\"utf-8\",QISHI_DBCHARSET,$usname);\t}\t$user=get_user_inusername($usname); \tempty($user)?exit(\"true\"):exit(\"false\");}\n转换编码后带入到了 get_user_inusername \nfunction get_user_inusername($username){\tglobal $db;\t$sql = \"select * from \".table('members').\" where username = '{$username}' LIMIT 1\";\treturn $db->getone($sql);}\n这个不多说了。。第三处依旧这文件 plus/ajax_user.php\nelseif($act == 'check_email'){\trequire_once(QISHI_ROOT_PATH.'include/fun_user.php');\t$email=trim($_POST['email']);\tif (strcasecmp(QISHI_DBCHARSET,\"utf8\")!=0)\t{\t$email=iconv(\"utf-8\",QISHI_DBCHARSET,$email);\t}\t$user=get_user_inemail($email); \tempty($user)?exit(\"true\"):exit(\"false\");}\n\nfunction get_user_inemail($email){\tglobal $db;\treturn $db->getone(\"select * from \".table('members').\" where email = '{$email}' LIMIT 1\");}\n都没检测email是否合法就带入到了查询当中 造成了注入。____________________________________________________________________________第四处  在plus/ajax_street.php中\nelseif($act == 'key'){\t$key=trim($_GET['key']);\tif (!empty($key))\t{\tif (strcasecmp(QISHI_DBCHARSET,\"utf8\")!=0) $key=iconv(\"utf-8\",QISHI_DBCHARSET,$key);\t$result = $db->query(\"select * from \".table('category').\" where c_alias='QS_street' AND c_name LIKE '%{$key}%' \");\twhile($row = $db->fetch_array($result))\t{\t\tif ($listtype==\"li\")\t\t{\t\t$htm.=\"<li  title=\\\"{$row['c_name']}\\\" id=\\\"{$row['c_id']}\\\">{$row['c_name']}</li>\";\t\t}\n转换编码后 带入到了查询当中   漏洞证明：  \n\n测试一下demo demo上还有安全狗。。 不过轻松绕过。\n\n   修复方案：  转换编码的安全问题。   版权声明：转载请注明来源 ′雨。@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：15  确认时间：2014-06-03 11:00 厂商回复： 感谢反馈! 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2014-06-02 16:47 |    \t\t魇 \t\t\t( 普通白帽子  |\t\t\t        Rank:1207 漏洞数:104        | 传闻中魇是一个惊世奇男子，但是除了他华...)\t\t \n  合集纳..    \n     2014-06-02 16:50 |    \t\tphith0n  \t\t\t( 核心白帽子 |\t\t\t        Rank:656 漏洞数:107        | 一个想当文人的黑客~)\t\t \n  开始审了~顶一个~    \n     2014-06-02 16:51 |    \t\t′  雨。 \t\t\t( 普通白帽子  |\t\t\t        Rank:1231 漏洞数:190        | Only Code Never Lie To Me.)\t\t \n    坐等剩下的17个    \n     2014-06-02 18:03 |    \t\tnextdoor \t\t\t( 普通白帽子  |\t\t\t        Rank:325 漏洞数:74        )\t\t \n  我发掘的说不定就被你提交了    \n     2014-06-02 18:49 |    \t\tXser \t\t\t( 普通白帽子  |\t\t\t        Rank:194 漏洞数:61        | JDSec)\t\t \n  又首页了，顶！    \n     2014-06-02 19:27 |    \t\t浅兮 \t\t\t( 实习白帽子  |\t\t\t        Rank:70 漏洞数:30        )\t\t \n   ′ 雨。 大牛啊，膜拜，我要以你为榜样！(*^__^*) 嘻嘻……    \n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 15, "Ranks": null}