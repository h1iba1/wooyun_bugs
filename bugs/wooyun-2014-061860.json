{"id": 3106, "wybug_id": "wooyun-2014-061860", "wybug_title": "国航某站代码执行（防护绕过）", "wybug_corp": "中国国际航空股份有限公司", "wybug_author": "路人甲", "wybug_date": "2014-05-22 12:17", "wybug_open_date": "2014-07-06 12:19", "wybug_type": "设计缺陷/逻辑错误", "wybug_level": "高", "wybug_rank_0": "15", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["设计缺陷"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-05-22：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-05-22：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-06-01：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-06-11：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-06-21：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-07-06：\t细节向公众公开  简要描述： 估计是开发人员自己实现的对st2命令执行漏洞的防护，可以被绕过。 详细说明：  估计是开发人员自己实现的对st2命令执行漏洞的防护，可以被绕过。   漏洞证明：  国航订单查询系统使用了st2框架：\n\n使用s2-016进行测试，发现可以redirect：\n\n尝试执行ognl表达式，失败，可以确定是开发人员自己实现了过滤代码，过滤了redirect:${ 这样的字符串，或者是某些waf的防护：\n\n这样可以安全吗？来看看st2这里解析OGNL表达式的代码：\n\n可以看到这个地方程序回去循环查找字符串${ ，找到之后会将它后面的字符串作为OGNL表达式执行，也就是说这个地方并不要求字符串以$开头，只要字符串中含有${，程序就会寻找到它的位置,于是我们可以构造这样的代码redirect:bypass${new java.io.BufferedReader(new java.io.InputStreamReader(new java.lang.ProcessBuilder({'pwd'}).start().getInputStream())).readLine()}成功执行代码：\n\n   修复方案：  还是升级st2框架吧，自己过滤的话，考虑直接过滤redirect:这样的关键字。   版权声明：转载请注明来源 路人甲@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：20  确认时间：2014-05-22 16:42 厂商回复： 感谢对国航安全的帮助！ 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2014-05-22 12:21 |    \t\t木马人 \t\t\t( 普通白帽子  |\t\t\t        Rank:113 漏洞数:25        | 白，灰，黑)\t\t \n  牛逼啊    \n     2014-07-07 15:34 |    \t\t风之传说 \t\t\t( 普通白帽子  |\t\t\t        Rank:138 漏洞数:28        | 借用朋友的一句话，你的时间在哪里，你的成...)\t\t \n  good    \n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 20, "Ranks": null}