{"id": 53341, "wybug_id": "wooyun-2014-068004", "wybug_title": "TinyShop V1.0.2 电子商务系统 SQL注入（gpc开启）", "wybug_corp": "tinyrise.com", "wybug_author": "xiaoL", "wybug_date": "2014-10-08 09:32", "wybug_open_date": "2014-12-30 14:44", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "漏洞已经通知厂商但是厂商忽略漏洞", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["源码分析"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-10-08：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-10-10：\t厂商主动忽略漏洞，细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2014-12-04：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-12-14：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-12-24：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-12-30：\t细节向公众公开  简要描述： TinyShop最新版SQL注入一枚。简直被审核系统搞无语了，麻烦乌云加上时钟跟分钟好吗？不然早提交几小时几分钟的同学跟自动审核的人一起提交只有遭殃的份。重复重复，重复你妹啊！ps：亲 时间是通过审核的时间，请看漏洞ID区分先后顺序当前时间：2014.7.10 11.44 详细说明：  上个漏洞厂商说不要一起发SQL注入了，下个版本会一起处理。现在来看看怎么处理的。framework\\lib\\util\\filter_class.php：文件定义了过滤机制：\npublic static function sql($str)\t{\t\tif (get_magic_quotes_gpc()){\t\t\t$str = stripslashes($str);\t\t}else{\t\t\t//不使用主要是因为，先有mysql的连接\t\t\t//$str =  mysql_real_escape_string($str);\t\t\t$str = addslashes($str);\t\t}\t\treturn $str;\t}\n看着就不对劲，开启了gpc怎么还取消了转义，那开着不是更好。接下来找个通过这个函数的。找到一个简单登录功能的文件：protected\\controllers\\simple.php：\npublic function login_act(){        $redirectURL = Req::args(\"redirectURL\");        $this->assign(\"redirectURL\",$redirectURL);        $email = Filter::sql(Req::post('email'));    //这里        $passWord = Req::post('password');        $autologin = Req::args(\"autologin\");        if($autologin==null)$autologin = 0;        $model = $this->model->table(\"user as us\");        $obj = $model->join(\"left join customer as cu on us.id = cu.user_id\")->fields(\"us.*,cu.group_id,cu.login_time\")->where(\"us.email='$email'\")->find();        if($obj){            if($obj['password'] == CHash::md5($passWord,$obj['validcode'])){                if($autologin==1) $this->safebox->set('user',$obj,$this->cookie_time);                else $this->safebox->set('user',$obj, 1800);                $this->model->table(\"customer\")->data(array('login_time'=>date('Y-m-d H:i:s')))->where('user_id='.$obj['id'])->update();                $redirectURL = Req::args(\"redirectURL\");                if($redirectURL!='' && stripos($redirectURL, \"http://\")===false && stripos($redirectURL, \"reg\")===false && stripos($redirectURL, \"reset_password_act\")===false)header('Location: '.$redirectURL, true, 302);                else $this->redirect('/ucenter/index');                exit;            }else{                $info = array('field'=>'password','msg'=>'密码错误！');            }        }else{            $info = array('field'=>'email','msg'=>'账号不存在！');        }        $this->assign(\"invalid\",$info);        $this->redirect(\"login\",false,Req::args());    }\n其中email过了那个函数，直接就是一个盲注了。   漏洞证明：  \n\n\n\n都可以直接用sqlmap跑了\n\n   修复方案：  修复转义   版权声明：转载请注明来源 xiaoL@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：无影响厂商忽略 忽略时间：2014-12-30 14:44 厂商回复： 早已经发布了1.1版本。 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}