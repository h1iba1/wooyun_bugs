{"id": 58356, "wybug_id": "wooyun-2014-051476", "wybug_title": "ThinkSAAS 最新版SQL注入之二", "wybug_corp": "thinksaas.cn", "wybug_author": "xfkxfk", "wybug_date": "2014-02-20 10:04", "wybug_open_date": "2014-05-21 10:04", "wybug_type": "SQL注射漏洞", "wybug_level": "中", "wybug_rank_0": "20", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["第三方不可信程序", "逻辑错误", "安全意识不足", "源码审核", "注射漏洞利用技巧", "源码分析", "白盒测试"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-02-20：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-02-20：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-02-23：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2014-04-16：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-04-26：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-05-06：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-05-21：\t细节向公众公开  简要描述： ThinkSAAS 最新版2.1，官方2月15日更新，SQL注入第二弹 详细说明：  上传资料处/app/attach/action/upload.php：\ncase \"do\":\t\t$userid = intval($_GET['userid']);\t\t$albumid = intval($_GET['albumid']);\t\tif($userid=='0' || $albumid == 0){\t\t\techo '00000';\t\t\texit;\t\t}\t\t\t\t$attachid = $new['attach']->create('attach',array(\t\t\t'userid'\t=> $userid,\t\t\t'locationid'=>aac('user')->getLocationId($userid),\t\t\t'albumid'=>$albumid,\t\t\t'addtime'\t=> date('Y-m-d H:i:s'),\t\t));\t\t\t\t//上传\t\t$arrUpload = tsUpload($_FILES['Filedata'],$attachid,'attach',array('pptx','docx','pdf','jpg','gif','png','rar','zip','doc','ppt','txt'));\t\t\t\tif($arrUpload){\t\t\t$new['attach']->update('attach',array(\t\t\t\t'attachid'=>$attachid,\t\t\t),array(\t\t\t\t'attachname'=>$arrUpload['name'],\t\t\t\t'attachtype'=>$arrUpload['type'],\t\t\t\t'attachurl'=>$arrUpload['url'],\t\t\t\t'attachsize'=>$arrUpload['size'],\t\t\t));\t\t\t\t\t\t//对积分进行处理\t\t\taac('user')->doScore($app,$ac,$ts,$userid);\t\t\t\t\t\t\t\t}\t\techo $attachid;\t\tbreak;\n然后使用tsUpload函数对文件进行上传。$_FILES['Filedata']是上传表单的名字。\nfunction tsUpload($files, $projectid, $dir, $uptypes) {\tif ($files ['size'] > 0) {\t\t\t\t$menu2 = intval ( $projectid / 1000 );\t\t\t\t$menu1 = intval ( $menu2 / 1000 );\t\t\t\t$path = $menu1 . '/' . $menu2;\t\t\t\t$dest_dir = 'uploadfile/' . $dir . '/' . $path;\t\t\t\tcreateFolders ( $dest_dir );\t\t\t\t//$ext = pathinfo($files['name'],PATHINFO_EXTENSION);\t\t\t\t$arrType = explode ( '.', strtolower ( $files ['name'] ) ); // 转小写一下\t\t\t\t$type = array_pop ( $arrType );\t\t\t\tif (in_array ( $type, $uptypes )) {\t\t\t\t\t\t$name = $projectid . '.' . $type;\t\t\t\t\t\t$dest = $dest_dir . '/' . $name;\t\t\t\t\t\t// 先删除\t\t\tunlink ( $dest );\t\t\t// 后上传\t\t\tmove_uploaded_file ( $files ['tmp_name'], mb_convert_encoding ( $dest, \"gb2312\", \"UTF-8\" ) );\t\t\t\t\t\tchmod ( $dest, 0777 );\t\t\t\t\t\t$filesize = filesize ( $dest );\t\t\tif (intval ( $filesize ) > 0) {\t\t\t\treturn array (\t\t\t\t\t\t'name' => tsFilter($files ['name']),\t\t\t\t\t\t'path' => $path,\t\t\t\t\t\t'url' => $path . '/' . $name,\t\t\t\t\t\t'type' => $type,\t\t\t\t\t\t'size' => $files ['size'] \t\t\t\t);\t\t\t} else {\t\t\t\treturn false;\t\t\t}\t\t} else {\t\t\treturn false;\t\t}\t}}\n有一个过滤的函数tsFilter：\nfunction tsFilter($value){\t$value = trim($value);\t//定义不允许提交的SQl命令和关键字\t$words = array();\t$words[] = \"add \";\t$words[] = \"and \";\t$words[] = \"count \";\t$words[] = \"order \";\t$words[] = \"table \";\t$words[] = \"by \";\t$words[] = \"create \";\t$words[] = \"delete \";\t$words[] = \"drop \";\t$words[] = \"from \";\t$words[] = \"grant \";\t$words[] = \"insert \";\t$words[] = \"select \";\t$words[] = \"truncate \";\t$words[] = \"update \";\t$words[] = \"use \";\t$words[] = \"--\";\t$words[] = \"#\";\t$words[] = \"group_concat\";\t$words[] = \"column_name\";\t$words[] = \"information_schema.columns\";\t$words[] = \"table_schema\";\t$words[] = \"union \";\t$words[] = \"where \";\t$words[] = \"alert\";\t$value = strtolower($value);//转换为小写\tforeach($words as $word){\t\tif(strstr($value,$word)){\t\t\t$value = str_replace($word,'',$value);\t\t}\t}\t\treturn $value;}\n过滤了关键字及注释符号。可是仔细一看，过滤的是类似“select ”这种，关键字后面加了个空格。但是我们可以用制表符，它能完美代替空格。我们来看看update函数：\npublic function update($table, $conditions, $row) {\t\t$where = \"\";\t\tif (empty ( $row ))\t\t\treturn FALSE;\t\tif (is_array ( $conditions )) {\t\t\t$join = array ();\t\t\tforeach ( $conditions as $key => $condition ) {\t\t\t\t$condition = $this->escape ( $condition );\t\t\t\t$join [] = \"{$key} = {$condition}\";\t\t\t}\t\t\t$where = \"WHERE \" . join ( \" AND \", $join );\t\t} else {\t\t\tif (null != $conditions)\t\t\t\t$where = \"WHERE \" . $conditions;\t\t}\t\tforeach ( $row as $key => $value ) {\t\t\t$vals [] = \"`$key` = '$value'\";\t\t}\t\t$values = join ( \", \", $vals );\t\t$sql = \"UPDATE \" . dbprefix . \"{$table} SET {$values} {$where}\";\t\treturn $this->db->query ( $sql );\t}\n在conditions处做了处理，但是我们这是在row中，没有处理，导致SQL注入。   漏洞证明：  保证最新版：\n\n发送下面的请求：\n\n这个cms还有一个特点，它不会显示mysql错误，但会把错误保存在/logs/文件夹里，名字就是日期+-mysql-error.txt。这样，我们就可以看到mysql的报错信息，从而爆出得到管理员账号密码。\n\n   修复方案：  对参数进行严格处理，过滤。   版权声明：转载请注明来源 xfkxfk@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：20  确认时间：2014-02-20 10:28 厂商回复： 谢谢反馈，已经修复。 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2014-02-20 10:34 |    \t\tPgHook \t\t\t( 普通白帽子  |\t\t\t        Rank:964 漏洞数:115        | ...........................................)\t\t \n  这个必须膜拜下。    \n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 20, "Ranks": null}