{"id": 50837, "wybug_id": "wooyun-2014-076632", "wybug_title": "yxcms二次注入漏洞", "wybug_corp": "yxcms.net", "wybug_author": "花开若相惜", "wybug_date": "2014-09-23 17:32", "wybug_open_date": "2014-12-19 17:34", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "漏洞已经通知厂商但是厂商忽略漏洞", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["二次注入"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-09-23：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-09-29：\t厂商主动忽略漏洞，细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2014-11-23：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-12-03：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-12-13：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-12-19：\t细节向公众公开  简要描述： yxcms二次注入漏洞 详细说明：  \n/protected/apps/member/controller/photoController.php $data['account']=$this->mesprefix.$this->auth['account'];\t\t\t$data['sort']=$_POST['sort'];//从这里入口\t\t\t$data['exsort']=empty($_POST['exsort'])?'':implode(',',$_POST['exsort']);\t\t\t$data['title']=in($_POST['title']);\t\t\t$data['keywords']=in($_POST['keywords']);\t\t\t$data['picture']=$_POST['picture'];\t\t\t$data['description']=in($_POST['description']);\t\t\t$data['content']=in($_POST['content']);\t\t\t$data['method']='photo/content';\t\t\t$data['tpcontent']=in($_POST['tpcontent']);\t\t\t$data['ispass']=0;\t\t\t$data['recmd']=0;\t\t\t$data['hits']=0;\t\t\t$data['norder']=0;\t\t\t$data['addtime']=time();            // if (empty($data['description'])) {            //      $data['description']=in(substr(deletehtml($_POST['content']), 0, 250)); //自动提取描述               // }            // if(empty($data['keywords'])){                //     $data['keywords']= $this->getkeyword($data['title'].$data['description']); //自动获取中文关键词             //     if(empty($data['keywords'])) $data['keywords']=str_replace(' ',',',$data['description']);//非中文            // }            // if($_POST['iftag']) {            //  \t$iftag = $this->crtags($data['keywords']);            //  \tif(!$iftag) $this->alert('标签生成失败~');            //  }\t\t\tif(!empty($_POST['photolist']))\t\t\t$data['photolist']=implode(',',$_POST['photolist']);\t\t\tif(!empty($_POST['conlist']))\t\t\t$data['conlist']=implode(',',in($_POST['conlist']));\t\t\tif(model('photo')->insert($data))\t\t\t$this->success('图集添加成功~',url('photo/index'));\t\t\telse $this->error('图集添加失败');\nps:发布news的文件同样也存在这类问题。需求等待管理通过发布的商品，但是是看不到有什么异常的。恶意代码插入数据库后,看看那里会调用sort的数据\n/protected/apps/default/controller/columnController.phppublic function content()\t{\t\t\t\t$ename=in($_GET['col']);\t\t$id=intval($_GET['id']);\t\tif(empty($ename) || empty($id)) throw new Exception('参数错误~', 404);\t\t$this->col=$ename;\t\t$sortinfo=model('sort')->find(\"ename='{$ename}'\",'type');\t\tswitch ($sortinfo['type']) {\t\t\tcase 1://文章\t\t\t\t$this->newscon($ename,$id);\t\t\t\tbreak;\t\t\tcase 2://图集\t\t\t\t$this->photocon($id);\t\t\t\tbreak;\t\t\tdefault:\t\t\t\tthrow new Exception('此类型下没有内容~', 404);\t\t\t\tbreak;\t\t}\t}从content函数进来,因为发的是图集,所以跟进photocon函数\tprotected function photocon($id)\t{\t   $info=model('photo')->find(\"id='{$id}' and ispass='1'\");\t   if(empty($info)) throw new Exception('内容不存在~', 404);\t   $info['exsort']=explode(',', $info['exsort']);\t   $page = new Page();\t   $info['content']=$info['content'] = $page->contentPage(html_out($info['content']), '<hr style=\"page-break-after:always;\" class=\"ke-pagebreak\" />',$url,10,4); //文章分页\t   model('photo')->update(\"id='$id'\",\"hits=hits+1\");//点击\t   if(!empty($info['conlist'])) $titar=explode(',',$info['conlist']);\t   if(!empty($info['photolist'])){               $phoar=explode(',',$info['photolist']);               $cont=sizeof($phoar);               for($i=0;$i<$cont;$i++){           \t       $photolist[$i]['picture']=$phoar[$i];           \t       $photolist[$i]['tit']=$titar[$i];                   //$tit.=\"'<p>$titar[$i]</p>',\";                   //$sphoto.=\"'\".__ROOT__.\"/upload/photos/thumb_$phoar[$i]',\";                   //$bphoto.=\"'\".__ROOT__.\"/upload/photos/$phoar[$i]',\";                }                $this->photolist=$photolist;                $this->num=$cont;                //$this->assign(tit,substr($tit,0,-1));                //$this->assign(sphoto,substr($sphoto,0,-1));                //$this->assign(bphoto,substr($bphoto,0,-1));\t    }\t\t//获取拓展数据\t\t$sortid=substr($info['sort'],-6,6);//这里被限制了长度 不能注入\t\t$tabid=model('sort')->find(\"id='{$sortid}'\",'extendid');//获取拓展表\t\t....省略\t\t$crumbs=$this->crumbs($info['sort']);//这里导致了注入.....跟进crumbs函数看一下\tprotected  function  crumbs($path=',000000')\t{\t\t$crumb=array();\t\tif(strlen($path)>7){\t\t\t$ids=substr($path,8);//这里可以完整带入注入语句\t\t\t$crumb=model('sort')->select(\"id IN($ids)\",'id,type,name,ename,method,url,extendid','deep');\t\t\tforeach ($crumb as $key=>$vo){\t\t\t\t$crumb[$key]['url']=getURl($vo['type'],$vo['method'],$vo['url'],$vo['id'],$vo['extendid'],$vo['ename']);\t\t\t}\t\t}\t\treturn $crumb;\t}\n   漏洞证明：  \n\n   修复方案：  既然都是数字,正则过滤一下咯   版权声明：转载请注明来源 花开若相惜@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：无影响厂商忽略 忽略时间：2014-12-19 17:34 厂商回复：  最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}