{"id": 1531, "wybug_id": "wooyun-2014-064246", "wybug_title": "PHPYUN最新版SQL注入（绕过防御）", "wybug_corp": "php云人才系统", "wybug_author": "xfkxfk", "wybug_date": "2014-06-10 09:17", "wybug_open_date": "2014-09-08 09:18", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["第三方不可信程序", "源码审核", "注射漏洞利用技巧", "源码分析", "白盒测试"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-06-10：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-06-10：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-06-13：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2014-08-04：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-08-14：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-08-24：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-09-08：\t细节向公众公开  简要描述： PHPYUN最新版（phpyun_v3.1.0604_gbk）SQL注入（绕过防御） 详细说明：  PHPYUN最新版：phpyun_v3.1.0604_gbk文件/member/model/index.class.php\nfunction resume_ajax_action()\t{\t\tinclude(PLUS_PATH.\"user.cache.php\");\t\t$table=\"resume_\".$_POST['type'];\t\t$id=(int)$_POST['id'];\t\t$info=$this->obj->DB_select_once($table,\"`id`='\".$id.\"'\");\t\t$info['skillval']=$userclass_name[$info['skill']];\t\t$info['ingval']=$userclass_name[$info['ing']];\t\t$info['sdate']=date(\"Y-m-d\",$info['sdate']);\t\t$info['edate']=date(\"Y-m-d\",$info['edate']);\t\tif(is_array($info))\t\t{\t\t\tforeach($info as $k=>$v)\t\t\t{\t\t\t\t$arr[$k]=iconv(\"gbk\",\"utf-8\",$v);\t\t\t}\t\t}\t\techo json_encode($arr);die;\t}\n这里的$table=\"resume_\".$_POST['type'];没有过滤，直接进入数据库：$info=$this->obj->DB_select_once($table,\"`id`='\".$id.\"'\");跟进DB_select_once函数：\nfunction DB_select_once($tablename, $where = 1, $select = \"*\") {\t\t$cachename=$tablename.$where;\t\tif(!$return=$this->Memcache_set($cachename)){\t\t\t$SQL = \"SELECT $select FROM \" . $this->def . $tablename . \" WHERE $where limit 1\";\t\t\t$query = $this->db->query($SQL);\t\t\t$return=$this->db->fetch_array($query);\t\t\t$this->Memcache_set($cachename,$return);\t\t}\t\treturn $return;\t}\n依然没有处理，所以，这里导致注入。因为PHPYUN使用了360webscan的规则等一些防御措施文件/data/db.safety.php：\nfunction gpc2sql($str) {\tif(preg_match(\"/select|insert|update|delete|union|into|load_file|outfile/is\", $str))\t{\t\texit(safe_pape());\t}\t$arr=array(\" and \"=>\" an d \",\" or \"=>\" ��r \",\"%20\"=>\"\",\"select\"=>\"��elect\",\"update\"=>\"��pdate\",\"count\"=>\"��ount\",\"chr\"=>\"��hr\",\"truncate\"=>\"��runcate\",\"union\"=>\"��nion\",\"delete\"=>\"��elete\",\"insert\"=>\"��nsert\");\tforeach($arr as $key=>$v){    \t$str = preg_replace('/'.$key.'/isU',$v,$str);\t}\treturn $str;}\n像 and 1=1等这些会被过滤那么使用/**/and 1+1=1和/**/and 1+1=2就能搞定了而且这里还因为平衡权限造成了信息泄露，我们通过查询不同的表，遍历id得到所有用户的简历信息包括电话，email等信息。   漏洞证明：  \n\n没有信息返回\n\n返回id=1的信息通过遍历得到user（）=root   修复方案：  过滤，加引号保护。   版权声明：转载请注明来源 xfkxfk@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：15  确认时间：2014-06-10 10:12 厂商回复： 感谢您的提供，我们会尽快修复！ 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2014-06-10 09:22 |    \t\tneal \t\t\t( 普通白帽子  |\t\t\t        Rank:219 漏洞数:23        )\t\t \n  ....大牛就是大牛 我研究了一天也没绕过   直接过滤了 select 字符串 我很想知道是怎么绕过的  难道能不经过过滤？     \n     2014-06-10 09:25 |    \t\t梧桐雨  \t\t\t( 核心白帽子 |\t\t\t        Rank:1576 漏洞数:184        | 关注技术与网络安全)\t\t \n  @neal 我猜应该是宽字节    \n     2014-06-10 09:37 |    \t\tneal \t\t\t( 普通白帽子  |\t\t\t        Rank:219 漏洞数:23        )\t\t \n  @梧桐雨  我肯定考虑过啊  但直接过滤 SELECT字符串  宽字节也有办法? 宽字节只是吃单引号嘛 （本人小菜 只知道吃单引号）自带过滤 G P C 都要过滤的  只要遇到SELECT 不区分大小写 同意替换成 　ｓelect    \n     2014-06-10 11:10 |    \t\txsser  \t\t\t( 普通白帽子  |\t\t\t        Rank:254 漏洞数:18        | 当我又回首一切,这个世界会好吗?)\t\t \n  结果不是 等公开讨论吧    \n     2014-06-10 11:15 |    \t\tneal \t\t\t( 普通白帽子  |\t\t\t        Rank:219 漏洞数:23        )\t\t \n  难道又是FUZZ？     \n     2014-06-10 14:14 |    \t\tphith0n  \t\t\t( 核心白帽子 |\t\t\t        Rank:656 漏洞数:107        | 一个想当文人的黑客~)\t\t \n  哭瞎了，大哥就是大哥    \n     2014-06-14 22:40 |    \t\tXser \t\t\t( 普通白帽子  |\t\t\t        Rank:194 漏洞数:61        | JDSec)\t\t \n  phpyun快被玩烂了    \n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 15, "Ranks": null}