{"id": 39942, "wybug_id": "wooyun-2015-092849", "wybug_title": "LebiShop商城系统最新版六处SQL注入三", "wybug_corp": "www.lebi.cn", "wybug_author": "xfkxfk", "wybug_date": "2015-01-23 11:38", "wybug_open_date": "2015-04-23 11:40", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["第三方不可信程序", "安全意识不足", "源码审核"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-01-23：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-01-26：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2015-01-29：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2015-03-22：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-04-01：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-04-11：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-04-23：\t细节向公众公开  简要描述： LebiShop商城系统官方下载最新版六处SQL注入，demo演示 详细说明：  LebiShop商城系统官方下载最新版六处SQL注入，demo演示第一处SQL注入\n// Shop.Ajax.Ajax_userinpublic void Comment_Del(){\tif (this.CurrentUser.id > 0)\t{\t\tstring id = RequestTool.RequestString(\"ids\");\t\tif (id == \"\")\t\t{\t\t\tbase.Response.Write(\"{\\\"msg\\\":\\\"\" + base.Tag(\"请选择要删除的信息\") + \"\\\"}\");\t\t\treturn;\t\t}\t\tB_Lebi_Comment.Delete(string.Concat(new object[]\t\t{\t\t\t\"TableName = 'Product' and User_id=\",\t\t\tthis.CurrentUser.id,\t\t\t\" and Parentid in (\",\t\t\tid,\t\t\t\")\"\t\t}));\t\tB_Lebi_Comment.Delete(string.Concat(new object[]\t\t{\t\t\t\"Parentid = 0 and TableName = 'Product' and User_id=\",\t\t\tthis.CurrentUser.id,\t\t\t\" and id in (\",\t\t\tid,\t\t\t\")\"\t\t}));\t\tbase.Response.Write(\"{\\\"msg\\\":\\\"OK\\\"}\");\t}}\n参数id通过RequestTool.RequestString(\"ids\")获取，这里的RequestString只是过滤了单引号但是在进入in条件后，并没有单引号保护，导致sql注入下面的sql注入原理同理，都是通过RequestString获取参数，但是在进入sql语句时并没有单引号保护，所以无需截断单引号，导致注入漏洞第二处SQL注入\n// Shop.Ajax.Ajax_userinpublic void LikeToBasket(){\tstring ids = RequestTool.RequestString(\"id\");\tstring mes = \"\";\tif (ids != \"\")\t{\t\tList<Lebi_User_Product> models = B_Lebi_User_Product.GetList(string.Concat(new object[]\t\t{\t\t\t\"(Type_id_UserProductType=141 or Type_id_UserProductType=144) and User_id=\",\t\t\tthis.CurrentUser.id,\t\t\t\" and id in (\",\t\t\tids,\t\t\t\")\"\t\t}), \"\");\n第三处SQL注入\n// Shop.Ajax.Ajax_userinpublic void Message_Delete(){\tif (this.CurrentUser.id > 0)\t{\t\tstring id = RequestTool.RequestString(\"ids\");\t\tif (id == \"\")\t\t{\t\t\tbase.Response.Write(\"{\\\"msg\\\":\\\"\" + base.Tag(\"请选择要删除的信息\") + \"\\\"}\");\t\t\treturn;\t\t}\t\tB_Lebi_Message.Delete(string.Concat(new object[]\t\t{\t\t\t\"(User_id_To=\",\t\t\tthis.CurrentUser.id,\t\t\t\" or User_id_From=\",\t\t\tthis.CurrentUser.id,\t\t\t\") and id in (\",\t\t\tid,\t\t\t\")\"\t\t}));\t\tbase.Response.Write(\"{\\\"msg\\\":\\\"OK\\\"}\");\t}}\n第四处SQL注入\n// Shop.Ajax.Ajax_userinpublic void UserLike_Del(){\tstring ids = RequestTool.RequestString(\"id\");\tif (ids == \"\")\t{\t\tbase.Response.Write(\"{\\\"msg\\\":\\\"OK\\\"}\");\t\treturn;\t}\tList<Lebi_User_Product> models = B_Lebi_User_Product.GetList(string.Concat(new object[]\t{\t\t\"User_id=\",\t\tthis.CurrentUser.id,\t\t\" and id in (\",\t\tids,\t\t\")\"\t}), \"\");\tforeach (Lebi_User_Product model in models)\t{\t\tB_Lebi_User_Product.Delete(model.id);\t}\tbase.Response.Write(\"{\\\"msg\\\":\\\"OK\\\"}\");}\n第五处SQL注入\n// Shop.Ajax.Ajax_userinpublic void UserOftenBuy_Del(){\tstring ids = RequestTool.RequestString(\"id\");\tif (ids == \"\")\t{\t\tbase.Response.Write(\"{\\\"msg\\\":\\\"OK\\\"}\");\t\treturn;\t}\tList<Lebi_User_Product> models = B_Lebi_User_Product.GetList(string.Concat(new object[]\t{\t\t\"User_id=\",\t\tthis.CurrentUser.id,\t\t\" and id in (\",\t\tids,\t\t\")\"\t}), \"\");\tforeach (Lebi_User_Product model in models)\t{\t\tB_Lebi_User_Product.Delete(model.id);\t}\tbase.Response.Write(\"{\\\"msg\\\":\\\"OK\\\"}\");}\n第六处SQL注入\n// Shop.Ajax.Ajax_userinpublic void UserOftenBuy_Update(){\tstring id = RequestTool.RequestString(\"Uid\");\tList<Lebi_User_Product> models = B_Lebi_User_Product.GetList(string.Concat(new object[]\t{\t\t\"User_id=\",\t\tthis.CurrentUser.id,\t\t\" and id in (\",\t\tid,\t\t\")\"\t}), \"\");\tforeach (Lebi_User_Product model in models)\t{\t\tmodel.count = RequestTool.RequestInt(\"Count\" + model.id, 0);\t\tmodel.WarnDays = RequestTool.RequestInt(\"WarnDays\" + model.id, 0);\t\tmodel.Time_addemail = DateTime.Now.Date.AddDays((double)model.WarnDays);\t\tB_Lebi_User_Product.Update(model);\t}\tbase.Response.Write(\"{\\\"msg\\\":\\\"OK\\\"}\");}\n   漏洞证明：  以第六处SQL注入为例官方demo演示：\n\n在线案例演示：\n\n使用SQLmap可直接跑出全部数据   修复方案：  使用int xxx = RequestTool.RequestInt(\"yyy\");   版权声明：转载请注明来源 xfkxfk@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：20  确认时间：2015-01-26 11:37 厂商回复： 官方已作出修复，感谢 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 20, "Ranks": null}