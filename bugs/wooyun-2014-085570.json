{"id": 46187, "wybug_id": "wooyun-2014-085570", "wybug_title": "百度COM控件BaiduSetupAx存在远程栈溢出漏洞", "wybug_corp": "百度", "wybug_author": "路人甲", "wybug_date": "2014-12-02 18:01", "wybug_open_date": "2015-03-02 18:02", "wybug_type": "拒绝服务", "wybug_level": "中", "wybug_rank_0": "6", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["百度控件", "栈溢出漏洞", "参数长度校验"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-12-02：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-12-03：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-12-06：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2015-01-27：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-02-06：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-02-16：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-03-02：\t细节向公众公开  简要描述： COM控件BaiduSetupAx 参数长度验证不完整，畸形参数可导致栈溢出。 详细说明：  这个控件会到http://%s.baidu.com:%d/%s 这样的一个地址下载程序安装运行，下载的文件文件会保存到本地缓存目录，而缓存文件的文件名是可以通过属性参数控制的，BaiduSetupAxPackageChannel这个属性指定缓存文件的名字。而属性参数是没有长度限制的，我们可以给PackageChannel赋值很长的串。文件名属性参数             axBaiduSetupCtrl1.PackageChannel= AAAAAAAAAAAAAAAA.........这是一个长串缓存文件路径           C:\\DOCUME~1\\ADMINI~1\\LOCALS~1\\Temp\\Baidu\\BaiduSetupAx\\\\HTTP缓存文件名的格式   HTTP{97500BA6-87CA-420C-8889-BFFA3868D8A4}_{axBaiduSetupCtrl1.PackageChanne}.exeP2P 缓存文件名的格式   P2P{0FF9FDCD-76A9-4E5B-903E-7A35FC302F4B}{axBaiduSetupCtrl1.PackageChanne}.exe最后会组成这样的缓存文件字符串\nC:\\DOCUME~1\\ADMINI~1\\LOCALS~1\\Temp\\Baidu\\BaiduSetupAx\\\\HTTP{97500BA6-87CA-420C-8889-BFFA3868D8A4}exe\n接下来会使用循环把缓存文件名拷贝到堆栈。\nSrcPathName = *(_WORD **)PPathName;      destBuffer = (const WCHAR *)((char *)&WideCharStr - *(_DWORD *)PPathName);      do      {        data = *SrcPathName;        *(_WORD *)((char *)destBuffer + (_DWORD)SrcPathName) = *SrcPathName;        ++SrcPathName;      }      while ( data );\n问题就在这里，它会把源串全部完全拷贝，而没有检查目标地址的大小。所用当axBaiduSetupCtrl1.PackageChannel的值足够大时就会发生堆栈溢出最后 GS Cookie检查抛出异常__security_check_cookie((unsigned int)&v61 ^ v69);\n0:005> kn # ChildEBP RetAddr  00 04299174 0678f90b KERNELBASE!UnhandledExceptionFilter+0x63WARNING: Stack unwind information not available. Following frames may be wrong.01 042994a8 06785801 BaiduSetupAx_0!DllRegisterServer+0x13d6b02 0429bd10 00410041 BaiduSetupAx_0!DllRegisterServer+0x9c6103 0429bd14 00410041 0x41004104 0429bd18 00410041 0x41004105 0429bd1c 00410041 0x41004106 0429bd20 00410041 0x41004107 0429bd24 00410041 0x41004108 0429bd28 00410041 0x41004109 0429bd2c 00410041 0x4100410a 0429bd30 00410041 0x4100410b 0429bd34 00410041 0x4100410c 0429bd38 00410041 0x4100410d 0429bd3c 00410041 0x4100410e 0429bd40 00410041 0x4100410f 0429bd44 00410041 0x41004110 0429bd48 00410041 0x41004111 0429bd4c 00410041 0x41004112 0429bd50 00410041 0x41004113 0429bd54 00410041 0x41004114 0429bd58 00410041 0x41004115 0429bd5c 00410041 0x41004116 0429bd60 00410041 0x41004117 0429bd64 00410041 0x41004118 0429bd68 00410041 0x41004119 0429bd6c 00410041 0x4100411a 0429bd70 00410041 0x4100411b 0429bd74 00410041 0x4100411c 0429bd78 00410041 0x4100411d 0429bd7c 00410041 0x4100411e 0429bd80 00410041 0x4100411f 0429bd84 00410041 0x41004120 0429bd88 00410041 0x41004121 0429bd8c 00410041 0x41004122 0429bd90 00410041 0x41004123 0429bd94 00410041 0x41004124 0429bd98 00410041 0x41004125 0429bd9c 00410041 0x41004126 0429bda0 00410041 0x41004127 0429bda4 00410041 0x41004128 0429bda8 00410041 0x41004129 0429bdac 00410041 0x4100412a 0429bdb0 00410041 0x4100412b 0429bdb4 00410041 0x4100412c 0429bdb8 00410041 0x4100412d 0429bdbc 00410041 0x4100412e 0429bdc0 00410041 0x4100412f 0429bdc4 00410041 0x41004130 0429bdc8 00410041 0x41004131 0429bdcc 00410041 0x41004132 0429bdd0 00410041 0x41004133 0429bdd4 00410041 0x41004134 0429bdd8 00410041 0x41004135 0429bddc 00410041 0x41004136 0429bedc 770b0d92 0x41004137 0429bf80 76f7613a ntdll!RtlDebugAllocateHeap+0x31e38 0429bf8c 76f791b4 verifier!AVrfpDphPostProcessing+0x1a39 0429bfa4 770b10c0 verifier!AVrfDebugPageHeapSize+0xa43a 0429bfec 00000000 ntdll!RtlDebugSizeHeap+0x2b\n   漏洞证明：  http://drops.wooyun.org/wp-content/uploads/2014/12/BaiduSetupAx_0.rar附上原始ActiveX控件给伙伴们研究。   修复方案：  1. axBaiduSetupCtrl1.PackageChannel 参数长度限制2. 内部拷贝代码，检查目标地址的大小   版权声明：转载请注明来源 路人甲@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：中 漏洞Rank：6  确认时间：2014-12-03 12:13 厂商回复： 感谢提交，已通知业务部门处理 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2015-03-03 00:08 |    \t\t静默 \t\t\t( 路人 |\t\t\t        Rank:8 漏洞数:1        | 安全小白)\t\t \n  如果这个漏洞是cncert评分，rank可能能上10    \n  \n\n\n", "wybug_level_fromcorp": "中", "wybug_rank_fromcorp": 6, "Ranks": null}