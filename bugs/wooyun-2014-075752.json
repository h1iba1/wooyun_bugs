{"id": 51089, "wybug_id": "wooyun-2014-075752", "wybug_title": "php云人才系统 小漏洞一步步getshell（后台）", "wybug_corp": "php云人才系统", "wybug_author": "menmen519", "wybug_date": "2014-09-15 15:30", "wybug_open_date": "2014-12-14 15:32", "wybug_type": "文件包含", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["源码审核", "文件包含漏洞利用技巧", "文件包含漏洞利用", "本地文件包含利用", "白盒测试"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-09-15：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-09-15：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-09-18：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2014-11-09：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-11-19：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-11-29：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-12-14：\t细节向公众公开  简要描述： php云人才系统 小漏洞一步步getshell，这里包含了php与mysql交互时候的特性（也算一个漏洞），还有phpyun自身图片的验证机制问题，等等，步骤比较艰辛，本来想在这里搞一个csrf呢，找了半天没有找到，到时找到一大堆xss，这里就不利用xss了，且看分析 详细说明：  首先我们做一个小测试：对于mysql存储来说，建站者都会给每一个字段设置长度，然后当我们插入进去的数据长度超过了设置的长度，那么mysql是不会报错，然而会自然截断存储，这个就给我们编写程序的人留下了隐患。利用场景分析1.如果你上传的目录会保存到数据库里面，并且这里上传的文件采用白名单，那么我们就可以根据数据库这个特性绕过程序判断，然后进入数据库，存储一个不在白名单内的文件路径2.当我们二次利用这个东西的时候，比如说include 或者required 就会执行php代码发散思考，其实这个思路不仅仅利用在文件这里，我只是举个例子，比如说如果么有对email的长度做验证，那么我们就可以注册一个和管理员一样的email，当后续用这个email查询验证时候，我们所有的回话就是管理员的，这里不做赘述开始进行测试：\n\n这里我们创建一个有两列，长度为5的字段，然后我们插入一个大于5的姓名，看看效果会怎样insert into vff values('xxxxxxxxxx','xx')我们发现结果里面就只有五个长度：\n\n这里我们在延伸一下，我们插入insert into vff values('123                      sdsd','xx')\n\n我们在用select * from vff where name = '123'这个是可以取出来的\n\n这里的东西不多赘述，下来我们直接看phpyun里面的代码：corn.class.php:(line:94-100):\nfunction run_action(){\t\tif($_GET['id'])\t\t{\t\t\t$this->cron($_GET['id']);\t\t}\t\t$this->layer_msg('计划任务(ID:'.$_GET[\"id\"].')执行成功！',9,0,\"index.php?m=cron\");\t}\n我们跟到$this->cron里面去看看：common.php:(lines:1987-1999):\nif($timestamp)\t\t\t{ \t\t\t\tkrsort($timestamp);\t\t\t\t$croncache = current($timestamp);\t\t\t\tignore_user_abort();\t\t\t\tset_time_limit(600);\t \t\t\t\tif(file_exists(LIB_PATH.'cron/'.$croncache['dir']))\t\t\t\t{\t\t\t\t\tinclude(LIB_PATH.'cron/'.$croncache['dir']);\t\t\t\t} \t\t\t\t$nexttime = $this->nextexe($croncache);\n看到了LIB_PATH.'cron/'.$croncache['dir']，然后如果存在则进入到了引用函数，执行了，那么我们来分析一下$croncache['dir']，从哪里来的.......cron.class.php:(lines:63-67):\nif(!$id){\t\t\t\t$_POST[\"ctime\"]=mktime();\t\t\t\t$nbid=$this->obj->insert_into(\"cron\",$_POST);\t\t\t\t$alert=\"计划任务(id:\".$nbid.\")添加成功！\";\t\t\t\t$this->croncache();\n这里明显就是保存之后，然后生成缓存文件，跟到缓存文件继续查看：cache.class.php:(lines:38-55)\npublic function cron_cache($dir){\t\t$rows=$this->obj->DB_select_all(\"cron\",\"`display`='1' order by id asc\");\t\tif(is_array($rows)){\t\t\tforeach($rows as $key=>$value){\t\t\t\t$cron_cache[$key]['id']=$value[\"id\"];\t\t\t\t$cron_cache[$key]['dir']=$value[\"dir\"];\t\t\t\t$cron_cache[$key]['type']=$value[\"type\"];\t\t\t\t$cron_cache[$key]['week']=$value[\"week\"];\t\t\t\t$cron_cache[$key]['month']=$value[\"month\"];\t\t\t\t$cron_cache[$key]['hour']=$value[\"hour\"];\t\t\t\t$cron_cache[$key]['minute']=$value[\"minute\"];\t\t\t\t$cron_cache[$key]['nexttime']=$value[\"nexttime\"];\t\t\t}\t\t}\t\t$data['cron']=ArrayToString2($cron_cache);\t\treturn $this->obj->made_web_array($this->cachedir.$dir,$data);\t}\n看到这里大家都明白了$cron_cache[$key]['dir']=$value[\"dir\"];是从我们刚才存储到数据库里面的dir取出来的，我们在回头看看，刚才的那个有什么限制，cron.class.php:(line:56-59):\n$dirArr = explode('.',$_POST['dir']);\t\t\t\tif(end($dirArr)!='php'){\t\t\t\t\t$this->obj->ACT_layer_msg(\"无效的执行文件！\",8,\"index.php?m=cron\");\t\t\t\t}\n发现这里只能是php文件，当然了根据刚才我们的思路，我们可以绕过去的，我们进入后台：\n\n\n\n这样一来这两张图，就可以把一个vvvv.png,存储到数据库中了，我们重新上传一个：\n\n然后我们查看数据库，\n\n我们在去界面的另外一个地方点击执行\n\n\n\n前面的着所有的一切，已经正式一个东西，此处可以绕过，并且通过文件包含可以执行代码那么这个图片码怎么搞定，我们经过尝试，phpyun测试了上传头像和上传身份证一边，只有上传身份证没有对图片的内容做深度校验：\n\n我们上传后，看看上传上去的文件路径，\n\n我们看看图片内容改变了没有：\n\n果真这里没有变化，后续的我就不多说了，直接把那个shell.png换掉就可以了   漏洞证明：     修复方案：     版权声明：转载请注明来源 menmen519@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：中 漏洞Rank：8  确认时间：2014-09-15 15:41 厂商回复： 感谢您的提供，我们会尽快修复！ 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2014-09-15 15:57 |    \t\t铁蛋火车侠 \t\t\t( 普通白帽子  |\t\t\t        Rank:156 漏洞数:31        | Q群371620085 技术交流群 有漂亮妹纸！)\t\t \n  开挂了    \n     2014-10-05 16:43 |    \t\tCoody  \t\t\t( 核心白帽子 |\t\t\t        Rank:1565 漏洞数:189        | 不接单、不黑产；如遇接单收徒、绝非本人所...)\t\t \n  good job    \n     2014-10-27 13:48 |    \t\tnzk1912 \t\t\t( 实习白帽子  |\t\t\t        Rank:41 漏洞数:10        | 软件开发8年了，也来挖挖漏洞，为创建安全...)\t\t \n  给丢一个图片马玩玩啊？    \n  \n\n\n", "wybug_level_fromcorp": "中", "wybug_rank_fromcorp": 8, "Ranks": null}