{"id": 46634, "wybug_id": "wooyun-2014-083528", "wybug_title": "DESTOON的一处SQL注入漏洞", "wybug_corp": "DESTOON", "wybug_author": "cbuteng", "wybug_date": "2014-11-21 10:52", "wybug_open_date": "2015-02-19 10:54", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "15", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["第三方不可信程序", "源码审核", "注射漏洞利用技巧", "源码分析", "白盒测试"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-11-21：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-11-21：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-11-24：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2015-01-15：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-01-25：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-02-04：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-02-19：\t细节向公众公开  简要描述： 没回显，示例代码没删 详细说明：  之前destoon出现过支付接口的注入问题WEBROOT/api/pay/下的已经全部修复了但是新版本里面多出来两个示例代码，导致注入如下图\n\n\n\n这里面各种注入以WEBROOT\\api\\trade\\alipay\\2\\notify.php为例子,如下图\n\n第61行处的$itemid来自post提交，并且没有被单引号包裹，也不用管common的通用过滤了。第46行处需要校验一下。跟进去，进入WEBROOT\\api\\trade\\alipay\\2\\pay\\alipay_core.function.php如下图\n\n要想返回true，需要两个条件，第一个条件preg_match(\"/true$/i\",$responseTxt)如图$responseTxt一直等于true所以恒真的。第二个条件$mysign == $_POST[\"sign\"]$mysign来自45行对post的处理，所以又要跟进下面这\n\n这里对参数排序，去掉无效值后，最终会对除$_POST[\"sign\"]以外的post参数的name和value加等号一起md5一下返回。一定是加一起！！，即$mysign就是post除开$_POST[\"sign\"]的md5值两个条件都凑齐了，返回true如最开始的图就验证成功了进入model层，触发漏洞   漏洞证明：  \nsign=adddcf5c72bcf33b9de127192f02c9dd&out_trade_no=1 UNION SELECT 1,2,3,4,5,6,7,8,sleep(5),10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32sign是下面这一坨的md5，即name和value加上等号一起的md5out_out_trade_no=1 UNION SELECT 1,2,3,4,5,6,7,8,sleep(5),10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32\n\n\n效果,这是/include/db_mysql.class.php。加个var_dump看看\n\n\n\n\n\n官网的\n\nhttp://demo.destoon.com/v5.0/api/trade/alipay/2/notify.php?seller_email=sign=adddcf5c72bcf33b9de127192f02c9dd&out_trade_no=1 UNION SELECT 1,2,3,4,5,6,7,8,sleep(5),10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32   修复方案：  删了,或者像/api/pay/alipay里面那样处理   版权声明：转载请注明来源 cbuteng@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：15  确认时间：2014-11-21 23:52 厂商回复： 感谢反馈 我们会尽快修复 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2014-11-21 13:11 |    \t\tpandas \t\t\t( 普通白帽子  |\t\t\t        Rank:585 漏洞数:58        | 国家一级保护动物)\t\t \n  哟，狼厂工作不饱和？    \n     2014-12-12 13:09 |    \t\t微尘 \t\t\t( 普通白帽子  |\t\t\t        Rank:218 漏洞数:74        )\t\t \n  求爆管理    \n     2014-12-15 15:11 |    \t\t坠落 \t\t\t( 路人 |\t\t\t        Rank:0 漏洞数:2        | 恩。。。。。。。)\t\t \n  求爆管理     \n     2014-12-25 15:02 |    \t\t酷帥王子 \t\t\t( 普通白帽子  |\t\t\t        Rank:111 漏洞数:34        | 天朗日清，和风送闲，可叹那俊逸如我顾影自...)\t\t \n  不能爆管理员账户密码吗？    \n     2015-01-16 15:17 |    \t\trobots \t\t\t( 路人 |\t\t\t        还没有发布任何漏洞        | www.baidu.com)\t\t \n  求getshell    \n     2015-03-24 12:12 |    \t\tHello_C \t\t\t( 路人 |\t\t\t        Rank:0 漏洞数:1        | 谦和温顺且自持的生活,不乱于心，不困于情...)\t\t \n  大神你用的什么编辑器    \n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 15, "Ranks": null}