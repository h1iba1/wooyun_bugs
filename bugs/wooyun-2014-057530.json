{"id": 3863, "wybug_id": "wooyun-2014-057530", "wybug_title": "大麦网分站奇葩修复导致再次注入（修复方案反而减少攻击难度）", "wybug_corp": "大麦网", "wybug_author": "xiaoL", "wybug_date": "2014-04-18 11:29", "wybug_open_date": "2014-06-02 11:29", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "15", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["字符类型注射"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-04-18：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-04-18：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-04-28：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-05-08：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-05-18：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-06-02：\t细节向公众公开  简要描述： 对于一个漏洞的奇葩修复。程序员的问题是你无法预料他在做什么,直到为时已晚.(Seymour Cray,超级计算机之父) 详细说明：   WooYun: 大麦网某分站SQL注入漏洞 的报告中报告了这个问题。根据作者的截图，这是一处基于时间的注入，看作者的截图就知道跑数据很辛苦了。本着闲着蛋疼的习性又动手测试了一下，发现了奇葩的问题。原始漏洞从时间盲注，变成了bool值盲注。这是什么修复逻辑？http://en.damai.cn/All_Tickets.aspx?key=music%%27%20AND%201=1%20AND%20%27%%27=%27\t真\n\nhttp://en.damai.cn/All_Tickets.aspx?key=music%%27%20AND%201=2%20AND%20%27%%27=%27   假\n\n程序漏洞发现之久，产商回复，程序员修复了之后竟然让漏洞的利用更加的便利了。   漏洞证明：  \n\n确实提高了注入的效率\n\n跑了一下当前库的数据，数据量还是大大的   修复方案：  认真过滤   版权声明：转载请注明来源 xiaoL@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：20  确认时间：2014-04-18 17:07 厂商回复： 感谢提供的漏洞信息，我们会及时更新修补 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 20, "Ranks": null}