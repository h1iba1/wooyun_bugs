{"id": 58491, "wybug_id": "wooyun-2014-051054", "wybug_title": "Thinksaas v2.1 Sql Injection", "wybug_corp": "thinksaas.cn", "wybug_author": "′雨。", "wybug_date": "2014-02-19 14:00", "wybug_open_date": "2014-05-20 14:01", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-02-19：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-02-20：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-02-23：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2014-04-16：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-04-26：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-05-06：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-05-20：\t细节向公众公开  简要描述： 今天看到发布了2.1就去下载了个看看。但是还是有洞没补。 详细说明：  \\app\\article\\action\\admin\\cate.php这文件在admin目录下 是为了让是管理才能访问的?但是我自己在前台注册了一个用户, 可以直接访问到。 难道这是传说中的越权?\ncase \"edit_do\":\t\t$cateid = intval($_POST['cateid']);\t\t$catename = tsClean($_POST['catename']);\t\t\t\t$new['article']->update('article_cate',array(\t\t\t'cateid'=>$cateid,\t\t),array(\t\t\t'catename'=>$catename,\t\t\t'orderid'=>intval($_POST['orderid']),\t\t));\t\t\t\theader(\"Location: \".SITE_URL.\"index.php?app=article&ac=admin&mg=cate&ts=list\");\t\t\t\tbreak;}\n\nfunction tsClean($text) {\t$text = cleanJs ( $text );\treturn $text;}\n\nfunction cleanJs($text) {\t$text = trim ( $text );\t$text = stripslashes ( $text );\t// 完全过滤注释\t$text = preg_replace ( '/<!--?.*-->/', '', $text );\t// 完全过滤动态代码\t$text = preg_replace ( '/<\\?|\\?>/', '', $text );\t// 完全过滤js\t$text = preg_replace ( '/<script?.*\\/script>/', '', $text );\t// 过滤多余html\t$text = preg_replace ( '/<\\/?(html|head|meta|link|base|body|title|style|script|form|iframe|frame|frameset)[^><]*>/i', '', $text );\t// 过滤on事件lang js\twhile ( preg_match ( '/(<[^><]+)(lang|data|onfinish|onmouse|onexit|onerror|onclick|onkey|onload|onchange|onfocus|onblur)[^><]+/i', $text, $mat ) ) {\t\t$text = str_replace ( $mat [0], $mat [1], $text );\t}\twhile ( preg_match ( '/(<[^><]+)(window\\.|javascript:|js:|about:|file:|document\\.|vbs:|cookie)([^><]*)/i', $text, $mat ) ) {\t\t$text = str_replace ( $mat [0], $mat [1] . $mat [3], $text );\t}\treturn $text;}\n正如这函数的名称, 只是cleanjs然后带入update。row未过滤。   漏洞证明：  首先先新建一个分类。用于回显。\ncase \"add_do\":\t\t\t\t$new['article']->create('article_cate',array(\t\t\t\t\t'catename'=>tsClean($_POST['catename']),\t\t\t'orderid'=>intval($_POST['orderid']),\t\t\t\t));\t\t\t\t\t\theader(\"Location: \".SITE_URL.\"index.php?app=article&ac=admin&mg=cate&ts=list\");\t\t\t\tbreak;\n然后\n\n然后再访问 http://127.0.0.1/thinksaas/index.php?app=article&ac=admin/cate&ts=list\n\n成功 有图 有真相。   修复方案：  过滤。   版权声明：转载请注明来源 ′雨。@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：15  确认时间：2014-02-20 09:55 厂商回复： 感谢反馈，已经修复。 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2014-09-29 22:02 |    \t\tPythonPig \t\t\t( 普通白帽子  |\t\t\t        Rank:491 漏洞数:71        | 只会简单工具的小小菜)\t\t \n  审计大牛请教一个问题，你说“带入update。row未过滤”为什么我看到的代码是这样的呢？foreach ( $row as $key => $value ) {\t\t\t$value = $this->escape ( $value );\t\t\t//$vals [] = \"`$key` = $value\";\t\t\t$vals [] = \"{$key} = {$value}\";\t\t}以上是updata中处理row的代码，这不是有escape过滤的嘛？    \n     2014-09-29 22:38 |    \t\t′  雨。 \t\t\t( 普通白帽子  |\t\t\t        Rank:1231 漏洞数:190        | Only Code Never Lie To Me.)\t\t \n  @PythonPig  这洞都是二月份的啦。。 这个很久前就补掉了 就是escape row    \n     2014-09-29 22:41 |    \t\tPythonPig \t\t\t( 普通白帽子  |\t\t\t        Rank:491 漏洞数:71        | 只会简单工具的小小菜)\t\t \n  @′  雨。 难道他们补了以后没有修改版本号？我还是拿2.1来测试的啊 ，你当时的版本没有escape row？    \n     2014-09-29 22:45 |    \t\t′  雨。 \t\t\t( 普通白帽子  |\t\t\t        Rank:1231 漏洞数:190        | Only Code Never Lie To Me.)\t\t \n  @PythonPig ...版本号而已。。  一般还是看更新日期把。    当时是没有。    \n     2014-09-29 22:54 |    \t\tPythonPig \t\t\t( 普通白帽子  |\t\t\t        Rank:491 漏洞数:71        | 只会简单工具的小小菜)\t\t \n  @′  雨。 thx~    \n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 15, "Ranks": null}