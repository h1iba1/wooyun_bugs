{"id": 49192, "wybug_id": "wooyun-2014-074893", "wybug_title": "74CMS 最新版二次SQL注入可越权操作两处（问题总结）", "wybug_corp": "74c,s.com", "wybug_author": "xfkxfk", "wybug_date": "2014-09-03 15:30", "wybug_open_date": "2014-12-02 15:32", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["第三方不可信程序", "安全意识不足", "源码审核", "源码分析"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-09-03：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-09-03：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-09-06：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2014-10-28：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-11-07：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-11-17：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-12-02：\t细节向公众公开  简要描述： 74CMS 最新版二次SQL注入可越权操作两处 详细说明：  74CMS最新版：74cms_v3.4.20140820 官方8.20号更新文件：/user/personal/personal_resume.php\n//创建简历 -保存基本信息elseif ($act=='make1_save'){\t$captcha=get_cache('captcha');\t$postcaptcha = trim($_POST['postcaptcha']);\tif($captcha['verify_resume']=='1' && empty($postcaptcha) && intval($_REQUEST['pid'])===0)\t{\t\tshowmsg(\"请填写验证码\",1); \t}\tif ($captcha['verify_resume']=='1' && intval($_REQUEST['pid'])===0 &&  strcasecmp($_SESSION['imageCaptcha_content'],$postcaptcha)!=0)\t{\t\tshowmsg(\"验证码错误\",1);\t}\t$setsqlarr['uid']=intval($_SESSION['uid']);\t$setsqlarr['title']=trim($_POST['title'])?trim($_POST['title']):showmsg('请填写简历名称！',1);\t$setsqlarr['fullname']=trim($_POST['fullname'])?trim($_POST['fullname']):showmsg('请填写姓名！',1);\t$setsqlarr['sex']=trim($_POST['sex'])?intval($_POST['sex']):showmsg('请选择性别！',1);\t$setsqlarr['sex_cn']=trim($_POST['sex_cn']);\t$setsqlarr['birthdate']=intval($_POST['birthdate'])>1945?intval($_POST['birthdate']):showmsg('请正确填写出生年份',1);\t$setsqlarr['height']=intval($_POST['height']);\t$setsqlarr['marriage']=intval($_POST['marriage']);\t$setsqlarr['marriage_cn']=trim($_POST['marriage_cn']);\t$setsqlarr['experience']=intval($_POST['experience']);\t$setsqlarr['experience_cn']=trim($_POST['experience_cn']);\t$setsqlarr['householdaddress']=trim($_POST['householdaddress'])?trim($_POST['householdaddress']):showmsg('请填写户口所在地！',1);\t\t$setsqlarr['education']=intval($_POST['education']);\t$setsqlarr['education_cn']=trim($_POST['education_cn']);\t$setsqlarr['tag']=trim($_POST['tag']);\t$setsqlarr['telephone']=trim($_POST['telephone'])?trim($_POST['telephone']):showmsg('请填写联系电话！',1);\t$setsqlarr['email']=$user['email'];\t$setsqlarr['email_notify']=$_POST['email_notify']==\"1\"?1:0;\t$setsqlarr['address']=trim($_POST['address'])?trim($_POST['address']):showmsg('请填写通讯地址！',1);\t$setsqlarr['website']=trim($_POST['website']);\t$setsqlarr['qq']=trim($_POST['qq']);\t$setsqlarr['refreshtime']=$timestamp;\t$setsqlarr['subsite_id']=intval($_CFG['subsite_id']);\t$setsqlarr['display_name']=intval($_CFG['resume_privacy']);\t\tif (intval($_REQUEST['pid'])===0)\t{\t\t\t\t$setsqlarr['audit']=intval($_CFG['audit_resume']);\t\t\t$total[0]=$db->get_total(\"SELECT COUNT(*) AS num FROM \".table('resume').\" WHERE uid='{$_SESSION['uid']}'\");\t\t\t$total[1]=$db->get_total(\"SELECT COUNT(*) AS num FROM \".table('resume_tmp').\" WHERE uid='{$_SESSION['uid']}'\");\t\t\t$total[2]=$total[0]+$total[1];\t\t\tif ($total[2]>=intval($_CFG['resume_max']))\t\t\t{\t\t\tshowmsg(\"您最多可以创建{$_CFG['resume_max']} 份简历,已经超出了最大限制！\",1);\t\t\t}\t\t\telse\t\t\t{\t\t\t$setsqlarr['addtime']=$timestamp;\t\t\t$pid=inserttable(table('resume'),$setsqlarr,1);\t\t\tif (empty($pid))showmsg(\"保存失败！\",0);\t\t\tcheck_resume($_SESSION['uid'],$pid);\t\t\twrite_memberslog($_SESSION['uid'],2,1101,$_SESSION['username'],\"创建了简历\");\t\t\theader(\"Location: ?act=make2&pid=\".$pid);\t\t\t}\t}\telse\t{\t\t$_CFG['audit_edit_resume']!=\"-1\"?$setsqlarr['audit']=intval($_CFG['audit_edit_resume']):\"\";\t\tupdatetable(table('resume'),$setsqlarr,\" id='\".intval($_REQUEST['pid']).\"'  AND uid='{$setsqlarr['uid']}'\");\t\tupdatetable(table('resume_tmp'),$setsqlarr,\" id='\".intval($_REQUEST['pid']).\"'  AND uid='{$setsqlarr['uid']}'\");\t\tcheck_resume($_SESSION['uid'],intval($_REQUEST['pid']));\t\twrite_memberslog($_SESSION['uid'],2,1105,$_SESSION['username'],\"修改了简历({$_POST['title']})\");\t\tif ($_POST['go_resume_show'])\t\t{\t\theader(\"Location: ?act=resume_show&pid={$_REQUEST['pid']}\");\t\t}\t\telse\t\t{\t\theader(\"Location: ?act=make2&pid={$_REQUEST['pid']}\");\t\t}\t}\t\t}\n在创建建立第一步时：将fullname，education_cn等信息通过函数inserttable插入数据库在进入数据库时，通过转义，但是进入数据库存储时，依然可带入单引号等而已SQL语句在inserttable进入数据库后通过check_resume函数检测简历完成程度：\n//检查简历的完成程度function check_resume($uid,$pid){\tglobal $db,$timestamp,$_CFG;\t$uid=intval($uid);\t$pid=intval($pid);\t$percent=0;\t$resume_basic=get_resume_basic($uid,$pid);\t$resume_intention=$resume_basic['intention_jobs'];\t$resume_specialty=$resume_basic['specialty'];\t$resume_education=get_resume_education($uid,$pid);\tif (!empty($resume_basic))$percent=$percent+15;\tif (!empty($resume_intention))$percent=$percent+15;\tif (!empty($resume_specialty))$percent=$percent+15;\tif (!empty($resume_education))$percent=$percent+15;\tif ($resume_basic['photo_img'] && $resume_basic['photo_audit']==\"1\"  && $resume_basic['photo_display']==\"1\")\t{\t$setsqlarr['photo']=1;\t}\telse\t{\t$setsqlarr['photo']=0;\t}\tif ($percent<60)\t{\t\t$setsqlarr['complete_percent']=$percent;\t\t$setsqlarr['complete']=2;\t}\telse\t{\t\t$resume_work=get_resume_work($uid,$pid);\t\t$resume_training=get_resume_training($uid,$pid);\t\t$resume_photo=$resume_basic['photo_img'];\t\tif (!empty($resume_work))$percent=$percent+13;\t\tif (!empty($resume_training))$percent=$percent+13;\t\tif (!empty($resume_photo))$percent=$percent+14;\t\t$setsqlarr['complete']=1;\t\t$setsqlarr['complete_percent']=$percent;\t\trequire_once(QISHI_ROOT_PATH.'include/splitword.class.php');\t\t$sp = new SPWord();\t\t$setsqlarr['key']=$resume_basic['intention_jobs'].$resume_basic['recentjobs'].$resume_basic['specialty'];\t\t\t\t$setsqlarr['key']=\"{$resume_basic['fullname']} \".$sp->extracttag($setsqlarr['key']);\t\t$setsqlarr['key']=str_replace(\",\",\" \",$resume_basic['intention_jobs']).\" {$setsqlarr['key']} {$resume_basic['education_cn']}\";\t\t$setsqlarr['key']=$sp->pad($setsqlarr['key']);\t\t\tif (!empty($resume_education))\t\t{\t\t\tforeach($resume_education as $li)\t\t\t{\t\t\t$setsqlarr['key']=\"{$li['school']} {$setsqlarr['key']} {$li['speciality']}\";\t\t\t}\t\t}\t\t$setsqlarr['refreshtime']=$timestamp;\t}\n通过：\n$resume_basic=get_resume_basic($uid,$pid);\n取出已经进入简历中的信息看这里：\n$setsqlarr['key']=\"{$resume_basic['fullname']} \".$sp->extracttag($setsqlarr['key']);\t\t$setsqlarr['key']=str_replace(\",\",\" \",$resume_basic['intention_jobs']).\" {$setsqlarr['key']} {$resume_basic['education_cn']}\";\nfullname，education_cn两个参数被取出来后进入了setsqlarr变量最后进入了updatetable函数：\nupdatetable(table('resume'),$setsqlarr,\"uid='{$uid}' AND id='{$pid}'\");\n进入updatetable函数：\nfunction updatetable($tablename, $setsqlarr, $wheresqlarr, $silent=0) {\tglobal $db;\t$setsql = $comma = '';\tforeach ($setsqlarr as $set_key => $set_value) {\t\tif(is_array($set_value)) {\t\t\t$setsql .= $comma.'`'.$set_key.'`'.'='.$set_value[0];\t\t} else {\t\t\t$setsql .= $comma.'`'.$set_key.'`'.'=\\''.$set_value.'\\'';\t\t}\t\t$comma = ', ';\t}\t$where = $comma = '';\tif(empty($wheresqlarr)) {\t\t$where = '1';\t} elseif(is_array($wheresqlarr)) {\t\tforeach ($wheresqlarr as $key => $value) {\t\t\t$where .= $comma.'`'.$key.'`'.'=\\''.$value.'\\'';\t\t\t$comma = ' AND ';\t\t}\t} else {\t\t$where = $wheresqlarr;\t}\treturn $db->query(\"UPDATE \".($tablename).\" SET \".$setsql.\" WHERE \".$where, $silent?\"SILENT\":\"\");}\n在updatetable中，没有对数据进行任何的处理专业过滤等到这里我们第一步进入数据库的恶意SQL，在这里再次进去了数据库，导致SQL注入因为在update中，所以我们想更新简历中那个信息都可以================================================================================我们来总结下：前面发了很多二次注入的漏洞，都是在建立简历这里，基本都在updatetable这个函数里面产生的1、首先74cms在获取内容后通过转义过滤处理，进入了数据库2、进入书库时使用inserttable，这里没有任何过滤处理，导致单引号进入数据库3、在其他地方取出简历数据，通过get_resume_***函数，也没有处理，此时单引号已经产生了4、在其他地方进行修复内容时，再次使用inserttable和updatetable，由于没有过滤，导致二次SQL注入\nforeach ($setsqlarr as $set_key => $set_value) {\t\tif(is_array($set_value)) {\t\t\t$setsql .= $comma.'`'.$set_key.'`'.'='.$set_value[0];\t\t} else {\t\t\t$setsql .= $comma.'`'.$set_key.'`'.'=\\''.$set_value.'\\'';\t\t}\t\t$comma = ', ';\t}\n当进入updatetable是数组时，这里直接去数组的元素，连引号都没有，直接注入，如： WooYun: 骑士人才系统注入(20140805)注入一枚 当非数组是，使用单引号保护，这里产生了二次注入，如： WooYun: 74CMS 最新版二次SQL注入多出可越权操作  WooYun: 74cms (20140709) 二枚二次注入 等，所以这里修复已经很简单了当然还有inserttable函数里面也需要处理   漏洞证明：  这里存在两个参数fullname，education_cn由于fullname在数据库中限制长度为15，太短了这里我们使用education_cn为测试因为在update中，所以我们想更新简历中那个信息都可以，这里选择最短的QQ在第一步，创建基本信息时：在学历处填写：',qq=concat(user(),version())#\n\n然后继续完善简历信息，直到第四步，填写完教育信息时，返回预览自己的建立qq联系方式即被修改为user和version的值\n\n由于这里可以任意截断，所以可以修改任意用户的联系方式等简历信息这里我们没有添加where条件，那么即可修改全部用户的QQ联系方式   修复方案：  进入数据库时，再次转义过滤   版权声明：转载请注明来源 xfkxfk@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：20  确认时间：2014-09-03 16:02 厂商回复： 感谢反馈！ 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2014-12-02 15:41 |    \t\tno.thinking \t\t\t( 路人 |\t\t\t        Rank:4 漏洞数:3        | no.thinking)\t\t \n  传说中的审计？    \n     2014-12-02 17:09 |    \t\t带我玩 \t\t\t( 路人 |\t\t\t        Rank:12 漏洞数:6        | 带我玩)\t\t \n  好黑..表示看的云里雾里    \n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 20, "Ranks": null}