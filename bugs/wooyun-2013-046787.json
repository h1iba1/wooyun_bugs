{"id": 5367, "wybug_id": "wooyun-2013-046787", "wybug_title": "Thinksaas SQL注入漏洞", "wybug_corp": "thinksaas.cn", "wybug_author": "xfkxfk", "wybug_date": "2013-12-23 11:26", "wybug_open_date": "2014-03-23 11:26", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["源码审核", "注射漏洞利用技巧", "源码分析", "白盒测试"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2013-12-23：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2013-12-23：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2013-12-26：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2014-02-16：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-02-26：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-03-08：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-03-23：\t细节向公众公开  简要描述： Thinksaas SQL注入#5 详细说明：  Thinksaas SQL注入#5积分兑换——物品编辑处，sql注入。第一处：/app/redeem/action/edit.php\ncase \"do\":\t\t\t$goodsid = intval($_POST['goodsid']);\t\t$cateid = intval($_POST['cateid']);\t\t$title = trim($_POST['title']);//问题在这里\t\t$content = trim($_POST['content']);//问题在这里\t\t$nums = intval($_POST['nums']);\t\t$scores = intval($_POST['scores']);\t\t$return = intval($_POST['return']);\t\t\t\t$new['redeem']->update('redeem_goods',array(\t\t\t'goodsid'=>$goodsid,\t\t),array(\t\t\t'cateid'=>$cateid,\t\t\t'title'=>$title,//问题在这里\t\t\t'content'=>$content,//问题在这里\t\t\t'nums'=>$nums,\t\t\t'scores'=>$scores,\t\t\t'return'=>$return,\t\t));\n这里没有过滤，进入update：\npublic function update($table, $conditions, $row) {\t\t$where = \"\";\t\tif (empty ( $row ))\t\t\treturn FALSE;\t\tif (is_array ( $conditions )) {\t\t\t$join = array ();\t\t\tforeach ( $conditions as $key => $condition ) {\t\t\t\t$condition = $this->escape ( $condition );\t\t\t\t$join [] = \"{$key} = {$condition}\";\t\t\t}\t\t\t$where = \"WHERE \" . join ( \" AND \", $join );\t\t} else {\t\t\tif (null != $conditions)\t\t\t\t$where = \"WHERE \" . $conditions;\t\t}\t\tforeach ( $row as $key => $value ) {\t\t\t$vals [] = \"`$key` = '$value'\";\t\t}\t\t$values = join ( \", \", $vals );\t\t$sql = \"UPDATE \" . dbprefix . \"{$table} SET {$values} {$where}\";\t\t\t\treturn $this->db->query ( $sql );\t}\n也没有过滤row的内容，导致我们的输入进入sql语句，造成注入。   漏洞证明：  新看看正常的积分兑换物品：\n\n编辑物品，输入如下：\n\n修改后，看看结果：\n\nok   修复方案：  过滤   版权声明：转载请注明来源 xfkxfk@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：20  确认时间：2013-12-23 14:28 厂商回复： 非常感谢反馈，正在修复中。 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 20, "Ranks": null}