{"id": 34416, "wybug_id": "wooyun-2015-0106426", "wybug_title": "phpmps 注入", "wybug_corp": "phpmps.com", "wybug_author": "路人甲", "wybug_date": "2015-04-09 14:05", "wybug_open_date": "2015-07-09 15:44", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["注射漏洞利用技巧"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-04-09：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-04-10：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2015-04-13：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2015-06-04：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-06-14：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-06-24：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-07-09：\t细节向公众公开  简要描述： phpmps v2.3 注入漏洞 详细说明：  (绕过一)member.php 的注册逻辑中，对username进行了htmlencode，但是我们可以构造 xxxxx\\这样的用户名。\n\n(绕过二)虽然注册限制了用户名只能是数字字符下划线，但是可以用抓包的方式绕过，代码逻辑中只检测了用户名和邮箱有没有重复。\n\n(触发点)同样是member.php中 Send这个逻辑里面，把$_username带入到了insert语句中，恰好后面的参数orderid可控，于是形成了一个二次注入。\n\n   漏洞证明：  POC：注册用户 xxxx\\ POST /phpmps_v2.3_build150302_utf8/upload/member.php?act=sendorderid=,1,1,1,1,1,1,1,1,sleep(3)) -- a&paycenter=alipay可以看到执行的语句和延迟\n\n   修复方案：  过滤   版权声明：转载请注明来源 路人甲@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：15  确认时间：2015-04-10 15:42 厂商回复： 感谢提供漏洞 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2015-04-14 09:42 |    \t\tForever80s \t\t\t( 普通白帽子  |\t\t\t        Rank:820 漏洞数:110        )\t\t \n  这也可以双投    \n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 15, "Ranks": null}