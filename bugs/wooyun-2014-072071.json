{"id": 52175, "wybug_id": "wooyun-2014-072071", "wybug_title": "ThinkSAAS前台Getshell", "wybug_corp": "thinksaas.cn", "wybug_author": "phith0n", "wybug_date": "2014-08-12 19:24", "wybug_open_date": "2014-11-07 19:26", "wybug_type": "命令执行", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "漏洞已经通知厂商但是厂商忽略漏洞", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["源码审核"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-08-12：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-08-17：\t厂商主动忽略漏洞，细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2014-10-11：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-10-21：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-10-31：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-11-07：\t细节向公众公开  简要描述： 一个二次操作造成的getshell。官网又挂加速乐，又审核什么的，懒得测试官网了，就麻烦审核大人本地测试拉~ 详细说明：  说一下原理吧。/app/photo/action/album.php 245行\n//批量修改执行\tcase \"info_do\":\t\t\t//用户是否登录\t\t$userid = aac('user')->isLogin();\t\t\t$albumid = intval($_POST['albumid']);\t\t\t\t$albumface = tsClean($_POST['albumface']);\t\t\t\t$arrPhotoId = $_POST['photoid'];\t\t$arrPhotoDesc = $_POST['photodesc'];\t\t\t\tif($TS_USER['user']['isadmin']==0){\t\t\t\t\tforeach($arrPhotoDesc as $key=>$item){\t\t\t\t\t\t\t//过滤内容开始\t\t\t\taac('system')->antiWord($item);\t\t\t\t//过滤内容结束\t\t\t\t\t\t}\t\t}\t\t\t\tforeach($arrPhotoDesc as $key=>$item){\t\t\tif($item){\t\t\t\t$photoid = intval($arrPhotoId[$key]);\t\t\t\t\t\t\t\t$new['photo']->update('photo',array(\t\t\t\t\t'photoid'=>$photoid,\t\t\t\t),array(\t\t\t\t\t\t\t\t\t'photodesc'=>tsClean($item),\t\t\t\t\t\t\t\t));\t\t\t\t\t\t}\t\t}\t\t\t//更新相册封面\t\tif($albumface){\t\t\t$new['photo']->update('photo_album',array(\t\t\t\t'userid'=>$userid,\t\t\t\t'albumid'=>$albumid,\t\t\t),array(\t\t\t\t'albumface'=>$albumface,\t\t\t));\t\t}\t\t\t\theader(\"Location: \".tsUrl('photo','album',array('id'=>$albumid)));\t\t\t\tbreak;\n观察这个动作：$albumface = tsClean($_POST['albumface']);从POST albumface获得了albumface的值。这个实际上是相册封面的意思。tsClean是过滤xss的函数，跟本操作无关，暂且不表。获得了albumface后插入photo_album表：\n//更新相册封面\t\tif($albumface){\t\t\t$new['photo']->update('photo_album',array(\t\t\t\t'userid'=>$userid,\t\t\t\t'albumid'=>$albumid,\t\t\t),array(\t\t\t\t'albumface'=>$albumface,\t\t\t));\t\t}\n本来是无害的一个操作。不过我们再来看到另一个位置（安装好以后才有的）。/cache/template/photo.photo.tpl.php:\n<div><a href=\"<?php echo tsurl('photo','album',array('id'=>$item['albumid']))?>\" class=\"album_photo\"><img src=\"<?php if($item['albumface'] == '') { ?><?php echo SITE_URL;?>app/photo/skins/default/photo_album.png<?php } else { ?><?php echo tsXimg($item['albumface'],'photo',170,'170',$item['path'],1)?><?php } ?>\" width=\"170\" height=\"170\" alt=\"<?php echo $item['albumname'];?>\" /></a>\n这里取到了$item['albumface']，并传入tsXimg函数。于是我们来看看这个函数：/thinksaas/tsFunction.php 671行\n/** * ThinkSAAS专用图片截图函数 * @param unknown $file\t数据库里的图片url * @param unknown $app\tapp名称 * @param unknown $w\t缩略图片宽度 * @param unknown $h\t缩略图片高度 * @param string $path * @param string $c\t1裁切,0不裁切 * @return void|string */function tsXimg($file, $app, $w, $h, $path = '', $c = '0') {\t\tif (! $file) {\t\treturn false;\t}else{\t\t\t\t//$info = explode ( '.', $file );\t\t//$name = md10 ( $file ) . '_' . $w . '_' . $h . '.' . $info [1];\t\t\t\t$info = explode ( '/', $file );\t\t$name = $info [2];\t\t\t\tif ($path == '') {\t\t\t$cpath = 'cache/' . $app . '/' . $w . '/' . $name;\t\t} else {\t\t\t$cpath = 'cache/' . $app . '/' . $path . '/' . $w . '/' . $name;\t\t}\t\t\t\tif (! is_file ( $cpath )) {\t\t\tcreateFolders ( 'cache/' . $app . '/' . $path . '/' . $w );\t\t\t$dest = 'uploadfile/' . $app . '/' . $file;\t\t\t$arrImg = getimagesize ( $dest );\t\t\tif ($arrImg [0] <= $w) {\t\t\t\tcopy ( $dest, $cpath );\t\t\t\t\t\t\t} else {\t\t\t\trequire_once 'thinksaas/tsImage.php';\t\t\t\t$resizeimage = new tsImage ( \"$dest\", $w, $h, $c, \"$cpath\" );\t\t\t}\t\t}\t\t\t\treturn SITE_URL . $cpath;\t\t\t}}\n这个函数过程是这样：1.$info = explode ( '/', $file ); 将传入的路径用/来分成数组2.$name = $info [2]; name是数组的第三项。3.$cpath = 'cache/' . $app . '/' . $path . '/' . $w . '/' . $name; 将cpath设置一下，可以看到，直接将name放进cpath里了。4.如果cpath不是文件，就创建目录：createFolders ( 'cache/' . $app . '/' . $path . '/' . $w );5.getimagesize ( $dest ); 获得dest的大小，dest是'uploadfile/' . $app . '/' . $file，传入文件的路径，$file可控。6.if ($arrImg [0] <= $w) {copy ( $dest, $cpath );} 如果获得的宽度（$arrImg [0]）小于预设值$w，则直接将dest复制到cpath。发现什么了吗，copy这个操作的两个参数都是我们可以控制的。于是，我们就可以轻松地getshell。具体操作步骤见漏洞证明。   漏洞证明：  首先注册用户，创建一个专辑：\n\n记下这个时候的专辑id，我的是1：\n\n把shell改后缀为.gif然后上传。注意，不需要用图片木马，直接webshell上传即可。因为后面要验证图片的宽度小于170，如果你的图片木马太大反而不能生成。查看，并记下路径：\n\n然后向localhost/think/index.php?app=photo&ac=album&ts=info_do POST如下数据：\n\n如上图，我们之前说的$name取得是$info[2]，也就是用/分割后的第三个，所以我前面加了个1/2/shell.php这个时候取的$name既是shell.php。然后后面我需要用../跳转到根目录下，再把刚才记下的路径放在后面（上图第二个红框），发包后数据库里就改好了。再访问一下localhost/think/index.php?app=photo，生成shell.php：\n\n查看http://localhost/think/cache/photo/170/shell.php即可：\n\n所以说这是一个“二次getshell”，先让危险的数据进入数据库，再通过程序取出，getshell。   修复方案：  你们懂。   版权声明：转载请注明来源 phith0n@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：无影响厂商忽略 忽略时间：2014-11-07 19:26 厂商回复：  最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2014-08-12 19:25 |    \t\troker \t\t\t( 普通白帽子  |\t\t\t        Rank:357 漏洞数:108        )\t\t \n  前排顶师傅。    \n     2014-08-12 21:57 |    \t\tphith0n  \t\t\t( 核心白帽子 |\t\t\t        Rank:656 漏洞数:107        | 一个想当文人的黑客~)\t\t \n  @xsser @疯狗怎么这个也走小厂商呀。。。这么经典的二次getshell。。。    \n     2014-08-12 22:02 |    \t\tBadCat \t\t\t( 实习白帽子  |\t\t\t        Rank:81 漏洞数:21        | 悲剧的我什么都不会)\t\t \n  这牛了，真的牛了...我看那么久的代码都没找到 T_T （我还是太浅了    \n     2014-08-24 11:23 |    \t\t廷廷 \t\t\t( 路人 |\t\t\t        Rank:0 漏洞数:1        | 有很强的好奇心，爱好广泛，求女女带走。。...)\t\t \n  前排顶师傅。 师傅好厉害    \n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}