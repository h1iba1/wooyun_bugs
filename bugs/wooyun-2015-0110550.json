{"id": 32690, "wybug_id": "wooyun-2015-0110550", "wybug_title": "Haidao网店系统 注入+xss", "wybug_corp": "www.haidao.la", "wybug_author": "路人曱", "wybug_date": "2015-04-27 15:40", "wybug_open_date": "2015-07-26 16:20", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "15", "wybug_status": "厂商已经修复", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-04-27：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-04-27：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2015-06-21：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-07-01：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-07-11：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-07-26：\t厂商已经修复漏洞并主动公开，细节向公众公开  简要描述： rt 详细说明：  haidaocms最新版注入漏洞文件:/appliaction/Controller/User/UserController.class.php49-70行\npublic function update_name(){        $user = getUserInfo($this->userid);        $name = I('name');        if (empty($name)) {                        showmessage('昵称不能为空','',1);                   }        //验证修改的昵称是否使用        $username=model('User')->unique_name($name,$user['id']);        if (!$username) {             showmessage('昵称已被使用！','',1);        }        $result=model('User')->where(array('id'=>$user['id']))->save(array('username'=>$name));        if ($result) {            showmessage('修改成功','',1);                  }else{           showmessage('修改失败','',1);                   }    }\n获取name参数看下I函数 \nfunction I($name,$default='',$filter=null) {    if(strpos($name,'.')) { // 指定参数来源        list($method,$name) =   explode('.',$name,2);    }else{ // 默认为自动判断        $method =   'param';    }    switch(strtolower($method)) {        case 'get'     :   $input =& $_GET;break;        case 'post'    :   $input =& $_POST;break;        case 'put'     :   parse_str(file_get_contents('php://input'), $input);break;        case 'param'   :              switch($_SERVER['REQUEST_METHOD']) {                case 'POST':                    $input  =  $_POST;                    break;                case 'PUT':                    parse_str(file_get_contents('php://input'), $input);                    break;                default:                    $input  =  $_GET;            }            if(C('VAR_URL_PARAMS') && isset($_GET[C('VAR_URL_PARAMS')])){                $input  =   array_merge($input,$_GET[C('VAR_URL_PARAMS')]);            }            break;        case 'request' :   $input =& $_REQUEST;   break;        case 'session' :   $input =& $_SESSION;   break;        case 'cookie'  :   $input =& $_COOKIE;    break;        case 'server'  :   $input =& $_SERVER;    break;        case 'globals' :   $input =& $GLOBALS;    break;        default:            return NULL;    }    // 全局过滤    // array_walk_recursive($input,'filter_exp');    if(C('VAR_FILTERS')) {        $_filters    =   explode(',',C('VAR_FILTERS'));        foreach($_filters as $_filter){            // 全局参数过滤            array_walk_recursive($input,$_filter);        }    }    if(empty($name)) { // 获取全部变量        $data       =   $input;         $filters    =   isset($filter)?$filter:C('DEFAULT_FILTER');        if($filters) {            $filters    =   explode(',',$filters);            foreach($filters as $filter){                $data   =   array_map($filter,$data); // 参数过滤            }        }            }elseif(isset($input[$name])) { // 取值操作        $data       =\t$input[$name];        $filters    =   isset($filter)?$filter:C('DEFAULT_FILTER');        if($filters) {            $filters    =   explode(',',$filters);            foreach($filters as $filter){                if(function_exists($filter)) {                    $data   =   is_array($data)?array_map($filter,$data):$filter($data); // 参数过滤                }else{                    $data   =   filter_var($data,is_int($filter)?$filter:filter_id($filter));                    if(false === $data) {                        return\t isset($default)?$default:NULL;                    }                }            }        }    }else{ // 变量默认值        $data       =\t isset($default)?$default:NULL;    }    return $data;}\n并没有对string进行任何过滤unique_name()函数\nfunction unique_name($user_name, $user_id = 0)    {        $conditions = \"username = '\" . $user_name . \"'\";        $user_id && $conditions .= \" AND id <> '\" . $user_id . \"'\";        return count($this->where($conditions)->find()) == 0;    }\n单引号闭合直接进入查询证明:http://127.0.0.1/haidao/index.php?m=user&c=user&a=userinfo更改昵称中插入\n') or if(ascii(mid((select password from hd_admin_user),1,1))=57,sleep(1),1)#\n\n\n\n\n成功延迟   漏洞证明：  存储xss直打后台\n\n\n\n看下代码：\npublic function add(){\t\tif (IS_POST) {\t\t\t$_GET['user_id'] = is_login();\t\t\t$_GET['user_name'] = 0;\t\t\tif ($_GET['user_id']) {\t\t\t\t$_GET['user_name'] = cookie('_uname');\t\t\t}\t\t\t// 过滤xss攻击;\t\t\t$_GET['question'] = remove_xss($_GET['question']);\t\t\t$result = $this->db->update($_GET);\t\t\tif (!$result) {\t\t\t\tshowmessage('商品咨询发表失败');\t\t\t} else {\t\t\t\tshowmessage('商品咨询完成，请等待管理员审核！', 1000,1);\t\t\t}\t\t} else {\t\t\tshowmessage('请勿非法提交');\t\t}\t  \t}\t }\n仅用remove_xss函数过滤\nfunction remove_xss($string) { \t $string = preg_replace('/[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F]+/S', '', $string);\t $parm1 = Array('javascript', 'vbscript', 'expression', 'applet', 'meta', 'xml', 'blink', 'link', 'script', 'embed', 'object', 'iframe', 'frame', 'frameset', 'ilayer', 'layer', 'bgsound', 'title', 'base');\t $parm2 = Array('onabort', 'onactivate', 'onafterprint', 'onafterupdate', 'onbeforeactivate', 'onbeforecopy', 'onbeforecut', 'onbeforedeactivate', 'onbeforeeditfocus', 'onbeforepaste', 'onbeforeprint', 'onbeforeunload', 'onbeforeupdate', 'onblur', 'onbounce', 'oncellchange', 'onchange', 'onclick', 'oncontextmenu', 'oncontrolselect', 'oncopy', 'oncut', 'ondataavailable', 'ondatasetchanged', 'ondatasetcomplete', 'ondblclick', 'ondeactivate', 'ondrag', 'ondragend', 'ondragenter', 'ondragleave', 'ondragover', 'ondragstart', 'ondrop', 'onerror', 'onerrorupdate', 'onfilterchange', 'onfinish', 'onfocus', 'onfocusin', 'onfocusout', 'onhelp', 'onkeydown', 'onkeypress', 'onkeyup', 'onlayoutcomplete', 'onload', 'onlosecapture', 'onmousedown', 'onmouseenter', 'onmouseleave', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'onmousewheel', 'onmove', 'onmoveend', 'onmovestart', 'onpaste', 'onpropertychange', 'onreadystatechange', 'onreset', 'onresize', 'onresizeend', 'onresizestart', 'onrowenter', 'onrowexit', 'onrowsdelete', 'onrowsinserted', 'onscroll', 'onselect', 'onselectionchange', 'onselectstart', 'onstart', 'onstop', 'onsubmit', 'onunload');\t $parm = array_merge($parm1, $parm2); \tfor ($i = 0; $i < sizeof($parm); $i++) { \t\t$pattern = '/'; \t\tfor ($j = 0; $j < strlen($parm[$i]); $j++) { \t\t\tif ($j > 0) { \t\t\t\t$pattern .= '('; \t\t\t\t$pattern .= '(&#[x|X]0([9][a][b]);?)?'; \t\t\t\t$pattern .= '|(&#0([9][10][13]);?)?'; \t\t\t\t$pattern .= ')?'; \t\t\t}\t\t\t$pattern .= $parm[$i][$j]; \t\t}\t\t$pattern .= '/i';\t\t$string = preg_replace($pattern, '', $string); \t}\treturn $string;}\nscript中间加个script  即可绕过   修复方案：  注入的话 别用I获取xss的话  你们的防护代码跟74cms很像 可以看下他们的过滤方式   版权声明：转载请注明来源 路人曱@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：中 漏洞Rank：10  确认时间：2015-04-27 16:19 厂商回复： 感谢对海盗电商的关注，我们会尽快修正此问题。 最新状态： 2015-05-14：已于2015.05.08日发布版本修复  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "中", "wybug_rank_fromcorp": 10, "Ranks": null}