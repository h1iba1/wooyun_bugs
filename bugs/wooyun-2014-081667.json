{"id": 48341, "wybug_id": "wooyun-2014-081667", "wybug_title": "hdwiki  sql注射漏洞", "wybug_corp": "互动在线（北京）科技有限公司", "wybug_author": "Noxxx", "wybug_date": "2014-11-04 15:45", "wybug_open_date": "2014-12-30 14:44", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "漏洞已经通知厂商但是厂商忽略漏洞", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-11-04：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-11-09：\t厂商主动忽略漏洞，细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2015-01-03：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-01-13：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-01-23：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-12-30：\t细节向公众公开  简要描述： rt 详细说明：  control/doc.php：docreate方法\n……流程条件省略……\t\t}else{//点击发布词条\t\t\tif($this->setting['checkcode']!=3 && $this->setting['doc_verification_create_code'] && strtolower($this->post['code'])!=$_ENV['user']->get_code()){\t\t\t\t$this->message($this->view->lang['codeError'],'BACK',0);\t\t\t}\t\t\t\t\t\tif(@trim($this->post['content'])==''||@trim($this->post['title'])==''){\t\t\t\t$this->message($this->view->lang['contentIsNull'],'BACK',0);\t\t\t}\t\t\t//  #  调用doc类中的replace_danger_word方法但对我们post[‘title’]没啥影响。                        //  #  接着string方法substring 截取81位字符刚好可以把我们的addslashes添加的\\给截取掉。                        //  #  我们只需要找到一处可控即可。接着往下看有没有调用doc的。\t\t\t$doc['title']=string::substring(string::stripscript($_ENV['doc']->replace_danger_word(trim($this->post['title']))),0,80); \t\t\t\t\t\t$_doc=$this->db->fetch_by_field('doc','title',$doc['title']);\t\t\tif((bool)$_doc && !empty($_doc['content'])){\t\t\t\t$this->message($this->view->lang['createDocTip5'],'BACK',0);\t\t\t}// # category 词条分类\t\t\tif(!(bool)$_ENV['category']->vilid_category($this->post['category'])){ \t\t\t\t$this->message($this->view->lang['categoryNotExist'],'BACK',0);\t\t\t}\t\t\t\t\t\t\tif((bool)$this->post['summary']){\t\t\t\t$doc['summary']=trim(strip_tags($_ENV['doc']->replace_danger_word($this->post['summary'])));\t\t\t}\t\t\t$doc['did']=intval($this->post['did']);\t\t\t$doc['letter']=string::getfirstletter($this->post['title']);\t\t\t$doc['category']=$this->post['category'];……………………\t\t\t\t\t\t\t\t\t$doc['summary'] = (bool)$doc['summary']?$doc['summary']:$doc['content'];                          // #同上 有一处可控字符                         // #继续向下看。\t\t\t$doc['summary'] = trim(string::convercharacter(string::substring(strip_tags($doc['summary']),0,100)));//去除换行符截断字符串\t\t\t\t$doc['summary'] = htmlspecialchars(string::stripscript(strip_tags($doc['summary'])));//去除特殊字符 去除javascript代码……………………\t\t\tif($doc['visible'] == 1){\t\t\t\t$_ENV['user']->add_credit($this->user['uid'],'doc-create',$this->setting['credit_create'],$this->setting['coin_create']);\t\t\t}                    // #调用 doc类add_doc方法。                   //  doc数组被传进去了我们进去看看。\t\t\t$did=$_ENV['doc']->add_doc($doc);\n\nModel/doc.class.php add_doc方法\tfunction add_doc($doc) {\t\t$editions = ($this->base->setting['base_createdoc']==1)?1:0;\t\t$doc['title'] = trim($doc['title']);\t\tif ($doc['did']){\t\t\t$this->db->query(\"REPLACE INTO \".DB_TABLEPRE.\"doc\t\t\t(did,letter,title,tag ,summary ,content,author,authorid,time,lastedit,lasteditor,lasteditorid,visible,editions)\t\t\tVALUES (\".$doc['did'].\",'\".$doc['letter'].\"','\".$doc['title'].\"','\".$doc['tags'].\"','\".$doc['summary'].\"','\".$doc['content'].\"',\t\t\t'\".$this->base->user['username'].\"','\".$this->base->user['uid'].\"',\t\t\t\".$doc['time'].\",\".$doc['time'].\",'\".$this->base->user['username'].\"','\".$this->base->user['uid'].\"','\".$doc['visible'].\"',$editions)\");\t\t\t$did = $doc['did'];\t\t\t$this->db->query(\"DELETE FROM \".DB_TABLEPRE.\"autosave WHERE did=\".$did.\" AND uid=\".$this->base->user['uid']);\t\t}else{ \t\t        // 我们的可控点都在这了截取字符\\破坏后面的单引号，这样我们就能注射了。                              //构造exp\t\t\t$this->db->query(\"INSERT INTO \".DB_TABLEPRE.\"doc\t\t\t(letter,title,tag ,summary ,content,author,authorid,time,lastedit,lasteditor,lasteditorid,visible,editions)\t\t\tVALUES ('\".$doc['letter'].\"','\".$doc['title'].\"','\".$doc['tags'].\"','\".$doc['summary'].\"','\".$doc['content'].\"',\t\t\t'\".$this->base->user['username'].\"','\".$this->base->user['uid'].\"',\t\t\t\".$doc['time'].\",\".$doc['time'].\",'\".$this->base->user['username'].\"','\".$this->base->user['uid'].\"','\".$doc['visible'].\"',$editions)\");\t\t\t$did = $this->db->insert_id();\t\t\t$this->add_doc_category($did, $doc['category']);\t\t\t$this->db->query(\"DELETE FROM \".DB_TABLEPRE.\"autosave WHERE did=\".$did.\" AND uid=\".$this->base->user['uid']);\t\t}\t\tif($this->base->setting['base_createdoc']==1){\t\t\t$this->db->query(\"INSERT INTO \".DB_TABLEPRE.\"edition\t\t\t(did,author,authorid,time,ip,title,tag,summary,content,words,images )\t\t\tVALUES ($did,'\".$this->base->user['username'].\"','\".$this->base->user['uid'].\"',\t\t\t'\".$doc['time'].\"','\".$this->base->ip.\"','\".$doc['title'].\"','\".$doc['tags'].\"','\".$doc['summary'].\"','\".$doc['content'].\"','\".$doc['words'].\"','\".$doc['images'].\"')\");\t\t}\t\treturn $did;\t}\n\nSQL日志INSERT INTO wiki_doc (letter,title,tag ,summary ,content,author,authorid,time,lastedit,lasteditor,lasteditorid,visible,editions) VALUES ('t','testp','','aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaddwwwwwwaaaadddddwww\\','TEST', 'cccasc','2', 1414842300,1414842300,'cccasc','2','1',0)\n   漏洞证明：  \n\n由于语句加了换行，在mysql某些版本导致/**注释失败。测试版本 ：5.1   修复方案：  转义   版权声明：转载请注明来源 Noxxx@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：无影响厂商忽略 忽略时间：2014-12-30 14:44 厂商回复：  最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2014-12-17 11:59 |    \t\thuotoo \t\t\t( 路人 |\t\t\t        Rank:20 漏洞数:3        | 努力学习中)\t\t \n  测试了 但是没有成功    \n     2014-12-17 17:07 |    \t\tNoxxx \t\t\t( 普通白帽子  |\t\t\t        Rank:509 漏洞数:41        )\t\t \n  @huotoo 和mysql版本有关系,    \n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}