{"id": 6026, "wybug_id": "wooyun-2013-043238", "wybug_title": "记事狗微博全版本注册管理员漏洞", "wybug_corp": "杭州神话", "wybug_author": "Chora", "wybug_date": "2013-11-18 14:03", "wybug_open_date": "2014-02-16 14:04", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2013-11-18：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2013-11-19：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2013-11-22：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2014-01-13：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-01-23：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-02-02：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-02-16：\t细节向公众公开  简要描述： 每个月总有那么几天没有饭吃。 详细说明：  问题出在一个通用函数上，只要用到这个函数的都存在漏洞，爆管理账号密码的我就不写了，密码有salt意义不大。如果能绕过通用防注入，这套系就太多漏洞了。很多地方都是因为不能注释，闭合不了，而不能进行利用，虽然很多地方都能引入引号但是过滤了一些危险函数。总体来讲还是挺安全的。include/class/passport.class.php\nfunction login($nickname, $password, $is = '') {\t\t\t......\t\t\t$member = $this->login_check($nickname, $password, $is);\t\t\t$_uid = $member['uid'];\t\t\tif($_uid < 1)\t\t\t{\t\t\t\t$error = '登录失败： ' . $login_rets[$_uid];\t\t\t\treturn array('uid' => $_uid, 'error'=>$error);\t\t\t}\t\t\telse //登陆成功\t\t\t{\t\t\t\t$member['uc_syn_html'] = $uc_syn_html;\t\t\t\t\t\t\t\t$timestamp=time();\t\t\t\t$last_ip=client_ip();//问题出在这儿，跟进0x01\t\t\t\t$sql=\"\t\tUPDATE\t\t\t\".TABLE_PREFIX.'members'.\"\t\tSET\t\t\t`lastactivity`='{$timestamp}',\t\t\t`lastip`='{$last_ip}'\t\tWHERE\t\t\tuid={$_uid}\";\t\t\t\tDB::query($sql);\t\t\t}\ninclude/function/global.func.php 0x01\nfunction client_ip() {\t$vs = array('HTTP_CLIENT_IP', 'HTTP_X_FORWARDED_FOR', 'REMOTE_ADDR'); //HTTP_CLIENT_IP,HTTP_X_FORWARDED_FOR是可伪造的。\tforeach($vs as $v) {\t\t$ip = (getenv($v) ? getenv($v) : $_SERVER[$v]);\t\tif($ip && strcasecmp($ip, 'unknown')) {\t\t\tbreak;\t\t}\t}\t$ips = explode('.', $ip); /*以点号为分隔符,分割IP.然后将每一位与1比较,看是否小于1，如果小于1,ip=127.0.0.1我们提交1.1.1.1',role_id=2,role_type='admin第一个1不小于1,第二个1不小于1,第3个1不小于1,第4个1',role_id=2,role_type='admin其实与1比较值也是1,所以还是不小于1，成功绕过。*/\tfor($i = 0; $i < 4; $i++) {\t\tif($ips[$i] < 1) {\t\t\t$ip = '127.0.0.1';\t\t\tbreak;\t\t}\t}\treturn $ip;}\n伪造HTTP_CLIENT_IP或者HTTP_X_FORWARDED_FOR，这里我就伪造HTTP_CLIENT_IP来做演示。伪造HTTP_CLIENT_IP为1.1.1.1',role_id=2,role_type='admin首先不要伪造HTTP_CLIENT_IP注册一个用户，因为注册的时候也用到了client_ip，因为过滤了注释，而且同时把client_ip赋值给了last_ip跟reg_ip，所以闭合不了，所以不能直接注册为管理员。正常流程注册一个普通账号过后。它提示向大家做一个自我介绍，给大家一个与我互动的机会！我的第一次（我的第一次没了。。。）不用管它，直接伪造HTTP_CLIENT_IP，然后刷新就注入成功了。!!!注意看我图里面的Modify Headers的状态(左下角红色的那个)。登陆管理员的时候记得不要伪造HTTP_CLIENT_IP,不然会提示SQL语句错误，因为登陆的时候也用到了ip....当然你也可以直接在登陆页面注入。   漏洞证明：  \n\n\n\n\n\n\n\n\n\n   修复方案：  求包养。。。   版权声明：转载请注明来源 Chora@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：15  确认时间：2013-11-19 11:14 厂商回复： 非常感谢乌云白帽子 @Chora 的反馈，该问题由于过滤不严导致，我们已经在修复了 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2013-11-18 14:05 |    \t\tbig、face \t\t\t( 普通白帽子  |\t\t\t        Rank:144 漏洞数:36        | |上天请赐我一个洞|想要一件乌云衣服|)\t\t \n  前排看大牛..    \n     2013-11-18 14:11 |    \t\tSkull \t\t\t( 实习白帽子  |\t\t\t        Rank:95 漏洞数:33        | 菜鸟一枚。)\t\t \n  mark 这个太碉堡了    \n     2013-11-18 14:15 |    \t\t雷锋 \t\t\t( 路人 |\t\t\t        Rank:12 漏洞数:2        | 承接:钻井，架工，木工，电工，水暖工，力...)\t\t \n  关注    \n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 15, "Ranks": null}