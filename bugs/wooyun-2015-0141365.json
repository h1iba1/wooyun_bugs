{"id": 68240, "wybug_id": "wooyun-2015-0141365", "wybug_title": "大同市住房公积金存SQL注入近20万用户信息泄漏", "wybug_corp": "大同市住房公积金管理中心", "wybug_author": "纳米翡翠", "wybug_date": "2015-09-17 17:55", "wybug_open_date": "2015-11-03 20:14", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "15", "wybug_status": "已交由第三方合作机构(cncert国家互联网应急中心)处理", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-09-17：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-09-19：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2015-09-29：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-10-09：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-10-19：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-11-03：\t细节向公众公开  简要描述： 大同市住房公积金可绕过过滤进行SQL注入，近20万用户信息泄漏 详细说明：  1.打开大同市住房公积金主站，右侧有查询，该查询处存在sql注入http://**.**.**.**/\n\n2.随便提交并抓包\n\n发现是一个302的跳转，中转的页面一下子返回了300多条信息，可以判断有注入：\n\n经过研究最终发现漏洞的页面不是cha1.asp而是中转后的cha2.asp，而且是cookie注入\n\n于是丢到sqlmap里面去跑，跑半天竟然提示没有注入，明明存在却提示没有，于是手动测试，把cookie里面的143423333333333333%27or%271%27%3D%271改成143423333333333333' or '1'='1之后发现注入失败，再改回去后注入成功，后把空格去掉也不行，把引号替换掉也不行，最后把等号url编码之后发现注入成功，原来系统是通过等号判断的，于是直接在sqlmap里面加了一个tamper，注入成功sqlmap -r /root/sqlmap/**.**.**.** --tamper=charunicodeencode --dbms=\"Microsoft SQL Server\" --dbs\n\n\n\n接近20万数据\n\n没有密码，直接通过用户名和身份证确认信息\n\n   漏洞证明：     修复方案：     版权声明：转载请注明来源 纳米翡翠@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：11  确认时间：2015-09-19 20:13 厂商回复： CNVD确认并复现所述漏洞情况，已经转由CNCERT下发给山西分中心，由山西分中心后续协调网站管理单位处置。 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 11, "Ranks": null}