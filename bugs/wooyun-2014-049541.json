{"id": 58809, "wybug_id": "wooyun-2014-049541", "wybug_title": "盛大在线主站URL跳转(钓鱼) 二", "wybug_corp": "盛大在线", "wybug_author": "隐形小桃", "wybug_date": "2014-01-22 14:16", "wybug_open_date": "2014-03-08 14:16", "wybug_type": "URL跳转", "wybug_level": "中", "wybug_rank_0": "10", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["跳转", "钓鱼风险", "安全策略绕过"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-01-22：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-01-22：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-02-01：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-02-11：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-02-21：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-03-08：\t细节向公众公开  简要描述： 第一篇请访问以下URL:http://www.wooyun.org/bugs/wooyun-2014-049408本次的漏洞也使用了相同的方法绕过了白名单检查。但是传参数的方法更为特殊，修复方案也和第一篇不同。 详细说明：  1、存在漏洞的URL如下\nhttp://www.sdo.com/go\n\\\\厂商回复：\\\\谢谢报告，万分感谢，但是呢洞主好像截图少了一张，链接打开时盛大在线会友情提示即将跳转贵厂商提到的另一个漏洞应该就是这个吧，昨天没时间发了，于是今天补上。2、使用URL中的#（浏览器导向符）来递交参数，同样需要添加伪参数递交白名单中存在的关键词【?sdo.com】。\nhttp://www.sdo.com/go#http://www.wooyun.org?sdo.com\n   漏洞证明：  3、根据HTTP协议，使用#的传送的值【#http://www.wooyun.org?sdo.com】并不会在HTTP包中发送，自然Proxy是截取不到的，也不会在Web服务器的日志里留下记录，直接看图吧。\n\n\n\n4、顺便试验了下本机的URL\n\n5、为了验证URL中#的传值方式是否被各种浏览器所接受，我在IE11、Chrome26、FX20上都做了一下验证。\n\n   修复方案：  为什么说修复方案和第一篇不一样呢？原因如下：在我进行测试的时候我发现，只有使用如下URL的时候，才能通过白名单验证\nhttp://www.sdo.com/go#http://www.wooyun.org?sdo.com\n而使用如下URL的时候，不能通过白名单验证\nhttp://www.sdo.com/go#http://www.wooyun.org\n也就是说一定有某一处使用了【location.hash】方法读取了#传送的参数，但我没有找到到底是哪里使用了这个方法。那么强化白名单的验证方法肯定还是修复方案之一，但是我认为根本不要接受客户端的传值来进行跳转才是最好的方法。不管是将JS的白名单验证放到后台去做，然后返回HTTP 302进行跳转，甚至是直接写静态链接都是修补URL跳转不错的方法。   版权声明：转载请注明来源 隐形小桃@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：低 漏洞Rank：5  确认时间：2014-01-22 14:53 厂商回复： 谢谢报告，#号后面的内容的确在日志里无法查看，HTTP请求不包括#。 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2014-01-22 14:58 |    \t\t隐形小桃 \t\t\t( 路人 |\t\t\t        Rank:8 漏洞数:4        | 桃ちゃんかわいい！！！)\t\t \n  3、4   两个步骤里的图放反了…    \n  \n\n\n", "wybug_level_fromcorp": "低", "wybug_rank_fromcorp": 5, "Ranks": null}