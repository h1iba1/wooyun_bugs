{"id": 1307, "wybug_id": "wooyun-2014-065613", "wybug_title": "微信某示例代码函数使用不当可能会导致第三方厂商躺枪", "wybug_corp": "腾讯", "wybug_author": "索马里的海贼", "wybug_date": "2014-06-20 15:40", "wybug_open_date": "2014-09-18 15:42", "wybug_type": "默认配置不当", "wybug_level": "中", "wybug_rank_0": "15", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-06-20：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-06-23：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-06-26：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2014-08-17：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-08-27：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-09-06：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-09-18：\t细节向公众公开  简要描述： 起了一个坏头，潜在影响包括最新版discuzx3.2等 详细说明：  从官方下了最新的微信开放平台接入示例文件（php）http://mp.weixin.qq.com/mpres/htmledition/res/wx_sample.zipwx_sample.php行27\n$postStr = $GLOBALS[\"HTTP_RAW_POST_DATA\"]; //extract post dataif (!empty($postStr)){            \t$postObj = simplexml_load_string($postStr, 'SimpleXMLElement', LIBXML_NOCDATA);\t$fromUsername = $postObj->FromUserName;\t$toUsername = $postObj->ToUserName;\t$keyword = trim($postObj->Content)\n使用了simplexml_load_string函数来解析post过来的xml 这个函数存在xxe威胁再来看看权限检查的过程http://mp.weixin.qq.com/wiki/index.php?title=%E6%8E%A5%E5%85%A5%E6%8C%87%E5%8D%97\nprivate function checkSignature(){\t$signature = $_GET[\"signature\"];\t$timestamp = $_GET[\"timestamp\"];\t$nonce = $_GET[\"nonce\"];\t \t\t\t$token = TOKEN;\t$tmpArr = array($token, $timestamp, $nonce);\tsort($tmpArr, SORT_STRING);\t$tmpStr = implode( $tmpArr );\t$tmpStr = sha1( $tmpStr );\t\tif( $tmpStr == $signature ){\t\treturn true;\t}else{\t\treturn false;\t}}}\n\n$tmpArr = array($token, $timestamp, $nonce);\n如果TOKEN未初始化 因为$timestamp和$nonce又来自用户提交 所以可以构造出合法的signature绕过函数的检查。   漏洞证明：   WooYun: PHPYUN最新版任意文件读取漏洞  WooYun: PHPYUN最新版XML注入及SQL注入获取管理员账号（无视任何防御） 这两个phpyun的虽然没公开 但根据厂家回复基本能确定就是微信api出的问题另外最新版discuzx3.2也是 默认安装就带有微信插件，但是未启用。换而言之 未初始化TOKEN。/source/plugin/wechat/wechat.lib.class.php行153\n$postdata = file_get_contents(\"php://input\");if ($postdata) {\tif (!$this->_checkSignature()) {\t\treturn;\t}\t$postObj = simplexml_load_string($postdata, 'SimpleXMLElement', LIBXML_NOCDATA);\t$postObj = $this->_handlePostObj($postObj);        $this->_activeHook('receiveAllStart', $postObj);\n这里先调用了_checkSignature()检查权限，在未初始化状态下，可以用上面说的提交timestamp、nonce和对应的signature绕过检查进入下面的simplexml_load_string不过很可惜未启用插件的话$hook也一样没初始化 所以_activeHook将找不到对应的class去操作。这里没法形成安全漏洞。不过如果有后台权限可以配置插件的话就另说了。反正DZ跟你们是一家 就在这说了一样。   修复方案：  慎用simplexml_load_string检查权限之前判断是否初始化了token示例代码要用心啊。。人家都是很放心的用你的代码的。   版权声明：转载请注明来源 索马里的海贼@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：低 漏洞Rank：1  确认时间：2014-06-23 16:53 厂商回复： 非常感谢您的报告，问题已着手处理，感谢大家对腾讯业务安全的关注。如果您有任何疑问，欢迎反馈，我们会有专人跟进处理。 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2014-06-20 16:06 |    \t\t疯狗  \t\t\t( 实习白帽子  |\t\t\t        Rank:44 漏洞数:2        | 阅尽天下漏洞，心中自然无码。)\t\t \n  挺有想法 挖这个 网上很多示例代码或者现成的类都有可能有问题 一些拿来主意很容易被坑    \n     2014-06-20 16:52 |    \t\t索马里的海贼 \t\t\t( 普通白帽子  |\t\t\t        Rank:254 漏洞数:24        | http://tieba.baidu.com/f?kw=WOW)\t\t \n  @疯狗 狗哥回来啦？蜜月去哪了？    \n     2014-09-18 20:17 |    \t\tsutdy \t\t\t( 普通白帽子  |\t\t\t        Rank:101 漏洞数:33        | 0.0)\t\t \n  @疯狗 狗哥回来啦？蜜月去哪了？    \n  \n\n\n", "wybug_level_fromcorp": "低", "wybug_rank_fromcorp": 1, "Ranks": null}