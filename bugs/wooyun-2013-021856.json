{"id": 12553, "wybug_id": "wooyun-2013-021856", "wybug_title": "phpcms问答某模块存储型xss,可定向获取用户cookie", "wybug_corp": "phpcms", "wybug_author": "梧桐雨", "wybug_date": "2013-04-15 11:20", "wybug_open_date": "2013-05-30 11:21", "wybug_type": "xss跨站脚本攻击", "wybug_level": "中", "wybug_rank_0": "12", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["第三方不可信程序", "持久型", "利用技巧", "存储型", "黑盒测试技巧"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2013-04-15：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2013-04-15：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2013-04-25：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2013-05-05：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2013-05-15：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2013-05-30：\t细节向公众公开  简要描述： 黑名单惹的祸啊 详细说明：  在回帖处，有个编辑器功能。编辑器存在一个可以编辑源码，当时第一反映就是。这里肯定存在xss。果不其然，但是，在开始的时候测试\n<script>alert(1)</script>\n以及\n<img src=1 onerror=alert(1) />\n的时候，发现都无法执行js代码。于是乎，便上http://html5sec.org/找些偏门的代码测试。当测试：<form id=\"test\"></form><button form=\"test\" formaction=\"javascript:alert(1)\">X</button>的时候，我惊讶的发现居然没过滤。如图，点击之后触发\n\n\n\n当然，这个还需要点击。毕竟回帖的人不是每个人都会点击。那怎么样才能把xss的成功率扩大呢？别着急。在http://html5sec.org/里，还是有不少可以使用的代码。譬如：<input onfocus=alert(1) autofocus> 打开页面时候触发(ie10,谷歌,火狐4.5有效)除了上面这个，还有很多都是通杀浏览器，不一一测试，仅仅拿这个证明危害。\n\n这样我们就可以广撒网捞鱼了。   漏洞证明：  值得一提的是。<input onfocus=alert(1) autofocus> 虽然是以onfocus来执行js。但是别忘了我们还有eval。可以构造<input onfocus=eval(\"这里是我们想执行的代码\") autofocus>来完成攻击。构造好的js如下：\n\n当用户访问这篇帖子，就是受害者了。\n\n\n\n不再一一去尝试了。希望phpcms团队也能重视该问题。   修复方案：  该编辑器是基于黑名单过滤的。如果实在要开启编辑源码功能，建议采用白名单过滤。不然最好还是关闭开放编辑源码功能的权限，因为你们根本不知道跨站师会用哪些你们根本不知道的代码。这里还有一枚反射型的xss,顺便提一下吧：http://118.244.225.145/index.php?m=ask&c=team&a=team_list&order=team_point&catid=&belong=team&name=\"><script>alert%281%29<%2Fscript>   版权声明：转载请注明来源 梧桐雨@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：中 漏洞Rank：10  确认时间：2013-04-15 11:44 厂商回复： 感谢提交！！ 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2013-05-07 00:08 |    \t\twefgod \t\t\t( 普通白帽子  |\t\t\t        Rank:1807 漏洞数:170        | 力不从心)\t\t \n  来，把EXP发到评论这！    \n  \n\n\n", "wybug_level_fromcorp": "中", "wybug_rank_fromcorp": 10, "Ranks": null}