{"id": 72367, "wybug_id": "wooyun-2015-0142913", "wybug_title": "espcms最新版V6.4.15.08.25任意用户登录", "wybug_corp": "易思ESPCMS企业网站管理系统", "wybug_author": "Xser", "wybug_date": "2015-09-25 11:14", "wybug_open_date": "2015-12-29 11:17", "wybug_type": "设计缺陷/逻辑错误", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "漏洞已经通知厂商但是厂商忽略漏洞", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["逻辑错误"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-09-25：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-09-30：\t厂商主动忽略漏洞，细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2015-11-24：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-12-04：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-12-14：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-12-29：\t细节向公众公开  简要描述： 绝对是最新版本！版本信息：V6.4.15.08.25 UTF8 正式版更新时间：2015-08-25 12:29:04 软件大小：7.67MB25号更新的 详细说明：  出现在用户登录处/interface/memebermain.php中\nfunction in_center() {\t\tif ($this->CON['mem_isucenter']) {\t\t\tinclude_once admin_ROOT . 'public/uc_client/client.php';\t\t}\t\tparent::start_pagetemplate();\t\tparent::member_purview();\t\t$lng = (admin_LNG == 'big5') ? $this->CON['is_lancode'] : admin_LNG;\t\t$db_where = \"userid=$this->ec_member_username_id AND username='$this->ec_member_username' \";\t\t$db_table1 = db_prefix . 'member AS a';\t\t$db_table2 = db_prefix . 'member_value AS b';\t\t$db_sql = \"SELECT * FROM $db_table1 LEFT JOIN $db_table2 ON a.userid = b.userid  WHERE a.userid = $this->ec_member_username_id \";\t\t$rsMember = $this->db->fetch_first($db_sql);\t\t$rsMember['userid'] = $this->ec_member_username_id;\t\t$rsMember['rankname'] = $this->get_member_purview($rsMember['mcid'], 'rankname');\t\t$userid = intval($rsMember['userid']);\t\tif (empty($userid)) {\t\t\texit('user err!');\t\t}\nespcms验证用户信息的都是采用cookie验证uid的，只要可以伪造就可以任意登录我们跟踪一下uid的处理方式\n$db_where = \"userid=$this->ec_member_username_id AND username='$this->ec_member_username' \";\n这里同时验证了uid和用户名带入数据库查询看是否同一行我们跟踪下处理uid的函数在/public/class_connector.php\ntion member_purview($userrank = false, $url = null, $upurl = false) {\t\t$this->ec_member_username = $this->fun->eccode($this->fun->accept('ecisp_member_username', 'C'), 'DECODE', db_pscode);\t\t$user_info = explode('|', $this->fun->eccode($this->fun->accept('ecisp_member_info', 'C'), 'DECODE', db_pscode));\t\tlist($ec_member_username_id, $this->ec_member_alias, $ec_member_integral, $ec_member_mcid, $this->ec_member_email, $this->ec_member_lastip, $this->ec_member_ipadd, $this->ec_member_useragent, $this->ec_member_adminclassurl) = $user_info;\t\t$this->ec_member_username_id = intval($ec_member_username_id);\t\t$this->ec_member_integral = intval($ec_member_integral);\t\t$this->ec_member_mcid = intval($ec_member_mcid);\n用户名是取了cookie的值可以控制\n$this->ec_member_username = $this->fun->eccode($this->fun->accept('ecisp_member_username', 'C'), 'DECODE', db_pscode);\n\n$this->ec_member_username_id = intval($ec_member_username_id);\n但uid值被intval就是这个intval帮我们达到任意登录的效果首先我们想注册个4开头后面加任意字母，后面不能是数字什么的然后我们登录\n\n然后查看cookie找到username的值\nnRaNsMCyeu1Rjg2Z3Ms6sNbPYrrvtEhR0HduulhHBWo=\n然后用这个值覆盖到info的值这个info的值是验证uid用的\n\n最后刷新就可以登录uid为4这个用户了\n\n可以看到登录成功了------------------------------------原理是什么呢，intval起了什么效果呢？我们的用户名是4test，然后变cookie值是加密过的把这个值放在处理uid的语句上就是\n$userid=$this->ec_member_username_id=intval('4test')=4\n为什么登录4呢，因为php是弱类型的语言，所以intval就会把4test理解成4那样就覆盖了原来的uid，然后就可以任意登录用户了   漏洞证明：  出现在用户登录处/interface/memebermain.php中\nfunction in_center() {\t\tif ($this->CON['mem_isucenter']) {\t\t\tinclude_once admin_ROOT . 'public/uc_client/client.php';\t\t}\t\tparent::start_pagetemplate();\t\tparent::member_purview();\t\t$lng = (admin_LNG == 'big5') ? $this->CON['is_lancode'] : admin_LNG;\t\t$db_where = \"userid=$this->ec_member_username_id AND username='$this->ec_member_username' \";\t\t$db_table1 = db_prefix . 'member AS a';\t\t$db_table2 = db_prefix . 'member_value AS b';\t\t$db_sql = \"SELECT * FROM $db_table1 LEFT JOIN $db_table2 ON a.userid = b.userid  WHERE a.userid = $this->ec_member_username_id \";\t\t$rsMember = $this->db->fetch_first($db_sql);\t\t$rsMember['userid'] = $this->ec_member_username_id;\t\t$rsMember['rankname'] = $this->get_member_purview($rsMember['mcid'], 'rankname');\t\t$userid = intval($rsMember['userid']);\t\tif (empty($userid)) {\t\t\texit('user err!');\t\t}\nespcms验证用户信息的都是采用cookie验证uid的，只要可以伪造就可以任意登录我们跟踪一下uid的处理方式\n$db_where = \"userid=$this->ec_member_username_id AND username='$this->ec_member_username' \";\n这里同时验证了uid和用户名带入数据库查询看是否同一行我们跟踪下处理uid的函数在/public/class_connector.php\ntion member_purview($userrank = false, $url = null, $upurl = false) {\t\t$this->ec_member_username = $this->fun->eccode($this->fun->accept('ecisp_member_username', 'C'), 'DECODE', db_pscode);\t\t$user_info = explode('|', $this->fun->eccode($this->fun->accept('ecisp_member_info', 'C'), 'DECODE', db_pscode));\t\tlist($ec_member_username_id, $this->ec_member_alias, $ec_member_integral, $ec_member_mcid, $this->ec_member_email, $this->ec_member_lastip, $this->ec_member_ipadd, $this->ec_member_useragent, $this->ec_member_adminclassurl) = $user_info;\t\t$this->ec_member_username_id = intval($ec_member_username_id);\t\t$this->ec_member_integral = intval($ec_member_integral);\t\t$this->ec_member_mcid = intval($ec_member_mcid);\n用户名是取了cookie的值可以控制\n$this->ec_member_username = $this->fun->eccode($this->fun->accept('ecisp_member_username', 'C'), 'DECODE', db_pscode);\n\n$this->ec_member_username_id = intval($ec_member_username_id);\n但uid值被intval就是这个intval帮我们达到任意登录的效果首先我们想注册个4开头后面加任意字母，后面不能是数字什么的然后我们登录\n\n然后查看cookie找到username的值\nnRaNsMCyeu1Rjg2Z3Ms6sNbPYrrvtEhR0HduulhHBWo=\n然后用这个值覆盖到info的值这个info的值是验证uid用的\n\n最后刷新就可以登录uid为4这个用户了\n\n可以看到登录成功了------------------------------------原理是什么呢，intval起了什么效果呢？我们的用户名是4test，然后变cookie值是加密过的把这个值放在处理uid的语句上就是\n$userid=$this->ec_member_username_id=intval('4test')=4\n为什么登录4呢，因为php是弱类型的语言，所以intval就会把4test理解成4那样就覆盖了原来的uid，然后就可以任意登录用户了   修复方案：  改用session   版权声明：转载请注明来源 Xser@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：无影响厂商忽略 忽略时间：2015-12-29 11:17 厂商回复：  漏洞Rank：15  (WooYun评价) 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2015-09-25 11:21 |    \t\t随风的风 \t\t\t( 普通白帽子  |\t\t\t        Rank:180 漏洞数:61        | 微信公众号：233sec  不定期分享各种漏洞思...)\t\t \n  沙发    \n     2015-09-25 11:30 |    \t\t我的邻居王婆婆 \t\t\t( 普通白帽子  |\t\t\t        Rank:2070 漏洞数:366        )\t\t \n  哎呀    \n     2015-09-25 11:58 |    \t\troker \t\t\t( 普通白帽子  |\t\t\t        Rank:372 漏洞数:109        )\t\t \n  大兄弟。够了。    \n     2015-09-25 13:06 |    \t\tXser \t\t\t( 普通白帽子  |\t\t\t        Rank:353 漏洞数:80        | JDSec)\t\t \n  大牛求带我@roker     \n     2015-09-25 16:11 |    \t\tCplusHua \t\t\t( 普通白帽子  |\t\t\t        Rank:248 漏洞数:34        | 乌云奖金:-1)\t\t \n  难道还是Cookie?    \n     2015-09-25 17:03 |    \t\t不能忍 \t\t\t( 实习白帽子  |\t\t\t        Rank:77 漏洞数:39        | 好好学习，不想别的。)\t\t \n  大牛求带我@Xser @roker     \n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}