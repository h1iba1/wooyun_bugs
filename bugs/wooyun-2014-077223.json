{"id": 48362, "wybug_id": "wooyun-2014-077223", "wybug_title": "php 5.x.x 两个小漏洞(phpyun和新云cms shell作证)", "wybug_corp": "PHP", "wybug_author": "menmen519", "wybug_date": "2014-10-13 15:44", "wybug_open_date": "2014-12-30 14:44", "wybug_type": "设计缺陷/逻辑错误", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "漏洞已经通知厂商但是厂商忽略漏洞", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["缺陷"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-10-13：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-10-18：\t厂商主动忽略漏洞，细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2014-12-12：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-12-22：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-01-01：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-12-30：\t细节向公众公开  简要描述： php 5.x.x 两个小bug 在实际中的漏洞利用 ，本来说不发这种情况，但是由于在实际的cms白盒审查过程中，发现有鲜活的例子可证明，就当发福利发出来......... 详细说明：  以下测试没有在特殊说明的情况下均为windows底下第一个问题：文件包含，大家都知道php文件阶段这么一个例子，在5.2.x里面很常见，但是有谁关心过，文件包含的时候后面可以跟很长的空格呢我们来看一个例子：$filename = \"d:/aaa/bbb/cccc/a.png\";include($filename);这样是完全没有问题的，这里不讨论阶段，如果我们改写一下$filename = \"d:/aaa/bbb/cccc/a.png                                       \";这里跟了一大堆空格在后面，我们看一下还能否包含进来，我们给a.png里面写上phpinfo()\n\n\n\n\n\n我没有安装linux版本底下5.2.X的直接在linux底下看5.4.x\n\n\n\n我们也可以给后面的空格填充小圆点 ，也是可以的\n\n但是在linux底下5.4.x不行\n\n下来我们测试php 5.3.x，我们搭建环境 还是windows:\n\n我们改为点号也是可以的\n\n由此可见linux底下 应该不存在此问题，后续linux底下我们就不测试了如果想挨个的去测是，我们下载了phpstudy，里面包括了当前php所有的可能性的组合\n\n下来 我们就不一个个测试了 直接搭建一个最新的5.6\n\n\n\n\n\n到此为止我们已经分析完毕结论就是：文件包含的时候在windows底下，点号 和 空格 是可以被引入进来，并且无妨碍包含漏洞利用场景：phpyun：请看我这个漏洞http://wooyun.org/bugs/wooyun-2014-075752当然了 这个漏洞利用了mysql的阶段，重新获取的时候不会添加空白字符导致那么由以上的推论来算，就是她引入了空白字符，我们照样还是可以进行文件包含假设：php云对 文件名里面过滤了空白字符，也就是说判断当前的文件名是不是一个合法的文件名，一般点号是不被过滤的，那么我们照样还是可以用点号隔断，在mysql层面阶段，然后正常引入进行文件包含这个小漏洞我们就分析完了，下来我们再看另一个漏洞php里面有一个is_file函数，从官网查的的信息是，这个函数是判断，当前传递过来的是不是一个文件\n\n这是w3c给出来的例子，可以足够说明，如果传递过来的是目录的话，这个函数会返回空值那么实际情况是不是这样呢，看我测试一下在我们d盘xxx目录底下有三个文件，我们在建立一个aaaa目录作参照\n\n环境为windows底下，代码如下：\n<?php$filename =  \"D:/xxxx/aaaa.sql/\";if(is_file($filename)){\techo file_get_contents($filename);}else{\techo \"this file is not exist!!!\";}?>\n执行如图所示\n\n这里大家都看出来了，我顺便也把file_get_contents这个函数也测了，其实所有操作文件的应该都具有这个漏洞php版本为5.2.x这个版本会产生这样的效果，跟官网给出来的定义完全不一样，那么我们在去linux底下验证一下\n\n由此可以看出来，没有去做windows底下的判断，这时候我们也就不去测试windows了，看看php的最高版本5.6.x在windows是不是也是这样\n\n神奇的事情发生了，居然在最高版本，这个函数处理了这种情况，我们测试了我们的三个文件都不能通过我们对我们构造的三个文件分别同一测试:\n<?php$file_array = array(\t\"D:/xxxx/aaaa_1.sql/\",\t\"D:/xxxx/aaaa.sql/\",\t\"D:/xxxx/aaaa.sql/\");foreach($file_array as $filename){\tif(is_file($filename)){\t\techo file_get_contents($filename).\"<br>\";\t}else{\t\techo \"this file is not exist!!!<br>\";\t}}?>\n然后访问 这时候php是5.6.x\n\n\n\n\n\n\n\n后续的5.5.x就不用测试了，也就是说在5.2.x时候有这个漏洞找到了这个，我们就看一下一个oday 我就不发了 直接在这里分析一下这个漏洞的利用新云cms(yxcms)dbbackController.php(38-49):\npublic function recover()\t{\t\t@set_time_limit(0);\t\t$file=$_GET['f'];\t\tif(empty($file)) $this->error('参数错误');\t\tif(self::$ndb->importSql($file.'/'))\t\t{\t\t\t$this->success('数据恢复成功！',url('dbback/index'));\t\t}\t\telse{\t\t\t$this->error('数据恢复失败！');\t\t}\t}\n这里做文件还原用：$file=$_GET['f']; 这个参数没有做任何处理，然后直接流向importSql($file.'/'))这里 已经看到了没有，程序员的误区，猜测1.如果它本身就支持单文件还原的话，那么在php的高版本中$file.'/' 永远就是个目录2.如果它本身就不支持单文件还原的话，那么在php低版本中$file.'/' 这个也可以是个文件问题就出来了，我们跟进去：Dbbak.class.php:(158-170):\npublic function importSql($rdir){        if(empty($rdir)) $this->error('没有指定备份文件夹路径');        $dir=$this->dataDir.$rdir;\t\tif(is_file($dir))\t\t{\t\t\treturn $this->_importSqlFile($dir);\t\t}\t\tif($link = opendir($dir))\t\t{\t\t\t$fileArry = scandir($dir);\t\t\t$pattern = \"/_part[0-9]+.sql.php$|_all.sql.php$/\";\n漏洞出现了吧 ，这里用了一个is_file,如果是一个文件，那么直接读取文件，进行数据库还原操作再次猜想，我们前台上传一个图片，图片的内容就是大量的sql语句，那么这里是可控的如果我们上传的图片为 dsada8926372.png，那么传递到这里就是/xxx/yyyy/ggg/../../../目录/dsada8926372.png/ 这时候 就是一个我们可以控制的sql文件了哈哈 牛逼不 完全越过了条件判断  我们访问url：http://192.168.10.70/YXcmsApp1.2.5/index.php?r=admin/dbback/recover&f=1402565182这居然还是一个get类型的操作，也没有csrf防御\n\n证实了我所说的一切，我就不前台上出啊了直接给出来一个放到可写目录里面http://192.168.10.70/YXcmsApp1.2.5/index.php?r=admin/dbback/recover&f=../../upload/shell.png\n\n这里可怕的 因为可以批量执行sql语句，所以也能进行提权等等，可以参照我这一片文章http://menmen519.blog.sohu.com/305654676.html之后的csrf 的利用想必大家都会了 直接给管理员发一个要审核的图片 图片的src就是这个get链接 然后就没有然后了..............................   漏洞证明：     修复方案：     版权声明：转载请注明来源 menmen519@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：无影响厂商忽略 忽略时间：2014-12-30 14:44 厂商回复：  最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2014-10-13 15:56 |    \t\tBadCat \t\t\t( 实习白帽子  |\t\t\t        Rank:81 漏洞数:21        | 悲剧的我什么都不会)\t\t \n  牛逼了！！    \n     2014-10-13 16:02 |    \t\tMoc \t\t\t( 路人 |\t\t\t        Rank:23 漏洞数:12        | 屌丝何苦为难屌丝)\t\t \n  录像的师傅看这里    \n     2014-10-13 16:15 |    \t\tchar \t\t\t( 路人 |\t\t\t        Rank:13 漏洞数:3        | 中国平安，不只保险这么简单。)\t\t \n  灯光请打到2楼，这样就反光看不清2楼了，三楼清晰可见。    \n     2014-10-13 16:27 |    \t\t小飞 \t\t\t( 实习白帽子  |\t\t\t        Rank:37 漏洞数:12        | 挖洞对于16岁的我来说实在是太艰难了！10...)\t\t \n  四楼出租    \n     2014-10-13 16:47 |    \t\t子非海绵宝宝  \t\t\t( 核心白帽子 |\t\t\t        Rank:1044 漏洞数:106        | 发扬海绵宝宝的精神!你不是海绵宝宝,你怎...)\t\t \n  php向来喜欢忽略...    \n     2014-10-13 17:23 |    \t\tonpu \t\t\t( 实习白帽子  |\t\t\t        Rank:64 漏洞数:19        | 静坐常思己过，闲谈莫论人非)\t\t \n  前排瓜子水果出售    \n     2014-10-13 17:24 |    \t\tmenmen519 \t\t\t( 普通白帽子  |\t\t\t        Rank:762 漏洞数:146        | http://menmen519.blog.sohu.com/)\t\t \n  @子非海绵宝宝 忽略 就忽略了 我是发福利的 只是提供思路    \n     2014-10-13 17:26 |    \t\t子非海绵宝宝  \t\t\t( 核心白帽子 |\t\t\t        Rank:1044 漏洞数:106        | 发扬海绵宝宝的精神!你不是海绵宝宝,你怎...)\t\t \n  @menmen519 专注通用20年  大神请收下我的膝盖...    \n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}