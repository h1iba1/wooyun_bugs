{"id": 29951, "wybug_id": "wooyun-2015-0117868", "wybug_title": "finecms某处sql注入", "wybug_corp": "dayrui.com", "wybug_author": "yunxu", "wybug_date": "2015-06-03 19:12", "wybug_open_date": "2015-09-02 08:58", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "12", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["源码审核", "注射漏洞利用技巧"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-06-03：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-06-04：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2015-06-07：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2015-07-29：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-08-08：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-08-18：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-09-02：\t细节向公众公开  简要描述： 绕过过滤规则进行sql注入 详细说明：  问题文件：controllers\\member\\ContentController.php\npublic function indexAction() {\t    if ($this->post('ids')) { //刷新\t        $ids  = implode(',', $this->post('ids'));\t\t\tif (empty($ids)) $this->memberMsg(lang('m-con-6'));\t\t\t$this->content->update(array('updatetime'=>time()), \"userid=\" . $this->memberinfo['id'] . \" and username='\" . $this->memberinfo['username'] . \"' and sysadd=0 and id in(\" . $ids . \")\");\t    }.........\n可以看到通过post方式获取到ids的值,然后把ids数组值组合成sql语句去执行update的在看一下他对post的过滤检查在core/controller.php文件中可以看到上面代码调用的post函数，而post函数又使用了check_post（）函数检查内容\npublic static function post($string, $a=0) {\t\t$name = $a ? $string : (isset($_POST[$string]) ? $_POST[$string] : null);\t\tif (is_null($name)) return null;\t\tif (!is_array($name)) {\t\t    self::check_Post($string, $a);\t\t    return htmlspecialchars(trim($name));\t\t}\t    foreach ($name as $key=>$value) {            $post_array[$key] = self::post($value, 1);\t\t}\t\treturn $post_array;\t}\n在看check_post()函数，他会加载atackcode这个配置的内容区检查是否包含非法字符，来看看这个配置文件的过滤规则\n/**\t * 记录$_POST中的非法字符\t */\tpublic static function check_Post($var, $a=0) {\t    static $cfg = null;\t    $post = $a ? $var : (isset($_POST[$var]) ? $_POST[$var] : null);\t\t$cfg  = is_array($cfg) ? $cfg : self::load_config('attackcode');\t\t$bad  = $cfg['post'];\t\tif (empty($post) || empty($bad)) return null;        foreach ($bad as $t) {            if (substr_count(strtolower($post), $t) > 0) self::save_attack_log('POST', $post);        }\t}\n在config/attackcode.ini.php这个规则是怎么写的\n/** * GET和POST非法字符过滤配置（防非法字符攻击） */ return array(    /*\t * GET参数非法字符过滤\t */\t     'get'  => array(\t\t'select ',\t\t'insert ',\t\t'\\'',\t\t'/*',\t\t'*',\t\t'../',\t\t'..\\\\',\t\t'union ',\t\t'into ',\t\t'load_file(',\t\t'outfile ',\t\t'<script',\t),\t\t/*\t * POST值非法字符过滤\t */\t\t\t'post' => array(\t\t'<script',\t\t'<style',\t\t'<meta',\t)\n总体来说，对get过滤很严，基本上union,select包括注释符号都过滤了，但是post就只过滤了几个标签，而上面的代码是通过post提交的，所以要注入，并没什么影响。。\n\n\n\n   漏洞证明：  \n\n   修复方案：  post也过滤   版权声明：转载请注明来源 yunxu@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：低 漏洞Rank：5  确认时间：2015-06-04 08:58 厂商回复： 呵呵 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2015-06-17 07:55 |    \t\t1c3z \t\t\t( 实习白帽子  |\t\t\t        Rank:88 漏洞数:29        | 我读书少，你可别骗我！！！)\t\t \n  洞主，厂商对你呵呵了，你怎么看？？    \n     2015-08-22 21:12 |    \t\tqhwlpg \t\t\t( 普通白帽子  |\t\t\t        Rank:226 漏洞数:54        | 潜心代码审计。)\t\t \n  麻痹，post完全没过滤啊    \n  \n\n\n", "wybug_level_fromcorp": "低", "wybug_rank_fromcorp": 5, "Ranks": null}