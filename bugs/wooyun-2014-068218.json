{"id": 705, "wybug_id": "wooyun-2014-068218", "wybug_title": "74cms (20140709) 最新版二次注入一弹", "wybug_corp": "74c,s.com", "wybug_author": "′雨。", "wybug_date": "2014-07-16 11:23", "wybug_open_date": "2014-10-14 11:24", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-07-16：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-07-16：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-07-19：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2014-09-09：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-09-19：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-09-29：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-10-14：\t细节向公众公开  简要描述： 74cms V3.4.20140709不好好的修改漏洞代码 而是修改过滤函数。虽然那过滤代码我绕不过去。。 但是还是找到了处能出数据。在修改过滤函数的基础上,还是好好的修改代码把。 详细说明：  首先来看看过滤函数\nfunction remove_xss($string) {     $string = preg_replace('/[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F]+/S', '', $string);      $parm1 = Array('javascript', 'union','vbscript', 'expression', 'applet', 'xml', 'blink', 'link', 'script', 'embed', 'object', 'iframe', 'frame', 'frameset', 'ilayer', 'layer', 'bgsound', 'title', 'base');    $parm2 = Array('onabort', 'onactivate', 'onafterprint', 'onafterupdate', 'onbeforeactivate', 'onbeforecopy', 'onbeforecut', 'onbeforedeactivate', 'onbeforeeditfocus', 'onbeforepaste', 'onbeforeprint', 'onbeforeunload', 'onbeforeupdate', 'onblur', 'onbounce', 'oncellchange', 'onchange', 'onclick', 'oncontextmenu', 'oncontrolselect', 'oncopy', 'oncut', 'ondataavailable', 'ondatasetchanged', 'ondatasetcomplete', 'ondblclick', 'ondeactivate', 'ondrag', 'ondragend', 'ondragenter', 'ondragleave', 'ondragover', 'ondragstart', 'ondrop', 'onerror', 'onerrorupdate', 'onfilterchange', 'onfinish', 'onfocus', 'onfocusin', 'onfocusout', 'onhelp', 'onkeydown', 'onkeypress', 'onkeyup', 'onlayoutcomplete', 'onload', 'onlosecapture', 'onmousedown', 'onmouseenter', 'onmouseleave', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'onmousewheel', 'onmove', 'onmoveend', 'onmovestart', 'onpaste', 'onpropertychange', 'onreadystatechange', 'onreset', 'onresize', 'onresizeend', 'onresizestart', 'onrowenter', 'onrowexit', 'onrowsdelete', 'onrowsinserted', 'onscroll', 'onselect', 'onselectionchange', 'onselectstart', 'onstart', 'onstop', 'onsubmit', 'onunload');\t\t$parm3 = Array('alert','sleep','load_file','confirm','prompt','benchmark','select','update','insert','delete','create','alter','drop','truncate');    $parm = array_merge($parm1, $parm2, $parm3); \tfor ($i = 0; $i < sizeof($parm); $i++) { \t\t$pattern = '/'; \t\tfor ($j = 0; $j < strlen($parm[$i]); $j++) { \t\t\tif ($j > 0) { \t\t\t\t$pattern .= '('; \t\t\t\t$pattern .= '(&#[x|X]0([9][a][b]);?)?'; \t\t\t\t$pattern .= '|(&#0([9][10][13]);?)?'; \t\t\t\t$pattern .= ')?'; \t\t\t}\t\t\t$pattern .= $parm[$i][$j]; \t\t}\t\t$pattern .= '/i';\t\t$string = preg_replace($pattern, '****', $string); \t}\treturn $string;}\n相对于之前的首先看到增加了一些防sql的关键字。 然后就是之前把关键字replace空现在是replace ****了。 而且开启了i模式。。。这个我绕不过去了。  找找有没有什么地方能直接出数据把。__________________________________________________________________74cms在注册的时候不能含有特殊字符而在plus/ajax_user.php中却可以。。\nelseif ($act=='do_reg'){\t$captcha=get_cache('captcha');\tif ($captcha['verify_userreg']==\"1\")\t{\t\t$postcaptcha=$_POST['postcaptcha'];\t\tif ($captcha['captcha_lang']==\"cn\" && strcasecmp(QISHI_DBCHARSET,\"utf8\")!=0)\t\t{\t\t$postcaptcha=iconv(\"utf-8\",QISHI_DBCHARSET,$postcaptcha);\t\t}\t\tif (empty($postcaptcha) || empty($_SESSION['imageCaptcha_content']) || strcasecmp($_SESSION['imageCaptcha_content'],$postcaptcha)!=0)\t\t{\t\texit(\"err\");\t\t}\t}\trequire_once(QISHI_ROOT_PATH.'include/fun_user.php');\t$username = isset($_POST['username'])?trim($_POST['username']):exit(\"err\");\t$password = isset($_POST['password'])?trim($_POST['password']):exit(\"err\");\t$member_type = isset($_POST['member_type'])?intval($_POST['member_type']):exit(\"err\");\t$email = isset($_POST['email'])?trim($_POST['email']):exit(\"err\");\tif (strcasecmp(QISHI_DBCHARSET,\"utf8\")!=0)\t{\t$username=iconv(\"utf-8\",QISHI_DBCHARSET,$username);\t$password=iconv(\"utf-8\",QISHI_DBCHARSET,$password);\t} \t$register=user_register($username,$password,$member_type,$email);\n这里没有对用户名验证, 直接注册了。因为有了过滤函数 要直接出数据 就像下面这样注册一个如下的用户名\n\n可以看到报错了 这个暂时别管他 利用报错注入不能出数据。所以找找哪里能直接出数据的。在user/user_pms.php中\nelseif($act==\"add_save\"){\t$setsqlarr['msgtype']=2;\t$setsqlarr['msgfrom']=trim($_SESSION['username']);\t$setsqlarr['msgfromuid']=intval($_SESSION['uid']);\t$toname=trim($_GET['toname']);\t$setsqlarr['message']=trim($_GET['msg']);\tif (strcasecmp(QISHI_DBCHARSET,\"utf8\")!=0)\t{\t$toname=iconv(\"utf-8\",QISHI_DBCHARSET,$toname);\t$setsqlarr['message']=iconv(\"utf-8\",QISHI_DBCHARSET,$setsqlarr['message']);\t}\t$msgtouser= $db->getone(\"select * from \".table('members').\" where username = '{$toname}' LIMIT 1\");\tif (empty($msgtouser))\t{\texit('收件人不存在！');\t}\telseif ($msgtouser['uid']==$_SESSION['uid'])\t{\texit(\"您不能给自己发消息！\");\t}\telseif ($_SESSION['utype']=='1' && $msgtouser['utype']=='2')\t{\t\t$sql = \"select did from \".table('company_down_resume').\" WHERE company_uid = '{$_SESSION['uid']}' AND resume_uid='{$msgtouser['uid']}' LIMIT 1\";\t\t$info=$db->getone($sql);\t\tif (!empty($info))\t\t{\t\texit(\"您没有下载过会员<strong>{$msgtouser['username']}</strong>创建的简历，下载过简历后才可以给TA发短消息！\");\t\t}\t}\t$setsqlarr['msgtouid']=$msgtouser['uid'];\t$setsqlarr['msgtoname']=$msgtouser['username'];\t$setsqlarr['dateline']=time();\t$setsqlarr['new']=1;\t$setsqlarr['replytime']=$setsqlarr['dateline'];\t$setsqlarr['replyuid']=$setsqlarr['msgfromuid']; \tinserttable(table('pms'),$setsqlarr);\n\t$setsqlarr['msgtoname']=$msgtouser['username'];这里直接把出库的用户名带入到了insert当中 而且这里是对其他用户发消息。首先再注册一个用户 对这个用户名hex一次。 我这里是对xiaoyu hex了一次。然后发消息。\n\n再登录刚才注册的那个号\n\n拿到数据。   漏洞证明：  如上。   修复方案：  在这里对用户名做个验证把、   版权声明：转载请注明来源 ′雨。@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：20  确认时间：2014-07-16 15:44 厂商回复： 感谢反馈！ 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2014-07-16 12:20 |    \t\tU神 \t\t\t( 核心白帽子 |\t\t\t        Rank:1285 漏洞数:142        | 感谢乌云，知恩不忘，其实我一直都在乌云默...)\t\t \n  打脸不    \n     2014-10-14 12:54 |    \t\t切克脑 \t\t\t( 实习白帽子  |\t\t\t        Rank:31 漏洞数:9        | z..)\t\t \n  需要gpc吗?    \n     2014-10-14 13:00 |    \t\t′  雨。 \t\t\t( 普通白帽子  |\t\t\t        Rank:1231 漏洞数:190        | Only Code Never Lie To Me.)\t\t \n  @切克脑  二次注入 你说呢？    \n     2014-10-14 16:13 |    \t\tYwiSax \t\t\t( 实习白帽子  |\t\t\t        Rank:62 漏洞数:4        | 淡定。)\t\t \n  我擦，74cms居然开始认领了！！！    \n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 20, "Ranks": null}