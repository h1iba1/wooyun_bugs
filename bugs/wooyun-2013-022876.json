{"id": 12161, "wybug_id": "wooyun-2013-022876", "wybug_title": "56.com主域名存储型xss", "wybug_corp": "56.com", "wybug_author": "梧桐雨", "wybug_date": "2013-05-02 14:38", "wybug_open_date": "2013-06-16 14:39", "wybug_type": "xss跨站脚本攻击", "wybug_level": "中", "wybug_rank_0": "8", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["持久型", "存储型", "利用技巧"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2013-05-02：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2013-05-03：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2013-05-13：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2013-05-23：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2013-06-02：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2013-06-16：\t细节向公众公开  简要描述： 某个地方未过滤导致存储型XSS，直接把xss代码带入了数据库。 详细说明：  其实这也是一次fuzz测试的结果。在测试的时候，测试了好几个地方，包括了标题、简介，以及类别，统统都被过滤了。要么就是标签被截断了：\n\n上面画圈圈的地方都测试过了。要么就是过滤了，要么就是截断了。因此不考虑这些地方。继续创建专辑的时候，出现了添加视频，考虑着这个地方肯定会有和数据库交互的地方，应该不是所有地方都过滤了。百密必有一疏。\n\n这里为了方便我们测试，我们直接搜索视频添加专辑。注意：这里有一个编辑功能，因此这里会不会没过滤呢？怀着这样的心情，输入了测试代码：果不其然，这里果然没过滤：\n\n知道这里没过滤之后，我们只要相应的找到56.com区域下相应输出的地方就可以了。找到我的专辑->单击打开图片：访问对应的地址是：http://www.56.com/w83/album-aid-11678296.html我们的cookie被弹出了。\n\n   漏洞证明：  56.com还提供了很多分享功能，因此我们这个攻击可以做的很隐秘，只需要把链接分享出去：打开都会中招：http://www.56.com/w83/album-aid-11678296.html\n\n   修复方案：  过滤好视频编辑标题处，转义相应的html代码。   版权声明：转载请注明来源 梧桐雨@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：中 漏洞Rank：7  确认时间：2013-05-03 09:41 厂商回复： 谢谢提交，正在修复 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "中", "wybug_rank_fromcorp": 7, "Ranks": null}