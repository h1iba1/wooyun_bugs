{"id": 24882, "wybug_id": "wooyun-2015-0134987", "wybug_title": "我爱美琴多处可实现xss跨站脚本攻击", "wybug_corp": "www.oiinhand.info", "wybug_author": "soha", "wybug_date": "2015-08-18 13:41", "wybug_open_date": "2015-08-18 13:53", "wybug_type": "xss跨站脚本攻击", "wybug_level": "中", "wybug_rank_0": "7", "wybug_status": "厂商已经修复", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-08-18：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-08-18：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2015-08-18：\t厂商已经修复漏洞并主动公开，细节向公众公开  简要描述： http://ilovemikoto.com/的后端对于文本内容处理不严导致可使用xss跨站脚本进行攻击 详细说明：  这个站在进行markdown处理的时候应该是使用了后端+js的拼凑方法，以及后端对字符的转移处理不完全，导致xss漏洞的产生。并且可以通过这个漏洞获取用户的隐私信息，危害程度较大。   漏洞证明：  首先我们打开这个站，从留言板http://ilovemikoto.com/board 的网页源码我们可以分析出，这个站是后端的文本拼凑到前端，交给marked.js解析markdown语言\n\n然后从该站讨论区的这个主题http://ilovemikoto.com/discuss/show/1 可以看见这个站处理过引号。讨论区的网页源码如下：\ndocument.getElementById('md-needed-lz').innerHTML=marked('####欢迎大家来到我爱美琴Joseph\\'s讨论区~\n（后面多余内容省略）我试着去用反斜杠，于是可以构造这么一个xss脚本，发在留言板\n\\');alert(2333);//\n提交后回到留言板，发现反斜杠的确没有过滤的。\n\n至此xss完成，证毕。当然也可以放一些干坏事儿的脚本，当然本着不搞大新闻的原则，我xss只玩到这里。   修复方案：  后端严格过滤转义文本，或者使用在后端处理markdown的方式。也可以尝试使用ajax获取数据   版权声明：转载请注明来源 soha@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：低 漏洞Rank：5  确认时间：2015-08-18 13:48 厂商回复： 感谢提醒，我们将尽快处理 最新状态： 2015-08-18：已经重新检查并且修改了转义模块，如果还有漏洞欢迎白帽子们指导  ", "replys": "漏洞评价：\n评论\n     2015-08-25 07:09 |    \t\tzowie \t\t\t( 路人 |\t\t\t        Rank:15 漏洞数:1        | 长期广告位出租)\t\t \n  竟然没走小厂商？    \n  \n\n\n", "wybug_level_fromcorp": "低", "wybug_rank_fromcorp": 5, "Ranks": null}