{"id": 21446, "wybug_id": "wooyun-2011-03682", "wybug_title": "新浪SAE网络沙箱突破", "wybug_corp": "新浪", "wybug_author": "结界师", "wybug_date": "2011-12-20 14:59", "wybug_open_date": "2012-02-03 15:00", "wybug_type": "设计缺陷/逻辑错误", "wybug_level": "中", "wybug_rank_0": "8", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["设计缺陷", "黑盒分析技巧", "沙盒环境绕过", "云安全", "安全"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2011-12-20：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2011-12-20：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2011-12-30：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2012-01-09：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2012-01-19：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2012-02-03：\t细节向公众公开  简要描述： 此次问题较早发现，目前已经通知SAE进行修复，主要是由于在实现沙箱的时候对于某些协议处理不周导致 详细说明：  \tsae支持的流非常多，但是真正被封装起来的其实只有一个http协议，封装的目的是对用户产生的请求能够进行控制，譬如限制访问的目的地址和对请求数量等做更精粒度的控制，而对于原生的譬如ftp协议并没有进行限制，这个时候其实我们可以利用这个做一个简单的内网端口扫描器：\necho(file_get_contents('ftp://127.0.0.1:22/111'));\n\t由于sae对错误的处理偏向开发者太过有好，导致通过捕获错误，我们可以看到是否是网络不可达，端口未开放还是协议不匹配，这样我们甚至可以探测出sae与内部网络的隔离程度\tftp协议毕竟不是特别友好，而对于已经封装的http协议我们发现stream_wrapper_unregister和stream_wrapper_restore并没有禁用，于是通过这两个函数我们可以恢复原生的http请求，向所有我们想发起的地方发起http请求了：\nif ( in_array( \"http\", stream_get_wrappers() ) ) {     \t\tstream_wrapper_unregister(\"http\");\t}\tstream_wrapper_restore(\"http\"));\n   漏洞证明：     修复方案：  目前SAE已经封禁掉相关函数和修复了相关代码   版权声明：转载请注明来源 结界师@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：中 漏洞Rank：8  确认时间：2011-12-20 15:44 厂商回复： 非常感谢结界师对新浪安全做出的贡献，目前该问题已经修复 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2012-03-29 23:56 |    \t\t_Evil \t\t\t( 普通白帽子  |\t\t\t        Rank:418 漏洞数:59        | 万事无他,唯手熟尔。农民也会编程,别指望天...)\t\t \n  http://www.80sec.com/sae-security.html 关联地址    \n  \n\n\n", "wybug_level_fromcorp": "中", "wybug_rank_fromcorp": 8, "Ranks": null}