{"id": 70136, "wybug_id": "wooyun-2015-0118390", "wybug_title": "ThinkSNS 4.0 一处设计缺陷（可伪造任意人发朋友圈）", "wybug_corp": "ThinkSNS", "wybug_author": "路人甲", "wybug_date": "2015-07-06 12:31", "wybug_open_date": "2015-10-09 12:32", "wybug_type": "设计缺陷/逻辑错误", "wybug_level": "中", "wybug_rank_0": "10", "wybug_status": "漏洞已经通知厂商但是厂商忽略漏洞", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["设计缺陷", "逻辑错误", "源码审核", "源码分析", "白盒测试"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-07-06：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-07-11：\t厂商主动忽略漏洞，细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2015-09-04：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-09-14：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-09-24：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-10-09：\t细节向公众公开  简要描述： 通常用于诈骗！ 详细说明：  官方的demo已经是4.0，可惜下不到源码翻来看看ThinkSNS 3.0的源码，发现一处严重的设计缺陷apps\\public\\Lib\\Action\\AccountAction.class.php 下doSaveProfile方法为保存用户信息操作\n/**\t * 保存基本信息操作\t * @return json 返回操作后的JSON信息数据\t */\tpublic function doSaveProfile() {\t\t$res = true;\t\t// 保存用户表信息\t\tif(!empty($_POST['sex'])) {\t\t\t$save['sex']  = 1 == intval($_POST['sex']) ? 1 : 2;\t\t//\t$save['lang'] = t($_POST['lang']);\t\t\t$save['intro'] = t($_POST['intro']);\t\t\t// 添加地区信息\t\t\t$save['location'] = t($_POST['city_names']);\t\t\t$cityIds = t($_POST['city_ids']);\t\t\t$cityIds = explode(',', $cityIds);\t\t\tif(!$cityIds[0] || !$cityIds[1] || !$cityIds[2]) $this->error('请选择完整地区');\t\t\tisset($cityIds[0]) && $save['province'] = intval($cityIds[0]);\t\t\tisset($cityIds[1]) && $save['city'] = intval($cityIds[1]);\t\t\tisset($cityIds[2]) && $save['area'] = intval($cityIds[2]);\t\t\t// 修改用户昵称\t\t\t$uname = t($_POST['uname']);\t\t\t$oldName = t($_POST['old_name']);\t\t\t$save['uname'] = filter_keyword($uname);\t\t\t$res = model('Register')->isValidName($uname, $oldName);//这里跟进\t\t\tif(!$res) {\t\t\t\t$error = model('Register')->getLastError();\t\t\t\treturn $this->ajaxReturn(null, model('Register')->getLastError(), $res);\t\t\t\t\t}\t\t\t//如果包含中文将中文翻译成拼音\t\t\tif ( preg_match('/[\\x7f-\\xff]+/', $save['uname'] ) ){\t\t\t\t//昵称和呢称拼音保存到搜索字段\t\t\t\t$save['search_key'] = $save['uname'].' '.model('PinYin')->Pinyin( $save['uname'] );\t\t\t} else {\t\t\t\t$save['search_key'] = $save['uname'];\t\t\t}\t\t\t$res = model('User')->where(\"`uid`={$this->mid}\")->save($save);\t\t\t$res && model('User')->cleanCache($this->mid);\t\t\t\t$user_feeds = model('Feed')->where('uid='.$this->mid)->field('feed_id')->findAll();\t\t\tif($user_feeds){\t\t\t\t$feed_ids = getSubByKey($user_feeds, 'feed_id');\t\t\t\tmodel('Feed')->cleanCache($feed_ids,$this->mid);\t\t\t}\t\t}\n修改用户昵称这里$uname 是你想修改的昵称（你是A，你想修改成B）$oldName是你以前的昵称，我们跟进$res = model('Register')->isValidName($uname, $oldName);这个函数\n/**\t * 验证昵称内容的正确性\t * @param string $name 输入昵称的信息\t * @param string $old_name 原始昵称的信息\t * @return boolean 是否验证成功\t */\tpublic function isValidName($name, $old_name = null) {\t\t// 默认不准使用的昵称\t\t$protected_name = array('name', 'uname', 'admin', 'profile', 'space');\t\t$site_config = model('Xdata')->get('admin_Config:site');\t\t!empty($site_config['sys_nickname']) && $protected_name = array_merge($protected_name, explode(',', $site_config['sys_nickname']));\t\t$res = preg_match($this->_name_reg, $name) !== 0;\t\tif($res) {\t\t\t$length = get_str_length($name);\t\t\t$res = ($length >= 2 && $length <= 10);\t\t} else {\t\t\t$this->_error = '仅支持中英文，数字，下划线';\t\t\t$res = false;\t\t\treturn $res;\t\t}\t\t// 预保留昵称\t\tif(in_array($name, $protected_name)) {\t\t\t$this->_error = L('PUBLIC_NICKNAME_RESERVED');\t\t\t\t// 抱歉，该昵称不允许被使用\t\t\t$res = false;\t\t\treturn $res;\t\t}\t\tif(!$res) {\t\t\t$this->_error = L('PUBLIC_NICKNAME_LIMIT', array('nums'=>'2-10'));\t\t\t// 昵称长度必须在2-10个汉字之间\t\t\treturn $res;\t\t}\t\tif(($name != $old_name) && $this->_user_model->where('`uname`=\"'.mysql_escape_string($name).'\"')->find()) {\t\t\t$this->_error = L('PUBLIC_ACCOUNT_USED');\t\t\t\t// 该用户名已被使用\t\t\t$res = false;\t\t}\t\t// 敏感词\t\tif (filter_keyword($name) !== $name) {\t\t\t$this->_error = '抱歉，该昵称包含敏感词不允许被使用';\t\t\treturn false;\t\t}\t\treturn $res;\t}\n这里主要经过三次审核：1.是否使用预保留的名称array('name', 'uname', 'admin', 'profile', 'space')；2.判断昵称长度是否是2-10个汉字之间；3.判断用户昵称是否被使用。我们直接看看第三处的判断逻辑：用户昵称是否被使用if(($name != $old_name) && $this->_user_model->where('`uname`=\"'.mysql_escape_string($name).'\"')->find()) {如果$name != $old_name，则进入if。但是old_name可被参数传入，我直接更改old_name和name为任意的同一个人就绕过该if逻辑了！同时我们看看安装好ThinkSNS 3后数据库人员信息：\n\n管理员的昵称是“管理员”，不在保留的名称array('name', 'uname', 'admin', 'profile', 'space')里，所以也可以更改为管理员。。。   漏洞证明：  现在官方demo是ThinkSNS 4版本的，注册一个账户，编辑我的个人信息http://demo.thinksns.com/ts4/index.php?app=public&mod=Account&act=index\n\n在朋友圈里看到一个人Clayhttp://demo.thinksns.com/ts4/index.php?app=public&mod=Profile&act=index&uid=32323\n\n貌似是个技术总监，那我们抓包更改我的个人信息试下：\n\n发现我也是技术总监了！\n\n   修复方案：  为欺诈留下很好的后门...   版权声明：转载请注明来源 路人甲@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：无影响厂商忽略 忽略时间：2015-10-09 12:32 厂商回复：  漏洞Rank：2  (WooYun评价) 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}