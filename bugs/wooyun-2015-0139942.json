{"id": 71900, "wybug_id": "wooyun-2015-0139942", "wybug_title": "京东商城Android客户端之用户隐私风险&amp;伪造", "wybug_corp": "京东商城", "wybug_author": "骑虎打狗", "wybug_date": "2015-09-09 15:07", "wybug_open_date": "2015-12-12 10:32", "wybug_type": "用户敏感数据泄漏", "wybug_level": "高", "wybug_rank_0": "18", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["设计不当", "安全", "敏感数据未加密"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-09-09：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-09-13：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2015-09-16：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2015-11-07：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-11-17：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-11-27：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-12-12：\t细节向公众公开  简要描述： 本漏洞针对京东商城Ver4.3.1最新版Android客户端。由于京东商城Android客户端获取到服务器数据后存放的策略问题，可导致用户的隐私暴露。 详细说明：  上个漏洞： WooYun: 京东商城Android客户端之Update伪造漏洞（详细测试过程）  已经显示京东服务器返回的数据为JSON格式，所以在客户端捕捉关键信息的时候一定是关键字罗列，如下图所示：\n\n\n\n发现他们都是通过一个方法获取的：com.jingdong.common.utils.JSONObjectProxy的getStringOrNull()；这样就有利用的源头了 啧啧~~   漏洞证明：  1.输出对应字符串的确认。通过二次打包客户端，插入暗桩：\n\n输出如下：\n\n可见，升级提示符是经过getStringOrNull()方法的。通过查找登录用户的各种隐私资料是经过optString()方法的：\n\n2.在ROOT的手机上写个外部程序，通过钩子hook手段，将getStringOrNull()和optString()这个方法输入和输出的字符串都搞出来。我这里借助Xposed简单写了个利用框架，其实完全可以自己写个独立的木马式APP，ROOT是重点，代码大致为：\n\n这样效果就出来了：\n\n\n\n上面两张或许无伤大雅，再来下面两张是不是有点小慌了..\n\n\n\n3.下面说说怎么去利用，顺延上次的伪造升级（想起来我的1rank 呜呜..）\n\n将upgrate设置为302，强制升级了：\n\n这样在客户端内任意点链接都会跳转到伪造的apk恶意下载地址：\n\nOver..   修复方案：  不要把所有的关键字符串的获取都压在一个方法里啊，这样ROOT情况下碰到钩子得多危险；我曾经遇到过一个大型银行的客户端将用户输入的所有字符串都经过一个方法，然而貌似现在修复了 哈哈，不然也来提交了！！ 额 不会还是1rank吧 京东哥哥..   版权声明：转载请注明来源 骑虎打狗@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：低 漏洞Rank：2  确认时间：2015-09-13 10:31 厂商回复： APP这块我们正在统一做加固，非常感谢您对京东安全的关注！ 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2015-09-13 12:41 |    \t\t骑虎打狗 \t\t\t( 路人 |\t\t\t        Rank:5 漏洞数:4        | 认真对待每个洞..)\t\t \n  醉了 这次确实不是 1 rank了..以后无论你们客户端怎么加固 我都将你们的漏洞慢慢、娓娓道来..1rank已满足    \n  \n\n\n", "wybug_level_fromcorp": "低", "wybug_rank_fromcorp": 2, "Ranks": null}