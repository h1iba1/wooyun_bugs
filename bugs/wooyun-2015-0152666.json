{"id": 74055, "wybug_id": "wooyun-2015-0152666", "wybug_title": "大汉政府信息公开网站群存在getshell的风险", "wybug_corp": "南京大汉网络有限公司", "wybug_author": "路人甲", "wybug_date": "2015-11-08 16:30", "wybug_open_date": "2016-02-15 10:50", "wybug_type": "设计缺陷/逻辑错误", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "漏洞已经通知厂商但是厂商忽略漏洞", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["设计缺陷", "逻辑错误"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-11-08：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-11-17：\t厂商主动忽略漏洞，细节向第三方安全合作伙伴开放（绿盟科技、唐朝安全巡航）\t\t\t\t\t\t\t\t\t2016-01-11：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2016-01-21：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2016-01-31：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2016-02-15：\t细节向公众公开  简要描述： 管理后台权限绕过，进入后台后轻松GetShell http://www.wooyun.org/bugs/wooyun-2015-0107138 矿主曾经提交了大汉的某个getshell的漏洞，但是并不完全，我将xxgk里涉及到后台绕过getshell的补充完整。都是没有提交过的。 详细说明：  1.http://xxx/xxgk/jcms_files/jcms1/web1/site/zfxxgk/ysqgk/que_code.jsp，que_code.jsp代码如下：\n<%@page import=\"jcms.util.ValidateCode\"%> <% String sessionId = request.getParameter(\"sessionid\"); out.clear(); ValidateCode code1 = new ValidateCode(); if(sessionId==null) { sessionId = \"\"; } code1.setSessionName(sessionId); code1.getValidateCode(request,response); %>\n ValidateCode.class文件，函数setSessionName，将this.sessionname 值设置为参数sessinid传入的值 \n\n ValidateCode.class文件，函数getValidateCode，e将this.sessionname 作为session，值为sRand。所以通过参数sessionid，就可以控制SESSION的名称的创建，从而利用创建任意的SESSION值绕过验证。 \n\n 效果：以某政府网站为例 \n\n\n\n 2、http://xxx/xxgk/jcms_files/jcms1/web1/site/zfxxgk/ysqgk/sendcode.jsp?webid=2&destnum=cookie_username sendcode.jsp代码中第16行，先将destnum参数值赋值给变量destnum，第29行创建destnum为名称的SESSION值，所以通过参数destnum，就可以控制SESSION的名称的创建，从而利用创建任意的SESSION值绕过验证 \nString destnum = Convert.getParameter(request, \"destnum\", \"\", true, true); // System.out.println(\"手机号码为\"+destnum+\"-------;验证码为\"+validatorcode); //3.调用短信接口,发送短信 SendMsmBLF blf = new SendMsmBLF(); boolean b = blf.isSendAgain(destnum); if(b){ //表示在次发送 String result = blf.sendSms(webid,destnum,validatorcode); //1:表示发送成功,0:表示发送失败 if(\"1\".equals(result)) { request.getSession().setAttribute(\"destnum\", destnum); request.getSession().setAttribute(destnum, validatorcode); out.print(\"1\");\n 效果：以某政府网站为例\n\n\n\ngetshell的方法参考我之前提交的漏洞 http://wooyun.org/bugs/wooyun-2014-073992   漏洞证明：  详细说明中已经指出详细的出问题的地方，请及时修改。   修复方案：  后台的session值 绝对不能使用前台客户端提交的参数。应该由服务器端生成，且客户端无法猜测出。   版权声明：转载请注明来源 路人甲@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：无影响厂商忽略 忽略时间：2016-02-15 10:50 厂商回复： 非常感谢提交，这个问题新版本早已解决 最新状态： 暂无  ", "replys": "漏洞评价：\n评价\n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}