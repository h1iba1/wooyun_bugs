{"id": 17479, "wybug_id": "wooyun-2012-010635", "wybug_title": "乐视网众多web容器配置失误，导致核心应用架构及敏感信息暴露", "wybug_corp": "乐视网", "wybug_author": "shine", "wybug_date": "2012-08-06 16:27", "wybug_open_date": "2012-09-20 16:27", "wybug_type": "系统/服务运维配置不当", "wybug_level": "高", "wybug_rank_0": "15", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2012-08-06：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2012-08-06：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2012-08-16：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2012-08-26：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2012-09-05：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2012-09-20：\t细节向公众公开  简要描述：   这是个常见的问题，但很容易忽视它危害，今天发现乐视网的此问题比较典型，说明总结一下。 详细说明：  \n首先看一个以前典型的case:   WooYun: 去哪儿任意文件读取（基本可重构该系统原工程）   或哥这篇粗糙的文章：http://hi.baidu.com/shine%5F%C9%C1%C1%E9/blog/item/7d7d57445f523a4384352468.html\n   漏洞证明：  \n通常在做反向代理、负载均衡或集群等情况时，都会使用两种或多种不同web容器搭配使用（特别在j2ee应用上体现更明显（如：Ngnix + Tomcat ;Apache + Tomcat）），由于配置不当，造成上述问题，昨天发现此问题的站点就不下上百个，今天发现你们应用尤其鲜明：\n\n首先看这个：http://enp.letv.com/WEB-INF/web.xml (指向同一ip的域名比较多哦！所以很多Struts2远程代码执行的漏洞都在这一ip找到的！这个有人提醒给你们的，好象你们不是很重视！)\n\n\n\n可浏览web.xml是会导致整个应用结构暴露的，这是j2ee的一个特点，同时加上使用的MVC模式的开源常用框架，所以文件读取尤其简单了，各个配置文件被读取也简单了。http://enp.letv.com/WEB-INF/classes/struts.xmlhttp://enp.letv.com/WEB-INF/classes/struts_manager.xmlhttp://enp.letv.com/WEB-INF/classes/struts_user.xmlhttp://enp.letv.com/WEB-INF/classes/struts_ad.xmlhttp://enp.letv.com/WEB-INF/classes/application_config.xml\n\n\n\n其他文件及敏感信息不一一列举了，看个你们防Struts2远程代码执行的一个拦截器源代码：\n\n\nEnpFilter.java\npackage com.letv.enp.web;import java.io.IOException;import java.util.Map;import java.util.Set;import javax.servlet.Filter;import javax.servlet.FilterChain;import javax.servlet.FilterConfig;import javax.servlet.ServletException;import javax.servlet.ServletRequest;import javax.servlet.ServletResponse;import javax.servlet.http.HttpServlet;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;public class EnpFilter extends HttpServlet  implements Filter{  private static final long serialVersionUID = -3887911983201144807L;  public final void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain chain)    throws IOException, ServletException  {    HttpServletRequest request = (HttpServletRequest)servletRequest;    HttpServletResponse response = (HttpServletResponse)servletResponse;    if (request.getParameterMap().size() > 0) {      Set set = request.getParameterMap().keySet();      boolean auth = false;      for (String key : set)      {        if ((key.indexOf(\"#\") > -1) || (key.indexOf(\"\\\\u0023\") > -1) || (key.indexOf(\"\\\\43\") > -1) || (key.indexOf(\"\\\\043\") > -1)) {          auth = true;          break;        }      }      if (auth) {        response.sendRedirect(\"http://enp.letv.com\");        return;      }    }    chain.doFilter(servletRequest, servletResponse);  }  public void init(FilterConfig arg0)    throws ServletException  {  }}\n\n对两种带有“#”关键编码方式的拦截，喜欢绕过的童子们，绕绕看！\n\n接下再看两处：第一个：http://220.181.117.74/letv/WEB-INF/web.xml这个就不多说了，懒得去看了！\n\n\n\n重点说接下来的这个：http://passport.letv.com/另个造成这一问题的典型case,这个直接是目录浏览。当看到这个应用的域名时，哥瞬间被战术性击倒，相信你们的系统架构师也同样如此。\n\n\n\n\n\n统一登录应用，它暴露的的东西就太多了（重复一句，在j2ee应用尤其明显），其他就不多说了，只说j2ee暴露的典型问题。\n\nhttp://passport.letv.com/WEB-INF/web.xml查看配置文件，发现这一应用跟域名显示的一样，比较庞大。\n\n\n\n如：与人人的接口：\n\n\n\n以及memcached众多配置信息（多插一句，发现都喜欢用阿里的memcached规范，真有这么好？）：\n\n\n（其他源代码及敏感信息就不列举了（数据库使用JNDI连接池，太坏了！不过除非远程数据库，其他的也没什么用，源代码也难得去看了），所以危害性是应用程序结构或整体架构的暴露！）   修复方案：    至少禁止掉j2ee应用重要的WEB-INF目录！（同一部署人员的所有应用都检查一下，应该还有不少！）  正好奥运会期间，加上你们公司的服务正好是这个方向的，乐视网送台电视机给哥吧！   版权声明：转载请注明来源 shine@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：15  确认时间：2012-08-06 16:45 厂商回复： 非常感谢shine挖掘，此问题已经转交给我们业务负责人。我们会尽快修改。谢谢。 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2012-08-06 16:36 |    \t\txsser  \t\t\t( 普通白帽子  |\t\t\t        Rank:254 漏洞数:18        | 当我又回首一切,这个世界会好吗?)\t\t \n  洞主复出了么？    \n     2012-08-06 16:42 |    \t\tshine  \t\t\t( 普通白帽子  |\t\t\t        Rank:831 漏洞数:77        | coder)\t\t \n  哈哈！一直都在了！    \n     2012-08-06 18:33 |    \t\tzeracker  \t\t\t( 核心白帽子 |\t\t\t        Rank:1068 漏洞数:137        | 多乌云、多机会!微信公众号: id:a301zls   ...)\t\t \n  复出鸟。    \n     2012-09-20 16:39 |    \t\tZ-0ne  \t\t\t( 普通白帽子  |\t\t\t        Rank:559 漏洞数:38        | 目前专注于工控安全基础研究，工业数据采集...)\t\t \n  给力。赞一个！    \n     2012-09-20 18:24 |    \t\t_Evil \t\t\t( 普通白帽子  |\t\t\t        Rank:418 漏洞数:59        | 万事无他,唯手熟尔。农民也会编程,别指望天...)\t\t \n  @shine 你是一个安全工程师 专门搞各种WEB漏洞。 不错!    \n     2013-10-22 15:20 |    \t\tluwikes \t\t\t( 普通白帽子  |\t\t\t        Rank:512 漏洞数:77        | 潜心学习~~~)\t\t \n  mark    \n     2014-04-11 16:44 |    \t\t小贱人 \t\t\t( 路人 |\t\t\t        Rank:4 漏洞数:3        | 资深菜鸟，)\t\t \n  mark    \n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 15, "Ranks": null}