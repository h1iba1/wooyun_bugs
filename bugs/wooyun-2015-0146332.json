{"id": 71427, "wybug_id": "wooyun-2015-0146332", "wybug_title": "找钢网会员找回密码处设计存在缺陷后台返回的加密后的用户名固定导致可更改任意用户登陆密码", "wybug_corp": "找钢网", "wybug_author": "wcsl", "wybug_date": "2015-10-13 11:11", "wybug_open_date": "2015-11-27 19:04", "wybug_type": "设计缺陷/逻辑错误", "wybug_level": "高", "wybug_rank_0": "15", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["设计不当", "加密算法使用不规范"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-10-13：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-10-13：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2015-10-23：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-11-02：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-11-12：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-11-27：\t细节向公众公开  简要描述： 找钢网会员找回密码处设计存在缺陷，后台返回的加密后的用户名固定导致可更改任意用户登陆密码 详细说明：  1、测试找回密码模块，抓包分析正常找回密码流程https://member.zhaogang.com/member/Password.aspx\n\n2、如上图，输入正确验证码，服务端返回加密后的登陆用户名（问题在这，后台加密用户名时应该是未使用随机盐值或者使用固定IV值，导致同一个用户每次请求找回密码此处返回的都是不变的一串密文，如下图用户fendou2014对应的加密后的用户就是：eSKcZJzreJ2btAO2UlQQ6Q==）\n\n3、第三步如下图，输入新密码（fendou2016），客户端用加密后的登陆用户名（eSKcZJzreJ2btAO2UlQQ6Q==）+要修改的密码（fendou2016）就可以修改该用户密码，也就是说只要知道任意用户对应的密文，就能修改该用户的登陆密码\n\n\n\n\n\n4、那么如何知道目标用户名对应的密文，加个X-Forwarded-For不断跑验证码了，跑对了验证码，服务端就返回了验证后的用户名密文。其中用户名和手机号在第一步服务端就返回了（属于信息泄露，看12号提的那个漏洞）\n\n\n\n\n\n5、接下来就是重放第三步的数据包，改成任意用户名就能改密码了   漏洞证明：  1、测试找回密码模块，抓包分析正常找回密码流程https://member.zhaogang.com/member/Password.aspx\n\n2、如上图，输入正确验证码，服务端返回加密后的登陆用户名（问题在这，后台加密用户名时应该是未使用随机盐值或者使用固定IV值，导致同一个用户每次请求找回密码此处返回的都是不变的一串密文，如下图用户fendou2014对应的加密后的用户就是：eSKcZJzreJ2btAO2UlQQ6Q==）\n\n3、第三步如下图，输入新密码（fendou2016），客户端用加密后的登陆用户名（eSKcZJzreJ2btAO2UlQQ6Q==）+要修改的密码（fendou2016）就可以修改该用户密码，也就是说只要知道任意用户对应的密文，就能修改该用户的登陆密码\n\n\n\n\n\n4、那么如何知道目标用户名对应的密文，加个X-Forwarded-For不断跑验证码了，跑对了验证码，服务端就返回了验证后的用户名密文。其中用户名和手机号在第一步服务端就返回了（属于信息泄露，看12号提的那个漏洞）\n\n\n\n\n\n5、接下来就是重放第三步的数据包，改成任意用户名就能改密码了   修复方案：  修改密码的请求参数不能含有可被攻击者可预测的，此处请求参数为固定的密文+新密码，固定的密文可以通过跑验证码得到，所以后台加密时应该使用盐值，或者分组密码加密时IV值不能固定，这样不同验证码请求返回的密文随机，就可以啦。。。。。   版权声明：转载请注明来源 wcsl@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：15  确认时间：2015-10-13 19:02 厂商回复： 确认为设计缺陷，谢谢白帽子提交我们的漏洞！ 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2015-10-13 12:57 |    \t\twcsl \t\t\t( 路人 |\t\t\t        Rank:25 漏洞数:2        | web python)\t\t \n  向厂家澄清下，此处描述有问题，解决方案应该是在发送验证码的时候每次加随机token，这样无法跑出密文用户名。。然后用户名加密最好也应该随机。。具体厂家更懂    \n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 15, "Ranks": null}