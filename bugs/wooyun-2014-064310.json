{"id": 1526, "wybug_id": "wooyun-2014-064310", "wybug_title": "PHPYUN最新版SQL注入二处（绕过防御）", "wybug_corp": "php云人才系统", "wybug_author": "xfkxfk", "wybug_date": "2014-06-10 12:47", "wybug_open_date": "2014-09-08 12:48", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["第三方不可信程序", "安全意识不足", "源码审核", "源码分析", "白盒测试"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-06-10：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-06-10：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-06-13：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2014-08-04：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-08-14：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-08-24：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-09-08：\t细节向公众公开  简要描述： PHPYUN最新版（phpyun_v3.1.0604_gbk）SQL注入二处，无视GPC（绕过防御） 详细说明：  PHPYUN最新版（phpyun_v3.1.0604_gbk）SQL注入二处第一处SQL注入：文件/member/model/com.class.php\nfunction job(){\t\tif($_GET['p_uid']){\t\t\t$data['p_uid']=(int)$_GET['p_uid'];\t\t\t$data['inputtime']=mktime();\t\t\t$data['c_uid']=$this->uid;\t\t\t$data['usertype']=$_COOKIE['usertype'];\t\t\t$haves=$this->obj->DB_select_once(\"blacklist\",\"`p_uid`=\".$data['c_uid'].\"  and `c_uid`=\".$data['c_uid'].\" and `usertype`=\".$data['usertype'].\"\");\t\t\tif(is_array($haves)){\t\t\t\t$this->obj->layer_msg(\"该用户已在您黑名单中！\",8,0,$_SERVER['HTTP_REFERER']);\t\t\t}else{\t\t\t\t$nid=$this->obj->insert_into(\"blacklist\",$data);\t\t\t\t$num=$this->obj->DB_select_num(\"userid_job\",\"`uid`=\".$data['p_uid'].\"  and `com_id`=\".$data['c_uid'].\"\");\t\t\t\t$this->obj->DB_delete_all(\"userid_job\",\"`uid`=\".$data['p_uid'].\"  and `com_id`=\".$data['c_uid'].\"\",\" \");\t\t\t\t$this->obj->DB_update_all(\"member_statis\",\"`sq_jobnum`=`sq_jobnum`-$num\",\"`uid`='\".$data['p_uid'].\"'\");\t\t\t\t$nid?$this->layer_msg('删除成功！',9,0,$_SERVER['HTTP_REFERER']):$this->layer_msg('删除失败！',8,0,$_SERVER['HTTP_REFERER']);\t\t\t}\t\t}\n$data['usertype']=$_COOKIE['usertype'];这里没有经过任何包含直接进入了DB_select_once跟进DB_select_once函数：\nfunction DB_select_once($tablename, $where = 1, $select = \"*\") {\t\t$cachename=$tablename.$where;\t\tif(!$return=$this->Memcache_set($cachename)){\t\t\t$SQL = \"SELECT $select FROM \" . $this->def . $tablename . \" WHERE $where limit 1\";\t\t\t$query = $this->db->query($SQL);\t\t\t$return=$this->db->fetch_array($query);\t\t\t$this->Memcache_set($cachename,$return);\t\t}\t\treturn $return;\t}\n依然没有处理，所以，这里导致注入。第二处SQL注入文件/member/model/com.class.php\nfunction job(){......if($_GET['r_uid']){\t\t\tif($_GET['r_reason']==\"\")\t\t\t{\t\t\t\t$this->obj->ACT_layer_msg(\"举报内容不能为空！\",8,\"index.php?c=down\");\t\t\t}\t\t\t$data['p_uid']=(int)$_GET['r_uid'];\t\t\t$data['inputtime']=mktime();\t\t\t$data['c_uid']=$this->uid;\t\t\t$data['eid']=$_GET['eid'];\t\t\t$data['r_name']=$_GET['r_name'];\t\t\t$data['usertype']=$_COOKIE['usertype'];\t\t\t$data['username']=$this->username;\t\t\t$data['r_reason']=$_GET['r_reason'];\t\t\t$haves=$this->obj->DB_select_once(\"report\",\"`p_uid`=\".$data['p_uid'].\" and `c_uid`=\".$data['c_uid'].\" and `usertype`=\".$data['usertype'].\"\",\"id\");\t\t\tif(is_array($haves))\t\t\t{\t\t\t\t$this->obj->ACT_layer_msg(\"您已经举报过该用户！\",8,\"index.php?c=down\");\t\t\t}else{\t\t\t\t$nid=$this->obj->insert_into(\"report\",$data); \t\t\t\t$nid?$this->obj->ACT_layer_msg(\"操作成功！\",9,\"index.php?c=down\"):$this->obj->ACT_layer_msg(\"操作失败！\",8,\"index.php?c=down\");\t\t\t}\t\t}\n也是$data['usertype']=$_COOKIE['usertype'];没有经过任何保护，直接进入了SQL语句因为PHPYUN使用了360webscan的规则等一些防御措施文件/data/db.safety.php：\nfunction gpc2sql($str) {\tif(preg_match(\"/select|insert|update|delete|union|into|load_file|outfile/is\", $str))\t{\t\texit(safe_pape());\t}\t$arr=array(\" and \"=>\" an d \",\" or \"=>\" Ｏr \",\"%20\"=>\"\",\"select\"=>\"Ｓelect\",\"update\"=>\"Ｕpdate\",\"count\"=>\"Ｃount\",\"chr\"=>\"Ｃhr\",\"truncate\"=>\"Ｔruncate\",\"union\"=>\"Ｕnion\",\"delete\"=>\"Ｄelete\",\"insert\"=>\"Ｉnsert\");\tforeach($arr as $key=>$v){    \t$str = preg_replace('/'.$key.'/isU',$v,$str);\t}\treturn $str;}function safesql($StrFiltKey,$StrFiltValue,$type){\t\t $getfilter = \"\\\\<.+javascript:window\\\\[.{1}\\\\\\\\x|<.*=(&#\\\\d+?;?)+?>|<.*(data|src)=data:text\\\\/html.*>|\\\\b(alert\\\\(|confirm\\\\(|expression\\\\(|prompt\\\\(|benchmark\\s*?\\\\(\\d+?|sleep\\s*?\\\\([\\d\\.]+?\\\\)|load_file\\s*?\\\\()|<[a-z]+?\\\\b[^>]*?\\\\bon([a-z]{4,})\\s*?=|^\\\\+\\\\/v(8|9)|\\\\b(and|or)\\\\b\\\\s*?([\\\\(\\\\)'\\\"\\\\d]+?=[\\\\(\\\\)'\\\"\\\\d]+?|[\\\\(\\\\)'\\\"a-zA-Z]+?=[\\\\(\\\\)'\\\"a-zA-Z]+?|>|<|\\s+?[\\\\w]+?\\\\s+?\\\\bin\\\\b\\\\s*?\\(|\\\\blike\\\\b\\\\s+?[\\\"'])|\\\\/\\\\*.+?\\\\*\\\\/|<\\\\s*script\\\\b|\\\\bEXEC\\\\b|UNION.+?SELECT(\\\\(.+\\\\)|\\\\s+?.+?)|UPDATE(\\\\(.+\\\\)|\\\\s+?.+?)SET|INSERT\\\\s+INTO.+?VALUES|(SELECT|DELETE)(\\\\(.+\\\\)|\\\\s+?.+?\\\\s+?)FROM(\\\\(.+\\\\)|\\\\s+?.+?)|(CREATE|ALTER|DROP|TRUNCATE)\\\\s+(TABLE|DATABASE)\";\t$postfilter = \"<.*=(&#\\\\d+?;?)+?>|<.*data=data:text\\\\/html.*>|\\\\b(alert\\\\(|confirm\\\\(|expression\\\\(|prompt\\\\(|benchmark\\s*?\\\\(\\d+?|sleep\\s*?\\\\([\\d\\.]+?\\\\)|load_file\\s*?\\\\()|<[^>]*?\\\\b(onerror|onmousemove|onload|onclick|onmouseover)\\\\b|\\\\b(and|or)\\\\b\\\\s*?([\\\\(\\\\)'\\\"\\\\d]+?=[\\\\(\\\\)'\\\"\\\\d]+?|[\\\\(\\\\)'\\\"a-zA-Z]+?=[\\\\(\\\\)'\\\"a-zA-Z]+?|>|<|\\s+?[\\\\w]+?\\\\s+?\\\\bin\\\\b\\\\s*?\\(|\\\\blike\\\\b\\\\s+?[\\\"'])|\\\\/\\\\*.+?\\\\*\\\\/|<\\\\s*script\\\\b|\\\\bEXEC\\\\b|UNION.+?SELECT(\\\\(.+\\\\)|\\\\s+?.+?)|UPDATE(\\\\(.+\\\\)|\\\\s+?.+?)SET|INSERT\\\\s+INTO.+?VALUES|(SELECT|DELETE)(\\\\(.+\\\\)|\\\\s+?.+?\\\\s+?)FROM(\\\\(.+\\\\)|\\\\s+?.+?)|(CREATE|ALTER|DROP|TRUNCATE)\\\\s+(TABLE|DATABASE)\";\t$cookiefilter = \"benchmark\\s*?\\\\(\\d+?|sleep\\s*?\\\\([\\d\\.]+?\\\\)|load_file\\s*?\\\\(|\\\\b(and|or)\\\\b\\\\s*?([\\\\(\\\\)'\\\"\\\\d]+?=[\\\\(\\\\)'\\\"\\\\d]+?|[\\\\(\\\\)'\\\"a-zA-Z]+?=[\\\\(\\\\)'\\\"a-zA-Z]+?|>|<|\\s+?[\\\\w]+?\\\\s+?\\\\bin\\\\b\\\\s*?\\(|\\\\blike\\\\b\\\\s+?[\\\"'])|\\\\/\\\\*.+?\\\\*\\\\/|<\\\\s*script\\\\b|\\\\bEXEC\\\\b|UNION.+?SELECT(\\\\(.+\\\\)|\\\\s+?.+?)|UPDATE(\\\\(.+\\\\)|\\\\s+?.+?)SET|INSERT\\\\s+INTO.+?VALUES|(SELECT|DELETE)(\\\\(.+\\\\)|\\\\s+?.+?\\\\s+?)FROM(\\\\(.+\\\\)|\\\\s+?.+?)|(CREATE|ALTER|DROP|TRUNCATE)\\\\s+(TABLE|DATABASE)\";\n像 and 1=1等这些会被过滤那么使用/**/and 1+1=1和/**/and 1+1=2就能搞定了   漏洞证明：  我们以第二个SQL注入为例：通过代码逻辑我们知道，当返回错误时，进入insert_into操作，会返回信息：“操作成功！”或者“操作成功！”\n\n\n\n当返回为真时，会返回信息：“您已经举报过该用户！”\n\n通过一直遍历char值得到user（）的第一位字符为r继续遍历得到user（）=root   修复方案：  过滤，引号保护   版权声明：转载请注明来源 xfkxfk@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：15  确认时间：2014-06-10 12:49 厂商回复： 感谢您的支持，我们会尽快修复！ 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2014-06-10 13:45 |    \t\t梧桐雨  \t\t\t( 核心白帽子 |\t\t\t        Rank:1576 漏洞数:184        | 关注技术与网络安全)\t\t \n  我是来膜拜大哥的，要和wefgod赛跑么    \n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 15, "Ranks": null}