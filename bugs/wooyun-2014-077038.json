{"id": 50723, "wybug_id": "wooyun-2014-077038", "wybug_title": "商务中国Tomcat配置不当导致任意代码下载", "wybug_corp": "商务中国", "wybug_author": "salforis", "wybug_date": "2014-09-23 13:01", "wybug_open_date": "2014-09-28 13:02", "wybug_type": "系统/服务运维配置不当", "wybug_level": "中", "wybug_rank_0": "10", "wybug_status": "漏洞已经通知厂商但是厂商忽略漏洞", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["服务配置不当", "源代码泄漏"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-09-23：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-09-28：\t厂商已经主动忽略漏洞，细节向公众公开  简要描述： Tomcat未对WEB-INF目录做访问限制，导致任意下载jar包。 详细说明：  \n\n\n\n   漏洞证明：  \n// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.// Jad home page: http://www.kpdus.com/jad.html// Decompiler options: packimports(3)// Source File Name:   DBManager.javapackage away.db;import java.sql.Connection;import java.sql.SQLException;import java.util.Hashtable;// Referenced classes of package away.db://            ConnectionProvider, AwayConnectionProviderpublic class DBManager{    public DBManager()    {    }    public static Connection getConnection()        throws SQLException    {        ConnectionProvider connectionprovider = getConnectionProvider(\"/usr/local/etc/bizcn.cfg\");        return connectionprovider.getConnection();    }    public static Connection getActionLogConnection()        throws SQLException    {        ConnectionProvider connectionprovider = getConnectionProvider(\"/usr/local/etc/actionlog.cfg\");        return connectionprovider.getConnection();    }    public static Connection getOldDataConnection()        throws SQLException    {        ConnectionProvider connectionprovider = getConnectionProvider(\"/usr/local/etc/olddata.cfg\");        return connectionprovider.getConnection();    }    public static void CloseAllConnection()    {        ConnectionProvider connectionprovider = getConnectionProvider(\"/usr/local/etc/bizcn.cfg\");        connectionprovider.closeAllConnection();        connectionprovider = getConnectionProvider(\"/usr/local/etc/actionlog.cfg\");        connectionprovider.closeAllConnection();        connectionprovider = getConnectionProvider(\"/usr/local/etc/olddata.cfg\");        connectionprovider.closeAllConnection();    }    private static synchronized ConnectionProvider getConnectionProvider(String s)    {        Object obj = (ConnectionProvider)m_oProvidersPool.get(s);        if(obj == null)        {            obj = new AwayConnectionProvider(s);            m_oProvidersPool.put(s, obj);        }        return ((ConnectionProvider) (obj));    }    private static Hashtable m_oProvidersPool = new Hashtable();    public static final String CONFIG_FILE_BIZCN = \"/usr/local/etc/bizcn.cfg\";    public static final String CONFIG_FILE_ACTIONLOG = \"/usr/local/etc/actionlog.cfg\";    public static final String CONFIG_FILE_OLDDATA = \"/usr/local/etc/olddata.cfg\";}\n   修复方案：  前端Nginx限制访问/WEB-INF。\nlocation /WEB-INF {    deny all;}\n   版权声明：转载请注明来源 salforis@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：无影响厂商忽略 忽略时间：2014-09-28 13:02 厂商回复：  最新状态： 2014-10-08：已修复  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}