{"id": 39907, "wybug_id": "wooyun-2015-092960", "wybug_title": "LebiShop商城系统最新版设计缺陷及XSS盲打后台", "wybug_corp": "www.lebi.cn", "wybug_author": "xfkxfk", "wybug_date": "2015-01-26 10:04", "wybug_open_date": "2015-04-26 10:06", "wybug_type": "xss跨站脚本攻击", "wybug_level": "中", "wybug_rank_0": "10", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["持久型", "第三方不可信程序", "逻辑错误", "源码审核"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-01-26：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-01-26：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2015-01-29：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2015-03-22：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-04-01：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-04-11：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-04-26：\t细节向公众公开  简要描述： LebiShop商城系统最新版设计缺陷及XSS盲打后台 详细说明：  LebiShop商城系统最新版验证码存在设计缺陷可无视验证码，及存储型XSS盲打后台验证码设计缺陷：LebiShop商城系统有两者验证码验证方式1、直接判断POST提交的验证码已经COOKIE中的验证码是否相等如前台普通用户登陆时\n// Shop.Ajax.Ajax_userpublic void User_Login(){\tstring verifycode = RequestTool.RequestString(\"verifycode\");\tstring code = CookieTool.GetCookieString(\"CheckCodef\");\tstring UserName = RequestTool.RequestSafeString(\"UserName\");\tstring PWD = RequestTool.RequestSafeString(\"Password\");\tif (code != verifycode)\t{\t\tbase.Response.Write(\"{\\\"msg\\\":\\\"\" + base.Tag(\"验证码错误\") + \"\\\"}\");\t\treturn;\t}\n直接判断verifycode和CheckCodef是否相等这里我们在发送请求时，将POST和COOKIE中的值设置为一样即可绕过2、判断COOKIE的某值是否为空，然后在进行第1中方式的验证如后台登陆\n// Shop.Admin.Ajax.Ajax_loginpublic void AdminLogin(){\tstring userName = RequestTool.RequestString(\"userName\");\tstring UserPWD = RequestTool.RequestString(\"UserPWD\");\tstring code = RequestTool.RequestString(\"code\");\tint saveusername = RequestTool.RequestInt(\"saveusername\", 0);\tint type = RequestTool.RequestInt(\"type\", 0);\tif (CookieTool.GetCookieString(\"AdminLoginError\") != \"\")\t{\t\tstring ccode = CookieTool.GetCookieString(\"CheckCodef\");\t\tif (ccode != code)\t\t{\t\t\tbase.Response.Write(Language.Tag(\"验证码错误\", this.CurrentLanguage.Code));\t\t\treturn;\t\t}\t}\n先判断COOKIE中的AdminLoginError是否为空，在进行code的判断这里在发送请求时，直接将COOKIE中的AdminLoginError设置为空即可绕过验证码XSS盲打后台很多地方都存在盲打后台的地方，全局只进行了<，>，'三个符号的处理但是在获取X-Forwarded-For时，没有使用全局处理，直接赋值如在商家用户登陆处\n// Shop.Supplier.Ajax.Ajax_userpublic void User_Login(){\tstring msg = \"\";\tstring userName = RequestTool.RequestSafeString(\"userName\");\tstring UserPWD = RequestTool.RequestSafeString(\"UserPWD\");\tstring code = RequestTool.RequestString(\"code\");\tstring logintype = RequestTool.RequestString(\"logintype\", \"supplier\");\tint saveusername = RequestTool.RequestInt(\"saveusername\", 0);\tif (CookieTool.GetCookieString(\"SupplierLoginError\") != \"\")\t{\t\tstring ccode = CookieTool.GetCookieString(\"CheckCodef\");\t\tif (ccode != code)\t\t{\t\t\tbase.Response.Write(Language.Tag(\"验证码错误\", base.CurrentLanguage.Code));\t\t\treturn;\t\t}\t}\tif (EX_User.UserLogin(userName, UserPWD, true))\t{\t\tthis.CurrentUser = EX_User.CurrentUser();\t\tif (EX_Supplier.Login(this.CurrentUser, logintype, 0, out msg))\t\t{\t\t\tif (saveusername == 1)\t\t\t{\t\t\t\tCookieTool.SetCookieString(\"SupplierUserName\", userName, 1440);\t\t\t\tCookieTool.SetCookieString(\"saveusername\", \"1\", 1440);\t\t\t}\t\t\telse\t\t\t{\t\t\t\tCookieTool.SetCookieString(\"SupplierUserName\", \"\", -1);\t\t\t\tCookieTool.SetCookieString(\"saveusername\", \"\", -1);\t\t\t}\t\t\tLog.Add(\"登陆系统\", \"Login\", this.CurrentUser.id.ToString(), this.CurrentUser.UserName);\t\t\tmsg = \"OK\";\t\t}\t\telse\t\t{\t\t\tmsg = Language.Tag(\"账号状态异常\", base.CurrentLanguage.Code);\t\t}\t}\telse\t{\t\tmsg = Language.Tag(\"用户名或密码错误\", base.CurrentLanguage.Code);\t\tbase.Response.Cookies.Add(new HttpCookie(\"SupplierLoginError\", \"1\"));\t\tLog.Add(\"登陆系统\", \"Login\", \"\", this.CurrentUser, \"[\" + userName + \"]用户名或密码错误\");\t}\tbase.Response.Write(msg);}\n这里是否登录成功都会有log记录跟进Log.Add函数\n// Shop.Bussiness.Logpublic static void Add(string content, string tablename, string keyid, string description){\tEX_User.CurrentUser();\tEX_Admin.CurrentAdmin();\tLog.Add(content, tablename, keyid, null, null, null, description);}\n继续跟进\n// Shop.Bussiness.Logpublic static void Add(string content, string tablename, string keyid, Lebi_User user, Lebi_Administrator admin, Lebi_Supplier supplier, string description){\tLebi_Log log = new Lebi_Log();\tif (admin != null)\t{\t\tlog.Admin_id = admin.id;\t\tlog.AdminName = admin.UserName;\t}\tif (user != null)\t{\t\tlog.User_id = user.id;\t\tlog.UserName = user.UserName;\t}\tif (supplier != null)\t{\t\tlog.Supplier_id = supplier.id;\t\tlog.Supplier_SubName = supplier.SubName;\t}\tif (keyid.Length > 500)\t{\t\tkeyid = keyid.Substring(0, 500);\t}\tlog.Content = content;\tlog.Keyid = keyid;\tlog.TableName = tablename;\tlog.URL = RequestTool.GetRequestUrlNonDomain();\tlog.RefererURL = RequestTool.GetUrlReferrerNonDomain();\tif (description.Length > 500)\t{\t\tlog.Description = description.Substring(0, 500);\t}\telse\t{\t\tlog.Description = description;\t}\tlog.IP_Add = RequestTool.GetClientIP();\tB_Lebi_Log.Add(log);}\n到最后，注意这里log.IP_Add = RequestTool.GetClientIP();\n// Shop.Tools.RequestToolpublic static string GetClientIP(){\tstring result2;\ttry\t{\t\tstring result = HttpContext.Current.Request.ServerVariables[\"HTTP_X_FORWARDED_FOR\"];\t\tif (result == null || result == string.Empty)\t\t{\t\t\tresult = HttpContext.Current.Request.ServerVariables[\"REMOTE_ADDR\"];\t\t}\t\tif (result == null || result == string.Empty)\t\t{\t\t\tresult = HttpContext.Current.Request.UserHostAddress;\t\t}\t\tresult2 = result;\t}\tcatch\t{\t\tresult2 = \"\";\t}\treturn result2;}\n这里直接从HTTP_X_FORWARDED_FOR获取了内容，然后进入了log中   漏洞证明：  将X-Forwarded-For设置为：<img src=1 onerror=alert(1)>然后随便登录\n\n此时log中已经记录的登陆信息在后台配置，操作日志中：\n\n成功跨入后台   修复方案：  严格验证及过滤   版权声明：转载请注明来源 xfkxfk@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：20  确认时间：2015-01-26 16:51 厂商回复： 漏洞已修复，感谢 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2015-01-26 14:11 |    \t\tsco4x0 \t\t\t( 实习白帽子  |\t\t\t        Rank:31 漏洞数:13        | O_o)\t\t \n  x总连刷8弹啊    \n     2015-01-26 14:51 |    \t\txfkxfk  \t\t\t( 核心白帽子 |\t\t\t        Rank:2179 漏洞数:338        | 呵呵！)\t\t \n  @sco4x0 这都一个礼拜了，才审核，还没完。。    \n     2015-01-26 15:11 |    \t\t鶆鶈 \t\t\t( 普通白帽子  |\t\t\t        Rank:306 漏洞数:30        )\t\t \n  不要太犀利，登上乌云，8个提醒，全是你啊，我已经报警了。    \n     2015-04-30 14:51 |    \t\tBeenQuiver \t\t\t( 普通白帽子  |\t\t\t        Rank:101 漏洞数:26        | 专注而高效，坚持好的习惯千万不要放弃)\t\t \n  x得好    \n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 20, "Ranks": null}