{"id": 39815, "wybug_id": "wooyun-2015-093174", "wybug_title": "LebiShop商城系统最新版漏洞大礼包", "wybug_corp": "www.lebi.cn", "wybug_author": "xfkxfk", "wybug_date": "2015-01-27 15:01", "wybug_open_date": "2015-04-27 15:02", "wybug_type": "设计缺陷/逻辑错误", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["第三方不可信程序", "设计缺陷", "敏感接口缺乏校验", "源码审核"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-01-27：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-01-27：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2015-01-30：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2015-03-23：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-04-02：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-04-12：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-04-27：\t细节向公众公开  简要描述： LebiShop商城系统最新版漏洞大礼包，包括任意用户密码修改，密码重置，某接口直接拖库等 详细说明：  LebiShop商城系统最新版漏洞大礼包第一个任意用户密码修改在修改用户登陆密码和支付密码是都没有验证原始密码在发送修改密码请求时，只需要遍历COOKIE中的userid即可修改全部用户密码shop.ajax.ajax_userin文件中的setpassword方法\n// Shop.Ajax.Ajax_userinpublic void SetPassword(){\tstring PWD = RequestTool.RequestString(\"Password\");\tPWD = EX_User.MD5(PWD);\tthis.CurrentUser.Password = PWD;\tB_Lebi_User.Update(this.CurrentUser);\tbase.Response.Write(\"{\\\"msg\\\":\\\"OK\\\"}\");}\n这里直接接受new password，然后跟进当前登陆用户COOKIE中的userid进行修改\n\n第二密码重置在找回密码处存在缺陷导致可被重置任意用户密码shop.ajax.ajax_user文件中的User_forgetpwd方法\n// Shop.Ajax.Ajax_userpublic void User_forgetpwd(){\tstring Email_ = RequestTool.RequestString(\"Email\");\tstring code = CookieTool.GetCookieString(\"CheckCodef\");\tstring verifycode = RequestTool.RequestString(\"verifycode\");\tif (code != verifycode)\t{\t\tbase.Response.Write(\"{\\\"msg\\\":\\\"\" + base.Tag(\"验证码错误\") + \"\\\"}\");\t\treturn;\t}\tLebi_User user = B_Lebi_User.GetModel(\"Email='\" + Email_ + \"'\");\tif (user == null)\t{\t\tbase.Response.Write(\"{\\\"msg\\\":\\\"\" + base.Tag(\"用户不存在\") + \"\\\"}\");\t\treturn;\t}\ttry\t{\t\tEmail.SendEmail_forgetpwd(user, base.CurrentTheme);\t\tif (ShopCache.GetBaseConfig().SMS_sendmode.Contains(\"SMSTPL_getpwd\"))\t\t{\t\t\tSMS.SendSMS_forgetpwd(user);\t\t}\t}\tcatch (Exception ex)\t{\t\tbase.Response.Write(\"{\\\"msg\\\":\\\"\" + ex.Message + \"\\\"}\");\t}\tbase.Response.Write(\"{\\\"msg\\\":\\\"OK\\\"}\");}\n跟进Email.SendEmail_forgetpwd方法\n// Shop.Bussiness.Emailpublic static void SendEmail_forgetpwd(Lebi_User user, Lebi_Theme CurrentTheme){\tLebi_Language lang = B_Lebi_Language.GetModel(\"Code='\" + user.Language + \"'\");\tBaseConfig conf = ShopCache.GetBaseConfig();\tuser.CheckCode = EX_User.MD5(DateTime.Now.ToString());\tB_Lebi_User.Update(user);\tstring url = string.Concat(new object[]\t{\t\t\"http://\",\t\tRequestTool.GetRequestDomain(),\t\tThemeUrl.GetURL(\"P_FindPassword\", \"\", \"\", lang),\t\t\"?id=\",\t\tuser.id,\t\t\"&email=\",\t\tuser.Email,\t\t\"&v=\",\t\tuser.CheckCode\t});\tstring title = Language.Content(conf.EmailTPL_getpwd_title, user.Language);\tstring content = Language.Content(conf.EmailTPL_getpwd, user.Language);\ttitle = Email.ReplaceEmailTag(title, user, conf);\tcontent = Email.ReplaceEmailTag(content, user, conf);\tcontent = content.Replace(\"{$UserPWDURL}\", url);\tbool flag = Email.Send(user.Email, title, content);\tEmail.EmailJob(user.Email, title, content, flag, user, conf);}\n这里通过email发送邮件，关键是这里的验证codeuser.CheckCode = EX_User.MD5(DateTime.Now.ToString());CheckCode 只是通过当前时间戳进行md5然后发送重置密码邮件如下：\nhttp://plus.demo.lebi.cn/FindPassword.aspx?id=37&email=2754371317@qq.com&v=207ade4af42016cafd61543e308afae0\n最后通过对比userid的用不的CheckCode 是否等于接收到的这个url中的CheckCode 简单的时间戳很容易被绕过，而且这里没有验证发送一次后就情况前面发送的CheckCode ，所以我们可以短时间内发送过个重置密码邮件，比如：我们在2秒钟内发送多个重置密码请求，然后我们在遍历处2秒钟内的时间戳并md5然后遍历md5后的字符串构造重置密码请求即可第三某接口可之直接拖库来看看代码shop.api.api文件中的GetUsers方法\n// Shop.api.apipublic void GetUsers(){\tint id = RequestTool.RequestInt(\"user_id\", 0);\tint size = RequestTool.RequestInt(\"size\", 1);\tsize = ((size < 0) ? 0 : size);\tsize = ((size > 50) ? 50 : size);\tList<Lebi_User> users = B_Lebi_User.GetList(\"id>=\" + id, \"id asc\", size, 1);\tList<apiUser> models = new List<apiUser>();\tforeach (Lebi_User user in users)\t{\t\tmodels.Add(new apiUser\t\t{\t\t\tAddress = user.Address,\t\t\tPassword = user.Password,\t\t\tArea = EX_Area.GetAreaName(user.Area_id, 4),\t\t\tBirthday = user.Birthday,\t\t\tCashAccount_Bank = user.CashAccount_Bank,\t\t\tCashAccount_Code = user.CashAccount_Code,\t\t\tCashAccount_Name = user.CashAccount_Name,\t\t\tCity = user.City,\t\t\tCount_Login = user.Count_Login,\t\t\tCurrency_Code = user.Currency_Code,\t\t\tEmail = user.Email,\t\t\tFace = user.Face,\t\t\tFax = user.Fax,\t\t\tid = user.id,\t\t\tIntroduce = user.Introduce,\t\t\tIP_Last = user.IP_Last,\t\t\tIP_This = user.IP_This,\t\t\tLanguage = user.Language,\t\t\tMobilePhone = user.MobilePhone,\t\t\tMoney = user.Money,\t\t\tMoney_xiaofei = user.Money_xiaofei,\t\t\tMsn = user.Msn,\t\t\tNickName = user.NickName,\t\t\tPhone = user.Phone,\t\t\tPoint = user.Point,\t\t\tPostalcode = user.Postalcode,\t\t\tQQ = user.QQ,\t\t\tRealName = user.RealName,\t\t\tSex = user.Sex,\t\t\tTime_Last = user.Time_Last,\t\t\tTime_lastorder = user.Time_lastorder,\t\t\tTime_Reg = user.Time_Reg,\t\t\tTime_This = user.Time_This,\t\t\tUserName = user.UserName\t\t});\t}\tJavaScriptSerializer jss = new JavaScriptSerializer();\tstring json = jss.Serialize(models);\tjson = jss.Serialize(new LBAPI\t{\t\tdata = json,\t\tmsg = \"OK\"\t});\tbase.Response.Write(json);}\n这里通过user_id的个数和size参数的大小，遍历出了用户，包括具体信息如代码中的属性信息但是这里有一个接口密码apipwd\n// Shop.api.apiprotected void Page_Load(object sender, EventArgs e){\tstring apipwd = RequestTool.RequestString(\"apipwd\");\tif (apipwd != ShopCache.GetBaseConfig().APIPassWord)\t{\t\tbase.Response.Write(\"{\\\"msg\\\":\\\"验证失败\\\"}\");\t\treturn;\t}\tstring action = RequestTool.RequestString(\"action\");\tType type = base.GetType();\tMethodInfo methodInfo = type.GetMethod(action);\tif (methodInfo != null)\t{\t\tmethodInfo.Invoke(this, null);\t}}\n当请求中的apipwd等于系统中设置的api密码时，即可通过此接口获取全部用户信息在系统中apipwd是这样获取的：\nShopCache.GetBaseConfig().APIPassWordmodel.APIPassWord = ((ht[\"APIPassWord\"] == null) ? \"\" : ((string)ht[\"APIPassWord\"]));\n当默认系统中没有设置APIPassWord时则为空重要的是此系统默认安装就没有设置APIPassWord，即APIPassWord为空后台配置，基本设置中\n\n此时我们提交的请求中可设置apipwd=空即可如下请求即可获取用户信息\n\n同理还能获取系统全部订单信息，shop.api.api文件中的GetOrders方法\n\n   漏洞证明：  \n\n   修复方案：  验证原始密码，加强验证避免被破解，初始化APIPassWord   版权声明：转载请注明来源 xfkxfk@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：中 漏洞Rank：10  确认时间：2015-01-27 17:41 厂商回复： 漏洞已修复，感谢 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2015-01-27 16:09 |    \t\tsco4x0 \t\t\t( 实习白帽子  |\t\t\t        Rank:31 漏洞数:13        | O_o)\t\t \n  这厂商已经被X总吓哭了。。。    \n     2015-04-30 14:41 |    \t\tBeenQuiver \t\t\t( 普通白帽子  |\t\t\t        Rank:101 漏洞数:26        | 专注而高效，坚持好的习惯千万不要放弃)\t\t \n  我的天，api开的这么大    \n  \n\n\n", "wybug_level_fromcorp": "中", "wybug_rank_fromcorp": 10, "Ranks": null}