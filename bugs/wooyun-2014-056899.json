{"id": 56678, "wybug_id": "wooyun-2014-056899", "wybug_title": "Doyo 建站 Sql 注入#1", "wybug_corp": "wdoyo.com", "wybug_author": "′雨。", "wybug_date": "2014-04-13 12:34", "wybug_open_date": "2014-07-09 12:34", "wybug_type": "SQL注射漏洞", "wybug_level": "中", "wybug_rank_0": "20", "wybug_status": "漏洞已经通知厂商但是厂商忽略漏洞", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-04-13：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-04-18：\t厂商主动忽略漏洞，细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2014-06-12：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-06-22：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-07-02：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-07-09：\t细节向公众公开  简要描述： 过滤不严。 详细说明：  在source/pay.php中\nfunction cartadd(){\t\t$aid=$this->syArgs('id');\t\t$quantity=$this->syArgs('quantity');\t\t$attribute=$this->syArgs('attribute',2);\t\tif(!$aid)exit('err,请指定内容');\t\tif(!$quantity)$quantity=1;\t\t$g=syDB('goodscart')->find(array('aid'=>$aid,'uid'=>$this->my['id'],'attribute'=>serialize($attribute)));\n在syArgs 为2的时候 并不会对单引号转义。然后进行序列化一次 带入查询。造就了注入。且融合了mysql_error 就可来报错注入。   漏洞证明：  \n\n注入成功。   修复方案：  过滤。   版权声明：转载请注明来源 ′雨。@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：无影响厂商忽略 忽略时间：2014-07-09 12:34 厂商回复：  最新状态： 2014-04-18：正在修复 2014-07-09：已经修复  ", "replys": "漏洞评价：\n评论\n     2014-04-13 21:32 |    \t\t大大怪 \t\t\t( 路人 |\t\t\t        Rank:0 漏洞数:1        | PHP 爱好者)\t\t \n  我记得都有 $this->syArgs(\"id\") 过滤吧，怎么过的？    \n     2014-04-13 21:38 |    \t\t′  雨。 \t\t\t( 普通白帽子  |\t\t\t        Rank:1231 漏洞数:188        | Only Code Never Lie To Me.)\t\t \n  @大大怪   可以好好的看下syArgs      有不同的方法    \n     2014-04-13 21:46 |    \t\t大大怪 \t\t\t( 路人 |\t\t\t        Rank:0 漏洞数:1        | PHP 爱好者)\t\t \n  我记得 字符串全部做了 addslashes  $this->syArgs(\"name\",1) ，找了半天没有找到问题。。      \n     2014-04-18 23:15 |    \t\t大大怪 \t\t\t( 路人 |\t\t\t        Rank:0 漏洞数:1        | PHP 爱好者)\t\t \n  我也提交了一个问题，但是被无视了 http://wooyun.org/bugs/wooyun-2014-056676    \n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}