{"id": 2099, "wybug_id": "wooyun-2014-061091", "wybug_title": "大汉版通某系统越权+SQL注入", "wybug_corp": "南京大汉网络有限公司", "wybug_author": "路人甲", "wybug_date": "2014-05-17 21:25", "wybug_open_date": "2014-08-15 21:26", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["第三方不可信程序", "注射"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-05-17：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-05-19：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-05-22：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2014-07-13：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-07-23：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-08-02：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-08-15：\t细节向公众公开  简要描述： 大汉版通某系统某个文件越权+SQL注入 详细说明：  #1 漏洞文件/xxgk/workflow/design/que_model.jsp(该目录下多个文件越权访问)\n\n该文件多个参数存在SQL注入漏洞，代码如下\n<%\t//判断权限\tString userid =  Convert.getParameter(request, \"userid\");\t//当前页数\tString currpage = Convert.getParameter(request, \"currpage\");\tcurrpage = (currpage.equals(\"\")) ? \"1\" : currpage;\t//条件//\tStringBuffer strSqlCondition = new StringBuffer(128);\tString que_classid = Convert.getParameter(request,\"que_classid\");\tString que_classname = Convert.getParameter(request,\"que_classname\");\tString que_keywords = Convert.getParameter(request, \"que_keywords\");\tString que_keywords1 = Convert.getParameter(request, \"que_keywords1\");\tque_keywords = ( que_keywords1.length() > 0 ) ? que_keywords1 : que_keywords;\tString b_valid = Convert.getParameter(request,\"b_valid\");\t\t\tString b_child = Convert.getParameter(request,\"b_child\");\t\t\tString starttime = Convert.getParameter(request,\"starttime\");\t\tString endtime = Convert.getParameter(request,\"endtime\");\t\t\tString strBillStatus =  Convert.getParameter(request,\"strBillStatus\");\t//删除后返回，刷新页面时不需要考虑是否有子流程\tif(strBillStatus.equals(\"R\")){\t\tb_child = \"\";\t\t\t\t}\tstrSqlCondition.append(\" 1=1 \");\tif (que_keywords.length() > 0) {\t\tstrSqlCondition.append(\" AND a.vc_modelname like '%\" + que_keywords + \"%'\");\t}\tif(que_classid.length()>0){\t\tstrSqlCondition.append(\" AND a.vc_classid = '\"+que_classid+\"' \");\t}\tif(b_valid.length()>0){\t\tstrSqlCondition.append(\" AND a.b_valid = \"+b_valid);\t}\tif(b_child.length()>0){\t\tstrSqlCondition.append(\" AND a.b_child = \"+b_child);\t}\tif(starttime.length()>0){\t\tstrSqlCondition.append(\" AND a.dt_createtime >= '\"+starttime+\" 00:00:00'\");\t}\tif(endtime.length()>0){\t\tstrSqlCondition.append(\" AND a.dt_createtime <= '\"+endtime+\" 23:59:59'\");\t}\tstrSqlCondition.append(\" ORDER BY a.vc_code DESC\");//...}\n下面几个参数好像均存在注入\nString que_classid = Convert.getParameter(request,\"que_classid\");String que_classname = Convert.getParameter(request,\"que_classname\");String que_keywords = Convert.getParameter(request, \"que_keywords\");String que_keywords1 = Convert.getParameter(request, \"que_keywords1\");que_keywords = ( que_keywords1.length() > 0 ) ? que_keywords1 : que_keywords;String b_valid = Convert.getParameter(request,\"b_valid\");\t\tString b_child = Convert.getParameter(request,\"b_child\");\t\tString starttime = Convert.getParameter(request,\"starttime\");\tString endtime = Convert.getParameter(request,\"endtime\");\t\tString strBillStatus =  Convert.getParameter(request,\"strBillStatus\");\n可以看出均没有任何过滤便进入了数据库...由于这个注入漏洞的形成比较简单，就不多说，下面直接漏洞测试..#2 采用sqlmap进行测试由于网上有大量的实例，任意选取一个案例进行测试验证..案例为：\nhttp://xxgk.weifang.gov.cn/xxgk/workflow/design/que_model.jsp?que_keywords=&userid=1&que_classid=1&que_classname=1&que_keywords1=1&b_valid=1&b_child=2\n\n\nsqlmap跑起来效果如图所示(这里仅测试一个参数)\n\n   漏洞证明：  \n\n   修复方案：  过滤吧   版权声明：转载请注明来源 路人甲@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：20  确认时间：2014-05-19 10:01 厂商回复： 感谢关注 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 20, "Ranks": null}