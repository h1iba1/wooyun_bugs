{"id": 11098, "wybug_id": "wooyun-2013-025948", "wybug_title": "涂鸦王国弱随机数导致任意用户劫持漏洞，附测试POC", "wybug_corp": "涂鸦王国", "wybug_author": "Demon", "wybug_date": "2013-06-14 18:10", "wybug_open_date": "2013-07-29 18:11", "wybug_type": "设计缺陷/逻辑错误", "wybug_level": "高", "wybug_rank_0": "15", "wybug_status": "未联系到厂商或者厂商积极忽略", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["设计缺陷", "逻辑错误", "设计不当", "认证设计不合理"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2013-06-14：\t积极联系厂商并且等待厂商认领中，细节不对外公开\t\t\t\t\t\t\t\t\t2013-07-29：\t厂商已经主动忽略漏洞，细节向公众公开  简要描述： 如题 详细说明：   涂鸦王国找回密码的链接为弱随机数，可被枚举出来导致账号密码被重置。我连续发送了五封找回密码的邮件，在绑定的邮箱里查看找回密码的链接为http://poobbs.com/account/resetpwd/mid/a5148ecf1c9f85aadcf0e2feb881df73后面为一串MD5加密，反解发现是一个4位数字，通过发送多封可以推算出这个随机数大概是1111-13000之间。大部分为四位数。我们可以写个程序把所有四位数的MD5给列出来，这里我用Python先把所有结果列出，代码如下： \nimport md5f=open(\"pass.txt\",\"a\")for i in range(1111,9999):    f.write(md5.new(str(i)).hexdigest())    f.write(\"\\n\")f.close()\n在这简短的Python代码里我把所有四位数的MD5存到了一个txt里，接下来就是用burpsuite进行暴力破解了。根据返回的长度不一致可以辨别哪些链接是有效的，无效的链接长度为347，有效链接大概为8400+ 如图：\n\n由于没有任何限制，破解过程大约需要20分钟，途中发现好多可用链接，估计是很多人点了找回密码而又没去使用的结果。   漏洞证明：  有效链接如图，直接输入新密码即可修改密码。\n\n\n\n国内知名插画家deo.R的账号也同样被劫持在内：\n\n在已知邮箱的情况下可任意修改其密码~   修复方案：  随机数太弱。且建议设置失效时间，如果三分钟内没有使用链接即失效可有效防止   版权声明：转载请注明来源 Demon@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 未能联系到厂商或者厂商积极拒绝  ", "replys": "漏洞评价：\n评论\n     2013-06-17 22:26 |    \t\tDemon \t\t\t( 普通白帽子  |\t\t\t        Rank:121 漏洞数:14        | You are my dream)\t\t \n  我去，这厂商默默的修补了    \n     2013-07-29 18:13 |    \t\t梧桐雨  \t\t\t( 核心白帽子 |\t\t\t        Rank:1576 漏洞数:184        | 关注技术与网络安全)\t\t \n  默默点下“赞”    \n     2013-07-31 09:07 |    \t\txsjswt \t\t\t( 普通白帽子  |\t\t\t        Rank:156 漏洞数:49        | 我思故我猥琐，我猥琐故我强大)\t\t \n  这个不叫弱随机数，弱随机数指的是以很大概率可预测下一次产生数字的随机数。    \n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}