{"id": 6821, "wybug_id": "wooyun-2013-039741", "wybug_title": "PHPCMS 9.4.2 手机号验证绕过漏洞", "wybug_corp": "phpcms", "wybug_author": "冰雪风谷[NNU", "wybug_date": "2013-10-15 20:54", "wybug_open_date": "2014-01-10 20:55", "wybug_type": "设计缺陷/逻辑错误", "wybug_level": "低", "wybug_rank_0": "1", "wybug_status": "漏洞已经通知厂商但是厂商忽略漏洞", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["逻辑错误", "源码审核"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2013-10-15：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2013-10-20：\t厂商主动忽略漏洞，细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2013-12-14：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2013-12-24：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-01-03：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-01-10：\t细节向公众公开  简要描述： 在api/sms_idcheck.php中, 存在一处手机号码认证的代码, 该认证有问题, 用户可以轻意绕过. 并将可控的输入带到sql语句中.  详细说明：  \nif($mobile){ \t\tif(!preg_match('/^1([0-9]{9})/',$mobile)) exit('check phone error');\t\t$posttime = SYS_TIME-360;\t\t$where = \"`mobile`='$mobile' AND `posttime`>'$posttime'\";\t\t$r = $sms_report_db->get_one($where,'id_code','id DESC');\t\tif($r && $r['id_code']==$mobile_verify) exit('1');/*我们看到,它过滤手机号的时候,采用的正则是/^1([0-9]{9})/, 这个正则存在问题, 它只判断了第一位是不是1, 接下来的是不是存在9个数字, 后面的内容都没进行判断. 所以即使,我们输入10000000000*********(*******代替任意字符),它也会认为这是手机号, 从而,带到下面的$where中去查询,从而存在一定的威胁. 在默认的情况下,连接的数据库为mysql,由于单引号被转义, 所以不好利用了. 但在特定的情况下, 譬如连接的mysql时,采用gbk的字符集连接, 就可以绕过该转义, 从而进行利用.另外,在采用别的数据库的情况下, 也有可能存在一定的风险.*/\n   漏洞证明：  http://localhost/api.php?op=sms_idcheck&action=id_code&mobile_verify=123456&mobile=13800138时,会返回check phone error.http://localhost/api.php?op=sms_idcheck&action=id_code&mobile_verify=123456&mobile=10000000000%bf'时,它会绕过mobile的验证, 将内容带到数据库中去查询.   修复方案：  本来就是一个鸡肋.修不修复没啥危害.preg_match('/^1[0-9]{9,10}$/') //在正则的后面,加个$结束符.   版权声明：转载请注明来源 冰雪风谷[NNU@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：无影响厂商忽略 忽略时间：2014-01-10 20:55 厂商回复：  最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}