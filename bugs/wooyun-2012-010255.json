{"id": 17657, "wybug_id": "wooyun-2012-010255", "wybug_title": "新浪博客储存型XSS，加载任意外部js（后续漏洞）", "wybug_corp": "新浪", "wybug_author": "px1624", "wybug_date": "2012-07-28 20:36", "wybug_open_date": "2012-09-11 20:37", "wybug_type": "xss跨站脚本攻击", "wybug_level": "高", "wybug_rank_0": "15", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2012-07-28：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2012-07-30：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2012-08-09：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2012-08-19：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2012-08-29：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2012-09-11：\t细节向公众公开  简要描述： 上次发的新浪博客xss，收到了新浪送的小礼物，很是喜欢，这里表示感谢。现在这个漏洞厂商已经确认了50多天了，由于厂商修复的不够彻底，又有新的突破口，具体请看详细说明。不清楚这种情况的rank是写多少比较好，最后觉得既然漏洞还存在，我就应该将其作为一个新的漏洞进行提交，因为这个漏洞还是蛮严重的，所以写了15rank。 详细说明：  这个是上次的漏洞的地址，里面有详细的分析说明。 WooYun: 新浪博客储存型XSS漏洞（访问就中招），可以加载任意外部js文件 下面是我这次的测试。1 上次的漏洞是用的onload触发的js，这次厂商这里做了处理，将onload转成了on1oad。这里是将字母“l”变成了数字“1”。2 但是这个漏洞其实最根本的问题是对&的过滤不严格导致的，所以根本的解决方法应该是把&过滤掉，可以将&自动转成&amp。3 所以即使厂商过滤了onload，我还可以用onerror进行突破。如下\n\n\n\n4  这里只是用alert(1)做了下小的测试，至于更加扩展的，加载任意外部js的方法请看之前的那个帖子中的说明。 WooYun: 新浪博客储存型XSS漏洞（访问就中招），可以加载任意外部js文件 5  其实说白了，这个漏洞的存在就是上个漏洞没有修补完善导致的，直接用onerror替换onload就OK了，同样漏洞又一次的重现了。   漏洞证明：     修复方案：  过滤 &   版权声明：转载请注明来源 px1624@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：13  确认时间：2012-07-30 09:51 厂商回复： 感谢提供，已经修复。 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2012-07-29 13:46 |    \t\t水滴 \t\t\t( 普通白帽子  |\t\t\t        Rank:146 漏洞数:24        )\t\t \n  。。。    \n     2012-08-02 17:58 |    \t\tpx1624 \t\t\t( 普通白帽子  |\t\t\t        Rank:1036 漏洞数:175        | px1624)\t\t \n  @水滴 T..T    \n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 13, "Ranks": null}