{"id": 53475, "wybug_id": "wooyun-2014-067566", "wybug_title": "Destoon最新 V5.0-UTF8 正式版命令执行漏洞（后台）", "wybug_corp": "DESTOON", "wybug_author": "HackBraid", "wybug_date": "2014-07-06 01:09", "wybug_open_date": "2014-10-01 01:10", "wybug_type": "命令执行", "wybug_level": "高", "wybug_rank_0": "10", "wybug_status": "漏洞已经通知厂商但是厂商忽略漏洞", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["源码审核", "命令执行"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-07-06：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-07-11：\t厂商主动忽略漏洞，细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2014-09-04：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-09-14：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-09-24：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-10-01：\t细节向公众公开  简要描述： RT 详细说明：  后台一处命令执行漏洞，可添加系统账户。漏洞位于admin/tag.inc.php\ncase 'preview':\t\t$db->halt = 0;\t\t$destoon_task = '';\t\tif($tag_css) $tag_css = stripslashes($tag_css); \t\tif($tag_html_s) $tag_html_s = stripslashes($tag_html_s); \t\tif($tag_html_e) $tag_html_e = stripslashes($tag_html_e); \t\tif($tag_code) $tag_code = stripslashes($tag_code); \t\tif($tag_js) $tag_js = stripslashes($tag_js); \t\t$code_eval = $code_call = $code_html = '';\t\tif($tag_css) $code_eval .= '<style type=\"text/css\">'.\"\\n\".''.$tag_css.''.\"\\n\".'</style>'.\"\\n\";\t\tif($tag_html_s) $code_eval .= $tag_html_s.\"\\n\";\t\t$code_call = $code_eval;\t\t$code_call .= $tag_code.\"\\n\";\t\t$tag_code = str_replace('<!--{', '', $tag_code);\t\t$tag_code = str_replace('}-->', '', $tag_code);\t\tif(strpos($tag_code, '\",') !== false) {\t\t\t$tag_code = str_replace(', '.$tag_expires.')', ', -1)', $tag_code);\t\t} else {\t\t\t$tag_code = str_replace('\")', '\", -1)', $tag_code);\t\t}\t\t$tag_code .= ';';\t\tob_start();\t\teval($tag_code);//eval直接执行1\t\t$contents = ob_get_contents();\t\tob_clean();\t\t$code_eval .= $contents.\"\\n\";\t\tif($tag_html_e) {\t\t\t$code_eval .= $tag_html_e;\t\t\t$code_call .= $tag_html_e;\t\t}\t\t$t = str_replace('\",', '&debug=1\",', $tag_code);\t\tob_start();\t\teval($t);//eval直接执行2\t\t$td = ob_get_contents();\t\tob_clean();\neval函数直接执行参数tag_code和t   漏洞证明：  1.net user命令：\n\n2.netstat -ano命令：\n\n可以当shell用了。   修复方案：  我也不知道，@Destoon 你们知道也请告知怎么修补，3ks！   版权声明：转载请注明来源 HackBraid@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：无影响厂商忽略 忽略时间：2014-10-01 01:10 厂商回复：  漏洞Rank：6  (WooYun评价) 最新状态： 2014-07-15：感谢反馈，我们会尽快修复。不好意思确认晚了，被系统自动忽略了。  ", "replys": "漏洞评价：\n评论\n     2014-07-15 18:59 |    \t\tHackBraid  \t\t\t( 核心白帽子 |\t\t\t        Rank:1545 漏洞数:260        | ...........................................)\t\t \n  @DESTOON @疯狗 还能补点rank吗？    \n     2014-07-24 11:03 |    \t\t疯狗  \t\t\t( 实习白帽子  |\t\t\t        Rank:44 漏洞数:2        | 阅尽天下漏洞，心中自然无码。)\t\t \n  @HackBraid rank已补，都没忘哈，记着呢，最近乌云在迁移没及时处理 ：）    \n     2014-07-24 11:26 |    \t\tHackBraid  \t\t\t( 核心白帽子 |\t\t\t        Rank:1545 漏洞数:260        | ...........................................)\t\t \n  @疯狗 赞一个！    \n     2015-04-11 18:16 |    \t\tMxx \t\t\t( 路人 |\t\t\t        Rank:0 漏洞数:2        | 没有)\t\t \n  有点叼，ftp 直接下载exe了    \n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}