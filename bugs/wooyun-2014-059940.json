{"id": 55779, "wybug_id": "wooyun-2014-059940", "wybug_title": "新浪某界面dom型xss（二）", "wybug_corp": "新浪", "wybug_author": "香草", "wybug_date": "2014-05-08 19:11", "wybug_open_date": "2014-06-22 19:11", "wybug_type": "xss跨站脚本攻击", "wybug_level": "低", "wybug_rank_0": "5", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["技巧"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-05-08：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-05-09：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-05-19：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-05-29：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-06-08：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-06-22：\t细节向公众公开  简要描述： 前两天提交的该界面的一个漏洞，新浪很快就修复了，但是并没有完全修复，另外一处代码也存在问题。（说明，由于乌云会把\\替换为\\\\，所以下文中的\\都只有一半）。 详细说明：  为了方便大家分析，我在此先贴出javascript代码：\nvar par = location.search.substr(1),            ary = par.split(\"${}\");        var type = ary[0],            src = sinaadToolkit.string.encodeHTML(decodeURIComponent(ary[1])),            link = sinaadToolkit.string.encodeHTML(sinaadToolkit.url.ensureURL(decodeURIComponent(ary[2]))),            width = parseInt(ary[3], 10) + 'px',            height = parseInt(ary[4], 10) + 'px',            monitor = ary[5] ? sinaadToolkit.string.encodeHTML(decodeURIComponent(ary[5]).replace(/</g, '').replace(/>/g, '')) : '';        var srcAllowDomain = ['sina\\\\.com\\\\.cn','weibo\\\\.com','sinaimg\\\\.cn'],            urlAllowDomain = ['sina\\\\.com\\\\.cn','weibo\\\\.com','allyes\\\\.com', 'admaster\\\\.com\\\\.cn', 'miaozhen\\\\.com'];        function checkDomain(url, allowDomain) {            var reg = new RegExp('^(http|https):\\\\/\\\\/([^\\\\/\\\\?#]+\\\\.)*(' + allowDomain.join('|') + ')(\\\\/|\\\\?|#|$)');            return reg.test(url);        }        if ((type === 'flash' || type === 'image' || type === 'adbox') && checkDomain(link, urlAllowDomain) && checkDomain(src, srcAllowDomain)) {            document.write(sinaadToolkit.ad.createHTML(                type,                src,                width,                height,                link,                monitor ? monitor.split('|') : []            ));        }        window.blur();\n对于参数链接合法性的检查是通过checkDomain函数进行的。但是此正则表达式有一个很经典的错误：\nvar reg = new RegExp('^(http|https):\\\\/\\\\/([^\\\\/\\\\?#]+\\\\.)*(' + allowDomain.join('|') + ')(\\\\/|\\\\?|#|$)');\n这个正则的问题在于:\nhttp://www.baidu.com\\.sina.com.cn/\n是可以匹配成功的，原因是\\在javascript里面是转义字符，在正则表达式里面也是转义字符，正确的写法应该是：\nvar reg = new RegExp('^(http|https):\\\\/\\\\/([^\\\\\\\\/?#]+\\\\.)*(' + allowDomain.join('|') + ')(\\\\/|\\\\?|#|$)');\n根据这段代码 if ((type === 'flash' || type === 'image' || type === 'adbox')可以看出，type的取值可以是flash,image,adbox三个值之一。当我们的type是flash的时候，第二次参数(arry[1])src会出现在embed的src里面，但是由于embed模式allowScriptAccess是someDomain也不能执行js。于是我继续测试type为adbox的时候。发现第二个参数会出现在iframe的src里，于是我们构造如下链接，绕过正则表达式过滤：\nhttp://d1.sina.com.cn/litong/zhitou/sinaads/release/pbv5.html?adbox${}http://xxx.xxxx.com\\.sina.com.cn/aaa.htm${}http://xx.xxx.com\\.sina.com.cn/${}1370${}750${}x\\x22\n可以加载任意框架，可用作欺骗钓鱼，如图：\n\n   漏洞证明：  可钓鱼：\n\n加载百度：\nhttp://d1.sina.com.cn/litong/zhitou/sinaads/release/pbv5.html?adbox${}http://www.baidu.com\\.sina.com.cn/aaa.htm${}http://xxx.sina.com.cn/${}1370${}750${}x\\x22\n\n\n   修复方案：  修改验证代码为：\nfunction checkDomain(url, allowDomain) {            var reg = new RegExp('^(http|https):\\\\/\\\\/([^\\\\\\\\/\\\\\\\\?#]+\\\\.)*(' + allowDomain.join('|') + ')(\\\\/|\\\\?|#|$)');            return reg.test(url);        }\n   版权声明：转载请注明来源 香草@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：低 漏洞Rank：4  确认时间：2014-05-09 11:13 厂商回复： 感谢关注新浪安全，马上通知相应开发人员进行处理 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2014-05-08 22:01 |    \t\t香草 \t\t\t( 实习白帽子  |\t\t\t        Rank:99 漏洞数:14        | javascript,xss,jsp、aspx)\t\t \n  我弄错了，只是在预览的时候才有转义斜杠的问题，发表后就没那个问题了    \n     2014-05-09 11:15 |    \t\t新浪(乌云厂商)\t\t \n  @香草 啥意思？？    \n     2014-05-09 11:50 |    \t\t香草 \t\t\t( 实习白帽子  |\t\t\t        Rank:99 漏洞数:14        | javascript,xss,jsp、aspx)\t\t \n  @新浪 详见屈原《离骚》哈哈。本来想注册0x00的但是被人注册了    \n     2014-05-09 11:54 |    \t\t香草 \t\t\t( 实习白帽子  |\t\t\t        Rank:99 漏洞数:14        | javascript,xss,jsp、aspx)\t\t \n  @新浪 请问新浪怎样才能不走小厂商路线啊，每次都只有1rank    \n     2014-05-09 13:12 |    \t\t香草 \t\t\t( 实习白帽子  |\t\t\t        Rank:99 漏洞数:14        | javascript,xss,jsp、aspx)\t\t \n  @新浪 意思是乌云没有对斜杠进行转义    \n     2014-05-09 16:42 |    \t\t新浪(乌云厂商)\t\t \n  @香草 我也不清楚流程，你提交sql注入试试？    \n     2014-05-16 17:17 |    \t\tLonely \t\t\t( 实习白帽子  |\t\t\t        Rank:72 漏洞数:27        | 人生如梦,始终都游不过当局者迷的悲哀。)\t\t \n  好屌  ，提交 SQL 试试。 菊花什么的 随便爆。    \n     2014-05-16 21:27 |    \t\t香草 \t\t\t( 实习白帽子  |\t\t\t        Rank:99 漏洞数:14        | javascript,xss,jsp、aspx)\t\t \n  @Lonely SQL还是留给你吧，我还是专注xss    \n     2014-05-29 17:19 |    \t\tpx1624 \t\t\t( 普通白帽子  |\t\t\t        Rank:1036 漏洞数:175        | px1624)\t\t \n  @香草 嗯，乌云的编辑器会自动把反斜杠转义，然后通过审核后又会转回来    \n  \n\n\n", "wybug_level_fromcorp": "低", "wybug_rank_fromcorp": 4, "Ranks": null}