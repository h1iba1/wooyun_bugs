{"id": 8670, "wybug_id": "wooyun-2013-036844", "wybug_title": "新浪博客存储型xss(过滤器绕过)", "wybug_corp": "新浪", "wybug_author": "mramydnei", "wybug_date": "2013-09-12 09:04", "wybug_open_date": "2013-10-27 09:04", "wybug_type": "xss跨站脚本攻击", "wybug_level": "低", "wybug_rank_0": "10", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["实体编码绕过"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2013-09-12：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2013-09-12：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2013-09-22：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2013-10-02：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2013-10-12：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2013-10-27：\t细节向公众公开  简要描述： 对自定义html代码的过滤不严谨，导致过滤器 详细说明：  虽然对很多标签很多事件以及属性都作了比较严格的过滤，但在处理类似于javascript:alert(1)这一类的伪协议payload时，由于过滤不严格导致fiter bypass.如果我们的payload是:<a href=\"javascript:alert(1)\" target=\"_blank\">test2</a>filter就会自动删除href=\"javascript:alert(1)\"部分。但如果对“:”进行实体编码，像这样:<a href=\"javascript&colon;alert(1)\" target=\"_blank\">test2</a>就可以轻松bypass filter了。当然同样的例子，还有很多。比如说:<form><button formaction=javascript&colon;alert(1)>CLICKME <isindex action=javascript&colon;alert(1) type=image>没有用到on*事件，却依然可以结合实体编码绕过，在action和formaction中触发xss   漏洞证明：  可以看到在下面的图片当中，我们成功的插入了三种有效的xss payload\n\n   修复方案：  你们更专业。我只能说。。。再过滤一下吧.   版权声明：转载请注明来源 mramydnei@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：低 漏洞Rank：3  确认时间：2013-09-12 09:37 厂商回复： 感谢关注新浪安全，已安排人员进行修复。 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "低", "wybug_rank_fromcorp": 3, "Ranks": null}