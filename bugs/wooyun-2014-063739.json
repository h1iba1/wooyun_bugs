{"id": 54666, "wybug_id": "wooyun-2014-063739", "wybug_title": "YouYaX_V5.47 SQL注入漏洞(官网躺枪)", "wybug_corp": "youyax.com", "wybug_author": "紫衣大侠", "wybug_date": "2014-06-06 11:12", "wybug_open_date": "2014-06-06 14:15", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经修复", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-06-06：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-06-06：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-06-06：\t厂商已经修复漏洞并主动公开，细节向公众公开  简要描述：  昨天刚从官网上下载最新版v5.47的。厂商很萌，所以简单瞅瞅下。。。 详细说明：    问题出现在ORG/YouYa.php文件中。  第356行： \npublic function find($table, $ext = \"string\", $param)    {        //在 param 中寻找与给定的正则表达式 pattern 所匹配的子串        if (preg_match_all(\"/=/\", $param, $tmp)) {            $sql = \"select * from \" . $table . \" where \" . $param; //echo 'x'.$sql;        } else {            $param = \"id=$param\";            $sql   = \"select * from \" . $table . \" where \" . $param; //echo 'y'.$sql;        }        $result = mysql_query($sql);        $num    = mysql_num_rows($result);        if ($num <= 0) {            return false;        } else {            $arr = mysql_fetch_array($result);            switch ($ext) {                case \"number\":                    foreach ($arr as $k => $v) {                        if (is_string($k)) {                            unset($arr[$k]);                        }                    }                    break;                case \"string\":                    foreach ($arr as $k => $v) {                        if (is_numeric($k)) {                            unset($arr[$k]);                        }                    }                    break;            }            return $arr;        }    }\n 这里对传入的param参数没有进行过滤，导致存在SQL注入危险。 随便找一处调用该函数的地方，文件Lib/ListAction.php，第165行,index方法内： \nif(isset($_COOKIE['youyax_data']) && isset($_COOKIE['youyax_user']) && isset($_COOKIE['youyax_bz'])){            //echo  $_COOKIE['youyax_user'];          \tif($this->find(C('db_prefix') . \"user\", 'string', \"user='\" . $_COOKIE['youyax_user'] . \"' and cookieid='\".$_COOKIE['youyax_cookieid'].\"'\")){                $_SESSION['youyax_data'] = $_COOKIE['youyax_data'];\t        \t$_SESSION['youyax_user'] = $_COOKIE['youyax_user'];\t        \t$_SESSION['youyax_bz'] = $_COOKIE['youyax_bz'];        \t }   \t\t}\n  这里find函数将用户cookie信息中的youyax_user、cookieid带入到sql中查询，而这两个值用户是可以控制的。cookieid点存在注射问题。  POC: \nPHPSESSID=c96cea77189bb59f33c6f4923513b54a; youyax_data=1; youyax_user=qwerty; youyax_bz=1; youyax_cookieid=0c56f4af01da95954aa7fc60006498d8'\n  以官网http://bbs.youyax.com/为例： \n\n   sql报错 \n\n   官网数据库信息： \n\n  \nweb application technology: Apache 2, PHP 5.3.27back-end DBMS: MySQL 5.0.11available databases [2]:[*] information_schema[*] youyaxco_youyax\n   速度太慢了，就不继续跑了。。。    漏洞证明：   \n\n   sql报错 \n\n   官网数据库信息： \n\n   修复方案：    find函数对形参$param 进行addslashes过滤.....   版权声明：转载请注明来源 紫衣大侠@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：20  确认时间：2014-06-06 14:15 厂商回复： 版本修复了，更新到第56版本 最新状态： 2014-06-06：修复  ", "replys": "漏洞评价：\n评论\n     2014-06-06 23:02 |    \t\tMody \t\t\t( 普通白帽子  |\t\t\t        Rank:110 漏洞数:27        | \"><img src=x onerror=alert(1);> <img s...)\t\t \n  神速啊，厂商    \n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 20, "Ranks": null}