{"id": 43482, "wybug_id": "wooyun-2014-082600", "wybug_title": "BiWEB最新商城版任意文件删除漏洞致重装", "wybug_corp": "BiWEB", "wybug_author": "路人甲", "wybug_date": "2014-11-11 15:15", "wybug_open_date": "2015-02-09 15:16", "wybug_type": "设计缺陷/逻辑错误", "wybug_level": "中", "wybug_rank_0": "10", "wybug_status": "未联系到厂商或者厂商积极忽略", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["源码审核", "白盒测试"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-11-11：\t积极联系厂商并且等待厂商认领中，细节不对外公开\t\t\t\t\t\t\t\t\t2015-02-09：\t厂商已经主动忽略漏洞，细节向公众公开  简要描述： BiWEB最新商城版任意文件删除漏洞致重装 详细说明：  在wooyun上看到了有人提了BiWEB的一个XSS漏洞： WooYun: BIWEB商城版XSS盲打cookie ，也有人提了SQL注入，我来找找其他的漏洞吧。去官网下BiWEB商城版最新的5.8.4来看看。在修改用户资料处，上传执照图片时，使用unlink()删除原来的文件，而删除的文件是用户可控的，而且没有过滤../等符号，也没有限制访问的目录，造成任意文件删除。该CMS中有多处这种漏洞，如：\n/deal/adminu/modifyinfo.php/download/adminu/modifyinfo.php/grace/adminu/modifyinfo.php等等\n这里就选上传执照图片(/user/adminu/licence.php)作简要分析。下面是分析过程及删除证明。BiWEB首先对GET和POST进行了过滤，/config/filtrate.inc.php\n<?php//过滤GET或POST的值，去除两端空格和转义符号if ($_SERVER['REQUEST_METHOD'] == 'POST'){\tcheck::filtrateData($_POST,$arrGPdoDB['htmlspecialchars']);}elseif($_SERVER['REQUEST_METHOD'] == 'GET'){\tcheck::filtrateData($_GET,$arrGPdoDB['htmlspecialchars']);}?>\n这里就先不说这种过滤的脑残之处了。继续往下看，上传执照图片/user/adminu/licence.php（测试时记得要先注册一个用户并登录）。\n无关代码if ($_SERVER[\"REQUEST_METHOD\"] == \"POST\"){\t//图片上传\tif ($_FILES['Filedata']['name'] != \"\") {\t\t$strOldFile = $arrGPic['FileSavePath'].'s/'.$_POST['savefilename'];\t\tif (is_file($strOldFile)) {\t// 缩略图删除\t\t\tunlink($strOldFile);\t\t}\t\t$strOldFile = $arrGPic['FileSavePath'].'b/'.$_POST['savefilename'];\t\tif (is_file($strOldFile)) {\t// 原文件删除\t\t\tunlink($strOldFile);\t\t}\t\t$_POST['photo1'] = $objWebInit->uploadInfoImage($_FILES['Filedata'],'',$_POST['FileListPicSize'],$_POST['csize0'],$arrInfo['user_id']);\t}else{\t\t$_POST['photo1'] = $_POST['savefilename'];\t}\t// 取会员信息\t$arrInfo['photo1'] = $_POST['photo1'];\t//修改状态表明正在申请验证,必须设定为字符串形式\t$arrInfo['pass'] = '0';\tif (!empty($arrInfo)) {\t\t$objWebInit->saveInfo($arrInfo,1);\t\techo \"<script>\" . check::WindowLocation('/user/adminu/licence.php').\"</script>\";\t\texit();\t}}无关代码\n看到了unlink($strOldFile);而$strOldFile = $arrGPic['FileSavePath'].'b/'.$_POST['savefilename'];，$_POST['savefilename']又是用户可控的，问题就来了，这里没有对$_POST进行过滤，也没有限制访问的目录，所以，漏洞就出现了。$arrGPic['FileSavePath'] = __WEB_ROOT.\"/uploadfile/\".$arrGWeb['module_id'].\"/\";，而此处的module_id为user，所以，这里的路径为/uploadfile/user/b/savefilename。如果这样构造filename：../../../data/install.lock，那install.lock就被删除了，也就可以重装了。登录，访问http://XXXX/user/adminu/licence.php，上传文件，抓包，把文件名改为../../../data/install.lock如下：\n\n删除install.lock前，是不能重装的\n\n执行成功以后，我们再访问http://XXXX/install,可以重装了\n\n   漏洞证明：  见 详细说明   修复方案：  过滤  限制目录访问   版权声明：转载请注明来源 路人甲@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 未能联系到厂商或者厂商积极拒绝  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}