{"id": 8588, "wybug_id": "wooyun-2013-033068", "wybug_title": "简单CMS Getshell漏洞", "wybug_corp": "简单CMS", "wybug_author": "Matt", "wybug_date": "2013-08-01 10:26", "wybug_open_date": "2013-10-30 10:27", "wybug_type": "文件上传导致任意代码执行", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "未联系到厂商或者厂商积极忽略", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2013-08-01：\t积极联系厂商并且等待厂商认领中，细节不对外公开\t\t\t\t\t\t\t\t\t2013-10-30：\t厂商已经主动忽略漏洞，细节向公众公开  简要描述： 简单cms getshell 详细说明：  \npublic function saveAvatar() {\t\tsession_start ();\t\tdefine ( 'SD_ROOT', dirname ( __FILE__ ) . '/' );\t\t@header ( \"Expires: 0\" );\t\t@header ( \"Cache-Control: private, post-check=0, pre-check=0, max-age=0\", FALSE );\t\t@header ( \"Pragma: no-cache\" );\t\t\t\t// 这里传过来会有两种类型，一先一后, big和small, 保存成功后返回一个json字串，客户端会再次post下一个.\t\t$type = isset ( $_GET ['type'] ) ? trim ( $_GET ['type'] ) : 'tupian';\t\t$orgin_pic_path = $_GET ['photoServer']; // 原始图片地址，备用.//文件名\t\t                                         // $from = $_GET['from'];\t\t                                         // //原始图片地址，备用.\t\t$_path = explode ( '/', $orgin_pic_path );\t\t$num = count ( $_path );\t\t$path = '/';\t\tforeach ( $_path as $k => $v ) {\t\t\tif (($k + 1) == $num) {\t\t\t\t$filename = $v;//赋值\t\t\t} else {\t\t\t\t$path .= $v . '/';\t\t\t}\t\t}\t\tif ($type == 'big') {\t\t\t$pic_path = '../../../../Uploads/avatar_big/' . $filename;//文件名\t\t} elseif ($type == 'small') {\t\t\t$pic_path = '../../../../Uploads/avatar_small/' . $filename;\t\t} else {\t\t\t$msg = json_encode ( 'error img!' );\t\t\techo $msg;\t\t\texit ();\t\t}\t\t$new_avatar_path = $pic_path;\t\t$len = file_put_contents ( SD_ROOT . $new_avatar_path, file_get_contents ( \"php://input\" ) );//写出\t\t$avtar_img = imagecreatefromjpeg ( SD_ROOT . $new_avatar_path );\t\timagejpeg ( $avtar_img, SD_ROOT . $new_avatar_path, 80 );\t\t\t\t// 输出新保存的图片位置, 测试时注意改一下域名路径, 后面的statusText是成功提示信息.\t\t// status 为1 是成功上传，否则为失败.\t\t$d = new pic_data ();\t\t// $d->data->urls[0] = 'http://sns.com/avatar_test/'.$new_avatar_path;\t\t$d->data->urls [0] = $new_avatar_path;\t\t$d->status = 1;\t\t$d->statusText = '上传成功!';\t\t\t\t$msg = json_encode ( $d );\t\t\t\techo $msg;\t\t$user_mod = M ( \"User\" );\t\t$user_mod->where ( \"is_del=0 and id=\" . $_COOKIE ['id'] )->setField ( 'img', $filename );\t\t\t\t@unlink ( SD_ROOT . \"../../../../Uploads/avatar_original/\" . $_SESSION ['user_img'] );\t\t@unlink ( SD_ROOT . \"../../../../Uploads/avatar_big/\" . $_SESSION ['user_img'] );\t\t@unlink ( SD_ROOT . \"../../../../Uploads/avatar_small/\" . $_SESSION ['user_img'] );\t}\n   漏洞证明：  \n\n   修复方案：  过滤   版权声明：转载请注明来源 Matt@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 未能联系到厂商或者厂商积极拒绝  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}