{"id": 56030, "wybug_id": "wooyun-2014-059195", "wybug_title": "Tccms V8 Sql Injection", "wybug_corp": "teamcen.com", "wybug_author": "′雨。", "wybug_date": "2014-05-02 19:14", "wybug_open_date": "2014-07-28 19:16", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "漏洞已经通知厂商但是厂商忽略漏洞", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-05-02：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-05-07：\t厂商主动忽略漏洞，细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2014-07-01：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-07-11：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-07-21：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-07-28：\t细节向公众公开  简要描述： 过滤不严。 详细说明：  在app\\controller\\picture.class.php中\npublic function delete() {\t\t\t$this->userIsLogin ();        $_Obj = M($this->objName);\t\t        $msgObj = new Msg();        $id = $_GET['id'];        $idAry = $_POST['id'];\t        $idStr = count($idAry) == 0 ? intval($id) : implode(\",\", $idAry);\t\t        $newIdAry = explode(\",\", $idStr);\t\t        $idSize = count($newIdAry);        if (empty($newIdAry[0]) && empty($id)) {            $msgObj->addMsg('error', Config::lang(\"PLEASECHOOSEDELETEDATA\"));        }        for ($i = 0; $i < $idSize; $i++) {        \t$newsObj = get(\"picture\",$newIdAry[$i]);\t\t\t            if (Authen::checkIsSelfData($newsObj->uid)) {                $_Obj->deleteById($newIdAry[$i]);            } else {                $msgObj->addMsg('error', Config::lang(\"CANBEDELNOTSELFNEWS\"));            }        }\n      $idAry = $_POST['id']; 可以看到都没有intval 这里用逗号切割\nif (Authen::checkIsSelfData($newsObj->uid)) {                $_Obj->deleteById($newIdAry[$i]);            }\n要满足这个。\npublic static function checkIsSelfData($uid) {    \tif (self::isAdmin()) {return true;}\t\t    \tif ($uid == $_COOKIE['userId'] && self::checkUserLogin()) {return true;}    \treturn false;javascript:void(0)    }\n首先我们要自己去注册一个号 然后发表一个图片。然后切割后就带入了查询。   漏洞证明：  \n\n\n\n发现执行的语句又有切割了后执行的 又有没切割的执行的。没切割的就能来盲注了。   修复方案：  intval   版权声明：转载请注明来源 ′雨。@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：无影响厂商忽略 忽略时间：2014-07-28 19:16 厂商回复：  最新状态： 2014-07-22：FIXED  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}