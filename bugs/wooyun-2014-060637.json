{"id": 3279, "wybug_id": "wooyun-2014-060637", "wybug_title": "快达航空SQL注入用户敏感信息泄露", "wybug_corp": "快达航空", "wybug_author": "PythonPig", "wybug_date": "2014-05-14 09:24", "wybug_open_date": "2014-06-28 09:24", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "15", "wybug_status": "已交由第三方合作机构(cncert国家互联网应急中心)处理", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["注射", "信息泄漏"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-05-14：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-05-17：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-05-27：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-06-06：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-06-16：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-06-28：\t细节向公众公开  简要描述： 听说快达航空是家很靠谱的公司，周末要去看妹子，就来这里买票，然后发现他们很多URL的结构有点怪，出于好奇~~~~就有了下面的内容姓名，性别，电话，邮箱，生日，用户名，密码~~~听说靠谱的公司给rank时都比较大方~~ 详细说明：  0x01：后面的注入都是一般的方法，关键点就在注入点的构造上，构造这个注入点花了不少时间~~与一般的伪静态注入有些不同，看下面的图~整个网站这种注入点有很多，拿一个来测试~~\n\n0x02:12个数据库\n450 select name from sys.databases [12]:[*] bak_data[*] feihang[*] gdlxw[*] JPData[*] kuaida[*] master[*] model[*] msdb[*] tempdb[*] tgctour2007[*] webserver[*] WebSite\nkuaida 这个库中有不少表呢~\natabase: kuaida[102 tables]+-----------------------------+| dbo.Answer || dbo.Ask || dbo.City || dbo.CityCode || dbo.CommonType || dbo.ImportantCity || dbo.Log || dbo.NewsTable || dbo.Price11111 || dbo.Type || dbo.V_JiuDian || dbo.V_airNRL || dbo.V_ask || dbo.airlog || dbo.base_ChinaSpecialJipiao || dbo.base_Prize || dbo.base_link || dbo.news_Category || dbo.news_Content || dbo.sitemap || dbo.sysModules || dbo.sysRoleModule || dbo.sysRoles || dbo.sysUser || dbo.sysUserRole || dbo.sysdiagrams || dbo.tb_CompanyName || dbo.tb_Flight || dbo.tb_FlightOrder || dbo.tb_FlightOrderRen || dbo.tb_FlightParams || dbo.tb_FlightXuZhi || dbo.tb_HotelDetail || dbo.tb_HotelOrders || dbo.tb_HotelParameter || dbo.tb_HotelPic || dbo.tb_HotelZiXun || dbo.tb_Hotels || dbo.tb_JPFYY || dbo.tb_JPYY || dbo.tb_PayRecord || dbo.tb_PayRemark || dbo.tb_PhotoAdver || dbo.tb_Ship || dbo.tb_ShipOrders || dbo.tb_ShipParameter || dbo.tb_ShipXuZhi || dbo.tb_TicketOrders || dbo.tb_TicketParameter || dbo.tb_TicketZiXun || dbo.tb_Tickets || dbo.tb_aircabin || dbo.tb_airelsetaxa || dbo.tb_airhometejia || dbo.tb_airhotcity || dbo.tb_airlineprice || dbo.tb_airlines || dbo.tb_airlog || dbo.tb_airnorangli || dbo.tb_airplane || dbo.tb_airpolicy || dbo.tb_airprofit || dbo.tb_airtan || dbo.tb_airtanlines || dbo.tb_airtaxa || dbo.tb_airtejia || dbo.tb_airtejia2 || dbo.tb_allcity || dbo.tb_email || dbo.tb_emailtype || dbo.tb_gairguojia_ct || dbo.tb_gairhotguojia || dbo.tb_gairjinxuan || dbo.tb_gairnews || dbo.tb_gairprice || dbo.tb_gairremai || dbo.tb_gairtejia || dbo.tb_gairtejia2 || dbo.tb_gift || dbo.tb_giftclass || dbo.tb_gorder || dbo.tb_gorderdetail || dbo.tb_gorderlist || dbo.tb_mobilsMsg || dbo.tb_order || dbo.tb_orderlist || dbo.tb_point || dbo.tb_pointclass || dbo.tb_shiphangban || dbo.tb_shiphangxian || dbo.tb_shipmatou || dbo.tb_shiporder || dbo.tb_shiporderlist || dbo.tb_shipprice || dbo.tb_torder || dbo.tb_torderlist || dbo.tb_usegift || dbo.tb_user || dbo.tb_userclass || dbo.tb_userlog || dbo.tf_salesTickets || dbo.v_aircity |\n0x03：来看这些数据吧~~\n\n没有干坏事，只做测试，水表的不要   漏洞证明：  见上~~   修复方案：  过滤~~~   版权声明：转载请注明来源 PythonPig@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：10  确认时间：2014-05-17 20:21 厂商回复： CNVD确认并复现所述情况，由CNVD通过公开联系渠道联系快达航空公司处置。 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2015-06-01 14:54 |    \t\t尊-折戟 \t\t\t( 实习白帽子  |\t\t\t        Rank:53 漏洞数:17        | 与时俱进！=忘本)\t\t \n  弱弱问句，对于一般的伪静态怎么构造才可以放到sqlmap神器里跑？    \n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 10, "Ranks": null}