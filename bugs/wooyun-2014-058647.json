{"id": 2666, "wybug_id": "wooyun-2014-058647", "wybug_title": "建站之星Sitestar二次注入一枚", "wybug_corp": "建站之星", "wybug_author": "′雨。", "wybug_date": "2014-04-27 13:54", "wybug_open_date": "2014-07-26 13:56", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "20", "wybug_status": "厂商已经修复", "wybug_from": "http://www.wooyun.org", "wybug_tags": "", "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-04-27：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-04-28：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2014-06-22：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2014-07-02：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2014-07-12：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2014-07-26：\t厂商已经修复漏洞并主动公开，细节向公众公开  简要描述： 过滤不严。 详细说明：  在注册用户的时候 只是对一些特殊字符进行了转义。  有长度限制。  没有过滤。  造成了二次猪肉。__________________________________________________________________________首先注册一个 123',1,15,0,1,user())#\n\n________________________________________________________________________在module/mod_email.php中\npublic function do_mail(){   \t\tglobal $db;    \t$title = ParamHolder::get(\"title\");    \t$msg = ParamHolder::get(\"email_s\");    \t$msg .= ParamHolder::get(\"email_m\");    \t$roles = ParamHolder::get(\"role\");    \t$type = ParamHolder::get(\"type\");    \t$user_email = ParamHolder::get('users');        $title = mysql_escape_string($title);  $msg = mysql_escape_string($msg);$user_email = mysql_escape_string($user_email);\n对这些字符转义了。\n}else{\t\t//单个用户发送\t\t\t\t$sql = \"select id,login,email from \".Config::$tbl_prefix.\"users where login='\".$user_email.\"'\";\t\t\t    $res = $db->query($sql);\t\t\t    $eml = $res->fetchRow();\t\t\t\t\t    if (!empty($eml)) {\t\t\t\t\t\t\t    if(!$this->send_mail($title,$msg,$eml['email'])){\t\t\t\t    \t$sql = \"insert into \".Config::$tbl_prefix.\"emails(`title`,`content`,user_id,user_name,is_mail,send_id,is_read,is_ok,create_time) values('{$title}','{$msg}','{$eml['id']}','{$eml['login']}',1,{$send_id},0,1,'{$time}')\";\t    \t\t\t\t$db->query($sql);\n这里 出库 无过滤 然后又带入到了insert当中。这里我把语句也输出来一下\n\n   漏洞证明：  \n\n   修复方案：  Check in or check out。   版权声明：转载请注明来源 ′雨。@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：15  确认时间：2014-04-28 09:42 厂商回复： 已转给相关技术处理中。 最新状态： 2014-07-16：补丁已经发布，请去官网更新补丁或下载最新安装包，谢谢。  ", "replys": "漏洞评价：\n评论\n     2014-04-27 14:11 |    \t\tMody \t\t\t( 普通白帽子  |\t\t\t        Rank:110 漏洞数:27        | \"><img src=x onerror=alert(1);> <img s...)\t\t \n  二次注入。。。关注    \n     2014-04-27 14:11 |    \t\tU神 \t\t\t( 核心白帽子 |\t\t\t        Rank:1285 漏洞数:142        | 感谢乌云，知恩不忘，其实我一直都在乌云默...)\t\t \n  感谢提交！我们尽快将水表送至您家！    \n     2014-04-27 14:12 |    \t\t′  雨。 \t\t\t( 普通白帽子  |\t\t\t        Rank:1231 漏洞数:190        | Only Code Never Lie To Me.)\t\t \n  @Mody 蛋定 就是个鸡肋。    \n     2014-04-28 09:41 |    \t\t建站之星(乌云厂商)\t\t \n  已转给相关技术处理中    \n     2014-05-05 15:00 |    \t\t建站之星(乌云厂商)\t\t \n  补丁已经发布，请去官网更新补丁或下载最新安装包，谢谢。    \n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 15, "Ranks": null}