{"id": 41480, "wybug_id": "wooyun-2014-088669", "wybug_title": "某政府网站公开信息导致可爆破出公民姓名和身份证号码", "wybug_corp": "cncert国家互联网应急中心", "wybug_author": "路人甲", "wybug_date": "2014-12-26 18:18", "wybug_open_date": "2015-02-09 18:20", "wybug_type": "重要敏感信息泄露", "wybug_level": "低", "wybug_rank_0": "1", "wybug_status": "已交由第三方合作机构(cncert国家互联网应急中心)处理", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["敏感信息泄露"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2014-12-26：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2014-12-29：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2015-01-08：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-01-18：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-01-28：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-02-09：\t细节向公众公开  简要描述： 姓名是可以直接看到的，对应的身份证号码需要进行20-40次爆破，对该网站是没什么影响的，但是在某些通过姓名和身份证号码验证用户的网站就可能导致这70W+用户的账号被盗什么的。 详细说明：  我本来只是在上网查快递，然后百度就给我推荐了个网站。http://shixin.court.gov.cn在该网站上有大量公民姓名和身份证号码等信息，但是身份证号码都是打码的。http://shixin.court.gov.cn/personMore.do\n\n共709252条。在以下网址可以直接看到姓名和打码后的身份证号码。http://shixin.court.gov.cn/detail?id=921384\n\n身份证号码的出生日月被打码了，但是校检位没有打码，通过校检位对出生日月进行爆破，得到可能的出生日月，一般有20-40个可能结果。需要进一步结合其它信息泄露或者在某些通过姓名和身份证号码验证用户的网站进行爆破。例如: WooYun: 学信网验证不足导致未注册学生个人信息可被盗取    漏洞证明：  例如这个打码后的身份证号码:6101031970****2512通过校检位得到出生日月35个可能结果，对应着35个身份证号码。通过在某网站进行爆破我们最终得知他的生日是十月四日。\n#include <string>#include <sstream>#include <iostream> using namespace std;std::stringstream ss;\tstring source=\"6101031970****2512\";\tchar xishu_source[17]={7,9,10,5,8,4,2,1,6,3,7,9,10,5,8,4,2};\tchar mod_source[11]={'1','0','X','9','8','7','6','5','4','3','2'};\tint temp_int=0,xishu=0,all=0,mod_int=0;bool check(){\tfor(int i=0;i<17;i++)\t{\t\t\tall +=source[i]*xishu_source[i];\t}\ttemp_int=0;\tmod_int=all %11;\tall=0;\tif(mod_source[mod_int]==source[17])\t{\t\tmod_int=0;\t\treturn true;\t}else{\t\tmod_int=0;\t\treturn false;\t}}void main(int argc, char* argv[]){\tsource[10]='0';\tsource[11]='1';\tsource[12]='0';\tsource[13]='1';\tfor(int i=0;i<17;i++)\t{\t\tss<<source[i];\t\tss>>temp_int;\t\tss.clear();\t\tss.str(\"\");\t\tsource[i]=temp_int;\t}\tchar source_10[12]={0,0,0,0,0,0,0,0,0,1,1,1};\tchar source_11[12]={1,2,3,4,5,6,7,8,9,0,1,2};\tchar source_12[31]={0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,3,3};\tchar source_13[31]={1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1};\tfor(int m=0;m<12;m++)\t{\t\tfor(int d=0;d<31;d++)\t\t{\t\t\tsource[10]=source_10[m];\t\t\tsource[11]=source_11[m];\t\t\tsource[12]=source_12[d];\t\t\tsource[13]=source_13[d];\t\t\tif(check())\t\t\t{\t\t\t\tcout<<m+1<<\"月\"<<d+1<<\"日\"<<endl;\t\t\t}\t\t}\t}\tsystem(\"pause\");}\n\n\n   修复方案：  校检位打码   版权声明：转载请注明来源 路人甲@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：低 漏洞Rank：3  确认时间：2014-12-29 14:45 厂商回复： CNVD认定所述情况非漏洞，暂不列入处置流程。 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "低", "wybug_rank_fromcorp": 3, "Ranks": null}