{"id": 68469, "wybug_id": "wooyun-2015-0130089", "wybug_title": "Mao10cms最新版前台注入5枚打包(有条件限制）", "wybug_corp": "mao10.com", "wybug_author": "路人甲", "wybug_date": "2015-07-29 15:16", "wybug_open_date": "2015-10-31 20:02", "wybug_type": "SQL注射漏洞", "wybug_level": "高", "wybug_rank_0": "15", "wybug_status": "厂商已经确认", "wybug_from": "http://www.wooyun.org", "wybug_tags": ["源码审核", "源码分析", "白盒测试"], "wybug_detail": "漏洞详情 披露状态：   \t\t\t\t\t\t\t\t\t2015-07-29：\t细节已通知厂商并且等待厂商处理中\t\t\t\t\t\t\t\t\t2015-08-02：\t厂商已经确认，细节仅向厂商公开\t\t\t\t\t\t\t\t\t2015-08-05：\t细节向第三方安全合作伙伴开放\t\t\t\t\t\t\t\t\t2015-09-26：\t细节向核心白帽子及相关领域专家公开\t\t\t\t\t\t\t\t\t2015-10-06：\t细节向普通白帽子公开\t\t\t\t\t\t\t\t\t2015-10-16：\t细节向实习白帽子公开\t\t\t\t\t\t\t\t\t2015-10-31：\t细节向公众公开  简要描述： Mao10cms最新版前台注入5枚打包 详细说明：  0x00：写在前面前面提了mao10cms(v3.5.2)的一个漏洞，审核大大没给通过，原因如下：1、gpc=off是一个条件，应注明说明：谢谢审核大大^_^ ，本漏洞的利用条件的确是gpc off。但是也要说明一点：mao10cms(v3.5.2)官方给出的该系统的安装环境需求为： PHP5.3+ & Mysql5.0+（见：http://www.mao10.com/article-66.html），而magic_quotes_gpc在PHP5.3.0中已经废弃并且在5.4.0中已经移除了。当然，这应该也还算是一个条件，因此，在这里也注明一下吧，gpc off 的情况下，该漏洞成立^_^ 。2、这种漏洞不应该一个个的提交说明：这次就打包提了，谢谢审核大大^_^ 希望这次可以过^_^ ^_^ ^_^ ^_^ ^_^ Mao10cms用户量不小，2015-07-17更新的V3.5.3，今天来学习一下吧0x01：这里有两个主要的方法使用不当，产生了漏洞，一个是mc_user_avatar()，另一个是mc_user_display_name()，下面分别分析1、mc_user_avatar()引起的漏洞一共有2个，分别位于/theme/default/public/head-uesr.php和/theme/mobile/public/head-user.php中，这里以/theme/default/public/head-user.php中的漏洞为例进行说明注入点在加载用户头像时触发，我们来看看代码\n<div class=\"user-head text-center\">\t<img class=\"user-avatar\" src=\"<?php echo mc_user_avatar($_GET['id']); ?>\" alt=\"<?php echo mc_user_display_name($_GET['id']); ?>\">\t<h3 class=\"title\"><?php echo mc_user_display_name($_GET['id']); ?></h3>\t<div class=\"description mb-20\"><?php echo mc_cut_str(strip_tags(mc_get_page_field($_GET['id'],'content')), 200); ?></div>\t<div class=\"clearfix\"></div>\t<?php echo mc_guanzhu_btn($_GET['id']); ?> 无关代码\n看上面代码中看到mc_user_avatar($_GET['id']);去看看mc_user_avatar($_GET['id']);\n//用户头像function mc_user_avatar($page_id) {\t$user_display_name = mc_get_meta($page_id,'user_avatar',true,'user');\tif($user_display_name) {\t\treturn $user_display_name;\t} else {\t\treturn mc_theme_url().'/img/avatar.png';\t}};\n从上面的代码中可以看到，如执行mc_get_meta(),再去看看吧\n//调用metafunction mc_get_meta($page_id,$meta_key,$array=true,$type='basic') {\t$meta = M('meta')->where(\"page_id='$page_id' AND meta_key='$meta_key' AND type ='$type'\")->order('id desc');\tif($array) {\t\treturn $meta->getField('meta_value');\t} else {\t\treturn $meta->getField('meta_value',true);\t};}\n到这里可以看到了，从$_GET[‘id’]一直到$page_id，再带入sql语句执行，没有过滤，因此，这里存在注入。下面以time-based blind注入进行证明Payload(get提交):\nid=2')union/**/select/**/if(mid((select/**/admin_name/**/from/**/pe_admin/**/limit/**/0,1),1,1)='z',sleep(1),0)%23\n当猜测错误时，如下图\n\n当猜测正确时，如下图\n\n整个注入过程可以使用burpsuite 或者sqlmap 再或者自己写个脚本来跑，在本地进行测试，用户名为admin，密码为f6fdffe48c908deb0f4c3bd36c032e722、mc_user_display_name()引起的漏洞一共有3个，分析位于/theme/default/article/single.php和/theme/default/public/head-user.php(两个)，这里以/theme/default/article/single.php中的漏洞进行分析如下\n<?php foreach($page as $val) : ?>\t<div id=\"single-head-img\" class=\"pr hidden-xs\">\t\t<div class=\"single-head-img shi1\" style=\"background-image: url(<?php if(mc_fmimg($_GET['id'])) : echo mc_fmimg($_GET['id']); else : echo mc_theme_url().'/img/user_bg.jpg'; endif; ?>);\"></div>\t\t<div class=\"single-head-img shi2\"></div>\t\t<div class=\"single-head-img shi3\">\t\t\t<h1><?php echo mc_user_display_name($_GET['id']); ?></h1>\t\t\t<h4><?php echo mc_cut_str(strip_tags(mc_magic_out(mc_get_page_field($_GET['id'],'content'))), 80); ?></h4>\t\t</div>\t</div>\t<div class=\"container\">\t\t<div class=\"row\">\t\t\t<div class=\"col-sm-12 col-md-10 col-md-offset-1 col-lg-8 col-lg-offset-2\">\t\t\t\t<ul class=\"list-inline mb-0 article-brd\">\t\t\t\t\t<li>\t\t\t\t\t\t<a href=\"<?php echo U('article/index/term?id='.mc_get_meta($val['id'],'term')); ?>\">\t\t\t\t\t\t\t<i class=\"glyphicon glyphicon-th-list\"></i> <?php echo mc_get_page_field(mc_get_meta($val['id'],'term'),'title'); ?>\t\t\t\t\t\t</a>\t\t\t\t\t</li>无关代码\n去看看mc_user_display_name()方法的实现\nfunction mc_user_display_name($page_id) {\t$user_display_name = mc_get_page_field($page_id,'title');\tif($user_display_name) {\t\treturn $user_display_name;\t} else {\t\treturn mc_get_meta($page_id,'user_name',true,'user');\t}};\n当$page_id为payload（不是正常的id）时，会进入else语句执行mc_get_meta()，跟进\nfunction mc_get_meta($page_id,$meta_key,$array=true,$type='basic') {\t$meta = M('meta')->where(\"page_id='$page_id' AND meta_key='$meta_key' AND type ='$type'\")->order('id desc');\tif($array) {\t\treturn $meta->getField('meta_value');\t} else {\t\treturn $meta->getField('meta_value',true);\t};}\n带入了sql语句执行，若gpc=off，可以完成注入，payload如上面的第一部分。   漏洞证明：  见 详细说明   修复方案：  过滤吧   版权声明：转载请注明来源 路人甲@乌云\n ", "wybug_reply": "漏洞回应  厂商回应： 危害等级：高 漏洞Rank：15  确认时间：2015-08-02 20:01 厂商回复： 感谢指出 最新状态： 暂无  ", "replys": "漏洞评价：\n评论\n  \n\n\n", "wybug_level_fromcorp": "高", "wybug_rank_fromcorp": 15, "Ranks": null}